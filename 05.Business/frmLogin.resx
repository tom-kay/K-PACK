<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>