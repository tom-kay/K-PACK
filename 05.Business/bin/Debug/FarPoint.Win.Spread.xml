<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>FarPoint.Win.Spread</name>
  </assembly>
  <members>
    <member name="T:FarPoint.MultilingualResourcesManager">
      <summary>Provides a functionality for loading Multilingual resources</summary>
    </member>
    <member name="M:FarPoint.MultilingualResourcesManager.#ctor(System.Type)">
      <param name="t" />
    </member>
    <member name="M:FarPoint.MultilingualResourcesManager.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>Override to return name in case resource is not existed.</summary>
      <param name="name" />
      <param name="culture" />
    </member>
    <member name="M:FarPoint.MultilingualResourcesManager.GetString(System.String)">
      <summary>Override to return name in case resource is not existed.</summary>
      <param name="name" />
    </member>
    <member name="T:FarPoint.PDF.PdfGraphics">
      <summary>Represents the drawing functions on a PDF page object.</summary>
    </member>
    <member name="P:FarPoint.PDF.PdfGraphics.Clip">
      <summary>Gets or sets the clip.</summary>
      <value>Clip</value>
    </member>
    <member name="P:FarPoint.PDF.PdfGraphics.Dpi">
      <summary>Gets or sets the resolution (or DPI) in pixels per inch.</summary>
    </member>
    <member name="P:FarPoint.PDF.PdfGraphics.IsEmpty">
      <summary>Gets whether this instance is empty.</summary>
      <value>Boolean: <c>true</c> if this instance is empty; otherwise, <c>false</c></value>
    </member>
    <member name="P:FarPoint.PDF.PdfGraphics.PageUnit">
      <summary>Gets or sets the unit of measure used for page coordinates in this Graphics object.</summary>
    </member>
    <member name="P:FarPoint.PDF.PdfGraphics.ShowColor">
      <summary>Gets or sets a value that indicates whether to show the color.</summary>
      <value>
        <c>true</c> to show color; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.PDF.PdfGraphics.Transform">
      <summary>Gets or sets the world transformation for this Graphics object.</summary>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.Commit">
      <summary>Clears all of the saved state.</summary>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Draws an arc that represents a portion of an ellipse specified by a Rectangle structure.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the arc</param>
      <param name="rectangle">Rectangle structure that defines the boundaries of the arc.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>Draws an arc that represents a portion of an ellipse specified by a Rectangle structure.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the arc</param>
      <param name="rectangle">RectangleF structure that defines the boundaries of the arc.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Draws an arc that represents a portion of an ellipse specified by a pair of coordinates, a width, and a height.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the arc</param>
      <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the arc.</param>
      <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the arc.</param>
      <param name="width">Width of the rectangle that defines the arc</param>
      <param name="height">Height of the rectangle that defines the arc</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws an arc that represents a portion of an ellipse specified by a pair of coordinates, a width, and a height.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the arc</param>
      <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the arc.</param>
      <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the arc.</param>
      <param name="width">Width of the rectangle that defines the arc</param>
      <param name="height">Height of the rectangle that defines the arc</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>Draws a Bezier spline defined by four Point structures.</summary>
      <param name="pen">Pen structure that determines the color, width, and style of the curve</param>
      <param name="pt1">Point structure that represents the starting point of the curve</param>
      <param name="pt2">Point structure that represents the first control point for the curve</param>
      <param name="pt3">Point structure that represents the second control point for the curve</param>
      <param name="pt4">Point structure that represents the ending point of the curve</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Draws a Bezier spline defined by four Point structures.</summary>
      <param name="pen">Pen structure that determines the color, width, and style of the curve</param>
      <param name="pt1">PointF structure that represents the starting point of the curve</param>
      <param name="pt2">PointF structure that represents the first control point for the curve</param>
      <param name="pt3">PointF structure that represents the second control point for the curve</param>
      <param name="pt4">PointF structure that represents the ending point of the curve</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a Bezier spline defined by four ordered pairs of coordinates that represent points.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the curve</param>
      <param name="x1">x-coordinate of the starting point of the curve.</param>
      <param name="y1">y-coordinate of the starting point of the curve.</param>
      <param name="x2">x-coordinate of the first control point of the curve.</param>
      <param name="y2">y-coordinate of the first control point of the curve.</param>
      <param name="x3">x-coordinate of the second control point of the curve.</param>
      <param name="y3">y-coordinate of the second control point of the curve.</param>
      <param name="x4">x-coordinate of the ending point of the curve</param>
      <param name="y4">y-coordinate of the ending point of the curve</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a closed cardinal spline defined by an array of Point structures.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of Point structures that define the spline</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a closed cardinal spline defined by an array of PointF structures.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of PointF structures that define the spline</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>Draws a closed cardinal spline defined by an array of Point structures using a specified tension.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
      <param name="points">Array of Point structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve</param>
      <param name="fillmode">Member of the FillMode enumeration that determines how the curve is filled. This parameter is required but ignored</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>Draws a closed cardinal spline defined by an array of PointF structures using a specified tension.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
      <param name="points">Array of PointF structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve</param>
      <param name="fillmode">Member of the FillMode enumeration that determines how the curve is filled. This parameter is required but ignored</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a cardinal spline through a specified array of Point structures.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of Point structures that define the spline</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a cardinal spline through a specified array of PointF structures.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of PointF structures that define the spline</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>Draws a cardinal spline through a specified array of Point structures using a specified tension.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of Point structures that define the spline</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>Draws a cardinal spline through a specified array of PointF structures using a specified tension.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of PointF structures that define the spline</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>Draws a cardinal spline through a specified array of PointF structures. The drawing begins offset from the beginning of the array.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of PointF structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>Draws a cardinal spline through a specified array of Point structures using a specified tension. The drawing begins offset from the beginning of the array.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of Point structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>Draws a cardinal spline through a specified array of PointF structures using a specified tension. The drawing begins offset from the beginning of the array.</summary>
      <param name="pen">Pen object that determines the color, width, and height of the curve</param>
      <param name="points">Array of PointF structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
      <param name="rectangle">Rectangle structure that defines the boundaries of the ellipse.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
      <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
      <param name="x">X-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse</param>
      <param name="y">Y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
      <param name="x">X-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse</param>
      <param name="y">Y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>Draws the specified Image object, using its original physical size, at the specified location.</summary>
      <param name="image">Image object to draw.</param>
      <param name="x">X-coordinate of the upper-left corner of the drawn image</param>
      <param name="y">Y-coordinate of the upper-left corner of the drawn image</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>Draws the specified Image object, using its original physical size, at the specified location.</summary>
      <param name="image">Image object to draw.</param>
      <param name="point">Point structure that represents the location of the upper-left corner of the drawn image</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>Draws the specified Image object at the specified location and with the specified size.</summary>
      <param name="image">Image object to draw.</param>
      <param name="rectangle">Rectangle structure that specifies the location and size of the drawn image.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>Draws the specified Image object at the specified location and with the specified size.</summary>
      <param name="image">Image object to draw.</param>
      <param name="rectangle">Rectangle structure that specifies the location and size of the drawn image.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>Draws the specified Image object, using its original physical size, at the specified location.</summary>
      <param name="image">Image object to draw.</param>
      <param name="point">Point structure that represents the location of the upper-left corner of the drawn image</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>Draws the specified Image object, using its original physical size, at the specified location.</summary>
      <param name="image">Image object to draw.</param>
      <param name="x">X-coordinate of the upper-left corner of the drawn image</param>
      <param name="y">Y-coordinate of the upper-left corner of the drawn image</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>Draws a line that connects the two points specified by coordinate pairs.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the line</param>
      <param name="pt1">Point structure that represents the first point to connect.</param>
      <param name="pt2">Point structure that represents the second point to connect.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Draws a line that connects the two points specified by coordinate pairs.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the line</param>
      <param name="pt1">PointF structure that represents the first point to connect.</param>
      <param name="pt2">PointF structure that represents the second point to connect.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a line that connects the two points specified by coordinate pairs.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the line.</param>
      <param name="x1">x-coordinate of the first point</param>
      <param name="y1">y-coordinate of the first point.</param>
      <param name="x2">x-coordinate of the second point.</param>
      <param name="y2">y-coordinate of the second point.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a line that connects the two points specified by coordinate pairs.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the line.</param>
      <param name="x1">x-coordinate of the first point</param>
      <param name="y1">y-coordinate of the first point.</param>
      <param name="x2">x-coordinate of the second point.</param>
      <param name="y2">y-coordinate of the second point.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Draws a GraphicsPath object.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the path</param>
      <param name="path">GraphicsPath object to draw</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a Rectangle structure and two radial lines.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the pie shape</param>
      <param name="rectangle">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a RectangleF structure and two radial lines.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the pie shape</param>
      <param name="rectangle">RectangleF structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the pie shape</param>
      <param name="x">X-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">Y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the pie shape</param>
      <param name="x">X-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">Y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>Draws a polygon defined by an array of Point structures.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
      <param name="points">Array of Point structures that represent the vertices of the polygon</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>Draws a polygon defined by an array of Point structures.</summary>
      <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
      <param name="points">Array of PointF structures that represent the vertices of the polygon</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>Draws a rectangle specified by a coordinate pair, a width, and a height.</summary>
      <param name="pen">Draws a rectangle specified by a coordinate pair, a width, and a height</param>
      <param name="rectangle">A Rectangle structure that represents the rectangle to draw.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a rectangle specified by a coordinate pair, a width, and a height.</summary>
      <param name="pen">Draws a rectangle specified by a coordinate pair, a width, and a height</param>
      <param name="x">X-coordinate of the upper-left corner of the rectangle to draw</param>
      <param name="y">Y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">Width of the rectangle to draw.</param>
      <param name="height">Height of the rectangle to draw.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>Draws a rectangle specified by a coordinate pair, a width, and a height.</summary>
      <param name="pen">Draws a rectangle specified by a coordinate pair, a width, and a height</param>
      <param name="x">X-coordinate of the upper-left corner of the rectangle to draw</param>
      <param name="y">Y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">Width of the rectangle to draw.</param>
      <param name="height">Height of the rectangle to draw.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>Draws the specified text string at the specified location with the specified Brush and Font objects.</summary>
      <param name="s">String to draw</param>
      <param name="font">Font object that defines the text format of the string</param>
      <param name="brush">Brush object that determines the color and texture of the drawn text</param>
      <param name="point">PointF structure that specifies the upper-left corner of the drawn text</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>Draws the specified text string in the specified rectangle with the specified Brush and Font objects.</summary>
      <param name="s">String to draw</param>
      <param name="font">Font object that defines the text format of the string</param>
      <param name="brush">Brush object that determines the color and texture of the drawn text</param>
      <param name="rectangle">RectangleF structure that specifies the location of the drawn text</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.</summary>
      <param name="s">String to draw</param>
      <param name="font">Font object that defines the text format of the string</param>
      <param name="brush">Brush object that determines the color and texture of the drawn text</param>
      <param name="point">PointF structure that specifies the upper-left corner of the drawn text</param>
      <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.</summary>
      <param name="s">String to draw</param>
      <param name="font">Font object that defines the text format of the string</param>
      <param name="brush">Brush object that determines the color and texture of the drawn text</param>
      <param name="rectangle">RectangleF structure that specifies the location of the drawn text</param>
      <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>Draws the specified text string at the specified location with the specified Brush and Font objects.</summary>
      <param name="s">String to draw</param>
      <param name="font">Font object that defines the text format of the string</param>
      <param name="brush">Brush object that determines the color and texture of the drawn text</param>
      <param name="x">X-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">Y-coordinate of the upper-left corner of the drawn text.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.</summary>
      <param name="s">String to draw</param>
      <param name="font">Font object that defines the text format of the string</param>
      <param name="brush">Brush object that determines the color and texture of the drawn text</param>
      <param name="x">X-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">Y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of Point structures.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of Point structures that define the spline.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of PointF structures.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of PointF structures that define the spline.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of Point structures using the specified fill mode.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of Point structures that define the spline.</param>
      <param name="fillmode">Member of the FillMode enumeration that determines how the curve is filled.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of PointF structures using the specified fill mode.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of PointF structures that define the spline.</param>
      <param name="fillmode">Member of the FillMode enumeration that determines how the curve is filled.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of Point structures using the specified fill mode and tension.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of Point structures that define the spline.</param>
      <param name="fillmode">Member of the FillMode enumeration that determines how the curve is filled.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>Fills the interior of a closed cardinal spline curve defined by an array of PointF structures using the specified fill mode and tension.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill</param>
      <param name="points">Array of PointF structures that define the spline</param>
      <param name="fillmode">Member of the FillMode enumeration that determines how the curve is filled</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="rectangle">Rectangle structure that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="rectangle">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill</param>
      <param name="x">X-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse</param>
      <param name="y">Y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill</param>
      <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse</param>
      <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a Rectangle structure and two radial lines.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill</param>
      <param name="rectangle">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie section comes</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</summary>
      <param name="brush">Brush object that determines the color, width, and style of the pie shape</param>
      <param name="x">X-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">Y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</summary>
      <param name="brush">Brush object that determines the color, width, and style of the pie shape</param>
      <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>Fills the interior of a polygon defined by an array of points specified by Point structures.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill</param>
      <param name="points">Array of Point structures that represent the vertices of the polygon to fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>Fills the interior of a polygon defined by an array of points specified by Point structures.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill</param>
      <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a polygon defined by an array of points specified by Point structures using the specified fill mode.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of Point structures that represent the vertices of the polygon to fill.</param>
      <param name="fillmode">Member of the FillMode enumeration that determines the style of the fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>Fills the interior of a polygon defined by an array of points specified by Point structures using the specified fill mode.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="points">Array of Point structures that represent the vertices of the polygon to fill.</param>
      <param name="fillmode">Member of the FillMode enumeration that determines the style of the fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>Fills the interior of a rectangle specified by a Rectangle structure, filled area determined by FillMode.Alternate.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="rectangle">Rectangle structure that represents the rectangle to fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>Fills the interior of a rectangle specified by a Rectangle structure, filled area determined by FillMode.Alternate.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="rectangle">RectangleF structure that represents the rectangle to fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</summary>
      <param name="brush">Brush object that determines the characteristics of the fill.</param>
      <param name="x">X-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">Y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies the world transformation of this Graphics object and specifies the Matrix object.</summary>
      <param name="matrix">3x3 Matrix object that multiplies the world transformation</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies the world transformation of this Graphics object and specifies the Matrix object in the specified order.</summary>
      <param name="matrix">3x3 Matrix object that multiplies the world transformation</param>
      <param name="order">Member of the MatrixOrder enumeration that determines the order of the multiplication.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.ResetClip">
      <summary>Resets the clip.</summary>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.ResetTransform">
      <summary>Resets the world transformation matrix of this Graphics object to the identity matrix.</summary>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.RotateTransform(System.Single)">
      <summary>Applies the specified rotation to the transformation matrix of this Graphics object.</summary>
      <param name="angle">Angle of rotation in degrees.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified rotation to the transformation matrix of this Graphics object in the specified order.</summary>
      <param name="angle">Angle of rotation in degrees.</param>
      <param name="order">Member of the MatrixOrder enumeration that determines the order of the multiplication.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.ScaleTransform(System.Single,System.Single)">
      <summary>Applies the specified scaling operation to the transformation matrix of this Graphics object by prepending it to the object's transformation matrix.</summary>
      <param name="sx">Scale factor in the x direction.</param>
      <param name="sy">Scale factor in the y direction.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified scaling operation to the transformation matrix of this Graphics object in the specified order.</summary>
      <param name="sx">Scale factor in the x direction.</param>
      <param name="sy">Scale factor in the y direction.</param>
      <param name="order">Member of the MatrixOrder enumeration that determines the order of the multiplication.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Sets the clipping region of this Graphics object to the specified GraphicsPath object.</summary>
      <param name="path">GraphicsPath object that represents the new clip region.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.Rectangle)">
      <summary>Sets the clipping region of this Graphics object to the rectangle specified by a Rectangle structure.</summary>
      <param name="rectangle">Rectangle structure that represents the new clip region.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.RectangleF)">
      <summary>Sets the clipping region of this Graphics object to the rectangle specified by a RectangleFSS structure.</summary>
      <param name="rectangle">RectangleF structure that represents the new clip region.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this Graphics object to the result of the specified operation combining the current clip region and the specified GraphicsPath object.</summary>
      <param name="path">GraphicsPath object that represents the new clip region.</param>
      <param name="mode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this Graphics object to the result of the specified operation combining the current clip region and the rectangle specified by a Rectangle structure.</summary>
      <param name="rectangle">Rectangle structure to combine.</param>
      <param name="mode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this Graphics object to the result of the specified operation combining the current clip region and the rectangle specified by a RectangleF structure.</summary>
      <param name="rectangle">RectangleF structure to combine.</param>
      <param name="mode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>Sets the clipping region of this Graphics object to the result of the specified operation combining the current clip region and the specified Region object.</summary>
      <param name="region">Region object to combine.</param>
      <param name="mode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.TranslateTransform(System.Single,System.Single)">
      <summary>Prepends the specified translation to the transformation matrix of this Graphics object.</summary>
      <param name="dx">X component of the translation.</param>
      <param name="dy">Y component of the translation.</param>
    </member>
    <member name="M:FarPoint.PDF.PdfGraphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified translation to the transformation matrix of this Graphics object in the specified order.</summary>
      <param name="dx">X component of the translation.</param>
      <param name="dy">Y component of the translation.</param>
      <param name="order">Member of the MatrixOrder enumeration that determines the order of the multiplication.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Action">
      <summary>Abstract class used to implemented actions. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Action.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Action" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Action.PerformAction(System.Object)">
      <summary>Invoked when an action occurs.</summary>
      <param name="sender">Object on which the action occurred</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ActionMap">
      <summary>Represents an action map, which provides mappings from objects to actions.</summary>
      <remarks>An action map is usually used with an input map (see InputMap class) to locate a particular action when a key is pressed. An action map can have a parent that is searched for keys not defined in the input map.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.#ctor">
      <summary>Initializes an action map with no parent and no mappings.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ActionMap.Parent">
      <summary>Gets or sets the parent action map (ActionMap object) of this action map.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ActionMap.Size">
      <summary>Returns the number of mappings defined in this action map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.AllKeys">
      <summary>Returns the keys that are defined in this action map and its parent.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.Clear">
      <summary>Removes all the mappings from this action map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.Get(System.Object)">
      <summary>Returns the binding to an action for the specified key.</summary>
      <param name="key">Keyboard key for which to get binding</param>
      <remarks>This method queries the parent action map if the binding is not defined in the current action map.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.Keys">
      <summary>Returns the keys defined in this action map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.Put(System.Object,FarPoint.Win.Spread.Action)">
      <summary>Creates a binding between a key and an action.</summary>
      <param name="key">Specified keyboard key</param>
      <param name="action">Specified action</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ActionMap.Remove(System.Object)">
      <summary>Removes the binding to an action for the specified key.</summary>
      <param name="key">Specified keyboard key</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ActiveSheetChangingEventArgs">
      <summary>Represents the event data for the ActiveSheetChanging event for the component, which occurs when the component changes to another active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ActiveSheetChangingEventArgs.#ctor(System.Int32)">
      <summary>Creates a new object with the ActiveSheetChanging event arguments.</summary>
      <param name="newActiveSheetIndex">Sheet index for the new active sheet</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ActiveSheetChangingEventArgs.ActivatedSheetIndex">
      <summary>Gets or sets the index of the new active sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ActiveSheetChangingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the active sheet change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AdvancedSearchDialog">
      <summary>Represents an advanced search dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.EndSheetIndex">
      <summary>Gets or sets the index of the sheet at which to end the search.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.SearchCellText">
      <summary>Gets or sets whether to search the text of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.SearchNotes">
      <summary>Gets or sets whether to search the text of cell notes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.SearchTags">
      <summary>Gets or sets whether to search cell tags, if the object is representable as a string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvancedSearchDialog.StartSheetIndex">
      <summary>Gets or sets the index of the sheet at which to start the search.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.DoSearch(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Internal use only. Does the search.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="startRowIndex">Starting row index</param>
      <param name="startColumnIndex">Starting column index</param>
      <param name="foundRowIndex">Found row index</param>
      <param name="foundColumnIndex">Found column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.SetCustomTextToDefaults">
      <summary>Sets the custom text in the form to default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AdvancedSearchDialog.advancedLabel_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
      <summary>Internal use only. Occurs when the label is painted.</summary>
      <param name="sender">Object source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AdvanceEventArgs">
      <summary>Represents the event data for the Advance event for the Spread component, which occurs when focus is advanced to another control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AdvanceEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean)">
      <summary>Creates a new object with the Advance event arguments.</summary>
      <param name="view">View of the current control from which to advance</param>
      <param name="advanceNext">Whether to move to the next control</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvanceEventArgs.AdvanceNext">
      <summary>Gets whether to move to the next component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AdvanceEventArgs.Cancel">
      <summary>Gets or sets whether to cancel default processing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AlternatingRow">
      <summary>Represents a set of style information for alternating rows in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.BackColor">
      <summary>Gets or sets the background color for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Border">
      <summary>Gets or sets the border for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.CanFocus">
      <summary>Gets or sets whether the user can set focus to the cell using the keyboard or mouse for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.CellPadding">
      <summary>Gets or sets the amount of space, in pixels, to pad cells in the alternating row(s).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.CellType">
      <summary>Gets or sets the cell type for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Editor">
      <summary>Gets or sets the editor for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Font">
      <summary>Gets or sets the default font for text in cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.ForeColor">
      <summary>Gets or sets the text color for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Formatter">
      <summary>Gets or sets the formatter for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment for text in the cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.ImeMode">
      <summary>Gets or sets the IME mode for an alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.ImeSentenceMode">
      <summary>Gets or sets the IME sentence mode for an alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Index">
      <summary>Gets the index of this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.InputScope">
      <summary>Gets or sets the input scope for an alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.LockBackColor">
      <summary>Gets or sets the background color for lock cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.LockFont">
      <summary>Gets or sets the font for lock cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.LockForeColor">
      <summary>Gets or sets the fore color for lock cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Locked">
      <summary>Gets or sets whether cells in this alternating row are marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.NoteIndicatorColor">
      <summary>Gets or sets the default color for the note indicator for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.NoteIndicatorPosition">
      <summary>Gets or sets the position of the note indicator for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.NoteIndicatorSize">
      <summary>Gets or sets the default size for the note indicator for cells in this row.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified size is out of range; width and height must be between 0 and 9,999,999 pixels </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Parent">
      <summary>Gets the parent AlternatingRows object that contains this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.ParentStyleName">
      <summary>Gets or sets the name of the parent style from which style properties are inherited for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.Renderer">
      <summary>Gets or sets the renderer for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.StyleName">
      <summary>Gets or sets the name of the custom style for cells in this alternating row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.TabStop">
      <summary>Gets or sets whether the user can set focus to cells in this row using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.TextIndent">
      <summary>Gets or sets the amount of space, in pixels, to indent text in cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRow.VerticalAlignment">
      <summary>Gets or sets the vertical alignment for text in the cells in this alternating row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to another object in this alternating row.</summary>
      <param name="o">Object to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.GetHashCode">
      <summary>Gets the hash code of the alternating row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.Invalidate">
      <summary>Invalidates the displayed cells and sends the message to repaint them.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetBackColor">
      <summary>Resets the background color for this row and makes this row inherit the background color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetBorder">
      <summary>Resets the cell border for this row and makes this row inherit the cell border from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetCanFocus">
      <summary>Resets to its default value whether the cells in this row can receive focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetCellPadding">
      <summary>Resets the cell padding of the alternate row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetCellType">
      <summary>Resets the cell type for this row and makes this row inherit the cell type from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetFont">
      <summary>Resets the font for this row and makes this row inherit the font from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetForeColor">
      <summary>Resets the foreground color for this row and makes this row inherit the foreground color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetHorizontalAlignment">
      <summary>Resets the horizontal alignment for this row and makes this row inherit the horizontal alignment from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetLockBackColor">
      <summary>Resets the background color for this locked row and makes this row inherit the background color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetLockFont">
      <summary>Resets the font for this locked row and makes this row inherit the font from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetLockForeColor">
      <summary>Resets the text color for this locked row and makes this row inherit the fore color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetLocked">
      <summary>Resets the locked state for this row and makes this row inherit the locked state from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetNoteIndicatorColor">
      <summary>Resets the cell note indicator color for cells in this row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetNoteIndicatorPosition">
      <summary>Resets the position of the note indicator for cells in this row to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetNoteIndicatorSize">
      <summary>Resets the cell note indicator size for cells in this row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetTabStop">
      <summary>Resets to its default value whether the user can set focus to cells in this row using the Tab key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetTextIndent">
      <summary>Resets the text indent for the row and makes the row inherit the text indent from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRow.ResetVerticalAlignment">
      <summary>Resets the vertical alignment for this row and makes this row inherit the vertical alignment from the default row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AlternatingRows">
      <summary>Represents a one-dimensional collection of AlternatingRow objects, which set the style information for alternating rows in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRows.Count">
      <summary>Gets or sets the number of alternating row styles in this collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRows.Item(System.Int32)">
      <summary>Gets a new alternating row for the specified alternating row.</summary>
      <exception cref="T:System.IndexOutOfRangeException"> Specified alternating row index is less than 0 or greater than or equal to the alternating row count </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.AlternatingRows.Parent">
      <summary>Gets the parent object that contains this collection of alternating rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRows.AddRange(System.Collections.ICollection)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRows.Clear">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AlternatingRows.Get(System.Int32)">
      <summary>Gets a new alternating row for the specified alternating row.</summary>
      <param name="index">Alternating row index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified alternating row index is less than 0 or greater than or equal to the alternating row count </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer">
      <summary>Represents the renderer of the default changing (or animated) focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer for the default changing (or animated) focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer.#ctor(System.Int32)">
      <summary>Creates a new renderer for the default changing (or animated) focus indicator with the specified line thickness.</summary>
      <param name="thickness">Integer number of pixels in the line indicator thickness</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer.Position">
      <summary>Gets or sets the current step in the multiple-step animation cycle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer.Thickness">
      <summary>Gets or sets the thickness.</summary>
      <value>Number of pixels in the thickness</value>
    </member>
    <member name="M:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the default changing (or animated) focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AnimatedDefaultFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AnnotationModeEventArgs">
      <summary>Represents the event data for the AnnotationMode events for the Spread component, which allows the user to be notified when annotation mode is starting and ending.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AnnotationModeEventArgs.#ctor(System.Windows.Forms.Control)">
      <summary>Creates a new object with the AnnotationMode event arguments.</summary>
      <param name="drawingSurface">Control that represents the drawing surface</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AnnotationModeEventArgs.DrawingSurface">
      <summary>Gets the drawing surface control.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Appearance">
      <summary>Represents the appearance settings for an object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor">
      <summary>Creates a set of appearance settings with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles,FarPoint.Win.Spread.SortState,FarPoint.Win.Spread.FilterState,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,FarPoint.Win.Spread.CellPadding,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font,System.Drawing.Font)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, alignment, visual style, and sorting and filtering states.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
      <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
      <param name="sortState">Sorting state</param>
      <param name="filterState">Filtering state</param>
      <param name="mouseOver">Whether the mouse is over the item being rendered</param>
      <param name="showActive">Determines whether the item should be rendered as a hot item</param>
      <param name="displayZero">Determines whether zero values are displayed in cells</param>
      <param name="rightToLeft">Whether to draw the object with a right to left orientation</param>
      <param name="containsSelection">if set to <c>true</c> [contains selection].</param>
      <param name="textIndent">The text indent.</param>
      <param name="cellPadding">Padding around the cell.</param>
      <param name="drawEditButtons">Determines whether to draw buttons on edit controls.</param>
      <param name="nullBackColor">Backcolor for null cells.</param>
      <param name="nullForeColor">Forecolor for null cells that contain default text.</param>
      <param name="nullFont">Font for null cells that contain default text.</param>
      <param name="lockFont">Font for locked cells.</param>
      <param name="selectionFont">Font for selected cells.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles,FarPoint.Win.Spread.SortState,FarPoint.Win.Spread.FilterState,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,FarPoint.Win.Spread.CellPadding,System.Boolean)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, alignment, visual style, and sorting and filtering states.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
      <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
      <param name="sortState">Sorting state</param>
      <param name="filterState">Filtering state</param>
      <param name="mouseOver">Whether the mouse is over the item being rendered</param>
      <param name="showActive">Determines whether the item should be rendered as a hot item</param>
      <param name="displayZero">Determines whether zero values are displayed in cells</param>
      <param name="rightToLeft">Whether to draw the object with a right to left orientation</param>
      <param name="containsSelection">if set to <c>true</c> [contains selection].</param>
      <param name="textIndent">The text indent.</param>
      <param name="cellPadding">Padding around the cell.</param>
      <param name="drawEditButtons">Determines whether buttons draw on edit controls.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles,FarPoint.Win.Spread.SortState,FarPoint.Win.Spread.FilterState,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, alignment, visual style, and sorting and filtering states.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
      <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
      <param name="sortState">Sorting state</param>
      <param name="filterState">Filtering state</param>
      <param name="mouseOver">Whether the mouse is over the item being rendered</param>
      <param name="showActive">Determines whether the item should be rendered as a hot item</param>
      <param name="displayZero">Determines whether zero values are displayed in cells</param>
      <param name="rightToLeft">Whether to draw the object with a right to left orientation</param>
      <param name="containsSelection">if set to <c>true</c> [contains selection].</param>
      <param name="textIndent">The text indent.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles,FarPoint.Win.Spread.SortState,FarPoint.Win.Spread.FilterState,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, alignment, visual style, and sorting and filtering states.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
      <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
      <param name="sortState">Sorting state</param>
      <param name="filterState">Filtering state</param>
      <param name="mouseOver">Whether the mouse is over the item being rendered</param>
      <param name="showActive">Determines whether the item should be rendered as a hot item</param>
      <param name="displayZero">Determines whether zero values are displayed in cells</param>
      <param name="rightToLeft">Whether to draw the object with a right to left orientation</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles,FarPoint.Win.Spread.SortState,FarPoint.Win.Spread.FilterState)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, alignment, visual style, and sorting and filtering states.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
      <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
      <param name="sortState">Sorting state</param>
      <param name="filterState">Filtering state</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.VisualStyles)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, alignment, and visual style.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
      <param name="visualStyle">Whether to render with visual styles (as in XP themes)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Appearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.Spread.CellHorizontalAlignment,FarPoint.Win.Spread.CellVerticalAlignment,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a set of appearance settings with the specified colors, buttons, and alignment.</summary>
      <param name="backColor">Background color of an object</param>
      <param name="foreColor">Foreground (text) color of an object</param>
      <param name="font">Font information of an object</param>
      <param name="horizontalAlignment">Horizontal alignment of an object or of text in a cell</param>
      <param name="verticalAlignment">Vertical alignment of an object or text in a cell</param>
      <param name="drawPrimaryButton">Whether to draw the primary button for an object</param>
      <param name="drawSecondaryButton">Whether to draw the secondary button for an object</param>
      <param name="selectionBackColor">Background color of an object when the object is selected</param>
      <param name="selectionForeColor">Foreground (text) color of an object when the object is selected</param>
      <param name="lockBackColor">Background color of an object when the cell is locked</param>
      <param name="lockForeColor">Foreground (text) color of an object when the cell is locked</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.BackColor">
      <summary>Gets or sets the background color of an object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.CellPadding">
      <summary>Gets or sets the number of spaces to pad the cell(s) in pixels.</summary>
      <value>The cell padding.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.ContainsSelection">
      <summary>Gets or sets whether the rendered item should paint as if it is selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.DisplayZero">
      <summary>Gets or sets whether zero values are displayed in cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.DrawEditButton">
      <summary>Gets or sets whether to draw the edit button for an object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.DrawPrimaryButton">
      <summary>Gets or sets whether to draw the primary button for an object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.DrawSecondaryButton">
      <summary>Gets or sets whether to draw the secondary button for an object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.FilterState">
      <summary>Gets or sets the filtering state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.Font">
      <summary>Gets or sets the font information of an object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.ForeColor">
      <summary>Gets or sets the text color of an object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of an object or text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.IsGrayscale">
      <summary>Gets or sets whether to printing with black and white mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.LockBackColor">
      <summary>Gets or sets the background color of an object when the cell is locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.LockFont">
      <summary>Gets or sets the font for a locked object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.LockForeColor">
      <summary>Gets or sets the text color of an object when the cell is locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.MouseOver">
      <summary>Gets or sets whether the mouse is over the rendered item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.NullBackColor">
      <summary>Gets or sets the background color of an objects null state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.NullFont">
      <summary>Gets or sets the font for a null object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.NullForeColor">
      <summary>Gets or sets the text color of an objects null state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.RightToLeft">
      <summary>Gets or sets whether the object should paint right to left.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.ScaleDimensionX">
      <summary>Gets or sets scaling factor with dpi effects</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.SelectionBackColor">
      <summary>Gets or sets the background color of an object when the object is selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.SelectionFont">
      <summary>Gets or sets the font for a selected object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.SelectionForeColor">
      <summary>Gets or sets the text color of an object when the object is selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.ShowActive">
      <summary>Gets or sets whether the rendered item should display an active or hot state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.SortState">
      <summary>Gets or sets the sorting state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.TextIndent">
      <summary>Gets or sets the amount to indent the text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.TouchDropDownScale">
      <summary>Gets or sets the scale factor of the drop-down window in the touch device.</summary>
      <value>A float value that indicates the scale factor of the drop-down window in the touch device. The default is <c>1.5f</c></value>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of an object or text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Appearance.VisualStyles">
      <summary>Gets or sets whether to render using visual styles.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AppearanceActionBase">
      <summary>Represents a special implementation that displays UI elements on the validating cell. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceActionBase.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceActionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceActionBase.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceActionBase.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current action using the <paramref name="context" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceActionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceActionBase.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.AppearanceStyleCollection">
      <summary>Represents a collection of <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />s. This class cannot be inherited.</summary>
      <seealso cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleCollection.AddRange(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.AppearanceStyleInfo})">
      <summary>Adds a set of <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />s to the current <see cref="T:FarPoint.Win.Spread.AppearanceStyleCollection" />.</summary>
      <param name="items">The target <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> collection.</param>
      <exception cref="T:System.ArgumentNullException"> One of the <paramref name="items" /> is <see langword="null" />. </exception>
      <example> The following code example shows how to combine two predefined <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />s to generate the required CellStyle object. The program sets the <see cref="!:RoundedBorder" /> to alternating columns. This code example is part of a larger example provided for the <see cref="T:FarPoint.Win.Spread.NamedAppearanceStyleInfo" /> class. <code lang="CS" source="NamedCellStyleDemo.cs" region="ID_005" /><code lang="VB" source="NamedCellStyleDemo.vb" region="ID_005" /></example>
    </member>
    <member name="T:FarPoint.Win.Spread.AppearanceStyleInfo">
      <summary>Represents the set of cell style settings for the validation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.#ctor">
      <summary>Creates a CellStyle instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.BackColor">
      <summary>Gets or sets the cell background color for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Border">
      <summary>Gets the border of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.CanFocus">
      <summary>Gets or sets whether the user can set focus to the cell using the keyboard or mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.CellPadding">
      <summary>Gets or sets the number of spaces to add to the cell(s) in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.CellType">
      <summary>Gets or sets the type of cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Editor">
      <summary>Gets or sets the editor of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Font">
      <summary>Gets or sets the font settings of the cell for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.FontStyle">
      <summary>Gets the font style applied to the cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.ForeColor">
      <summary>Gets or sets the text color of the cell for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Formatter">
      <summary>Gets or sets the formatter of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the contents of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.ImeMode">
      <summary>Gets or sets the IME mode of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.ImeSentenceMode">
      <summary>Gets or sets the ImeSentenceMode of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.InputScope">
      <summary>Gets or sets the input scope of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.LockBackColor">
      <summary>Gets or sets the background color of locked cell</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.LockFont">
      <summary>Gets or sets the font for locked cells</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.LockForeColor">
      <summary>Gets or sets the foreground color of locked cells</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Locked">
      <summary>Gets or sets the whether the style marks cells as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.NoteIndicatorColor">
      <summary>Gets or sets the color of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.NoteIndicatorPosition">
      <summary>Gets or sets the position of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.NoteIndicatorSize">
      <summary>Gets or sets the size of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.NoteStyle">
      <summary>Gets or sets the note style of the cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Parent">
      <summary>Gets or sets the name of the parent (<see cref="T:FarPoint.Win.Spread.NamedStyle" /> object) of the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.Renderer">
      <summary>Gets or sets the renderer of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.TabStop">
      <summary>Gets or sets whether the user can set focus to the cell using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.TextIndent">
      <summary>Gets or sets the amount to indent the text for the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of contents of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AppearanceStyleInfo.VisualStyles">
      <summary>Gets or sets whether visual styles are on or off for the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.Clone">
      <summary>Creates a clone of the current object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.GetActualStyle(FarPoint.Win.Spread.DynamicStyleInfoContext)">
      <summary>Gets the actual style</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.AppearanceStyleInfo.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ApplyEventArgs">
      <summary>Internal use only. Represents the event data for the apply event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ApplyEventArgs.#ctor(System.String)">
      <summary>Creates a new apply event arguments object.</summary>
      <param name="newFormula">New formula</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ApplyEventArgs.Formula">
      <summary>Gets the formula.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoFilteredColumnEventArgs">
      <summary>Represents the event data for the AutoFilteredColumn event for the Spread component, which occurs when the column has been automatically filtered.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.String)">
      <summary>Creates a new object with the AutoFilteredColumn event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) that was automatically filtered</param>
      <param name="column">Index of the column that was automatically filtered</param>
      <param name="filterString">String to be used to filter the column</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.Column">
      <summary>Gets the index of the column that was automatically filtered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.FilterString">
      <summary>Gets the string the column was filtered by.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteredColumnEventArgs.Sheet">
      <summary>Gets the sheet whose rows were just automatically filtered.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoFilteringColumnEventArgs">
      <summary>Represents the event data for the AutoFilteringColumn event for the Spread component, which occurs when columns are being automatically filtered.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.String)">
      <summary>Creates a new object with the AutoFilteringColumn event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) to be automatically sorted</param>
      <param name="column">Index of the column to be used</param>
      <param name="filterString">String to be used to filter the column</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default processing of automatically filtering columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.Column">
      <summary>Gets the index of the column to be automatically filtered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.FilterString">
      <summary>Gets or sets the string to filter the column by.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoFilteringColumnEventArgs.Sheet">
      <summary>Gets the sheet whose rows are to be automatically filtered.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoSortedColumnEventArgs">
      <summary>Represents the event data for the AutoSortedColumn event for the Spread component, which occurs when the column has been automatically sorted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AutoSortedColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the AutoSortedColumn event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) that was automatically sorted</param>
      <param name="column">Index of the column that was used as the key column for the automatic sort</param>
      <param name="ascending">Whether the automatic sort was ascending</param>
      <param name="showIndicator">Whether the sort indicator was displayed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.Ascending">
      <summary>Gets whether the automatic sort was ascending.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.Column">
      <summary>Gets the index of the column that was automatically sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.Sheet">
      <summary>Gets the sheet whose rows were just automatically sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortedColumnEventArgs.ShowIndicator">
      <summary>Gets whether the sort indicator was displayed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoSortingColumnEventArgs">
      <summary>Represents the event data for the AutoSortingColumn event for the Spread component, which occurs when columns are being automatically sorted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AutoSortingColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the AutoSortingColumn event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) to be automatically sorted</param>
      <param name="column">Index of the column to be used as the key for automatic sort</param>
      <param name="ascending">Whether the automatic sort is ascending</param>
      <param name="showIndicator">Whether to display the sort indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AutoSortingColumnEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the AutoSortingColumn event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) to be automatically sorted</param>
      <param name="column">Index of the column to be used as the key for automatic sort</param>
      <param name="ascending">Whether the automatic sort is ascending</param>
      <param name="showIndicator">Whether to display the sort indicator</param>
      <param name="sortFrozenRows">Whether frozen rows sort</param>
      <param name="sortTrailingFrozenRows">Whether trailing frozen rows sort</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Ascending">
      <summary>Gets or sets whether the automatic sort is ascending.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default processing of automatically sorting columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Column">
      <summary>Gets the index of the column to be automatically sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.Sheet">
      <summary>Gets the sheet whose rows are to be automatically sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.ShowIndicator">
      <summary>Gets whether the sort indicator is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.SortFrozenRows">
      <summary>Gets or sets whether frozen rows sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.AutoSortingColumnEventArgs.SortTrailingFrozenRows">
      <summary>Gets or sets whether trailing frozen rows sort.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.AverageConditionalFormattingRule">
      <summary>Represents an above or below average conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.AverageConditionalFormattingRule.#ctor(System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.AverageConditionalFormattingRule" /> class.</summary>
      <param name="isAbove">If set to <c>true</c>, the conditional formatting rule accepts values that are above average.</param>
      <param name="isIncludedEquals">If set to <c>true</c>, the conditional formatting rule accepts values that equal the average.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AverageConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.AverageConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.AverageConditionalFormattingRule.IsAbove">
      <summary>Gets or sets a value that indicates whether this conditional formatting rule accepts a value that is above average.</summary>
      <value>
        <c>true</c> if this instance is above average; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.AverageConditionalFormattingRule.IsIncludeEquals">
      <summary>Gets or sets a value that indicates whether this conditional formatting rule accepts a value that equals the average.</summary>
      <value>
        <c>true</c> if this instance equals the average; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.AverageConditionalFormattingRule.StandardDeviation">
      <summary>Gets or sets the standard deviation.</summary>
      <value>The standard deviation.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.AverageConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.AverageConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.BaseDataValidator">
      <summary>Represents a data BaseDataValidator. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseDataValidator.Actions">
      <summary>Gets the collection of validate actions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseDataValidator.Enabled">
      <summary>Gets or sets a value that indicates whether the <see cref="!:CellValidator" /> is active.</summary>
      <value>
        <see langword="true" /> if the <see cref="!:CellValidator" /> is active; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseDataValidator.Name">
      <summary>Gets or sets the <see cref="!:CellValidator" />'s name.</summary>
      <value>A <see cref="T:System.String" /> value that represents the <see cref="!:CellValidator" />'s name. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.Apply(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.DataValidationExecutedResult@)">
      <summary>Applies settings of this matched item to the specified <see cref="T:GrapeCity.Spreadsheet.DataValidationExecutedResult" /> value.</summary>
      <param name="matchingData">A <see cref="!:SplittableMatchData" /> value indicates the matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.DataValidationExecutedResult" /> value indicates the executed result.</param>
      <returns>
        <c>true</c> if other next items should be stopped executing, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.Clone">
      <summary>Creates a clone of current object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.IsValid(System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid with this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</summary>
      <param name="rangeIndex">An integer value that indicates the range reference index of this data validation.</param>
      <param name="row">An integer value indicates the row index of cell to validate.</param>
      <param name="column">An integer value indicates the column index of cell to validate.</param>
      <param name="value">The cell value to validate.</param>
      <returns>
        <c>true</c> if the specified cell value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.OnDeserialization(System.Object)">
      <summary>Handles logic after completing deserialization.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseDataValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value satisfies the condition provided in the <paramref name="context" /> parameter.</summary>
      <param name="context" />
    </member>
    <member name="T:FarPoint.Win.Spread.BaseFilterItem">
      <summary>Represents the basis for a custom filter. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.#ctor">
      <summary>Creates a new base custom filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BaseFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseFilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseFilterItem.SheetView">
      <summary>Sets the sheet to filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current BaseFilterItem object.</summary>
      <param name="obj">The System.Object to compare with the current System.Object.</param>
      <returns>true if all settings are equal; otherwise, false. The sheetview setting is not included</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
    </member>
    <member name="T:FarPoint.Win.Spread.BaseSparkline">
      <summary>Base class that represents sparkline data infomation. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BaseSparkline" /> class.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BaseSparkline" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseSparkline.Column">
      <summary>Gets or sets the column.</summary>
      <value>The column.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.BaseSparkline.Row">
      <summary>Gets or sets the row.</summary>
      <value>The row.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.FirePropertyChanged(System.String,System.Object,System.Object)">
      <summary>Fires the property changed event.</summary>
      <param name="propertyName">Name of the property.</param>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.FireUpdated">
      <summary>Fires the updated event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.GetSparkLineData">
      <summary>Gets the sparkline data used for rendering.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.OnPropertyChanged(FarPoint.Win.Spread.PropertyTrackChangedEventArgs)">
      <summary>Raises the <see cref="E:PropertyChanged" /> event.</summary>
      <param name="e">The <see cref="!:FarPoint.Web.Spread.PropertyTrackChangedEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.OnUpdated(System.EventArgs)">
      <summary>Raises the <see cref="E:Updated" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BaseSparkline.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.BaseSparkline.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.BaseSparkline.Updated">
      <summary>Occurs when data has been updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.BeforeSettingPropertyValueEventArgs">
      <summary>Represents before setting property value event arguments.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BeforeSettingPropertyValueEventArgs.#ctor(System.Object,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Creates a new events argument object for before setting property value.</summary>
      <param name="ownerObject">Owner object</param>
      <param name="propDesc">Property descriptpr</param>
      <param name="value">Value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.BeforeSettingPropertyValueEventArgs.OwnerObject">
      <summary>Gets the owner object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BeforeSettingPropertyValueEventArgs.PropertyDescriptor">
      <summary>Gets the property descriptor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BeforeSettingPropertyValueEventArgs.Value">
      <summary>Gets or sets the value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.BeforeShowContextMenuEventArgs">
      <summary>Represents the event data for the BeforeShowContextMenu event for the Spread component, which occurs when the user open the enhanced filter context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BeforeShowContextMenuEventArgs.AssociatedObject">
      <summary>Represents the object that associate with context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BeforeShowContextMenuEventArgs.ContextMenu">
      <summary>Represents the enhanced filter context menu object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.BestFitColumnRule">
      <summary>Represents the rules that determine how best to print the columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BestFitColumnRule.#ctor">
      <summary>Creates a new rule that determines how best to print the columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BestFitColumnRule.#ctor(FarPoint.Win.Spread.ResetOption)">
      <summary>Creates a new rule that determines how best to print the columns, with the specified reset option.</summary>
      <param name="resetOption">Whether to reset the rules or a particular rule</param>
    </member>
    <member name="P:FarPoint.Win.Spread.BestFitColumnRule.ResetOption">
      <summary>Determines whether to reset the rules or a particular rule before testing the next SmartPrint rule.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule">
      <summary>Represents a conditional formatting rule that accepts or does not accept a value in a range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.#ctor(System.Boolean,System.Object,System.Boolean,System.Object,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule" /> class.</summary>
      <param name="isNotBetween">If set to <c>true</c> is not between.</param>
      <param name="firstValue">The first value</param>
      <param name="isFirstFormula">If set to <c>true</c>, indicates that the firstValue parameter is the first formula</param>
      <param name="secondValue">The second value</param>
      <param name="isSecondFormula">If set to <c>true</c>, indicates that the secondValue parameter is the second formula</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.#ctor(System.Boolean,System.Object,System.Boolean,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule" /> class.</summary>
      <param name="isNotBetween">If set to <c>true</c> is not between.</param>
      <param name="firstValue">The first value</param>
      <param name="isFirstFormula">If set to <c>true</c>, indicates that the firstValue parameter is the first formula</param>
      <param name="secondValue">The second value</param>
      <param name="isSecondFormula">If set to <c>true</c>, indicates that the secondValue parameter is the second formula</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.FirstFormula">
      <summary>Gets or sets the first formula.</summary>
      <value>The first formula.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.FirstValue">
      <summary>Gets or sets the first value in the range. This value accepts a number, date, time, or string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.IsNotBetween">
      <summary>Gets or sets a value that indicates whether the condition does not accept or accepts values in the range.</summary>
      <value>
        <c>true</c> if this instance is not between the conditions; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.SecondFormula">
      <summary>Gets or sets the second formula.</summary>
      <value>The second formula.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.SecondValue">
      <summary>Gets or set the maximum value of the range. This value accepts a number, date, time, or string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BetweenValuesConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.BlankConditionalFormattingRule">
      <summary>Represents a conditional formatting rule that accepts blank or nonblank values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.BlankConditionalFormattingRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BlankConditionalFormattingRule" /> class.</summary>
      <param name="isBlank">If set to <c>true</c>, is blank.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BlankConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.BlankConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.BlankConditionalFormattingRule.IsBlank">
      <summary>Gets or sets a value that indicates whether this conditional formatting rule accepts blank values.</summary>
      <value>
        <c>true</c> if the accepted value is blank; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.BlankConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.BlankConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CalculateExceptionEventArgs">
      <summary>Represents the event data for the CalculateException event, that contains the exception thrown when calculating the result of a formula.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CalculateExceptionEventArgs.#ctor(System.Exception,System.Windows.Forms.Control)">
      <summary>Creates a new calculation exception event arguments object.</summary>
      <param name="ex">Exception which is raised when calculating the result of a formula</param>
      <param name="ctrl">Control</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CalculateExceptionEventArgs.Control">
      <summary>Gets the control whose formula has an exception.</summary>
      <value>Control</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CalculateExceptionEventArgs.Exception">
      <summary>Gets the exception raised when calculating the result of a formula.</summary>
      <value>Exception</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Cell">
      <summary>Represents a cell in the Spread component.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Cell.columnField">
      <summary>Gets or sets the model column index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Cell.rowField">
      <summary>Gets or sets the model row index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Cell.viewcolumn">
      <summary>Gets or sets the column start index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Cell.viewrow">
      <summary>Gets or sets the row start index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.BackColor">
      <summary>Gets or sets the background color for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Border">
      <summary>Gets or sets the border for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.CanFocus">
      <summary>Gets or sets whether the user can set focus to the cell using the keyboard or mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.CellPadding">
      <summary>Gets or sets the amount of spaces to pad the cell(s) in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.CellType">
      <summary>Gets or sets the type of cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Column">
      <summary>Gets the column that contains this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ColumnSpan">
      <summary>Gets or sets the number of columns spanned by this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Editor">
      <summary>Gets or sets the editor for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ErrorText">
      <summary>Gets or sets error text for this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Font">
      <summary>Gets or sets the font for the cell text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ForeColor">
      <summary>Gets or sets the text (foreground) color for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Formatter">
      <summary>Gets or sets the formatter for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Formula">
      <summary>Gets or sets the formula in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.FormulaArray">
      <summary>Get/Set array formula for cell range</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the cell contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ImeMode">
      <summary>Gets or sets the IME mode for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ImeSentenceMode">
      <summary>Gets or sets the ImeSentenceMode value for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.InputScope">
      <summary>Gets or sets the input scope for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.LockBackColor">
      <summary>Gets or sets the background color for a locked cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.LockFont">
      <summary>Gets or sets the font for a locked cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.LockForeColor">
      <summary>Gets or sets the text (foreground) color for a locked cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Locked">
      <summary>Gets or sets whether a cell is marked as locked from editing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Note">
      <summary>Gets or sets the note for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.NoteIndicatorColor">
      <summary>Gets or sets the color for the note indicator for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.NoteIndicatorPosition">
      <summary>Gets or sets the cell note indicator position for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.NoteIndicatorSize">
      <summary>Gets or sets the size for the note indicator for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.NoteStyle">
      <summary>Gets or sets the note style for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Parent">
      <summary>Gets the parent for this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ParentStyleName">
      <summary>Gets or sets the name of the parent style for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ParseFormatInfo">
      <summary>Gets or sets the parsed formatting for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.ParseFormatString">
      <summary>Gets or sets the parsed formatting string for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Renderer">
      <summary>Gets or sets the renderer for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Row">
      <summary>Gets the row that contains this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.RowSpan">
      <summary>Gets or sets the number of rows spanned by a cell.</summary>
      <remarks>If this cell represents a range of cells, then this property returns and sets the upper-left cell in the range.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Sparkline">
      <summary>Gets or sets the sparkline.</summary>
      <value>The sparkline.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.StyleName">
      <summary>Gets or sets the name of the custom style for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.TabStop">
      <summary>Gets or sets whether the user can set focus to the cell using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Tag">
      <summary>Gets or sets an application-defined tag value for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Text">
      <summary>Gets or sets the formatted text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.TextIndent">
      <summary>Gets or sets the amount to indent the text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Validation">
      <summary>Gets an instance of IValidation which may be used to get and set validation properties of the cells represented by this <see cref="T:FarPoint.Win.Spread.Cell" />.</summary>
      <value>The instance of IValidation which may be used to get and set validation properties of the cells.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.Value">
      <summary>Gets or sets the value in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the cell contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cell.VisualStyles">
      <summary>Gets or sets the setting of visual styles (XP themes) for the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.Equals(System.Object)">
      <summary>Determines whether the specified object is equivalent to this cell.</summary>
      <param name="o">Object to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.GetDataModel">
      <summary>Gets the data model for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.GetHashCode">
      <summary>Gets the hash code of an object.</summary>
      <returns>Hash code of the object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.GroupSparkline(System.Int32,System.Int32)">
      <summary>Groups the sparkline.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.GroupSparkline(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Groups the sparkline.</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.GroupSparkline(FarPoint.Win.Spread.Cell)">
      <summary>Groups the sparkline.</summary>
      <param name="cell">The cell.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.Invalidate">
      <summary>Invalidates the displayed cells and sends the message to repaint them.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.IsValid(System.Int32,System.Int32)">
      <summary>Checks whether the specified view row and column indexes are valid coordinates in the sheet's data model, and if so sets the row and column fields to the model row and column indexes.</summary>
      <param name="viewrow">Row index (in the view)</param>
      <param name="viewcolumn">Column index (in the view)</param>
      <returns>True if view row and view column are defined in the data model for the sheet; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetBackColor">
      <summary>Resets the background color for the cell and makes the cell inherit the background color from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetBorder">
      <summary>Resets the cell border for the cell and makes the cell inherit the cell border from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetCanFocus">
      <summary>Resets to its default value whether the cell can receive focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetCellPadding">
      <summary>Resets the cell padding.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetCellType">
      <summary>Resets the cell type for the cell and makes the cell inherit the cell type from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetFont">
      <summary>Resets the font for the cell and makes the cell inherit the font from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetForeColor">
      <summary>Resets the text (foreground) color for the cell and makes the cell inherit the text color from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetFormula">
      <summary>Resets the formula for the cell to empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetHorizontalAlignment">
      <summary>Resets the horizontal alignment for the cell and makes the cell inherit the horizontal alignment from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetImeMode">
      <summary>Resets the background color for the cell and makes the cell inherit the IME mode from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetImeSentenceMode">
      <summary>Resets the ImeSentenceMode property for the cell and makes the cell inherit the ImeSentenceMode value from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetLockBackColor">
      <summary>Resets the background color for the locked cell and makes the cell inherit the background color from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetLockFont">
      <summary>Resets the font for the locked cell and makes the cell in herit the font from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetLockForeColor">
      <summary>Resets the text color for the locked cell and makes the cell inherit the fore color from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetLocked">
      <summary>Resets the locked state for the cell and makes the cell inherit the locked state from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetNote">
      <summary>Resets the note for the cell to empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetNoteIndicatorColor">
      <summary>Resets the color of the cell note indicator to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetNoteIndicatorPosition">
      <summary>Resets the position of the note indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetNoteIndicatorSize">
      <summary>Resets the size of the note indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetNoteStyle">
      <summary>Resets the note style for the cell and makes the cell inherit the note style from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetParentStyleName">
      <summary>Resets the ParentStyleName object for the cell to an empty string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetTabStop">
      <summary>Resets to its default value whether the user can set focus to the cell using the Tab key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetTag">
      <summary>Resets the tag for the cell to empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetText">
      <summary>Resets the text for the cell to empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetTextIndent">
      <summary>Resets the size of the note indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetValue">
      <summary>Resets the value for the cell to empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetVerticalAlignment">
      <summary>Resets the vertical alignment for the cell and makes the cell inherit the vertical alignment from the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ResetVisualStyles">
      <summary>Resets the setting of visual styles (XP themes) for the cell to the default setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ToString">
      <summary>Gets a string that contains an absolute reference to this cell in the current reference style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ToString(FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets a string that contains an absolute reference to this cell in the specified reference style.</summary>
      <param name="referenceStyle">Style of cell reference</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ToString(FarPoint.Win.Spread.Cell)">
      <summary>Gets a string that contains a relative reference to this cell in the current reference style.</summary>
      <param name="relativeTo">Cell to use for computing the relative reference</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.ToString(FarPoint.Win.Spread.Cell,FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets a string that contains a relative reference to this cell in the specified reference style.</summary>
      <param name="relativeTo">Cell to use for computing the relative reference</param>
      <param name="referenceStyle">Style of cell reference</param>
      <exception cref="T:System.ArgumentNullException"> No cell specified or specified cell (for relative reference) is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.UnGroupSparkline(FarPoint.Win.Spread.Cell)">
      <summary>Ungroups the group sparkline.</summary>
      <param name="cell">The cell.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.UnGroupSparkline(System.Int32,System.Int32)">
      <summary>Ungroups the sparkline at the specified location if it is in the same group with the current cell.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Cell.UnGroupSparkline(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Ungroups the group sparkline.</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellClickEventArgs">
      <summary>Represents the event data for the CellClick and CellDoubleClick events for the Spread component, which occurs when the user clicks or double-clicks the mouse button with the pointer on a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellClickEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MouseButtons,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the CellClick event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the clicked cell</param>
      <param name="row">Row index of the clicked cell</param>
      <param name="column">Column index of the clicked cell</param>
      <param name="x">X-coordinate of the pointer position</param>
      <param name="y">Y-coordinate of the pointer position</param>
      <param name="button">Which mouse button was pressed</param>
      <param name="columnHeader">Whether the clicked cell is in the column header</param>
      <param name="rowHeader">Whether the clicked cell is in the row header</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellClickEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MouseButtons,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the CellClick event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the clicked cell</param>
      <param name="row">Row index of the clicked cell</param>
      <param name="column">Column index of the clicked cell</param>
      <param name="x">X-coordinate of the pointer position</param>
      <param name="y">Y-coordinate of the pointer position</param>
      <param name="button">Which mouse button was pressed</param>
      <param name="columnHeader">Whether the clicked cell is in the column header</param>
      <param name="rowHeader">Whether the clicked cell is in the row header</param>
      <param name="columnFooter">Whether the clicked cell is in the column footer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellClickEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MouseButtons,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Creates a new object with the CellClick event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the clicked cell</param>
      <param name="row">Row index of the clicked cell</param>
      <param name="column">Column index of the clicked cell</param>
      <param name="x">X-coordinate of the pointer position</param>
      <param name="y">Y-coordinate of the pointer position</param>
      <param name="button">Which mouse button was pressed</param>
      <param name="columnHeader">Whether the clicked cell is in the column header</param>
      <param name="rowHeader">Whether the clicked cell is in the row header</param>
      <param name="columnFooter">Whether the clicked cell is in the column footer</param>
      <param name="actualRowLayoutIndex">Actual row index in the layout</param>
      <param name="actualColumnLayoutIndex">Actual column index in the layout</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.ActualColumnLayoutIndex">
      <summary>Gets the actual column index in layout</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.ActualRowLayoutIndex">
      <summary>Gets the actual row index in layout</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Button">
      <summary>Gets which mouse button has been pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Cancel">
      <summary>Gets or sets whether to cancel default processing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Column">
      <summary>Gets the column index of the cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.ColumnFooter">
      <summary>Gets whether the cell that is clicked is in the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.ColumnHeader">
      <summary>Gets whether the cell that is clicked is in the column headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Row">
      <summary>Gets the row index of the cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.RowHeader">
      <summary>Gets whether the cell that is clicked is in the row headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.View">
      <summary>Gets the view that contains the cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.X">
      <summary>Gets the x-coordinate of the pointer position.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellClickEventArgs.Y">
      <summary>Gets the y-coordinate of the pointer position.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellErrorTextChangedEventArgs">
      <summary>Provides data for the Cell event of a FpSpread control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellErrorTextChangedEventArgs.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.SheetView)">
      <summary>Creates new instance of the <see cref="T:FarPoint.Win.Spread.CellErrorTextChangedEventArgs" /> class.</summary>
      <param name="rowIndex">Row index</param>
      <param name="columnIndex">Column index</param>
      <param name="sheetview">
        <see cref="P:FarPoint.Win.Spread.CellErrorTextChangedEventArgs.SheetView" /> object</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellErrorTextChangedEventArgs.ColumnIndex">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellErrorTextChangedEventArgs.RowIndex">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellErrorTextChangedEventArgs.SheetView">
      <summary>Gets the <see cref="P:FarPoint.Win.Spread.CellErrorTextChangedEventArgs.SheetView" /> object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellFooter">
      <summary>Represents a footer cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellFooter.AggregationFormatString">
      <summary>Gets or sets the aggregation format string at this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellFooter.AggregationType">
      <summary>Gets or sets the aggregation type at this cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellFooter.Formula">
      <summary>Gets or sets the formula in a cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellInfo">
      <summary>Represents the value and formatting for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[],System.String)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[],FarPoint.Win.Spread.Model.AggregationType,System.String)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[],FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[],FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo,FarPoint.Win.Spread.SparklineInfo)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[],FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo,FarPoint.Win.Spread.SparklineInfo,System.String)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView,System.Int32,System.Int32)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32,System.String,System.IFormatProvider,FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new a set of cell information (CellInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object)">
      <summary>Creates a new a set of cell information (CellInfo object) with a value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo)">
      <summary>Creates a new a set of cell information (CellInfo object) with value and style information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String)">
      <summary>Creates a new a set of cell information (CellInfo object) with a value, style information, and a formula.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String)">
      <summary>Creates a new a set of cell information (CellInfo object) with a value, style information, a formula, and a note.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object)">
      <summary>Creates a new a set of cell information (CellInfo object) with a value, style information, a formula, a note, and a tag.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.#ctor(System.Object,FarPoint.Win.Spread.StyleInfo,System.String,System.String,System.Object,System.Int32,System.Int32)">
      <summary>Creates a new a set of cell information (CellInfo object) with a value, style information, a formula, a note, a tag, a row index, and a column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.AggregationFormatString">
      <summary>Gets or sets the aggregation format string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.AggregationType">
      <summary>Gets or sets the aggregation type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.ColumnSpan">
      <summary>Gets or sets the number of columns spanned.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.ConditionalFormats">
      <summary>Gets or sets the conditional formats.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.ErrorText">
      <summary>Gets or sets the error text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.FormatInfo">
      <summary>Gets or sets the format information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.FormatString">
      <summary>Gets or sets the format string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.FormattedValue">
      <summary>Gets or sets the formatted value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.Formula">
      <summary>Gets or sets the formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.LinkColumn">
      <summary>Gets or sets the column of the reference.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.LinkRow">
      <summary>Gets or sets the row of the reference.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.Note">
      <summary>Gets or sets the note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.NoteStyle">
      <summary>Gets or sets the style of the note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.NoteStyleInfo">
      <summary>Gets or sets the note style information for the note shape.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.RowSpan">
      <summary>Gets or sets the number of rows spanned.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.Style">
      <summary>Gets or sets the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.Tag">
      <summary>Gets or sets the tag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfo.Value">
      <summary>Gets or sets the unformatted value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfo.GetLinkString">
      <summary>Gets the reference as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellInfoRange">
      <summary>Represents a two-dimensional collection of cell information objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfoRange.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new collection of cell information objects for the cell at the specified row and column.</summary>
      <param name="row">The row index</param>
      <param name="column">The column index</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.AltRowStyles">
      <summary>Gets or sets the alternating row styles.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnCount">
      <summary>Gets the number of columns in the two-dimensional collection of cell information objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnFooter">
      <summary>Gets or sets the column footer for the the cell information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnFooterSheetCornerStyleInfo">
      <summary>Gets or sets the StyleInfo object for the footer corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnHeader">
      <summary>Gets or sets the column header for the the cell information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ColumnSettings">
      <summary>Gets or sets the column settings for the the cell information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ConditionalFormattings">
      <summary>Gets or sets the conditional formattings.</summary>
      <value>The conditional formattings.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.DefaultStyle">
      <summary>Gets or sets the StyleInfo object for the default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.FilterBarSettings">
      <summary>Gets or sets the filter bar settings for the the column information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.Item(System.Int32,System.Int32)">
      <summary>Gets or sets a cell information object for the cell at the specified row and column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.ReferenceStyle">
      <summary>Gets or sets the reference style for the formulas in the cell information object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.RowCount">
      <summary>Gets the number of rows in the two-dimensional collection of cell information objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.RowHeader">
      <summary>Gets or sets the row header for the the cell information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.RowSettings">
      <summary>Gets or sets the row settings for the the cell information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.RuntimeIDs">
      <summary>Gets or sets runtime index for corresponding conditional formatting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellInfoRange.SheetCorner">
      <summary>Gets or sets the sheet corner for the the cell information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfoRange.FromCellRange(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.RowClipInfoRange@,FarPoint.Win.Spread.ColumnClipInfoRange@)">
      <summary>Creates cell information for the specified range in the specified sheet.</summary>
      <param name="sheetView">Sheet from which to build the cell information</param>
      <param name="cellRange">Range from which to build the cell information, or null to use the current selection (if there is a selection) or active cell instead</param>
      <param name="rowClipInfo">Row Clipboard information</param>
      <param name="columnClipInfo">Column Clipboard information</param>
      <returns>A <see cref="!:CellInforRange" /> object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellInfoRange.FromCellRange(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.RowClipInfoRange@,FarPoint.Win.Spread.ColumnClipInfoRange@,FarPoint.Win.Spread.TableViewClipboardInfo@)">
      <summary>Creates cell information for the specified range in the specified sheet.</summary>
      <param name="sheetView">Sheet from which to build the cell information</param>
      <param name="cellRange">Range from which to build the cell information, or null to use the current selection (if there is a selection) or active cell instead</param>
      <param name="rowClipInfo">Row Clipboard information</param>
      <param name="columnClipInfo">Column Clipboard information</param>
      <param name="tableClipInfo" />
    </member>
    <member name="T:FarPoint.Win.Spread.CellPadding">
      <summary>Represents padding information associated with a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellPadding" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellPadding" /> class.</summary>
      <param name="all">The padding value, in pixels, for all edges.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.#ctor(FarPoint.Win.Spread.CellPadding)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellPadding" /> class.</summary>
      <param name="cellPadding">The instance of CellPadding class that initializes the new instance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellPadding" /> class.</summary>
      <param name="left">The padding value, in pixels, for left edge.</param>
      <param name="top">The padding value, in pixels, for top edge.</param>
      <param name="right">The padding value, in pixels, for right edge.</param>
      <param name="bottom">The padding value, in pixels, for bottom edge.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the CellPadding class from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.All">
      <summary>Gets or sets the padding, in pixels, for the all edges.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.Bottom">
      <summary>Gets or sets the padding, in pixels, for the bottom edge.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.Horizontal">
      <summary>Gets the sum, in pixels, for the right and left edges.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.IsEmpty">
      <summary>Gets a value indicating whether this instance is empty.</summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.Left">
      <summary>Gets or sets the padding, in pixels, for the left edge.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.Right">
      <summary>Gets or sets the padding, in pixels, for the right edge.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.Top">
      <summary>Gets or sets the padding, in pixels, for the top edge.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellPadding.Vertical">
      <summary>Gets the sum, in pixels, for the top and bottom edges.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.CompareTo(FarPoint.Win.Spread.CellPadding)">
      <summary>Compares the current CellPadding object with another CellPadding object.</summary>
      <param name="other">A CellPadding object to compare with this object.</param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.CompareTo(System.Object)">
      <summary>Compares the current CellPadding object with another object.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.Equals(FarPoint.Win.Spread.CellPadding)">
      <summary>Determines whether the value of the specified object is equivalent to the current CellPadding object.</summary>
      <param name="padding">The object to compare to the current CellPadding object.</param>
      <returns>true if the CellPadding objects are equivalent; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.Equals(System.Object)">
      <summary>Determines whether the value of the specified object is equivalent to the current CellPadding object.</summary>
      <param name="obj">The object to compare to the current CellPadding object.</param>
      <returns>true if the CellPadding objects are equivalent; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.Reset">
      <summary>Resets this instance to default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.op_Equality(FarPoint.Win.Spread.CellPadding,FarPoint.Win.Spread.CellPadding)">
      <summary>Implements the operator ==.</summary>
      <param name="a">The first CellPadding object.</param>
      <param name="b">The second CellPadding object.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellPadding.op_Inequality(FarPoint.Win.Spread.CellPadding,FarPoint.Win.Spread.CellPadding)">
      <summary>Implements the operator !=.</summary>
      <param name="a">The first CellPadding object.</param>
      <param name="b">The second CellPadding object.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.CellPadding.PropertyChanged">
      <summary>Occurs when a property value of the CellPadding changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Cells">
      <summary>Represents a two-dimensional collection of Cell objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cells.Item(System.String)">
      <summary>Gets a new cell with a specified tag, or returns null if there is no cell with the specified tag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Cells.Item(System.Int32,System.Int32)">
      <summary>Gets a new cell for the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between zero and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between zero and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column header row index is not valid; must be between zero and the total number of column header rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row header column index is not valid; must be between zero and the total number of row header columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified sheet corner row index is not valid; must be between zero and the total number of sheet corner rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified sheet corner column index is not valid; must be between zero and the total number of sheet corner columns </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Cells.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a new cell for the range of cells of the specified rows and columns.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="row2">Ending row index</param>
      <param name="column2">Ending column index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting row index is not valid; must be between zero and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting column index is not valid; must be between zero and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting column header row index is not valid; must be between zero and the total number of column header rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting row header column index is not valid; must be between zero and the total number of row header columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting sheet corner row index is not valid; must be between zero and the total number of sheet corner rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting sheet corner column index is not valid; must be between zero and the total number of sheet corner columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending row index is not valid; must be between zero and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending column index is not valid; must be between zero and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending column header row index is not valid; must be between zero and the total number of column header rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending row header column index is not valid; must be between zero and the total number of row header columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending sheet corner row index is not valid; must be between zero and the total number of sheet corner rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending sheet corner column index is not valid; must be between zero and the total number of sheet corner columns </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Cells.Parent">
      <summary>Gets the parent object that contains this collection of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Cells.Get(System.Int32,System.Int32)">
      <summary>Gets a new Cell object for the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between zero and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between zero and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between zero and the total number of column header rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between zero and the total number of row header columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Cells.Get(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a new Cell object for the range of cells of the specified rows and columns.</summary>
      <param name="row">Starting row index of range of cells</param>
      <param name="column">Starting column index of range of cells</param>
      <param name="row2">Ending row index of range of cells</param>
      <param name="column2">Ending column index of range of cells</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row or column index is less than 0 or greater than or equal to the row count or column count. </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting row index is not valid; must be between zero and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting column index is not valid; must be between zero and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting row index is not valid; must be between zero and the total number of column header rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified starting column index is not valid; must be between zero and the total number of row header columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending row index is not valid; must be between zero and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending column index is not valid; must be between zero and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending row index is not valid; must be between zero and the total number of column header rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified ending column index is not valid; must be between zero and the total number of row header columns </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellsEditorForm">
      <summary>Represents a cells editor form.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellsEditorForm.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new cells editor form for the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellsEditorForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellsEditorForm.OnApplied(System.EventArgs)">
      <summary>Fires the Applied event.</summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellsEditorForm.OnApplying(System.EventArgs)">
      <summary>Fires the Applying event.</summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellsEditorForm.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Occurs when closing.</summary>
      <param name="e">Event data</param>
    </member>
    <member name="E:FarPoint.Win.Spread.CellsEditorForm.Applied">
      <summary>Occurs when the editor has finished applying changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellsEditorForm.Applying">
      <summary>Occurs when the editor is about to begin applying changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellStyleNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.AppearanceActionBase" /> that displays the <see cref="P:FarPoint.Win.Spread.CellStyleNotify.InvalidCellStyle" /> on the validating cell if the validation fails.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellStyleNotify.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellStyleNotify" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellStyleNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellStyleNotify.InvalidCellStyle">
      <summary>Gets or sets a StyleInfo object that is used for the validating cell when the validation fails.</summary>
      <value>A StyleInfo value that is used for the validating cell when validation fails.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellStyleNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.CellStyleNotify" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.CellStyleNotify" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellStyleNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellStyleNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellStyleNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellTouchStrip">
      <summary>Represent a special <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> that pops up in the cell area.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellTouchStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.CellTouchStrip" /> instance.</summary>
      <param name="spread">The spread.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellValidateInfoNeededEventArgs">
      <summary>Provides data for the <see cref="E:FarPoint.Win.Spread.FpSpread.CellValidateInfoNeeded" /> event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellValidateInfoNeededEventArgs.CellValidator">
      <summary>Gets the cell validator.</summary>
      <value>The cell validator.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellValidateInfoNeededEventArgs.IsValid">
      <summary>Gets whether this validation is valid.</summary>
      <value>
        <see langword="true" /> if this validation is valid; otherwise, <see langword="false" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellValidateInfoNeededEventArgs.ValidateContext">
      <summary>Gets the validate context.</summary>
      <value>The validate context.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.ChangeEventArgs">
      <summary>Represents the event data for the Change event for the Spread component, which occurs when a cell changes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ChangeEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
      <summary>Creates a new object with the Change event arguments.</summary>
      <param name="view">Spreadview object that contains the cell that is changed</param>
      <param name="row">Row index of the cell that is changed</param>
      <param name="column">Column index of the cell that is changed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ChangeEventArgs.Column">
      <summary>Gets the column index of the cell that is changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ChangeEventArgs.Row">
      <summary>Gets the row index of the cell that is changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ChangeEventArgs.View">
      <summary>Gets the view that contains the cell that is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CharFormatValidator">
      <summary>Represents settings used to check if the text is in a specified format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CharFormatValidator" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CharFormatValidator.Format">
      <summary>Gets or sets the format string used for validation.</summary>
      <value>A <see cref="T:System.String" /> that indicates the format string used for validation. The default is <see cref="F:System.String.Empty" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.Clone">
      <summary>Creates an exact copy of the <see cref="T:FarPoint.Win.Spread.CharFormatValidator" /> class.</summary>
      <returns>An <see cref="T:System.Object" /> value that represents the cloned <see cref="T:FarPoint.Win.Spread.CharFormatValidator" /> class.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CharFormatValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value satisfies the condition provided in the <paramref name="context" /> parameter.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value is validated, and that contains relative context information.</param>
      <returns>
        <see langword="true" /> if the validation is successful; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ChartTouchStrip">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> which includes some common items.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ChartTouchStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.ChartTouchStrip" /> instance.</summary>
      <param name="spread">The spread.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ChildControlEventArgs">
      <summary>Represents the event data for the child control related events for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ChildControlEventArgs.#ctor(System.Windows.Forms.Control)">
      <summary>Creates a new object with the ChildControl event arguments.</summary>
      <param name="childControl">Child control</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ChildControlEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the event action.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ChildControlEventArgs.ChildControl">
      <summary>Gets the child control for the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ChildViewCreatedEventArgs">
      <summary>Represents the event data for a ChildViewCreated event for the Spread component, which occurs when a child sheet is created in a hierarchical spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ChildViewCreatedEventArgs.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new object with the ChildViewCreated event arguments.</summary>
      <param name="sheet">Child sheet (Sheetview object) being created</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ChildViewCreatedEventArgs.SheetView">
      <summary>Gets the child SheetView object being created.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs">
      <summary>Represents the event data for a ChildWorkbookCreated event for the Spread component, which occurs when a child sheet is created in a hierarchical spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView)">
      <summary>Creates a new object with the ChildWorkbookCreated event arguments.</summary>
      <param name="spreadView">Child workbook (Spreadview object) being created</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs.Workbook">
      <summary>Gets the child SpreadView object being created.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CircularFormulaEventArgs">
      <summary>Specifies EventArgs for the CircularFormula event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CircularFormulaEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CircularFormulaEventArgs" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CircularFormulaEventArgs.CircularCells">
      <summary>Specifies the circular cells.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CircularFormulaEventInfo">
      <summary>Specifies the circular cell information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CircularFormulaEventInfo.#ctor(System.Object,System.Int32,System.Int32)">
      <summary>Creates an instance of the CircularFormulaEventInfo class.</summary>
      <param name="sheet">Object that contains the circular cell</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CircularFormulaEventInfo.CellHolder">
      <summary>Specifies the model that contains the circular cell. It can be <see cref="T:FarPoint.Win.Spread.SheetView" />, <see cref="T:FarPoint.Win.Spread.RowHeader" />, <see cref="T:FarPoint.Win.Spread.ColumnHeader" />, <see cref="T:FarPoint.Win.Spread.SheetCorner" />, or <see cref="T:FarPoint.Win.Spread.ColumnFooter" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CircularFormulaEventInfo.Column">
      <summary>Specifies the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CircularFormulaEventInfo.Row">
      <summary>Specifies the row index.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardPastedEventArgs">
      <summary>Represents the event data for the ClipboardPasted event for the Spread component, which occurs after the Clipboard paste action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ClipboardPastedEventArgs.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.ClipboardPasteOptions,FarPoint.Win.Spread.Model.CellRange,System.Windows.Forms.IDataObject)">
      <summary>Creates a new ClipboardPastedEventArgs.</summary>
      <param name="sheetView">SheetView</param>
      <param name="pasteOption">ClipboardPasteOptions</param>
      <param name="cellRange">CellRange</param>
      <param name="dataObject">IDataObject</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ClipboardPastedEventArgs.CellRange">
      <summary>Gets the CellRange.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ClipboardPastedEventArgs.DataObject">
      <summary>Gets the IDataObject</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ClipboardPastedEventArgs.PasteOption">
      <summary>Gets the ClipboardPasteOptions</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ClipboardPastedEventArgs.SheetView">
      <summary>Gets the SheetView.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardPastingEventArgs">
      <summary>Represents the event data for the ClipboardPastingEvent event for the Spread component, which occurs when the user invokes the Clipboard paste action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ClipboardPastingEventArgs.#ctor">
      <summary>Creates a new object with the ClipboardPasting event arguments.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ClipboardPastingEventArgs.#ctor(FarPoint.Win.Spread.ClipboardBehavior)">
      <summary>Creates a new object with the ClipboardPasting event arguments.</summary>
      <param name="behavior">The behavior.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ClipboardPastingEventArgs.Behavior">
      <summary>Gets the behavior.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ClipboardPastingEventArgs.Handled">
      <summary>Gets or sets whether the paste was handled or the default paste action should be performed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColorFilterItem">
      <summary>Provides a ColorFilter class to filter cells using the color specified in the filter criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ColorFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.#ctor(System.Boolean,System.Drawing.Color)">
      <summary>Creates a new ColorFilter instance with a customized setting.</summary>
      <param name="filterTextColor">A boolean value that specifies the filter based on the forecolor</param>
      <param name="color">A color value that specifies the color</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.Color">
      <summary>Gets or sets the filter based on color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.FilterTextColor">
      <summary>Gets or sets whether the filter is based on the cell forecolor or backcolor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.IsObjectValueEditable">
      <summary>Gets or sets whether the object value can be edited. In the filter bar UI, the text editor is displayed if value is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.Label">
      <summary>Gets the displayed text of the filter (filter name or operator).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.ObjectValue">
      <summary>Gets or sets the text value for the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColorFilterItem.SheetView">
      <summary>Sets the SheetView object to the filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current ColorFilter object.</summary>
      <param name="obj">The System.Object to compare with the current System.Object.</param>
      <returns>true if all settings are equal; otherwise, false. The sheetview setting is not included.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Column index</param>
      <returns>An integer array of filters of filtered rows</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current <see cref="T:FarPoint.Win.Spread.ColorFilterItem" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ColorFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
      <returns>true if the name of the filter is displayed in the filter drop-down list; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Column">
      <summary>Represents a column in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.AllowAutoFilter">
      <summary>Gets or sets whether this column allows automatic filtering.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.AllowAutoSort">
      <summary>Gets or sets whether this column allows automatic sorting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.AutoFilterIndex">
      <summary>Gets or sets the automatic filter index for the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.AutoSortIndex">
      <summary>Gets or sets the automatic sort index for the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.BackColor">
      <summary>Gets or sets the default background color for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Border">
      <summary>Gets or sets the default border for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.CanFocus">
      <summary>Gets or sets whether the user can set focus to the cell using the keyboard or mouse for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.CellPadding">
      <summary>Gets or sets the amount of space, in pixels, to add to cell padding in cells of the column(s).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.CellType">
      <summary>Gets or sets the default cell type for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.DataField">
      <summary>Gets or sets the data field for this column in the data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Editor">
      <summary>Gets or sets the default editor for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Font">
      <summary>Gets or sets the default text font for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.ForeColor">
      <summary>Gets or sets the default text color for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Formatter">
      <summary>Gets or sets the default formatter for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Formula">
      <summary>Gets or sets the formula for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.HorizontalAlignment">
      <summary>Gets or sets the default horizontal alignment for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.ImeMode">
      <summary>Gets or sets the IME mode for a column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.ImeSentenceMode">
      <summary>Gets or sets the IME sentence mode for a column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Index">
      <summary>Gets the index of this column, or the starting index for this range of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Index2">
      <summary>Gets the ending index for this range of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.InputScope">
      <summary>Gets or sets the input scope for a column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Label">
      <summary>Gets or sets the header label for this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.LockBackColor">
      <summary>Gets or sets the default background color for locked's cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.LockFont">
      <summary>Gets or sets the default font for locked's cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.LockForeColor">
      <summary>Gets or sets the default forecolor for locked's cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Locked">
      <summary>Gets or sets whether cells in this column are marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.MergePolicy">
      <summary>Gets or sets whether to automatically merge adjacent identical cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.NoteIndicatorColor">
      <summary>Gets or sets the default note indicator color for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.NoteIndicatorPosition">
      <summary>Gets or sets the note indicator position for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.NoteIndicatorSize">
      <summary>Gets or sets the default note indicator size for cells in this column.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified size is out of range; width and height must be between 0 and 9,999,999 pixels </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.PageBreak">
      <summary>Gets or sets whether a page break is inserted before this column when printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Parent">
      <summary>Gets the collection of columns (Columns object) that contains this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.ParentStyleName">
      <summary>Gets or sets the name of the parent style from which style properties are inherited for this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Renderer">
      <summary>Gets or sets the default renderer for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Resizable">
      <summary>Gets or sets whether this column can be resized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.ShowSortIndicator">
      <summary>Gets or sets whether the column shows a sort indicator when automatically sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.SortIndicator">
      <summary>Gets or sets the sort indicator for this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.StyleName">
      <summary>Gets or sets the name of the custom style for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.TabStop">
      <summary>Gets or sets whether the user can set focus to cells in this column using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Tag">
      <summary>Gets or sets the application-defined tag value associated with the cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.TextIndent">
      <summary>Gets or sets the amount of space, in pixels, to indent text in cells of the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Validation">
      <summary>Gets an instance of IValidation which may be used to get and set validation properties of the rows represented by this <see cref="T:FarPoint.Win.Spread.Column" />.</summary>
      <value>The instance of IValidation which may be used to get and set validation properties of the columns.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.VerticalAlignment">
      <summary>Gets or sets the default vertical alignment for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Visible">
      <summary>Gets or sets whether this column is visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.VisualStyles">
      <summary>Gets or sets the setting of visual styles (XP themes) for the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Column.Width">
      <summary>Gets or sets the width of cells in this column.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified width is out of range; must be between -1 and 9,999,999 pixels </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.Add">
      <summary>Adds a new column or range of columns before this column or range of columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.Equals(System.Object)">
      <summary>Determines whether the specified object is equivalent to this column.</summary>
      <param name="o">Object to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.GetPreferredWidth">
      <summary>Gets the minimum width necessary to display all the text within the specified column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.Invalidate">
      <summary>Invalidates the displayed cells and sends the message to repaint them.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.Remove">
      <summary>Removes this column or range of columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetBackColor">
      <summary>Resets the background color for the column and makes the column inherit the background color from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetBorder">
      <summary>Resets the cell border for the column and makes the column inherit the cell border from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetCanFocus">
      <summary>Resets to its default value whether the cells in the column can receive focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetCellPadding">
      <summary>Resets the cell padding of the column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetCellType">
      <summary>Resets the cell type for the column and makes the column inherit the cell type from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetFont">
      <summary>Resets the font for the column and makes the column inherit the font from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetForeColor">
      <summary>Resets the foreground color for the column and makes the column inherit the foreground color from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetHorizontalAlignment">
      <summary>Resets the horizontal alignment for the column and makes the column inherit the horizontal alignment from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetImeMode">
      <summary>Resets the IME mode for the column and makes the column inherit the IME mode from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetImeSentenceMode">
      <summary>Resets the IME sentence mode for the column and makes the column inherit the IME sentence mode from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetLabel">
      <summary>Resets the label for the column and makes the column use the automatic text.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetLockBackColor">
      <summary>Resets the background color for the locked column and makes the column inherit the background color from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetLockFont">
      <summary>Resets the font for the locked column and makes the column inherit the font from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetLockForeColor">
      <summary>Resets the fore color for the locked column and makes the column inherit the fore color from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetLocked">
      <summary>Resets the locked state for the column and makes the column inherit the locked state from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetMergePolicy">
      <summary>Resets the merge policy for the column and makes the column inherit the merge policy from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetNoteIndicatorColor">
      <summary>Resets the color of the cell note indicator for the column to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetNoteIndicatorPosition">
      <summary>Resets the position of the cell note indicator for the column to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetNoteIndicatorSize">
      <summary>Resets the size of the cell note indicator for the column to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetParentStyleName">
      <summary>Resets the ParentStyleName for the column to an empty string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetResizable">
      <summary>Resets the resizability for the column and makes the column inherit the resizability from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetSortIndicator">
      <summary>Resets the sort indicator for the column and makes the column inherit the sort indicator from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetTabStop">
      <summary>Resets to its default value whether the user can set focus to the cells in this column using the Tab key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetTextIndent">
      <summary>Resets the amount of indenting of the text.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetVerticalAlignment">
      <summary>Resets the vertical alignment for the column and makes the column inherit the vertical alignment from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetVisible">
      <summary>Resets the visiblity for the column and makes the column inherit the visibility from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetVisualStyles">
      <summary>Resets the setting of visual styles (XP themes) for the column to the default setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ResetWidth">
      <summary>Resets the width for the column and makes the column inherit the width from the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ToString">
      <summary>Gets a string that contains an absolute reference to this column in the current reference style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ToString(FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets a string that contains a reference to this column in the specified reference style.</summary>
      <param name="referenceStyle">Reference style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ToString(FarPoint.Win.Spread.Column)">
      <summary>Gets a string that contains a relative reference to this column in the current reference style.</summary>
      <param name="relativeTo">Column to use for computing the relative reference</param>
      <exception cref="T:System.ArgumentNullException"> Column is not specified or is not valid; must provide a valid Column object </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Column.ToString(FarPoint.Win.Spread.Column,FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets a string that contains a relative reference to this column in the specified reference style.</summary>
      <param name="relativeTo">Column to use for computing the relative reference</param>
      <param name="referenceStyle">Reference style</param>
      <exception cref="T:System.ArgumentNullException"> Column is not specified or is not valid; must provide a valid Column object </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnClipInfo">
      <summary>Represents the information for a column (not including the value or style information).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnClipInfo.#ctor">
      <summary>Creates a new a set of column information (ColumnClipInfo object).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.AllowAutoFilter">
      <summary>Gets or sets whether the column allows automatic filtering.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.AllowAutoSort">
      <summary>Gets or sets whether the column allows automatic sorting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.AutoFilterIndex">
      <summary>Gets or sets the column header row index of the automatic filter indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.AutoSortIndex">
      <summary>Gets or sets the column header row index of the automatic sort indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Collapsed">
      <summary>Gets or sets whether the column is collapsed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.DataField">
      <summary>Gets or sets the name of the data field.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.ListBehavior">
      <summary>Gets or sets what the row filter behavior is.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.MergePolicy">
      <summary>Gets or sets the whether to automatically merge adjacent identical cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.PageBreak">
      <summary>Gets or sets whether a page break is inserted before this column when printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Resizable">
      <summary>Gets or sets whether this column can be resized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.ShowSortIndicator">
      <summary>Gets or sets whether the column shows a sort indicator when automatically sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.SortIndicator">
      <summary>Gets or sets the sort indicator of this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Visible">
      <summary>Gets or sets whether the column is visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfo.Width">
      <summary>Gets or sets the width of cells in this column.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnClipInfoRange">
      <summary>Represents a one-dimensional collection of ColumnClipInfo objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnClipInfoRange.#ctor(System.Int32)">
      <summary>Creates a ColumnClipInfo object for the specified number of columns.</summary>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfoRange.ColumnCount">
      <summary>Gets the number of columns in the one-dimensional collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnClipInfoRange.Item(System.Int32)">
      <summary>Gets or sets a ColumnClipInfo object for the specified column.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnFooter">
      <summary>Represents the column footer portion of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.AlternatingRows">
      <summary>Gets the alternating rows information for the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.Cells">
      <summary>Gets a Cells object for the cells in the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.Columns">
      <summary>Gets a Columns object for the columns in the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.DefaultStyle">
      <summary>Gets or sets the default style information for the cells in the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.DefaultStyleName">
      <summary>Gets or sets the name of the default style for the column footer.</summary>
      <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.HorizontalGridLine">
      <summary>Gets or sets the horizontal grid line in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.Name">
      <summary>Gets or sets the name of the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.RowCount">
      <summary>Gets or sets the number of rows in the column footer.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is less than 0 or greater than 256. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.Rows">
      <summary>Gets a Rows object for the rows in the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.VerticalGridLine">
      <summary>Gets or sets the vertical grid line in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnFooter.Visible">
      <summary>Gets or sets whether the column footer is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.GetAllArrayFormula(System.Int32@)">
      <summary>Get all array formula in the footer. Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the formatted text in a range.</summary>
      <param name="row">Starting column footer row index, or -1 for all column footer rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column footer rows, or -1 for all column footer rows</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the unformatted text in a range.</summary>
      <param name="row">Starting column footer row index, or -1 for all column footer rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column footer rows, or -1 for all column footer rows</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.SetAggregationFormat(System.Int32,System.Int32,System.String)">
      <summary>Sets the format for the cell with the specified row and column in the column footer.</summary>
      <param name="row">Row index of cell in column footer</param>
      <param name="column">Column index of cell in column footer</param>
      <param name="aggFormat">Format string, like String.Format requires</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.SetAggregationType(System.Int32,System.Int32,FarPoint.Win.Spread.Model.AggregationType)">
      <summary>Sets the formula for the cell of the specified row and column in the column footer.</summary>
      <param name="row">Row index of cell in column footer</param>
      <param name="column">Column index of cell in column footer</param>
      <param name="aggType">Formula type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string that contains the formatted text in a range.</summary>
      <param name="row">Starting column footer row index, or -1 for all column footer rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column footer rows, or -1 for all column footer rows (may create new column footer rows as needed)</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <param name="value">Tab-delimited string to set into the range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string that contains the unformatted text in a range.</summary>
      <param name="row">Starting column footer row index, or -1 for all column footer rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column footer rows, or -1 for all column footer rows (may create new column footer rows as needed)</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <param name="value">Tab-delimited string to set into the range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnFooter.ToString">
      <summary>Gets a string that contains a reference to the column footer (always returns null).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnHeader">
      <summary>Represents the column header portion of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.AlternatingRows">
      <summary>Gets the alternating rows information for the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoFilterIndex">
      <summary>Gets or sets which column header row displays the row filter indicator when there are multiple column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoSortIndex">
      <summary>Gets or sets which column header row displays the sort indicator when there are multiple column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoText">
      <summary>Gets or sets whether the column header displays letters or numbers or is blank.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.AutoTextIndex">
      <summary>Gets or sets which column header row displays the automatic text when there are multiple column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.Cells">
      <summary>Gets a Cells object for the cells in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.Columns">
      <summary>Gets a Columns object for the columns in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.DefaultStyle">
      <summary>Gets or sets the default style information for the cells in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.DefaultStyleName">
      <summary>Gets or sets the name of the default style for the column header.</summary>
      <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.HorizontalGridLine">
      <summary>Gets or sets the horizontal grid line in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.RowCount">
      <summary>Gets or sets the number of rows in the column header.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is less than 0 or greater than 256. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.Rows">
      <summary>Gets a Rows object for the rows in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.VerticalGridLine">
      <summary>Gets or sets the vertical grid line in the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnHeader.Visible">
      <summary>Gets or sets whether the column header is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnHeader.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the formatted text in a range.</summary>
      <param name="row">Starting column header row index, or -1 for all column header rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column header rows, or -1 for all column header rows</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnHeader.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the unformatted text in a range.</summary>
      <param name="row">Starting column header row index, or -1 for all column header rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column header rows, or -1 for all column header rows</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnHeader.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string that contains the formatted text in a range.</summary>
      <param name="row">Starting column header row index, or -1 for all column header rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column header rows, or -1 for all column header rows (may create new column header rows as needed)</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <param name="value">Tab-delimited string to set into the range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnHeader.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string that contains the unformatted text in a range.</summary>
      <param name="row">Starting column header row index, or -1 for all column header rows</param>
      <param name="column">Starting column index, or -1 for all columns</param>
      <param name="rowCount">Number of column header rows, or -1 for all column header rows (may create new column header rows as needed)</param>
      <param name="columnCount">Number of columns, or -1 for all columns</param>
      <param name="value">Tab-delimited string to set into the range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnHeader.ToString">
      <summary>Gets a string that contains a reference to the column header (always returns null).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Columns">
      <summary>Represents a one-dimensional collection of Column objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.Count">
      <summary>Gets or sets the number of columns in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.Default">
      <summary>Gets a DefaultColumn object for the default column (-1).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.Item(System.String)">
      <summary>Gets the column for the specified tag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.Item(System.Int32)">
      <summary>Gets a new column for the specified column.</summary>
      <param name="column">Index of column</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is out of range. It must be less than the column count or -1 for all. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.Item(System.Int32,System.Int32)">
      <summary>Gets a new column for the specified range of columns.</summary>
      <param name="column">Starting column index</param>
      <param name="column2">Ending column index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is out of range. It must be less than the column count or -1 for all. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.Parent">
      <summary>Gets the parent object that contains this collection of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.RangeGroupLevels">
      <summary>Gets the number of levels of columns in the outline (range group).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.Add(System.Int32,System.Int32)">
      <summary>Adds a new column or range of columns.</summary>
      <param name="index">Column index at which to start</param>
      <param name="count">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.AddRange(System.Collections.ICollection)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.AddRangeGroup(System.Int32,System.Int32)">
      <summary>Groups all the columns from the specified start index by the specified amount to an outline (range group).</summary>
      <param name="column">Starting column index</param>
      <param name="count">Number of columns to group</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.Clear">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.ExpandRangeGroup(FarPoint.Win.Spread.RangeGroupInfo,System.Boolean)">
      <summary>Expands or collapses a specified outline (range group) of columns.</summary>
      <param name="group">Outline (range group) to expand or collapse</param>
      <param name="expand">Whether the action is to expand the outline</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.Get(System.Int32)">
      <summary>Gets the specified column.</summary>
      <param name="column">Index of column</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is out of range. It must be less than -1 or greater than or equal to the column count. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.Get(System.Int32,System.Int32)">
      <summary>Gets the specified range of columns.</summary>
      <param name="column">Starting column index</param>
      <param name="column2">Ending column index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is out of range. It must be less than the column count or -1 for all. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.GetRangeGroupInfo(System.Int32)">
      <summary>Gets the outlines (range groups) by level.</summary>
      <param name="level">Level of the associated outline (range group)</param>
      <returns>The collection of groups with specified level.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.Remove(System.Int32,System.Int32)">
      <summary>Removes a column or range of columns.</summary>
      <param name="index">Column index at which to start</param>
      <param name="count">Number of columns to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.RemoveRangeGroup(System.Int32,System.Int32)">
      <summary>Removes columns from the outline (range group) starting from the specified index and count, and returns them to individual columns.</summary>
      <param name="column">Starting column index</param>
      <param name="count">Number of rows to ungroup</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Columns.DefaultColumn">
      <summary>Represents the default column in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.AllowAutoFilter">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.AllowAutoSort">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.BackColor">
      <summary>Gets or sets the default background color for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Border">
      <summary>Gets or sets the default border for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.CellType">
      <summary>Gets or sets the default cell type for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.DataField">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Editor">
      <summary>Gets or sets the default editor for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Font">
      <summary>Gets or sets the default font for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.ForeColor">
      <summary>Gets or sets the default text color for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Formatter">
      <summary>Gets or sets the default formatter for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Formula">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.HorizontalAlignment">
      <summary>Gets or sets the default horizontal alignment for cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Label">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.LockBackColor">
      <summary>Gets or sets the default background color for locked's cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.LockFont">
      <summary>Gets or sets the default font for locked's cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.LockForeColor">
      <summary>Gets or sets the default fore color for locked's cells in this column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Locked">
      <summary>Gets or sets whether cells in the default column are marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.ParentStyleName">
      <summary>Gets or sets the name of the parent style (NamedStyle) from which style properties are inherited for the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.Renderer">
      <summary>Gets or sets the default renderer for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.ShowSortIndicator">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.StyleName">
      <summary>Gets or sets the custom style (NamedStyle object) for cells in the default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Columns.DefaultColumn.VerticalAlignment">
      <summary>Gets or sets the default vertical alignment for cells in the default column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Columns.DefaultColumn.ToString">
      <summary>Gets a string that contains a reference to the default column in the current reference style.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnSparklineRenderer">
      <summary>Represents the renderer of the column sparklines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnSparklineRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ColumnSparklineRenderer" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnSparklineRenderer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ColumnSparklineRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnSparklineRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnSparklineRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnSparklineRenderer.PaintSparkline(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Sparkline)">
      <summary>Paints the sparkline.</summary>
      <param name="g">The graphics object.</param>
      <param name="rectangle">The rectangle.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnSparklineRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnTouchStrip">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> that is displayed in the column area.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnTouchStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.ColumnTouchStrip" /> instance.</summary>
      <param name="spread">The spread.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs">
      <summary>Represents the event data for the ColumnViewportWidthChanged event for the Spread component, which occurs when the width of a viewport column has changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
      <summary>Creates a new object with the ColumnViewportWidthChanged event arguments.</summary>
      <param name="view">Spreadview object</param>
      <param name="viewportIndex">Index of the viewport column that has changed</param>
      <param name="viewportWidth">Width of the viewport column that has changed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.View">
      <summary>Gets the view that contains the viewport column whose width has changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.ViewportIndex">
      <summary>Gets the index of the viewport column whose width has changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs.ViewportWidth">
      <summary>Gets the width of the viewport column whose width has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnWidthChangedEventArgs">
      <summary>Represents the event data for the ColumnWidthChanged event for the Spread component, which occurs when the width of a column has changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList,System.Boolean)">
      <summary>Creates a new object with the ColumnWidthChanged event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the columns that have changed</param>
      <param name="columnList">Array list of the columns whose widths have changed</param>
      <param name="header">Whether to include headers</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.ColumnList">
      <summary>Gets the list of columns whose widths have changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.Header">
      <summary>Gets whether the column indexes are row header columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangedEventArgs.View">
      <summary>Gets the view that contains the columns whose widths have changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnWidthChangeExtents">
      <summary>Represents an object that contains first and last columns in a contiguous selection whose widths are changing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnWidthChangeExtents.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new ColumnWidthChangeExtents object.</summary>
      <param name="firstColumn">First column of the contiguous selection</param>
      <param name="lastColumn">Last column of the contiguous selection</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangeExtents.FirstColumn">
      <summary>Gets the index of the first column in the contiguous selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangeExtents.LastColumn">
      <summary>Gets the index of the last column in the contiguous selection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnWidthChangingEventArgs">
      <summary>Represents the event data for the ColumnWidthChanging event for the Spread component, which occurs when the width of a column is changing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ColumnWidthChangingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList,System.Int32,System.Boolean)">
      <summary>Creates a new object with the ColumnWidthChanging event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the columns that have changed</param>
      <param name="columnList">Array list of the columns whose widths have changed</param>
      <param name="width">New width</param>
      <param name="header">Whether to include the header</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the column width change.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangingEventArgs.ColumnList">
      <summary>Gets the list of columns whose widths have changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangingEventArgs.Header">
      <summary>Gets whether the column indexes are row header columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangingEventArgs.View">
      <summary>Gets the view that contains the columns whose widths have changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ColumnWidthChangingEventArgs.Width">
      <summary>Gets the new width of the column.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CombinedStyleInfo">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> that combines several cell style effects to generate a new CellStyle object. This class cannot be inherited.</summary>
      <remarks>
        <para> This class allows you to combine two or more existing <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />s without having to set properties one by one. You can combine any type of <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" /> including the <see cref="T:FarPoint.Win.Spread.CombinedStyleInfo" /> itself. </para>
        <note> Be careful not to create a circular reference style or there may be unexpected results. </note>
      </remarks>
      <seealso cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.NamedAppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.#ctor(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.AppearanceStyleInfo})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> class.</summary>
      <param name="items">The intialized items.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.BackColor">
      <summary>Gets the background color for the cell.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the cell. The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.Border">
      <summary>Gets the border of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.Font">
      <summary>Gets the font of the text displayed in the cell.</summary>
      <value>The <see cref="T:System.Drawing.Font" /> to apply to the text displayed in the cell. The default is <see langword="null" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.ForeColor">
      <summary>Gets the cell foreground color.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the cell. The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</value>
      <remarks>The <b>ForeColor</b> property should specify a color that contrasts with the <see cref="P:FarPoint.Win.Spread.CombinedStyleInfo.BackColor" /> property.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.HorizontalAlignment">
      <summary>Gets the horizontal alignment of the contents of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.Items">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> collection that indicates which CellStyle object is combined.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.AppearanceStyleCollection" /> value that represents the combined CellStyle object.</value>
      <remarks>This property is used to manage a group of <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />s. Any <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" /> or <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" /> derivative type can be added to this collection. If there are multiple <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" />s' and the same property has different values, the last effective <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" /> property is used as the final property value. If a specific property value is "inherit" or "empty" in all <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" />s in the collection, the property's final value is "inherit" or "empty". If the <see cref="P:FarPoint.Win.Spread.CombinedStyleInfo.Items" /> property has no item, all property values are "inherit" or "empty".</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.TextIndent">
      <summary>Gets the text indent of the cell.</summary>
      <value>An <see cref="T:System.Int32" /> that represents the text indent of the cell. The value is in pixels. The default is -1 which means the value should be inherited.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CombinedStyleInfo.VerticalAlignment">
      <summary>Gets the vertical alignment of contents of the cell style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.GetActualStyle(FarPoint.Win.Spread.DynamicStyleInfoContext)">
      <summary>Gets the actual CellStyle</summary>
      <param name="context" />
      <returns>The actual CellStyle</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.OnDeserialization(System.Object)">
      <summary>Handles logic after completing deserialization.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CombinedStyleInfo.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the <see cref="T:FarPoint.Win.Spread.CombinedStyleInfo" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:FarPoint.Win.Spread.CombinedStyleInfo" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CompareCellValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.CompareValueBaseValidator" /> that validates whether the specified value and target <see cref="T:FarPoint.Win.Spread.Cell" />'s value meet the given comparison criteria.</summary>
      <remarks>This CellValidator compares the validated value to a specified cell's value.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareCellValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareCellValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareCellValidator.Column">
      <summary>Gets or sets the compared column's index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareCellValidator.Row">
      <summary>Gets or sets the compared row's index.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareCellValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.CompareCellValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.CompareCellValidator" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.CompareCellValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareCellValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareCellValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareCellValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CompareStringValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.CompareStringValidator" /> that validates that the specified value matches the compared string using the <see cref="T:FarPoint.Win.Spread.CompareStringValidatorOperator" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareStringValidator.ComparedOperator">
      <summary>Gets or sets the compared operator.</summary>
      <value>The compared operator. The default is <see cref="F:FarPoint.Win.Spread.CompareStringValidatorOperator.Equals" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not defined in <see cref="T:FarPoint.Win.Spread.CompareStringValidatorOperator" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareStringValidator.ComparedString">
      <summary>Gets or sets the compared string.</summary>
      <value>The compared string. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareStringValidator.ComparisonType">
      <summary>Gets or sets the culture, case, and sort rules to be used in the comparison.</summary>
      <value>A <see cref="T:System.StringComparison" /> value that specifies the culture, case, and sort rules to be used in the comparison. The default is <see cref="F:System.StringComparison.CurrentCulture" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not defined in <see cref="T:System.StringComparison" />. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.BaseDataValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.BaseDataValidator" nolink="true" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareStringValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value and compared value satisfy the given comparison relationship.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CompareValueBaseValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> implementation that validates whether the specified and compared values satisfy the given comparison relationship. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
      <remarks>Inheriting this class is not recommended.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueBaseValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueBaseValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareValueBaseValidator.ComparedOperator">
      <summary>Gets or sets a value that indicates the comparison relationship of the specified and compared values.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.ValidateComparisonOperator" /> value. The default is <see cref="F:FarPoint.Win.Spread.ValidateComparisonOperator.GreaterThan" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareValueBaseValidator.DifferenceValue">
      <summary>Gets or sets the difference between the specified and compared values.</summary>
      <value>A <see cref="T:System.Object" /> that represents the difference between the specified and compared values. The default is <see langword="null" />.</value>
      <remarks>The validated value subtracts the compared value. You can compare the result with the <see cref="P:FarPoint.Win.Spread.CompareValueBaseValidator.DifferenceValue" />.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareValueBaseValidator.NullIsValid">
      <summary>Gets or sets whether the validation always succeeds when the specified value is <see langword="null" />.</summary>
      <value>
        <see langword="true" /> if the validation always succeeds when the specified value is <see langword="null" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
      <remarks>You can determine whether validation is successful if the cell value is <see langword="null" />.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareValueBaseValidator.RequiredType">
      <summary>Gets or sets the specified value's required <see cref="T:System.Type" />.</summary>
      <value>A <see cref="T:System.Type" /> value that represents the specified value's required <see cref="T:System.Type" nolink="true" />. The default is <see langword="null" />.</value>
      <remarks>Once <see cref="P:FarPoint.Win.Spread.CompareValueBaseValidator.RequiredType" /> is set to a new value, the <see cref="P:FarPoint.Win.Spread.CompareValueBaseValidator.DifferenceValue" /> is set to <see langword="null" />.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueBaseValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueBaseValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueBaseValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueBaseValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value and compared value satisfy the given comparison relationship.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated and contains relative context information.</param>
      <returns>
        <see langword="true" /> if the specified value and compared value satisfy the given comparison relationship; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CompareValueValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.CompareValueBaseValidator" /> that validates whether the specified value and the <see cref="P:FarPoint.Win.Spread.CompareValueValidator.ComparedValue" /> meet the given comparison criteria.</summary>
      <remarks>You can subtract the validated value from <see cref="P:FarPoint.Win.Spread.CompareValueValidator.ComparedValue" /> and compare the result to <see cref="P:FarPoint.Win.Spread.CompareValueBaseValidator.DifferenceValue" />.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CompareValueValidator.ComparedValue">
      <summary>Gets or sets the compared target value.</summary>
      <value>A <see cref="T:System.Object" /> value that represents the compared target value. The default is <see langword="null" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.CompareValueValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.CompareValueValidator" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.CompareValueValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CompareValueValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ComplexSortInfo">
      <summary>Represents information related to sorting columns, rows, or a range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.#ctor(System.Int32,System.Boolean)">
      <summary>Creates a SortInfo object with the specified order and comparison done using the system default comparer.</summary>
      <param name="index">Index of the column or row on which to sort</param>
      <param name="ascending">Whether the sort order is ascending</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.#ctor(FarPoint.Win.Spread.ComplexSortInfo)">
      <summary>Creates a SortInfo object from another SortInfo object</summary>
      <param name="source">Another SortInfo object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.#ctor(System.Int32,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>Creates a ComplexSortInfo object with a specified order and comparison that is handled by the spread default color comparer.</summary>
      <param name="index">Index of the column or row on which to sort</param>
      <param name="color">Base color to compare</param>
      <param name="isForeColor">Whether the base color is the forecolor</param>
      <param name="ascending">Whether the sort order is Top sort</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.#ctor(System.Int32,FarPoint.Win.Spread.ConditionalFormattingIconSetIndex,System.Boolean)">
      <summary>Creates a ComplexSortInfo object with a specified order and comparison done by spread default icon comparer.</summary>
      <param name="index">Index of the column or row on which to sort</param>
      <param name="icon">Base icon to compare</param>
      <param name="ascending">Whether the sort order is Top sort</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.#ctor(System.Int32,FarPoint.Win.Spread.ConditionalFormattingIcon,System.Boolean)">
      <summary>Creates a ComplexSortInfo object with a specified order and comparison done by spread default icon comparer.</summary>
      <param name="index">Index of the column or row on which to sort</param>
      <param name="icon">Base icon to compare</param>
      <param name="ascending">Whether the sort order is Top sort</param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ComplexSortInfo" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ComplexSortInfo.Color">
      <summary>Gets the base color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ComplexSortInfo.Comparer">
      <summary>Not in use.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ComplexSortInfo.Icon">
      <summary>Gets the base icon.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.ComplexSortInfo.IconSetIndex">
      <summary>Gets the base icon.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ComplexSortInfo.SortBy">
      <summary>Gets the sort type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ComplexSortInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormat">
      <summary>Represents a conditional format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.#ctor">
      <summary>Creates a new conditional format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.#ctor(FarPoint.Win.Spread.NamedStyle)">
      <summary>Creates a new conditional format with the specified style.</summary>
      <param name="style">Style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.#ctor(System.String,System.String,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator)">
      <summary>Create a new ConditionalFormat object.</summary>
      <param name="firstCondition">firstCondition object</param>
      <param name="lastCondition">lastCondition object</param>
      <param name="style">style object</param>
      <param name="comparisonOperator">comparisonOperator object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new conditional format from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormat.ComparisonOperator">
      <summary>Gets or sets the comparison operator for the conditional format.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormat.FirstCondition">
      <summary>Gets or sets the first condition.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormat.FirstConditionExpression">
      <summary>Gets or sets the first condition as an expression.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormat.LastCondition">
      <summary>Gets or sets the last condition.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormat.LastConditionExpression">
      <summary>Gets or sets the last condition as an expression.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormat.Style">
      <summary>Gets or sets a style for the conditional format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.Clone">
      <summary>Creates and returns a copy of the conditional format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the conditional format object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the conditional format object to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.Serialize(System.Xml.XmlTextWriter,System.Int32,System.Int32)">
      <summary>Saves the conditional format object to XML from a specified row and column.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.ShowConditionalFormatDialog(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.ComparisonOperator,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Displays the ConditionalFormat dialog.</summary>
      <param name="parent">Parent object.</param>
      <param name="spread">Spread object.</param>
      <param name="comparisonOperator">comparisonOperator object</param>
      <param name="cellRanges">cellRanges object</param>
      <returns>Returns the ConditionalFormat form</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormat.ShowConditionalFormatDialog(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.ComparisonOperator,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Shows the ConditionalFormat dialog.</summary>
      <param name="parent">Parent object.</param>
      <param name="spread">Spread object.</param>
      <param name="comparisonOperator">comparisonOperator object</param>
      <param name="cellRange">cellRange object</param>
      <returns>Returns the ConditionalFormat form</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormatCollection">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.#ctor">
      <summary>Default Constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.#ctor(FarPoint.Win.Spread.ConditionalFormatCollection)">
      <summary>Clone Constructor.</summary>
      <param name="cfc" />
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatCollection.Item(System.Int32)">
      <summary>Gets the conditional formats (Indexer property to retrieve custom format items from the collection).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Add(FarPoint.Win.Spread.ConditionalFormat)">
      <summary>Adds a conditional format to the collection.</summary>
      <param name="conditionalFormat">Conditional format to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Add(FarPoint.Win.Spread.ConditionalFormatCollection)">
      <summary>Appends a collection of conditional formats to the collection.</summary>
      <param name="conditionalFormats">Collection of conditional formats</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Contains(System.Object)">
      <summary>Checks whether the object is in the collection.</summary>
      <param name="value">An object to be checked.</param>
      <returns>
        <b>true</b> if the object is in the collection; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XmlNodeReader.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Deserialize(System.Xml.XmlNodeReader,System.Int32,System.Int32)">
      <summary>Loads the object from XmlNodeReader.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.Serialize(System.Xml.XmlTextWriter,System.Int32,System.Int32)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatCollection.ToArray">
      <summary>Creates an array for counting through the collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormatInfo">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatInfo.#ctor">
      <summary>Creates a new ConditionalFormatInfo object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatInfo.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormatCollection)">
      <summary>Creates a new ConditionalFormatInfo object.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="conditionalFormats">conditionalFormats object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatInfo.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[])">
      <summary>Creates a new ConditionalFormatInfo object.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="conditionalFormats">conditionalFormats object</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatInfo.Column">
      <summary>Gets the Column object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatInfo.ConditionalFormat">
      <summary>Gets the ConditionalFormat object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatInfo.Row">
      <summary>Gets the Row object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormatting">
      <summary>Represents a conditional format. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.#ctor(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormatting" /> class.</summary>
      <param name="range">The range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.#ctor(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormatting" /> class.</summary>
      <param name="ranges">The ranges.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.#ctor(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormatting" /> class.</summary>
      <param name="range">The range.</param>
      <param name="rules">The rules.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.#ctor(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.Model.CellRange},FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormatting" /> class.</summary>
      <param name="ranges">The ranges.</param>
      <param name="rules">The rules.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.AverageValue">
      <summary>Gets the average value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <value>The number of elements contained in <see cref="T:System.Collections.Generic.ICollection`1" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.DoubleValues">
      <summary>Gets all values.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.IsReadOnly">
      <summary>Gets whether the <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</summary>
      <value>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.Ranges">
      <summary>Gets the ranges that the conditional formatting is applied to.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.Rules">
      <summary>Gets the rules.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.StandardDeviation">
      <summary>Gets the standard deviation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormatting.ValuesCount">
      <summary>Gets the ranges value count.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.Add(FarPoint.Win.Spread.IConditionalFormattingRule)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.AddRange(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.IConditionalFormattingRule})">
      <summary>Adds the elements of the specified IConditionalFormattingRule collection to the ConditionalFormatting object.</summary>
      <param name="collection">The collection whose elements should be added to the end of the ConditionalFormatting object. The collection itself and the elements cannot be null.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.Contains(FarPoint.Win.Spread.IConditionalFormattingRule)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> collection contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" /> object; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.CopyTo(FarPoint.Win.Spread.IConditionalFormattingRule[],System.Int32)">
      <summary>Copies the items to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from current items. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.Evaluate(System.Int32,System.Int32,System.String)">
      <summary>Evaluates the specified formula.</summary>
      <param name="row">The row of the base cell.</param>
      <param name="column">The column of the base cell.</param>
      <param name="formula">The formula.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.Evaluate(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Evaluates the specified expression.</summary>
      <param name="row">The row of the base cell.</param>
      <param name="column">The column of the base cell.</param>
      <param name="expr">The expression.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.GetValue(System.Int32)">
      <summary>Gets the value.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.NotifyFormulaChanged(System.Object,FarPoint.Win.Spread.Model.FormulaChangedType)">
      <summary>Notifies the ConditionalFormatting object that the formula in the conditional formatting rule has changed.</summary>
      <param name="sender">The sender</param>
      <param name="typeOfChange">The type of the changed formula</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormatting.Remove(FarPoint.Win.Spread.IConditionalFormattingRule)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" /> collection.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" /> object; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" nolink="true" /> object.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
    </member>
    <member name="E:FarPoint.Win.Spread.ConditionalFormatting.Changed">
      <summary>Occurs when there is a change that affects the conditional formatting.</summary>
      <remarks>This event is deprecated</remarks>
    </member>
    <member name="E:FarPoint.Win.Spread.ConditionalFormatting.ConditionalFormattingSplit">
      <summary>Occurs when the conditional formatting needs to be split due to an internal change.</summary>
      <remarks>This event is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs">
      <summary>Represents the event data for the Changed event of conditional formatting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs.#ctor(FarPoint.Win.Spread.ConditionalFormattingChangedEventType)">
      <summary>Initializes a new instance of the <see cref="!:ConditionalFormattingEventArgs" /> class.</summary>
      <param name="type">The Changed event's type.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs.#ctor(FarPoint.Win.Spread.IConditionalFormattingRule,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="!:ConditionalFormattingEventArgs" /> class. The Changed event's type is RuleChanged.</summary>
      <param name="rule">The changed rule.</param>
      <param name="isRulePriorityChanged">Indicates if the changed rule's priority has changed.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs.#ctor(FarPoint.Win.Spread.IConditionalFormattingRule,System.Boolean,FarPoint.Win.Spread.ConditionalFormattingChangedEventType)">
      <summary>Initializes a new instance of the <see cref="!:ConditionalFormattingEventArgs" /> class. The Changed event's type is RuleChanged.</summary>
      <param name="rule">The changed rule</param>
      <param name="isRulePriorityChanged">Indicates if the changed rule's priority has changed</param>
      <param name="type">A <see cref="T:FarPoint.Win.Spread.ConditionalFormattingChangedEventType" /> enumeration value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs.IsRulePriorityChanged">
      <summary>Gets if the changed rule's priority has changed when the event type is RuleChanged.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs.Rule">
      <summary>Gets the changed rule when the type of event is RuleChanged.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingChangedEventArgs.Type">
      <summary>Gets the type of Changed event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingColorValue">
      <summary>Represents a color conditional formatting value. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingColorValue.#ctor(System.Drawing.Color,System.Object,FarPoint.Win.Spread.ConditionalFormattingValueType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingColorValue" /> class.</summary>
      <param name="color">The color.</param>
      <param name="value">The value.</param>
      <param name="type">The type. Note: ConditionalFormattingColorValue accepts only Max, Min, Number, Percent, Percentile, and Formula values of ConditionalFormattingValueType.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingColorValue.Color">
      <summary>Gets or sets the color.</summary>
      <value>The color.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingColorValue.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingColorValue.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingColorValueCollection">
      <summary>Represents a collection of conditional formatting color values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingColorValueCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingColorValueCollection" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingColorValueCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingColorValueCollection" /> class.</summary>
      <param name="capacity">The capacity.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingIconRuleSet">
      <summary>Represents a set of icons which are used for an icon conditional formatting rule.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconRuleSet.IconSetStyle">
      <summary>Gets or sets the icon set style.</summary>
      <value>The icon set style.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconRuleSet.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingIconValue" /> object at the specified index.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconRuleSet.SetItem(System.Int32,FarPoint.Win.Spread.ConditionalFormattingIconValue)">
      <summary>Sets the specified ConditionalFormattingIconValue item of the ConditionalFormattingIconRuleSet object.</summary>
      <param name="index">The index of the ConditionalFormattingIconValue item</param>
      <param name="iconValue">The new ConditionalFormattingIconValue. Note: This method could cause the IconSetStyle property of this ConditionalFormattingIconRuleSet object to change to Custom.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex">
      <summary>Represents the structure that specifies an icon for conditional formatting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.#ctor(FarPoint.Win.Spread.ConditionalFormattingIconSetStyle,System.Int32)">
      <summary>Initializes a new instance of the conditional formatting icon from the icon set style and icon index in the icon set style.</summary>
      <param name="iconSetStyle">The icon set style.</param>
      <param name="index">The icon index in the icon set style.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.#ctor(System.String)">
      <summary>Initializes a new instance of the custom conditional formatting icon that is identified by the custom icon name.</summary>
      <param name="customIconName">The custom icon name.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.#ctor(FarPoint.Win.Spread.ConditionalFormattingIcon)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle" /> structure.</summary>
      <param name="icon">The conditional formatting icon</param>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.NoIcon">
      <summary>Specifies no icon.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.Icon">
      <summary>Gets the ConditionalFormattingIcon object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.IconSetStyle">
      <summary>Gets the icon set style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.Index">
      <summary>Gets the icon index in the icon set style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.IsCustomIcon">
      <summary>Indicates whether the current icon is a custom icon (not predefined icons).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.IsNoIcon">
      <summary>Indicates whether the current icon is no icon.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.Name">
      <summary>Gets the custom icon name when this icon is custom icon and is identified by the custom icon name.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.Equals(FarPoint.Win.Spread.ConditionalFormattingIconSetIndex)">
      <summary>Indicates whether the current icon is equal to another icon.</summary>
      <param name="other">An icon to compare with this icon.</param>
      <returns>true if the current icon is equal to the other icon; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.Equals(System.Object)">
      <summary>Indicates whether this icon and a specified object are equal.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>true if obj and this icon are the same type and represent the same value; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.GetPredefinedIconSet(FarPoint.Win.Spread.ConditionalFormattingIconSetStyle)">
      <summary>Gets the array of predefined icons in the icon set style.</summary>
      <param name="style">The icon set style.</param>
      <returns>The array of predefined icons in the icon set style, or empty array if the icon set style is custom.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.op_Equality(FarPoint.Win.Spread.ConditionalFormattingIconSetIndex,FarPoint.Win.Spread.ConditionalFormattingIconSetIndex)">
      <summary>Represents the equality operator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconSetIndex.op_Inequality(FarPoint.Win.Spread.ConditionalFormattingIconSetIndex,FarPoint.Win.Spread.ConditionalFormattingIconSetIndex)">
      <summary>Represents the inequality operator.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingIconValue">
      <summary>Represents a complex value of the conditional formatting icon rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.#ctor(System.Object,FarPoint.Win.Spread.ConditionalFormattingValueType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingIconValue" /> class.</summary>
      <param name="value">The value.</param>
      <param name="type">The type. Note: ConditionalFormattingIconValue accepts only Number, Percent, Percentile, and Formula values of ConditionalFormattingValueType.</param>
      <param name="isGreaterOrEquals">if set to <c>true</c> is greater or equal.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.#ctor(System.Object,FarPoint.Win.Spread.ConditionalFormattingValueType,System.Boolean,FarPoint.Win.Spread.ConditionalFormattingIcon)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingIconValue" /> class.</summary>
      <param name="value">The value.</param>
      <param name="type">The type. Note: ConditionalFormattingIconValue accepts only Number, Percent, Percentile, and Formula values of ConditionalFormattingValueType.</param>
      <param name="isGreaterOrEquals">if set to <c>true</c> is greater or equal.</param>
      <param name="icon">The icon.</param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.#ctor(System.Object,FarPoint.Win.Spread.ConditionalFormattingValueType,System.Boolean,FarPoint.Win.Spread.ConditionalFormattingIconSetIndex)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingIconValue" /> class.</summary>
      <param name="value">The value.</param>
      <param name="type">The type. Note: ConditionalFormattingIconValue accepts only Number, Percent, Percentile, and Formula values of ConditionalFormattingValueType.</param>
      <param name="isGreaterOrEquals">If set to <c>true</c> is greater or equal.</param>
      <param name="iconSetIndex">The IconSetStyle object and icon index in IconSetStyle.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.#ctor(System.Object,FarPoint.Win.Spread.ConditionalFormattingValueType,System.Boolean,FarPoint.Win.Spread.CustomImageInfo)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingIconValue" /> class.</summary>
      <param name="value">The value.</param>
      <param name="type">The type. Note: ConditionalFormattingIconValue accepts only Number, Percent, Percentile, and Formula values of ConditionalFormattingValueType.</param>
      <param name="isGreaterOrEquals">If set to <c>true</c> is greater than or equal.</param>
      <param name="customInfo">The custom image infomation.</param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingValue" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconValue.CustomIconInfo">
      <summary>Gets the custom icon information.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconValue.Icon">
      <summary>Gets the icon.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconValue.IconSetIndex">
      <summary>Gets the IconSetStyle object and icon index in IconSetStyle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingIconValue.IsGreaterOrEquals">
      <summary>Gets a value that indicates whether this instance is greater than or equal to.</summary>
      <value>
        <c>true</c> if this instance is greater than or equal to; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingIconValue.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingModel">
      <summary>Represents the conditional formatting model for a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingModel" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingModel" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModel.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <value>The number of elements contained in <see cref="T:System.Collections.Generic.ICollection`1" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModel.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</summary>
      <value>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModel.Item(System.Int32)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.ConditionalFormatting" /> object at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModel.RulePriorityChangingSuspended">
      <summary>Gets whether automatic priority changing of conditional formatting rules is suspended.</summary>
      <remarks>This API supports the Spread control infrastructure and is not intended to be used directly from your code.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Add(FarPoint.Win.Spread.ConditionalFormatting)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.AddColumns(System.Int32,System.Int32)">
      <summary>Adds columns of cells after the specified column.</summary>
      <param name="column">Column index of column after which to add columns</param>
      <param name="columnCount">Number of columns to add</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.AddRows(System.Int32,System.Int32)">
      <summary>Adds rows of cells after the specified row.</summary>
      <param name="row">Row index of row after which to add rows</param>
      <param name="rowCount">Number of rows to add</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.AdjustSplittingConditionalFormattings">
      <summary>Adjusts the ConditionalFormatting model when there are some ConditionalFormattings objects that need to be split.</summary>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all of the contents from the cells in the specified range of cells.</summary>
      <param name="row">Row index of first row in selected range</param>
      <param name="column">Column index of first column in selected range</param>
      <param name="rowCount">Number of rows in selected range</param>
      <param name="columnCount">Number of columns in selected range</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Contains(FarPoint.Win.Spread.ConditionalFormatting)">
      <summary>Determines whether <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <returns>true if <paramref name="item" /> is found in <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies a range of cells and pastes it into a range of cells at the specified location.</summary>
      <param name="fromRow">Row index from which to begin copying</param>
      <param name="fromColumn">Column index from which to begin copying</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.CopyTo(FarPoint.Win.Spread.ConditionalFormatting[],System.Int32)">
      <summary>Copies to an array.</summary>
      <param name="array">The array.</param>
      <param name="arrayIndex">Index of the array.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Find(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Finds all conditional formatting that takes effect in the specified cell range.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="rowCount">The row count.</param>
      <param name="columnCount">The column count.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.FindRules(System.Int32,System.Int32)">
      <summary>Finds all rules which take effect in the specified cell.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves a range of cells and pastes it into a range of cells at the specified location.</summary>
      <param name="fromRow">Row index from which to begin the move</param>
      <param name="fromColumn">Column index from which to begin the move</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.OnChanged(FarPoint.Win.Spread.ConditionalFormattingModelEventArgs)">
      <summary>Returns information about the event that was raised.</summary>
      <param name="e">ConditionalFormattingModelEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Remove(FarPoint.Win.Spread.ConditionalFormatting)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <returns>true if <paramref name="item" /> was successfully removed from <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" nolink="true" /> object.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> object is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes columns from the specified starting position.</summary>
      <param name="column">Column index at which to start removing columns</param>
      <param name="columnCount">Number of columns to remove</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes rows from the specified starting position.</summary>
      <param name="row">Row index at which to start removing rows</param>
      <param name="rowCount">Number of rows to remove</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.ResumeRulePriorityChanging">
      <summary>Resumes automatic priority changing of conditional formatting rules.</summary>
      <remarks>This API supports the Spread control infrastructure and is not intended to be used directly from your code.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.SuspendRulePriorityChanging">
      <summary>Suspends automatic priority changing of conditional formatting rules.</summary>
      <remarks>This API supports the Spread control infrastructure and is not intended to be used directly from your code.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps a range of cells from one specified location to another.</summary>
      <param name="fromRow">Row index from which to begin the swap</param>
      <param name="fromColumn">Column index from which to begin the swap</param>
      <param name="toRow">Row index of the destination range</param>
      <param name="toColumn">Column index of the destination range</param>
      <param name="rowCount">Number of rows to swap</param>
      <param name="columnCount">Number of columns to swap</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="E:FarPoint.Win.Spread.ConditionalFormattingModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the conditional formatting of cells of the sheet.</summary>
      <remarks>This event is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs">
      <summary>Represents the event data for the Changed event of the conditional formatting model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.#ctor(FarPoint.Win.Spread.ConditionalFormatting,FarPoint.Win.Spread.ConditionalFormattingModelEventType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs" /> class.</summary>
      <param name="conditionalFormatting">The conditional formatting.</param>
      <param name="type">The type.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormattingModelEventType,System.Collections.Generic.ICollection{FarPoint.Win.Spread.ConditionalFormatting},System.Collections.Generic.ICollection{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Creates a new Changed event arguments object for the conditional formatting model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="type">Type of change that occurred in the conditional formatting model</param>
      <param name="affectedCFs">The affected conditional formattings</param>
      <param name="affectedCellranges">The affected cell ranges</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormattingModelEventType,System.Collections.Generic.ICollection{FarPoint.Win.Spread.ConditionalFormatting},System.Collections.Generic.ICollection{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Creates a new Changed event arguments object for the conditional formatting model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="targetRow">Target row index</param>
      <param name="targetColumn">Target column index</param>
      <param name="type">Type of change that occurred in the conditional formatting model</param>
      <param name="affectedCFs">The affected conditional formattings</param>
      <param name="affectedCellranges">The affected cell ranges</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.#ctor(FarPoint.Win.Spread.ConditionalFormatting,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs" /> class.</summary>
      <param name="conditionalFormatting">The conditional formatting.</param>
      <param name="type">The type.</param>
      <param name="isAffectedLayout">Indicates if the change has affected the conditional formatting layout.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.CellRanges">
      <summary>Gets the affected cell ranges.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.Column">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.ConditionalFormattings">
      <summary>Gets the affected conditional formattings.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.IsAffectedLayout">
      <summary>Indicates if the change has affected the conditional formatting layout.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.Row">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.TargetColumn">
      <summary>Gets the target column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.TargetRow">
      <summary>Gets the target row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingModelEventArgs.Type">
      <summary>Gets the type of Change event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingRule">
      <summary>Represents the base class for conditional format rules. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingRule.ConditionalFormatting">
      <summary>Gets or sets the ConditionalFormatting object that contains this rule.</summary>
      <value>The ConditionalFormatting instance.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingRule.Priority">
      <summary>Gets or sets the priority.</summary>
      <value>The priority.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingRule.OnPropertyChanged(System.String)">
      <summary>Called when a property value changes.</summary>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingRule.OnPropertyChanged(System.String,System.Boolean)">
      <summary>Called when a property value changes.</summary>
      <param name="propertyName">Name of the property.</param>
      <param name="dataChanged">Indicates if the represented data of the conditional formatting rule has been changed</param>
    </member>
    <member name="E:FarPoint.Win.Spread.ConditionalFormattingRule.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingRulePropertyChangedEventArgs">
      <summary>Provides data for the IConditionalFormatting.PropertyChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingRulePropertyChangedEventArgs.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingRulePropertyChangedEventArgs" /> class.</summary>
      <param name="propertyName">The name of the property that changed.</param>
      <param name="dataChanged">Indicates if the represented data of the conditional formatting rule has been changed.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingRulePropertyChangedEventArgs.DataChanged">
      <summary>Gets the indicated value if the represented conditional formatting rule data has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingUtils">
      <summary>Represents the collection function used for conditional formatting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingUtils.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingUtils" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingUtils.AddConditionalFormattingRuleWithUndoAction(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.ConditionalFormatting,FarPoint.Win.Spread.IConditionalFormattingRule)">
      <summary>Adds a conditional formatting rule with an undo action to Spread.</summary>
      <param name="spread">The Spread reference</param>
      <param name="cf">The conditional formatting</param>
      <param name="rule">The conditional formatting rule</param>
      <remarks>Internal use only.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingUtils.CreateConditionalFFormattingForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.IConditionalFormattingRule)">
      <summary>Creates a conditional format using the form.</summary>
      <param name="parent">Parent form</param>
      <param name="spread">FpSpread for which the user wants to create conditional formatting</param>
      <returns>The created conditional formatting form.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingUtils.IsUsedForeColorFromConditionalFormatting(FarPoint.Win.Spread.Appearance,FarPoint.Win.Spread.ExtraRendererSettings,System.Object,System.Drawing.Color@)">
      <summary>Indicates that the conditional formatting affects the forecolor.</summary>
      <param name="appearance">The appearance.</param>
      <param name="extraRendererSettings">The extra settings.</param>
      <param name="value">The value.</param>
      <param name="foreColor">The forecolor.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingUtils.ShowConditionalFormatDialog(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,System.String,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Shows the ConditionalFormatting dialog.</summary>
      <param name="parent">Parent object.</param>
      <param name="spread">Spread object.</param>
      <param name="string">The comparisonOperator name</param>
      <param name="cellRanges">The cellRanges object</param>
      <returns>Returns the ConditionalFormat form</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingUtils.ShowConditionalFormattingManagerForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread)">
      <summary>Shows the conditional formatting form manager.</summary>
      <param name="parent">Parent form</param>
      <param name="spread">FpSpread for which the user wants to create conditional formatting</param>
      <returns>The conditional formatting manager form.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingValue">
      <summary>Represents a complex value of a conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.#ctor(System.Object,FarPoint.Win.Spread.ConditionalFormattingValueType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingValue" /> class.</summary>
      <param name="value">The value.</param>
      <param name="type">The type.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.#ctor(FarPoint.Win.Spread.ConditionalFormattingValueType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingValue" /> class.</summary>
      <param name="type">The type.</param>
      <remarks>The type parameter only accepts AutoMax, AutoMin, Max, or the Min value</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingValue" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingValue.Type">
      <summary>Gets the type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalFormattingValue.Value">
      <summary>Gets the value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.op_Equality(FarPoint.Win.Spread.ConditionalFormattingValue,FarPoint.Win.Spread.ConditionalFormattingValue)">
      <summary>Implements the operator ==.</summary>
      <param name="v1">The first value.</param>
      <param name="v2">The second value.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValue.op_Inequality(FarPoint.Win.Spread.ConditionalFormattingValue,FarPoint.Win.Spread.ConditionalFormattingValue)">
      <summary>Implements the operator !=.</summary>
      <param name="v1">The first value.</param>
      <param name="v2">The second value.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingValueCollection">
      <summary>Represents a collection of conditional formatting values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValueCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingValueCollection" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalFormattingValueCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalFormattingValueCollection" /> class.</summary>
      <param name="capacity">The capacity.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalStyleInfo">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> that can customize the style using the specified condition. This class cannot be inherited.</summary>
      <remarks>The cell can display different styles in different conditions using <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />. For example, there is a cell that displays a number. You may want the cell to have a "Red" forecolor when the cell value is negative. You can set a <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" nolink="true" /> to the cell's <see cref="!:Cell.Style" /> property. The <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" nolink="true" /> should contain a <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> whose <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" /> is <see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThan" />, whose <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" /> is 0, and whose <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> is a "Red" forecolor.</remarks>
      <seealso cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.NamedAppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.CombinedStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleItemCollection" />
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.#ctor(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.ConditionalStyleItem})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> class.</summary>
      <param name="items">The initialized items.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.BackColor">
      <summary>Gets the cell background color for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.Border">
      <summary>Gets the border of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.Font">
      <summary>Gets the font settings of the cell for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.ForeColor">
      <summary>Gets the text color of the cell for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.HorizontalAlignment">
      <summary>Gets the horizontal alignment of the contents of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.Items">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> collection that indicates the conditions used to customize the CellStyle object.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.ConditionalStyleItemCollection" /> value that represents the conditions used to customize the CellStyle object.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.TextIndent">
      <summary>Gets the amount to indent the text for the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleInfo.VerticalAlignment">
      <summary>Gets the vertical alignment of contents of the cell style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.Clone">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> that is a copy of the current <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" nolink="true" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> that is a copy of this <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" nolink="true" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.GetActualStyle(FarPoint.Win.Spread.DynamicStyleInfoContext)">
      <summary>Gets the actual CellStyle</summary>
      <param name="context" />
      <returns>The actual CellStyle</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.OnDeserialization(System.Object)">
      <summary>Handles logic after completing deserialization.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleInfo.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalStyleItem">
      <summary>Represents a condition that when matched by a <see cref="T:FarPoint.Win.Spread.Cell" />, applies the specified <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> to the <see cref="T:FarPoint.Win.Spread.Cell" nolink="true" />.</summary>
      <remarks>Different <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" />s need different numbers of operands. If the <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" nolink="true" /> needs one operand, the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" /> is used as the only operand to compare to the cell value. If the <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" nolink="true" /> needs two operands, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" nolink="true" /> and <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2" /> are used together to compare to the cell value. <para> The following list lists the operators which do not need operands. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNull" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotNull" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsEmpty" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotEmpty" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsTrue" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsFalse" /></item></list></para><para> The following list lists the operators which need one operand. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Equals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Contains" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.StartsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.EndsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsMatch" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotMatch" /></item></list></para><para> The following list lists the operators which need two operands. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Between" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotBetween" /></item></list></para></remarks>
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleItemCollection" />
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> class.</summary>
      <param name="style">A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</param>
      <param name="op">A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</param>
      <exception cref="T:System.ArgumentNullException"> The <paramref name="style" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of <paramref name="op" /> is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> class.</summary>
      <param name="style">A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</param>
      <param name="op">A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the comparison should ignore the case; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException"> The <paramref name="style" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of <paramref name="op" /> is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> class.</summary>
      <param name="style">A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</param>
      <param name="op">A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</param>
      <param name="value1">A <see cref="T:System.Object" /> that indicates the operation value when <paramref name="op" /> needs several arguments.</param>
      <exception cref="T:System.ArgumentNullException"> The <paramref name="style" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of <paramref name="op" /> is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> class.</summary>
      <param name="style">A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</param>
      <param name="op">A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</param>
      <param name="value1">A <see cref="T:System.Object" /> that indicates the operation value when <paramref name="op" /> needs several arguments.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the comparison ignores the case; otherwise, <see langword="false" /></param>
      <exception cref="T:System.ArgumentNullException"> The <paramref name="style" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of <paramref name="op" /> is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> class.</summary>
      <param name="style">A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</param>
      <param name="op">A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</param>
      <param name="value1">A <see cref="T:System.Object" /> that indicates the first operation value when <paramref name="op" /> needs several arguments.</param>
      <param name="value2">A <see cref="T:System.Object" /> that indicates the second operation value when <paramref name="op" /> needs several arguments.</param>
      <exception cref="T:System.ArgumentNullException"> The <paramref name="style" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of <paramref name="op" /> is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Object,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> class.</summary>
      <param name="style">A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</param>
      <param name="op">A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</param>
      <param name="value1">A <see cref="T:System.Object" /> that indicates the first operation value when <paramref name="op" /> needs several arguments.</param>
      <param name="value2">A <see cref="T:System.Object" /> that indicates the second operation value when <paramref name="op" /> needs several arguments.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the comparison should ignore the case; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException"> The <paramref name="style" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of <paramref name="op" /> is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle">
      <summary>Gets or sets a <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</summary>
      <value>A <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.CellStyle" /> that is applied to the <see cref="T:FarPoint.Win.Spread.Cell" /> when the condition matches.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleItem.IgnoreCase">
      <summary>Gets or sets a value that indicates whether the item to match is case insensitive.</summary>
      <value>
        <see langword="true" /> if matching is case insensitive; otherwise, <see langword="false" />. The default value is <see langword="false" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator">
      <summary>Gets or sets a value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> should match.</value>
      <remarks>Different <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" />s need different numbers of operands. If the <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" nolink="true" /> needs one operand, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" /> is used as the only operand to compare to the cell value. If the <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" nolink="true" /> needs two operands, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" nolink="true" /> and <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2" /> are used together to compare to the cell value. <para> The following list lists the operators which do not need an operand. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNull" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotNull" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsEmpty" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotEmpty" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsTrue" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsFalse" /></item></list></para><para> The following list lists the operators which need one operand. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Equals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Contains" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.StartsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.EndsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsMatch" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotMatch" /></item></list></para><para> The following list lists the operators which need two operands. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Between" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotBetween" /></item></list></para></remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The specified value of the operator is not a valid <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> value. </exception>
      <seealso cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" />
      <seealso cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2" />
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1">
      <summary>Gets or sets a value that indicates the first operation value when the operator needs several arguments.</summary>
      <value>A <see cref="T:System.Object" /> that indicates the first operation value when the operator needs several arguments.</value>
      <remarks>
        <para> If the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" /> is a monadic operator, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" /> is used as the only operand. If the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" nolink="true" /> is a dyadic operator, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" nolink="true" /> is used as the first operand and the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2" /> property value is used as the second operand. </para>
        <para> The following list lists all the monadic operators. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Equals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Contains" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.StartsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.EndsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsMatch" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotMatch" /></item></list></para>
        <para> The following list lists all the dyadic operators. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Between" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotBetween" /></item></list></para>
      </remarks>
      <seealso cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" />
      <seealso cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2" />
    </member>
    <member name="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2">
      <summary>Gets or sets a value that indicates the second operation value when the operator needs several arguments.</summary>
      <value>A <see cref="T:System.Object" /> that indicates the second operation value when the operator needs several arguments.</value>
      <remarks>
        <para> If the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" /> is a monadic operator, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" /> is used as the only operand. If the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" nolink="true" /> is a dyadic operator, <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" nolink="true" /> is used as the first operand and the <see cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value2" /> property value is used as the second operand. </para>
        <para> The following list lists all the monadic operators. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Equals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThan" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThanOrEquals" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Contains" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.StartsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.EndsWith" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsMatch" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotMatch" /></item></list></para>
        <para> The following list lists all the dyadic operators. <list type="bullet"><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.Between" /></item><item><see cref="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotBetween" /></item></list></para>
      </remarks>
      <seealso cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Operator" />
      <seealso cref="P:FarPoint.Win.Spread.ConditionalStyleItem.Value1" />
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</summary>
      <returns>A <see cref="T:System.Object" /> that is the cloned <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</returns>
      <example> The following code example shows how to implement the conditional cell style. If the value is less than 5, the cell's background is painted green, if the value is between 5 and 8, the background is yellow, if the value is greater than 8, the background is red. This code example is part of a larger example provided for the <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" /> class. <code lang="CS" source="ConditionalCellStyleDemo.cs" region="ID_001" /><code lang="VB" source="ConditionalCellStyleDemo.vb" region="ID_001" /></example>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalStyleItemCollection">
      <summary>Represents the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> collection. This class cannot be inherited.</summary>
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItemCollection.Add(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator)">
      <summary>Adds a <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> to the collection. The item is created with the specified <paramref name="cellStyle" /> and <paramref name="op" /> parameters.</summary>
      <param name="cellStyle">The <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
      <param name="op">The <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItemCollection.Add(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Object)">
      <summary>Adds a <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> to the collection. The item is created by the specified <paramref name="cellStyle" />, <paramref name="op" />, and <paramref name="value1" /> parameters.</summary>
      <param name="cellStyle">The <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
      <param name="op">The <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
      <param name="value1">The first value of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItemCollection.Add(FarPoint.Win.Spread.AppearanceStyleInfo,FarPoint.Win.Spread.ConditionalStyleOperator,System.Object,System.Object)">
      <summary>Adds a <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> to the collection. The item is created by the specified <paramref name="cellStyle" />, <paramref name="op" />, <paramref name="value1" />, and <paramref name="value2" /> parameters.</summary>
      <param name="cellStyle">The <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
      <param name="op">The <see cref="T:FarPoint.Win.Spread.ConditionalStyleOperator" /> of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
      <param name="value1">The first value of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
      <param name="value2">The second value of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ConditionalStyleItemCollection.AddRange(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.ConditionalStyleItem})">
      <summary>Adds a set of the <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />s to the current <see cref="T:FarPoint.Win.Spread.ConditionalStyleItemCollection" />.</summary>
      <param name="items">The target <see cref="T:FarPoint.Win.Spread.ConditionalStyleItem" /> collection.</param>
      <exception cref="T:System.ArgumentNullException"> One of the <paramref name="items" /> is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentException"> The <paramref name="items" /> were added to another <see cref="T:FarPoint.Win.Spread.ConditionalStyleItemCollection" />. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomFillSeriesList">
      <summary>Present Custom list for drag fill in series mode</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFillSeriesList.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.CustomFillSeriesList" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFillSeriesList.Count">
      <summary>Number list in Custom List</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFillSeriesList.AddList(System.String[])">
      <summary>Add list item to Custom List</summary>
      <param name="list" />
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFillSeriesList.GetCustomList(System.Int32)">
      <summary>Get one list at index</summary>
      <param name="index">index of list</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFillSeriesList.Remove(System.Int32)">
      <summary>Remove one list at index (User only could remove the list is not build-in)</summary>
      <param name="index">index of list</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFillSeriesList.Reset">
      <summary>Reset custom list to the default</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomFilterItem">
      <summary>Provides a CustomFilters class that groups custom filter elements together.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CustomFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.#ctor(FarPoint.Win.Spread.FilterCondition,FarPoint.Win.Spread.FilterCondition,System.Boolean)">
      <summary>Creates an instance of custom filters.</summary>
      <param name="firstCusFilter">First custom filter</param>
      <param name="secondCusFilter">Second custom filter</param>
      <param name="and">And relationship</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.And">
      <summary>Gets or sets the And relationship.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.FirstCondition">
      <summary>Gets or sets the first custom filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.IsObjectValueEditable">
      <summary>Gets or sets whether the object value can be edited. In the filter bar UI, the text editor is displayed if the value is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.Label">
      <summary>Gets the displayed text of the filter (filter name or operator).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.ObjectValue">
      <summary>Gets or sets the text value for the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.SecondCondition">
      <summary>Gets or sets the second custom filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFilterItem.SheetView">
      <summary>Sets the sheet to filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current CustomFilter object.</summary>
      <param name="obj">The System.Object to compare with the current System.Object.</param>
      <returns>true if all settings are equal; otherwise, false. The sheetview setting is not included</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Model column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:FarPoint.Win.Spread.CustomFilterItem" /> class.</summary>
      <returns>A hash code for the current <see cref="T:FarPoint.Win.Spread.CustomFilterItem" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Model column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomFocusIndicatorRenderer">
      <summary>Represents a custom renderer of the focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer for the custom focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor(System.Int32)">
      <summary>Creates a new renderer for the custom focus indicator with the specified line thickness.</summary>
      <param name="thickness">Line thickness in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor(System.Drawing.Bitmap,System.Int32)">
      <summary>Creates a new renderer for the custom focus indicator with the specified bitmap and thickness.</summary>
      <param name="bitmap">Bitmap to use for rendering</param>
      <param name="thickness">Line thickness in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.#ctor(System.Object)">
      <summary>Creates a custom focus indicator by copying another.</summary>
      <param name="cloneFrom">Object from which to copy or clone this picture</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Bitmap">
      <summary>Gets or sets the bitmap to use for rendering the custom focus indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Thickness">
      <summary>Gets or sets the thickness in pixels of the custom focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Clone">
      <summary>Creates and returns a copy of the picture.</summary>
      <returns>Copy of the picture</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
      <param name="disposing">Whether the object is disposed through the IDisposable interface (true) or finalized by the garbage collector (false)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Finalize">
      <summary>Creates a new renderer for the custom focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the custom focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomIconContainer">
      <summary>Provides an icon object container. This class cannot be inherited.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomIconContainer.Count">
      <summary>Gets the number of contained icon objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomIconContainer.Item(System.Int32)">
      <summary>Gets or sets an icon object at the specified index.</summary>
      <param name="index">Index value</param>
      <value>The icon object with the specified index</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomIconContainer.Item(System.String)">
      <summary>Gets or sets an icon object using the specified name.</summary>
      <param name="name">Name</param>
      <value>The icon object with the specified name</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomIconContainer.AddIcon(System.String,System.Drawing.Icon)">
      <summary>Adds an icon object into a container.</summary>
      <param name="name">Name of the icon object</param>
      <param name="icon">The icon object</param>
      <returns>An int32 value that specifies the index of the object in the container. Returns -1 if there is an icon with the same name already in the container; in this case, the new icon object is not added.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomIconContainer.Clear">
      <summary>Clears all icon objects from the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomIconContainer.Contains(System.String)">
      <summary>Checks whether an icon object with the specified name is in the container.</summary>
      <param name="name">Name</param>
      <returns>True if the icon object is in the container; ortherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomIconContainer.InsertIcon(System.Int32,System.String,System.Drawing.Icon)">
      <summary>Inserts an icon object into a container with the specified name at a specified index.</summary>
      <param name="index">Index at which to insert the icon object</param>
      <param name="name">Name of the icon object</param>
      <param name="icon">The icon object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomIconContainer.RemoveIcon(System.Int32)">
      <summary>Removes an icon object at the specified index.</summary>
      <param name="index">Index</param>
      <returns>True when successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomIconContainer.RemoveIcon(System.String)">
      <summary>Removes an icon object with the specified name.</summary>
      <param name="name">Name</param>
      <returns>True when successful: ortherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomImageInfo">
      <summary>Represents a complex identification for custom images. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomImageInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CustomImageInfo" /> class.</summary>
      <param name="name">Name of custom image in spread's custom image list.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomImageInfo.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CustomImageInfo" /> class.</summary>
      <param name="index">Index of custom image in spread's custom image list.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomImageInfo.Index">
      <summary>Gets an index that identifies an image in the zero based custom image list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CustomImageInfo.Name">
      <summary>Gets a name that identifies an image in the custom image list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomImageInfo.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current <see cref="T:FarPoint.Win.Spread.CustomImageInfo" /> object.</summary>
      <param name="obj">The System.Object to compare with the current <see cref="T:FarPoint.Win.Spread.CustomImageInfo" /> object.</param>
      <returns>true if the specified System.Object is equal to the current <see cref="T:FarPoint.Win.Spread.CustomImageInfo" /> object; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomImageInfo.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current System.Object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomNameChangedEventArgs">
      <summary>Represents the data for changes to the custom name.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CustomNameChangedEventArgs.#ctor(FarPoint.Win.Spread.CustomNameChangeAction)">
      <summary>Creates a new event arguments object for custom name changes.</summary>
      <param name="actionType" />
    </member>
    <member name="P:FarPoint.Win.Spread.CustomNameChangedEventArgs.ActionType">
      <summary>Gets the type of the custom name that has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DataAddNewException">
      <summary>Represents an exception that is thrown when adding AutoAddNewRow.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DataAddNewException.#ctor">
      <summary>Creates a DataAddNewException.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DataAddNewException.#ctor(System.String)">
      <summary>Creates a DataAddNewException.</summary>
      <param name="message">Exception message</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DataAddNewException.#ctor(System.String,System.Exception)">
      <summary>Creates a DataAddNewException.</summary>
      <param name="message">Exception message</param>
      <param name="inner">Inner exception message</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DataAddNewException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a DataAddNewException from SerializationInfo.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DatabarConditionalFormattingRule">
      <summary>Represents the data bar conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DatabarConditionalFormattingRule" /> class.</summary>
      <param name="suppressCustomName">
        <c>true</c> indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DatabarConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DatabarConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.AxisColor">
      <summary>Gets or sets the color of the axis.</summary>
      <value>The color of the axis.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.AxisPosition">
      <summary>Gets or sets the axis position.</summary>
      <value>The axis position.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.BorderColor">
      <summary>Gets or sets the color of the border.</summary>
      <value>The color of the border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.Direction">
      <summary>Gets or sets the direction.</summary>
      <value>The direction.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.FillColor">
      <summary>Gets or sets the color of the fill.</summary>
      <value>The color of the fill.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.Gradient">
      <summary>Gets or sets a value that indicates whether this <see cref="T:FarPoint.Win.Spread.DatabarConditionalFormattingRule" /> is a gradient.</summary>
      <value>
        <c>true</c> if gradient; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.Maximum">
      <summary>Gets or sets the maximum value. Note: The maximum value only accepts the ConditionalFormattingValue object which has a Type property of Max, AutoMax, Number, Percent, Formula, or Pecentile.</summary>
      <value>The maximum.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.Minimum">
      <summary>Gets or sets the minimum value. Note: The minimum value only accepts the ConditionalFormattingValue object which has a Type property such as Min, AutoMin, Number, Percent, Formula, or Pecentile.</summary>
      <value>The minimum.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.NegativeBorderColor">
      <summary>Gets or sets the color of the negative border.</summary>
      <value>The color of the negative border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.NegativeFillColor">
      <summary>Gets or sets the color of the negative fill.</summary>
      <value>The color of the negative fill.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.ShowBorder">
      <summary>Gets or sets whether the border should be painted.</summary>
      <value>
        <c>true</c> if the border should be painted; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.UseNegativeBorderColor">
      <summary>Gets or sets a value that indicates whether the negative border color is used to paint the border for the negative value.</summary>
      <value>
        <c>true</c> if the negative border color is used to paint the border for the negative value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DatabarConditionalFormattingRule.UseNegativeFillColor">
      <summary>Gets or sets a value that indicates whether the negative fill color is used to paint the negative value.</summary>
      <value>
        <c>true</c> if the negative fill color is used to paint the negative value; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.GetAllRules">
      <summary>Gets all rules.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.GetRuleEffectingInfo(FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Gets the information with the specified appearance settings if the conditional formatting rule is met.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DatabarConditionalFormattingRule.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface, with the specified appearance settings, if the conditional format rule is satisfied.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.DataColumnConfigureEventArgs">
      <summary>Represents the event data for the DataColumnConfigure event, which occurs when the column is being configured for data binding.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DataColumnConfigureEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32)">
      <summary>Creates a new object with the DataColumnConfigure event arguments.</summary>
      <param name="sheetView">Sheet (<see cref="T:FarPoint.Win.Spread.SheetView" /> object) that is binding to a data source</param>
      <param name="column">Index of the column that was just configured</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DataColumnConfigureEventArgs.Column">
      <summary>Gets the index of the column that was just configured.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DataColumnConfigureEventArgs.Sheet">
      <summary>Gets the sheet (SheetView object) that is binding to a data source.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DataFieldConverter">
      <summary>Represents a type converter for the data field of a column.</summary>
      <remarks>This object provides a drop-down list in the Properties window of data fields for the DataField property of a Column object.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.DataFieldConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DataFieldConverter.GetDataSource(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the data source object to display field names.</summary>
      <param name="context">Type descriptor context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the set of standard values for this type.</summary>
      <param name="context">Context information, such as column or container</param>
      <returns>Set of standard values</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines whether this object supports standard values.</summary>
      <param name="context">Context information</param>
      <returns>True if this object supports standard values; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DataValidationManager">
      <summary>Represent a data validation manager that supports data validation. This class cannot be inherited.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DataValidationManager.Count">
      <summary>internal only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DataValidationManager.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Deletes all data validations in the specified range references.</summary>
      <param name="row">Row index of start of range to clear</param>
      <param name="column">Column index of start of range to clear</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DataValidationNote">
      <summary>Class DataValidationNote</summary>
      <remarks>Internal use only</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.DataValidationNote.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DataValidationNote" /> class.</summary>
      <param name="sheetView">The sheet view.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DataValidationNote.Rectangle">
      <summary>Gets the rectangular coordinates of the element.</summary>
      <value>The rectangle.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.DataValidationNote.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint itself.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DataValidationNote.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Causes the control to repaint the pop-up comment background.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the pop-up comment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultErrorIconRenderer">
      <summary>Represents the default painter for the ErrorIcon in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultErrorIconRenderer.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.DefaultErrorIconRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultErrorIconRenderer.Dispose">
      <summary>Frees system resources consumed by the DefaultErrorIconRender.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultErrorIconRenderer.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the cell with the ErrorIcon using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultFilterItem">
      <summary>Represents the default filtering of rows based on specified criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.#ctor">
      <summary>Creates a default filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a default filter for the specified sheet.</summary>
      <param name="sheetView">SheetView object that contains the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DefaultFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultFilterItem.DisplayAtTopOfList">
      <summary>Gets whether the display name should be added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultFilterItem.FilterByString">
      <summary>Gets or sets the string by which to filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultFilterItem.SheetView">
      <summary>Sets the sheet to filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.BlanksFilterItem(System.Int32)">
      <summary>Filters item for the specified column to filter in blanks (empty cells).</summary>
      <param name="viewColumn">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Internal use only. Internal implementation of ISerializeSupport interface method.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.NonBlanksFilterItem(System.Int32)">
      <summary>Filters item for the specified column to filter in non-blanks (non-empty cells).</summary>
      <param name="viewColumn">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Internal use only. Internal implementation of ISerializeSupport interface method. Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the filter item name should be displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Column index</param>
      <param name="filteredInRowList">List</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer">
      <summary>Represents the renderer of the default focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer for the default focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.#ctor(System.Int32)">
      <summary>Creates a new renderer for the default focus indicator with the specified line thickness.</summary>
      <param name="thickness">Integer number of pixels in the thickness of the indicator line</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.Thickness">
      <summary>Gets or sets the thickness.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the default focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultGroupFooter">
      <summary>Contains the default setting for the group footer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooter.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Constructor for the DefaultGroupFooter object.</summary>
      <param name="model">Data model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a DefaultGroupFooter object from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultGroupFooter.CanSerializeXml">
      <summary>Gets whether the entire object can be saved to XML and successfully loaded again.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultGroupFooter.DataModel">
      <summary>Gets the data model of the default group footer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooter.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>True if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the DefaultGroupFooter to the SerializationInfo.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooter.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>True if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultGroupFooterCollection">
      <summary>Contains default group footers for grouping</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.#ctor(System.Int32,System.Int32)">
      <summary>Constructor of DefaultGroupFooterCollection class.</summary>
      <param name="rowCount">Number of rows of the data model that the DefaultGroupFooterCollection refers to</param>
      <param name="columnCount">Number of columns of the data model that the DefaultGroupFooterCollection refers to</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a DefaultGroupFooterCollection object from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultGroupFooterCollection.CanSerializeXml">
      <summary>Gets whether the entire object can be saved to XML and successfully loaded again.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultGroupFooterCollection.Count">
      <summary>Gets the number of items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultGroupFooterCollection.Item(System.Int32)">
      <summary>Gets the default group footer based on the index.</summary>
      <param name="columnIndex">Column index</param>
      <value>DefaultGroupFooter object</value>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.Add(System.Int32)">
      <summary>Creates a new default group footer item in the list using the column index.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.Clear">
      <summary>Clears list of default group footers.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.Contains(System.Int32)">
      <summary>Returns whether the item specified by column index is already in the list.</summary>
      <param name="columnIndex" />
      <returns>True if item specified by column index is aleady in list</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>True if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the DefaultGroupFooterCollection to the SerializationInfo object.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.Remove(System.Int32)">
      <summary>Removes the item specified by the column index.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultGroupFooterCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>True if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer">
      <summary>Represents the default painter for the indicator of a note in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="indicatorColor">Color</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultRangeGroupModel">
      <summary>Represents the relevant default information about an outline (range group) of rows and columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.#ctor">
      <summary>Creates a new default outline (range group) model.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultRangeGroupModel.COLUMNGROUP_SERIALIZATIONSTRING">
      <summary>Represents the constant serialization string for ColumnGroup. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultRangeGroupModel.ROWGROUP_SERIALIZATIONSTRING">
      <summary>Represents the constant serialization string for RowGroup. This field is constant and read-only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.AddGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Groups all the rows or columns from the specified start index by the specified amount to an outline (range group).</summary>
      <param name="startIndex">Start index</param>
      <param name="count">Number of the rows or columns to add</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or else columns)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.AddIndexes(System.Int32,System.Int32,System.Boolean)">
      <summary>Adds a specified amount of indexes starting with a specified index in an outline (range group).</summary>
      <param name="startIndex">Start index</param>
      <param name="addCount">Number of indexes to add</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.ClearRangeGroup(System.Boolean)">
      <summary>Removes all the outlines (range groups) of rows or columns.</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or else columns)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the contents of an outline (range group) from XML.</summary>
      <param name="r">XmlNodeReader from which to load the contents</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.ExpandGroup(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Expands an outline (range group) of rows or columns.</summary>
      <param name="level">Level of the outline (range group) to expand</param>
      <param name="endIndex">End index of the outline (range group) to expand</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.FindGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Finds an outline (range group) with the specified level and end index.</summary>
      <param name="level">Level of the outline (range group)</param>
      <param name="end">End index of an outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Outline (range group)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.FindGroupByIndex(System.Int32,System.Int32,System.Boolean)">
      <summary>Finds an outline (range group) with a specified level and index.</summary>
      <param name="level">Level of the outline (range group)</param>
      <param name="index">Index of the outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Outline (range group)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.GetCopy(System.Int32,System.Int32,System.Boolean)">
      <summary>Gets a copy of outlines (range groups) from the specified index with the specified count.</summary>
      <param name="startIndex">Start index</param>
      <param name="copyCount">Copy count</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Copy of the outlines (range groups)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.GetGroupLevels(System.Boolean)">
      <summary>Gets the level of an outline (range group) of rows or columns.</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the outline (range group).</summary>
      <param name="info">A System.Runtime.Serialization.SerializationInfo that holds the serialized data associated with the RangeGroupModel</param>
      <param name="context">A System.Runtime.Serialization.StreamingContext that contains the source and destination of the serialized stream associated with the RangeGroupModel</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.GetOutLineLevel(System.Boolean,System.Int32)">
      <summary>Gets the outline level of the specified index of the range row or column group.</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="index">Index of the row or column of interest</param>
      <returns>Level of the outline (range group)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.GetRangeGroupInfo(System.Int32,System.Boolean)">
      <summary>Gets an outline (range group) by level.</summary>
      <param name="level">Level used to get the associated outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Collection of outlines (range groups) with the specified level</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.IsCollapsed(System.Int32,System.Boolean)">
      <summary>Determines if a row or column belongs to any closed outline (range group). <param name="index">Row or column index</param><param name="isRowGroup">Whether the outline (range group) is of rows</param><returns>Boolean: true if the row or column belongs to a closed range group; otherwise, false</returns></summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.Move(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Moves an outline (range group) by the specified indexes.</summary>
      <param name="fromIndex">Index from which to begin the move</param>
      <param name="toIndex">Index at which to paste the range</param>
      <param name="moveCount">Number to move</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or else columns)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.PasteGroup(FarPoint.Win.Spread.RangeGroupInfo,System.Int32,System.Boolean)">
      <summary>Pastes an outline (range group) into a segment starting with the paste index.</summary>
      <param name="group">Outline (range group) to paste</param>
      <param name="pasteIndex">Index for pasting</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.RemoveGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Removes rows or columns from the outline (range group) from the specified index and count, and returns them to individual rows and columns.</summary>
      <param name="startIndex">Starting row or column index</param>
      <param name="count">Number of the rows or columns to remove</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or else columns)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.RemoveIndexes(System.Int32,System.Int32,System.Boolean)">
      <summary>Removes indexes of an outline (range group) starting with the specified index and moving up indexes below that.</summary>
      <param name="startIndex">Start index</param>
      <param name="removeCount">Number of indexes to remove</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRangeGroupModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the contents of an outline (range group) to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the RangeGroupModel contents</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.DefaultRangeGroupModel.Changed">
      <summary>Occurs when the outline (range group) model has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DefaultRangeGroupModel.Changing">
      <summary>Occurs when the outline (range group) model is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultRowFilter">
      <summary>Represents a default row filter that extends to implement the supported row filters. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.#ctor(FarPoint.Win.Spread.DefaultRowFilter)">
      <summary>Use in serialization/deserialization only</summary>
      <param name="rowFilter" />
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new default row filter for the specified sheet.</summary>
      <param name="sheetView">SheetView object that contains the sheet</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.AllString">
      <summary>Gets or sets the all filter items string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.BlanksString">
      <summary>Gets or sets the blanks (empty cells) string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.ColumnDefinitions">
      <summary>Gets the collection of filter column definitions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.DropDownBorderStyle">
      <summary>Gets or sets the style for the drop-down list of filter items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.FilterFrozenRows">
      <summary>Gets or sets whether frozen rows are filtered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.NonBlanksString">
      <summary>Gets or sets the non-blanks (non-empty cells) string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.SheetView">
      <summary>Gets or sets the sheet associated with this row filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.ShowFilterIndicator">
      <summary>Gets or sets whether the filter indicator should be displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultRowFilter.UnfilteredRows">
      <summary>Gets or sets unfiltered rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddColumn(FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Adds a filter column definition to the row filter.</summary>
      <param name="fcd">FilterColumnDefinition object that contains the filter column definition</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddColumn(System.Int32)">
      <summary>Adds a filter column definition to the row filter.</summary>
      <param name="viewColumnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddColumn(System.Int32,FarPoint.Win.Spread.FilterListBehavior)">
      <summary>Adds a filter column definition to the row filter with the specified list behavior.</summary>
      <param name="viewColumnIndex">Column index</param>
      <param name="listBehavior">FilterListBehavior object that contains the list behavior</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.AddFilteredOutRow(System.Int32)">
      <summary>Internal use only. Adds a row to the list of rows currently filtered-out by the combined settings of the filtered columns.</summary>
      <param name="rowIndex">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ClearFilteredRows">
      <summary>Internal use only. Removes all temporary filter settings, including the filtered-in list and filtered-out list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ClearFilteredRows(System.Int32)">
      <summary>Internal use only. Removes all temporary filter settings for a specified column, including the filtered-in list and the filtered-out list.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetColumnFilterBy(System.Int32)">
      <summary>Internal use only. Gets the string selected in the filter drop-down list for the specified column.</summary>
      <param name="modelColumnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetColumnFilterIndexFromColumnIndex(System.Int32)">
      <summary>Gets the column filter index from the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilterColumnDefinition(System.Int32)">
      <summary>Gets the filter column definition from the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilteredColumnIndexes">
      <summary>Gets an array of column indexes where row filters exist.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilteredInRows(System.Int32)">
      <summary>Internal use only. Gets the rows that are filtered in for the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetFilteredOutRowList">
      <summary>Internal use only. Gets the list of indexes of the filtered-out rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetIntersectedFilteredInRows">
      <summary>Internal use only. Gets the intersection of the filtered-in rows for all the filtered columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.GetIntersectedFilteredInRows(System.Int32)">
      <summary>Internal use only. Gets the intersection of the filtered-in rows for all the filtered columns except the specified column.</summary>
      <param name="modelColumnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.IsAnyFilterApplied">
      <summary>Checks whether a filter has been applied in the spread sheet.</summary>
      <returns>Returns true if a filter has been applied; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.IsFiltered(System.Int32)">
      <summary>Internal use only. Gets whether the specified column is filtered.</summary>
      <param name="modelColumn">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.IsRowFilteredOut(System.Int32)">
      <summary>Determines whether the specified row is filtered out.</summary>
      <param name="rowIndex">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves the filter column(s) to another location.</summary>
      <param name="fromRow">Row index from which to move</param>
      <param name="fromColumn">Column index from which to move</param>
      <param name="toRow">Destination row index</param>
      <param name="toColumn">Destination column index</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Internal use only. Moves the filter column(s) to another location. Intended for internal use only.</summary>
      <param name="fromRow">Row index from which to move</param>
      <param name="fromColumn">Column index from which to move</param>
      <param name="toRow">Destination row index</param>
      <param name="toColumn">Destination column index</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
      <param name="ignoreUpdate">Whether to ignore resetting the column indexes in the filter column definitions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.OnDataModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
      <summary>Occurs when the data model has changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.OnFilterColumnDefinitionCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Occurs when the filter column definition collection has changed.</summary>
      <param name="o">Object that raises the event</param>
      <param name="e">CollectionChangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.OnStyleModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
      <summary>Occurs when the style model has changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.RemoveColumn(System.Int32)">
      <summary>Removes a filter column definition from the row filter.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ResetCachedIntersectedFilteredInRowIndexes">
      <summary>Internal use only. Resets the cached intersected filtered-in row indexes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ResetFilter">
      <summary>Resets the filter settings for the entire row filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.ResetFilter(System.Int32)">
      <summary>Resets the filter settings for the specified column.</summary>
      <param name="modelColumn">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetColumnFilterBy(System.Int32,System.String)">
      <summary>Internal use only. Sets the string selected in the filter drop-down list for the specified column.</summary>
      <param name="modelColumnIndex">Column index</param>
      <param name="filterBy">Selected filter item</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetFilteredInRowList(System.Int32,System.Int32[])">
      <summary>Internal use only. Sets the list of rows currently filtered-in for a specified column containing a filter definition.</summary>
      <param name="columnIndex">Column index</param>
      <param name="rowList">List of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetIsFiltered(System.Int32,System.Boolean)">
      <summary>Internal use only. Sets whether the specified column is filtered.</summary>
      <param name="columnIndex">Column index</param>
      <param name="isFiltered">Whether the column is filtered</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultRowFilter.SetupEventHandlers">
      <summary>Internal use only. Sets up the event handlers.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultScrollBarRenderer">
      <summary>Represents the scroll bar renderer that uses the default skin.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.DefaultScrollBarRenderer" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultScrollBarRenderer.Default">
      <summary>Gets the default value of the default scroll bar renderer.</summary>
      <value>Default value of the default scroll bar renderer</value>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>New object that is a copy of this instance</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the arrow button.</summary>
      <param name="g">Graphics device interface for drawing the arrow button</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawCustomButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the custom button.</summary>
      <param name="g">Graphics device interface for drawing the custom button</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawHorizontalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal scroll box.</summary>
      <param name="g">Graphics device interface for drawing the thumb</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawHorizontalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal scroll box grip.</summary>
      <param name="g">Graphics device interface for drawing the scroll box grip</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawLeftHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the left horizontal track.</summary>
      <param name="g">Graphics device interface for drawing the track</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawLowerVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the lower vertical track.</summary>
      <param name="g">Graphics device interface for drawing the track</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawRightHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the right horizontal track.</summary>
      <param name="g">Graphics device interface for drawing the track</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawUpperVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the upper vertical track.</summary>
      <param name="g">Graphics device interface for drawing the track</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawVerticalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical scroll box.</summary>
      <param name="g">Graphics device interface for drawing the thumb</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.DrawVerticalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical scroll box grip.</summary>
      <param name="g">Graphics device interface for drawing the thumb grip</param>
      <param name="bounds">Rectangular bounds of the drawing</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>Hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultScrollBarRenderer.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultSelectionRenderer">
      <summary>Represents the default selection renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSelectionRenderer.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.DefaultSelectionRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSelectionRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSelectionRenderer.PaintSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the selection.</summary>
      <param name="g">Graphics object used to paint the rectangle</param>
      <param name="x">X-coordinate of the upper-left corner of the rectangle to paint</param>
      <param name="y">Y-coordinate of the upper-left corner of the rectangle to paint</param>
      <param name="width">Width of rectangle to paint</param>
      <param name="height">Height of rectangle to paint</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSelectionRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSelectionRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultSkins">
      <summary>Read-only collection of default (built-in) skins. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DefaultSkins" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultSkins.Skins">
      <summary>Array of SheetSkin objects that contains the built-in skins.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Classic">
      <summary>Represents the built-in skin, Classic.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Classic1">
      <summary>Represents the built-in skin, Classic1.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Classic2">
      <summary>Represents the built-in skin, Classic2.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful1">
      <summary>Represents the built-in skin, Colorful1.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful2">
      <summary>Represents the built-in skin, Colorful2.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful3">
      <summary>Represents the built-in skin, Colorful3.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful4">
      <summary>Represents the built-in skin, Colorful4.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Colorful5">
      <summary>Represents the built-in skin, Colorful5.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Count">
      <summary>Gets the number of built-in skins in the array of SheetSkin objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Default">
      <summary>Represents the skin for resetting the skin properties to the default values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Professional1">
      <summary>Represents the built-in skin, Professional1.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Professional2">
      <summary>Represents the built-in skin, Professional2.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Professional3">
      <summary>Represents the built-in skin, Professional3.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Simple1">
      <summary>Represents the built-in skin, Simple1.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Simple2">
      <summary>Represents the built-in skin, Simple2.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSkins.Simple3">
      <summary>Represents the built-in skin, Simple3.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.Contains(FarPoint.Win.Spread.SheetSkin)">
      <summary>Determines whether the collection contains the specified skin.</summary>
      <param name="skin">Skin (SheetSkin object) for which to check</param>
      <returns>True if the object is found in the collection; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.CopyTo(System.Array,System.Int32)">
      <summary>Copies skins to the specified array at the specified index.</summary>
      <param name="array">One-dimensional array into which the elements from ICollection are copied; array must have zero-based indexing</param>
      <param name="index">Zero-based index in array at which to paste skins</param>
      <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
      <exception cref="T:System.ArgumentException">Specified array is invalid; must have a rank of one</exception>
      <exception cref="T:System.ArgumentException">Specified array is invalid; must have sufficient length</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.Find(System.String)">
      <summary>Finds the built-in skin with the specified name.</summary>
      <param name="name">Name of the built-in skin to find</param>
      <returns>Built-in skin in the collection with the specified name, or null if no built-in skin is found with that name</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.GetAt(System.Int32)">
      <summary>Gets the built-in skin at the specified index.</summary>
      <param name="index">Zero-based index in array that specifies the location of the built-in (default) skin</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between zero and the total number of built-in (default) skins </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.IndexOf(FarPoint.Win.Spread.SheetSkin)">
      <summary>Returns the index of the specified built-in skin.</summary>
      <param name="skin">Name of the built-in skin for which to return the index</param>
      <returns>Index of the object in the collection, or -1 if the object is not found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.Reset(FarPoint.Win.Spread.FpSpread)">
      <summary>Resets the skin properties of the active sheet in the specified Spread component to the default values.</summary>
      <param name="spread">Spread component in which to reset the active sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.Reset(FarPoint.Win.Spread.SheetView)">
      <summary>Resets the skin properties of the specified sheet to the default values.</summary>
      <param name="sheetView">Sheet (SheetView object) in which to reset the properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSkins.Reset(System.Collections.ICollection)">
      <summary>Resets the skin properties of an array of sheets to the default values.</summary>
      <param name="sheets">Array of sheets (SheetView objects)</param>
      <exception cref="T:System.ArgumentNullException"> No sheet collection specified or specified sheet collection is null </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultSparklineContainer">
      <summary>Represents the full (concrete) implementation of the ISparklineContainer interface for a sparkline model for a sheet, which represents sparklines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DefaultSparklineContainer" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DefaultSparklineContainer" /> class.</summary>
      <param name="owner">The owner.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSparklineContainer.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <value>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSparklineContainer.IsEmpty">
      <summary>Gets a value that indicates whether this instance is empty.</summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSparklineContainer.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <value>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSparklineContainer.Item(System.Int32)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.ISparklineGroup" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSparklineContainer.Owner">
      <summary>Owner of this container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Add(FarPoint.Win.Spread.ISparklineGroup)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.AddColumns(System.Int32,System.Int32)">
      <summary>Adds columns of cells after the specified column.</summary>
      <param name="column">Column index of column after which to add columns</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.AddRows(System.Int32,System.Int32)">
      <summary>Adds rows of cells after the specified row.</summary>
      <param name="row">Row index of row after which to add rows</param>
      <param name="rowCount">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.AddSparklineToGroup(FarPoint.Win.Spread.ISparkline,FarPoint.Win.Spread.ISparklineGroup)">
      <summary>Adds the sparkline to the existing group.</summary>
      <param name="sparkline">The sparkline.</param>
      <param name="sparklineGroup">The sparkline group information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all of the contents from the cells in the specified range of cells.</summary>
      <param name="row">Row index of first row in selected range</param>
      <param name="column">Column index of first column in selected range</param>
      <param name="rowCount">Number of rows in selected range</param>
      <param name="columnCount">Number of columns in selected range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Contains(FarPoint.Win.Spread.ISparklineGroup)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies a range of cells and pastes it into a range of cells at the specified location.</summary>
      <param name="fromRow">Row index from which to begin copying</param>
      <param name="fromColumn">Column index from which to begin copying</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.CopyTo(FarPoint.Win.Spread.ISparklineGroup[],System.Int32)">
      <summary>Copies all child sparkline groups to the specified array.</summary>
      <param name="array">The array.</param>
      <param name="arrayIndex">Index of the array.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.FireChanged(System.Collections.Generic.List{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Fires the Changed event.</summary>
      <param name="updateCellRanges">The updated cell ranges.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.GetSparkline(System.Int32,System.Int32)">
      <summary>Gets the sparkline information.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.GetSparkline(System.Int32,System.Int32,FarPoint.Win.Spread.ISparklineGroup@,FarPoint.Win.Spread.ISparkline@)">
      <summary>Gets the sparkline in the specified location.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="sparklineGroup">The sparkline group information in the specified location.</param>
      <param name="sparkline">The sparkline.</param>
      <returns>true if the sparkline exists in the location.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves a range of cells and pastes it into a range of cells at the specified location.</summary>
      <param name="fromRow">Row index from which to begin the move</param>
      <param name="fromColumn">Column index from which to begin the move</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.OnChanged(FarPoint.Win.Spread.SparklineModelUpdateEventArgs)">
      <summary>Raises the <see cref="E:Changed" /> event.</summary>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.SparklineModelUpdateEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.ReloadFormula">
      <summary>Reloads the formulas.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Remove(FarPoint.Win.Spread.ISparklineGroup)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" nolink="true" />.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes columns from the specified starting position.</summary>
      <param name="column">Column index at which to start removing columns</param>
      <param name="columnCount">Number of columns to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes rows from the specified starting position.</summary>
      <param name="row">Row index at which to start removing rows</param>
      <param name="rowCount">Number of rows to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.RemoveSparkline(System.Int32,System.Int32)">
      <summary>Removes the sparkline at the specific position.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.ResumeFormulaParsing">
      <summary>Resumes formula parsing and parses all formulas set while parsing was suspended.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.SuspendFormulaParsing">
      <summary>Suspends formula parsing until the ResumeFormulaParsing method is called.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSparklineContainer.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps a range of cells from one specified location to another.</summary>
      <param name="fromRow">Row index from which to begin the swap</param>
      <param name="fromColumn">Column index from which to begin the swap</param>
      <param name="toRow">Row index of the destination range</param>
      <param name="toColumn">Column index of the destination range</param>
      <param name="rowCount">Number of rows to swap</param>
      <param name="columnCount">Number of columns to swap</param>
    </member>
    <member name="E:FarPoint.Win.Spread.DefaultSparklineContainer.Changed">
      <summary>Occurs when the sparkline group or sparkline has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultSpreadSkin">
      <summary>Contains default renderer, style setting that will be used in case spread doesn't define them This class cannot be inherited.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.ColumnFooterRenderer">
      <summary>Default Renderer for paint cells in ColumnFooter area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.ColumnHeaderRenderer">
      <summary>Default Renderer for paint cells in ColumnHeader area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.CornerRenderer">
      <summary>Default Renderer for paint cells in Corner area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.DefaultColumnFooterRowHeight">
      <summary>Gets default height of columnFooter row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.DefaultColumnHeaderRowHeight">
      <summary>Gets default height of columnHeader row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.DefaultRowHeaderColumnWidth">
      <summary>Gets default width of rowHeader column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.FooterCornerRenderer">
      <summary>Default Renderer for paint cells in ColumnFooterCorner area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.Renderer">
      <summary>Default Renderer for paint cells in viewport area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkin.RowHeaderRenderer">
      <summary>Default Renderer for paint cells in RowHeader area.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkin.Apply(FarPoint.Win.Spread.SheetView)">
      <summary>Skin does not support applying.</summary>
      <param name="sheet" />
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkin.Apply(FarPoint.Win.Spread.FpSpread)">
      <summary>Skin does not support applying.</summary>
      <param name="spread" />
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkin.GetBackColor">
      <summary>Returns backColor of Cells on viewport</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkin.GetForeColor">
      <summary>Returns foreColor of cells on viewport</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkin.GetHeaderBackColor">
      <summary>Returns BackColor of cells on header/footer</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkin.GetHeaderForeColor">
      <summary>Returns foreColor of cells on header/footer</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultSpreadSkins">
      <summary>Represents the read-only collection of default (built-in) Spread skins. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DefaultSpreadSkins" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultSpreadSkins.Skins">
      <summary>Array of Spread skins that contain the built-in skins.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.ArcticSea">
      <summary>Represents the built-in skin, ArcticSea.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Classic">
      <summary>Represents the built-in skin, Classic.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Count">
      <summary>Gets the number of built-in skins in the array of Spread skins.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Default">
      <summary>Represents the skin for resetting the skin properties to the default values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Grayscale">
      <summary>Represents the built-in skin, Grayscale.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Metallic">
      <summary>Represents the built-in skin, Metallic.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Midnight">
      <summary>Represents the built-in skin, Midnight.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Newspaper">
      <summary>Represents the built-in skin, Newspaper.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Office2007">
      <summary>Represents the skin for resetting the skin properties to the excel 2007 like values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Office2013">
      <summary>Represents the skin for resetting the skin properties to the excel 2013 like values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Office2016Colorful">
      <summary>Represents the built-in skin, Office2016 Colorful.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Office2016DarkGray">
      <summary>Represents the built-in skin, Office2016 DarkGray.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Office2016White">
      <summary>Represents the built-in skin, Office2016 White.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Pastel">
      <summary>Represents the built-in skin, Pastel.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Rose">
      <summary>Represents the built-in skin, Rose.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Sandstorm">
      <summary>Represents the built-in skin, Sandstorm.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Seashell">
      <summary>Represents the built-in skin, Seashell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Shamrock">
      <summary>Represents the built-in skin, Shamrock.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultSpreadSkins.Sunburst">
      <summary>Represents the built-in skin, Sunburst.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.Contains(FarPoint.Win.Spread.SpreadSkin)">
      <summary>Determines whether the collection contains the specified Spread skin.</summary>
      <param name="skin">Skin (SpreadSkin object) for which to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.CopyTo(System.Array,System.Int32)">
      <summary>Copies skins to the specified array at the specified index.</summary>
      <param name="array">One-dimensional array into which the elements from ICollection are copied; array must have zero-based indexing</param>
      <param name="index">Zero-based index in array at which to paste skins</param>
      <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
      <exception cref="T:System.ArgumentException">Specified array is invalid; must have a rank of one</exception>
      <exception cref="T:System.ArgumentException">Specified array is invalid; must have sufficient length</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.Find(System.String)">
      <summary>Finds the built-in Spread skin with the specified name.</summary>
      <param name="name">Name of the built-in skin to find</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.GetAt(System.Int32)">
      <summary>Gets the built-in skin at the specified index.</summary>
      <param name="index">Zero-based index in array that specifies the location of the built-in (default) skin</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between zero and the total number of built-in (default) skins </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.IndexOf(FarPoint.Win.Spread.SpreadSkin)">
      <summary>Returns the index of the specified built-in skin.</summary>
      <param name="skin">Name of the built-in skin for which to return the index</param>
      <returns>Index of the object in the collection, or -1 if the object is not found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultSpreadSkins.Reset(FarPoint.Win.Spread.FpSpread)">
      <summary>Resets the skin properties of the active sheet in the specified Spread component to the default values.</summary>
      <param name="spread">Spread component in which to reset the active sheet</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DefaultStyleCollection">
      <summary>Represents the read-only collection of default NamedStyle objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DefaultStyleCollection" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnFooterEnhanced">
      <summary>Represents the enhanced style for column footer cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnFooterFlat">
      <summary>Represents the flat style for column footer cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnFooterFlatOffice2016Colorful">
      <summary>Represents the flat style for column footer cells in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnFooterFlatOffice2016DarkGray">
      <summary>Represents the flat style for column footer cells in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnFooterFlatOffice2016White">
      <summary>Represents the flat style for column footer cells in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderArcticSea">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderDefaultEnhanced">
      <summary>Represents the new default style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderEnhanced">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderFlat">
      <summary>Represents the flat style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderFlatOffice2016Colorful">
      <summary>Represents the flat style for column header cells in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderFlatOffice2016DarkGray">
      <summary>Represents the flat style for column header cells in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderFlatOffice2016White">
      <summary>Represents the flat style for column header cells in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderGrayscale">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderMetallic">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderMidnight">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderNewspaper">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderPastel">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderRose">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderSandstorm">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderSeashell">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderShamrock">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.ColumnHeaderSunburst">
      <summary>Represents the enhanced style for column header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerArcticSea">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerDefault">
      <summary>Represents the default style for header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerDefaultEnhanced">
      <summary>Represents the new default style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerEnhanced">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerFooterDefaultEnhanced">
      <summary>Represents the new default style for corner footer cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerFooterFlat">
      <summary>Represents the flat style for corner footer cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerFooterFlatOffice2016Colorful">
      <summary>Represents the flat style for corner footer cells in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerFooterFlatOffice2016DarkGray">
      <summary>Represents the flat style for corner footer cells in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerFooterFlatOffice2016White">
      <summary>Represents the flat style for corner footer cells in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerGrayscale">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerHeaderFlat">
      <summary>Represents the flat style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerHeaderFlatOffice2016Colorful">
      <summary>Represents the flat style for corner header cells in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerHeaderFlatOffice2016DarkGray">
      <summary>Represents the flat style for corner header cells in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerHeaderFlatOffice2016White">
      <summary>Represents the flat style for corner header cells in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerMetallic">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerMidnight">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerNewspaper">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerPastel">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerRose">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerSandstorm">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerSeashell">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerShamrock">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.CornerSunburst">
      <summary>Represents the enhanced style for corner header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.DataAreaDefault">
      <summary>Represents the default style for data area cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.DataAreaGrayscale">
      <summary>Represents the data area for the Grayscale style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.DataAreaMidnight">
      <summary>Represents the data area for the Midnight style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarArcticSea">
      <summary>Represents the arctic sea style for the filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarDefault">
      <summary>Represent the default style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarDefaultEnhanced">
      <summary>Represents the new default style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarEnhanced">
      <summary>Represents the enhanced style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarFlat">
      <summary>Represents the flat style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarFlatOffice2016Colorful">
      <summary>Represents the flat style for filter bar in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarFlatOffice2016DarkGray">
      <summary>Represents the flat style for filter bar in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarFlatOffice2016White">
      <summary>Represents the flat style for filter bar in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarGrayscale">
      <summary>Represents the gray scale style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarHeaderFlat">
      <summary>Represents the flat style for FilterBar header. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarHeaderFlatOffice2016Colorful">
      <summary>Represents the flat style for FilterBar header in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarHeaderFlatOffice2016DarkGray">
      <summary>Represents the flat style for FilterBar header in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarHeaderFlatOffice2016White">
      <summary>Represents the flat style for FilterBar header in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarMetallic">
      <summary>Represents the metallic style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarMidnight">
      <summary>Represents the midnight style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarNewspaper">
      <summary>Represents the newspaper style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarPastel">
      <summary>Represents the pastel style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarRose">
      <summary>Represents the rose style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarSandstorm">
      <summary>Represents the sandstorm style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarSeashell">
      <summary>Represents the seashell style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarShamrock">
      <summary>Represents the shamrock style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.FilterBarSunburst">
      <summary>Represents the sunburst style for filter bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.HeaderDefault">
      <summary>Represents the default style for header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderArcticSea">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderDefault">
      <summary>Represents the default style for header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderDefaultEnhanced">
      <summary>Represents the new default style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderEnhanced">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderFlat">
      <summary>Represents the flat style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderFlatOffice2016Colorful">
      <summary>Represents the flat style for row header cells in Excel 2016 Colorful skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderFlatOffice2016DarkGray">
      <summary>Represents the flat style for row header cells in Excel 2016 DarkGray skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderFlatOffice2016White">
      <summary>Represents the flat style for row header cells in Excel 2016 White skin. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderGrayscale">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderMetallic">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderMidnight">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderNewspaper">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderPastel">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderRose">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderSandstorm">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderSeashell">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderShamrock">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.RowHeaderSunburst">
      <summary>Represents the enhanced style for row header cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DefaultStyleCollection.Styles">
      <summary>Represents the array of NamedStyle objects that contain the default styles. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.Count">
      <summary>Gets the number of NamedStyle objects in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.IsFixedSize">
      <summary>Gets whether the collection has a fixed size. <para>(This implementation always returns false.)</para></summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.IsReadOnly">
      <summary>Gets whether the collection is read-only. <para>(This implementation always returns true.)</para></summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.IsSynchronized">
      <summary>Gets whether access to the collection is synchronized. <para>(This implementation always returns false.)</para></summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.Item(System.Int32)">
      <summary>Gets or sets the NamedStyle object at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DefaultStyleCollection.SyncRoot">
      <summary>Gets a NamedStyleCollection object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Add(FarPoint.Win.Spread.NamedStyle)">
      <summary>Not supported; calling this method throws an exception because the collection is read-only.</summary>
      <param name="value">Style (NamedStyle object) to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Compose(System.Object,FarPoint.Win.Spread.StyleInfo)">
      <summary>Composes a style using the default styles and a specified StyleInfo object. Some styles can be ignored when composing by setting excludeInfo and excludeNs Style properties with excludeNs are ignored if they are set to excludeInfo</summary>
      <param name="o">Style (NamedStyle object, StyleInfo object, or string name)</param>
      <param name="destInfo">Destination for the composed StyleInfo object, or creates a new StyleInfo object if null</param>
      <param name="excludeInfo">The StyleInfo indicate excluded setting.</param>
      <param name="excludedNameStyle">The excluded name style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Contains(FarPoint.Win.Spread.NamedStyle)">
      <summary>Determines whether the collection contains the specified style.</summary>
      <param name="style">Style (NamedStyle object) for which to check in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the styles in the collection to a specified array at a specified location.</summary>
      <param name="array">One-dimensional array into which the elements from ICollection are copied; the array indexing must be zero-based.</param>
      <param name="index">Zero-based index in the array at which to paste the styles</param>
      <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
      <exception cref="T:System.ArgumentException">Specified array is invalid; must have a rank of one</exception>
      <exception cref="T:System.ArgumentException">Specified array is invalid; must have sufficient length</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.CopyTo(FarPoint.Win.Spread.NamedStyle[],System.Int32)">
      <summary>Copies the styles in the collection to a specified array at a specified location.</summary>
      <param name="array">One-dimensional array into which the elements from ICollection are copied; the array indexing must be zero-based.</param>
      <param name="index">Zero-based index in the array at which to paste the styles</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Find(System.String)">
      <summary>Finds a style with the specified name in the collection.</summary>
      <param name="name">Style (NamedStyle object) to find</param>
      <returns>Style (NamedStyle object) in the collection with the specified name, or null if no NamedStyle is found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.GetEnumerator">
      <summary>Gets an IEnumerator object for enumerating through the NamedStyle objects in the collection.</summary>
      <returns>IEnumerator object for enumerating the styles in the collection</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.IndexOf(FarPoint.Win.Spread.NamedStyle)">
      <summary>Returns the index of the specified NamedStyle object.</summary>
      <param name="style">Style (NamedStyle object) for which to search</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Insert(System.Int32,FarPoint.Win.Spread.NamedStyle)">
      <summary>Not supported; calling this method throws an exception because the collection is read-only.</summary>
      <param name="index">Index at which to insert the style</param>
      <param name="style">Style (NamedStyle object) to insert in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DefaultStyleCollection.Remove(FarPoint.Win.Spread.NamedStyle)">
      <summary>Not supported; calling this method throws an exception because the collection is read-only.</summary>
      <param name="style">Style (NamedStyle object) to remove from the collection</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DialogCharEventArgs">
      <summary>Represents the event data for the DialogChar event of a Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DialogCharEventArgs.#ctor(System.Char,System.Boolean)">
      <summary>Creates a new instance of the DialogCharEventAgrs class.</summary>
      <param name="charCode">Character to process</param>
      <param name="handled">Whether the event was handled</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogCharEventArgs.CharCode">
      <summary>Gets the character corresponding to the key the user pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogCharEventArgs.Handled">
      <summary>Gets or sets whether the event was handled.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DialogKeyEventArgs">
      <summary>Represents the event data for the DialogKey event of a Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DialogKeyEventArgs.#ctor(System.Windows.Forms.Keys,System.Boolean)">
      <summary>Creates a new instance of the DialogKeyEvents class.</summary>
      <param name="keyData">Key data for the key the user pressed</param>
      <param name="handled">Whether the event was handled</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.Alt">
      <summary>Gets whether the Alt key was pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.Control">
      <summary>Gets whether the Ctrl key was pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.Handled">
      <summary>Gets or sets whether the event was handled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.KeyCode">
      <summary>Gets the key code for the key the user pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.KeyData">
      <summary>Gets the key data for the key the user pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.Modifiers">
      <summary>Gets which combination of Ctrl, Shift, and Alt keys is pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DialogKeyEventArgs.Shift">
      <summary>Gets whether the Shift key was pressed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DocumentPropertiesForm.#ctor(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>Initializes a new DocumentPropertiesForm. From <see cref="T:FarPoint.Win.Spread.DocumentPropertiesForm" /> class.</summary>
      <param name="workbook">The workbook.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DocumentPropertiesForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs">
      <summary>Represents the event data for the DragDropBlockCompleted event for the Spread component, which occurs when the dragging and dropping of a range of cells is completed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
      <summary>Creates a new object with the DragDropBlockCompleted event arguments.</summary>
      <param name="view">View from which to make a selection</param>
      <param name="rowBegin">Row index of the top left cell of the source range</param>
      <param name="columnBegin">Column index of the top left cell of the source range</param>
      <param name="rowEnd">Row index of the bottom right cell of the source range</param>
      <param name="columnEnd">Column index of the bottom right cell of the source range</param>
      <param name="destRowBegin">Row index of the top left cell of the destination range</param>
      <param name="destColumnBegin">Column index of the top left cell of the destination range</param>
      <param name="destRowEnd">Row index of the bottom right cell of the destination range</param>
      <param name="destColumnEnd">Column index of the bottom right cell of the destination range</param>
      <param name="overwrite">Whether the destination range contains data</param>
      <param name="action">Whether the source range is copied or moved</param>
      <param name="dataOnly">Whether data or formatting (or both) is copied or moved</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.Action">
      <summary>Gets whether the source range is copied or moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.ColumnBegin">
      <summary>Gets the column index of the top left cell of the source range (being dragged).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.ColumnEnd">
      <summary>Gets the column index of the bottom right cell of the source range (being dragged).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DataOnly">
      <summary>Gets whether data or formatting (or both) is copied or moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationColumnBegin">
      <summary>Gets the column index of the top left cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationColumnEnd">
      <summary>Gets the column index of the bottom right cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationRowBegin">
      <summary>Gets the row index of the top left cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.DestinationRowEnd">
      <summary>Gets the row index of the bottom right cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.Overwrite">
      <summary>Gets whether the destination range contains data (that is overwritten).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.RowBegin">
      <summary>Gets the row index of the top left cell of the source range (being dragged).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockCompletedEventArgs.RowEnd">
      <summary>Gets the row index of the bottom right cell of the source range (being dragged).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DragDropBlockEventArgs">
      <summary>Represents the event data for the DragDropBlock event for the Spread component, which occurs when a range of cells is being dragged and dropped.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DragDropBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
      <summary>Creates a new object with the DragDropBlock event arguments.</summary>
      <param name="view">View from which to make a selection</param>
      <param name="rowBegin">Row index of the top left cell of the source range</param>
      <param name="columnBegin">Column index of the top left cell of the source range</param>
      <param name="rowEnd">Row index of the bottom right cell of the source range</param>
      <param name="columnEnd">Column index of the bottom right cell of the source range</param>
      <param name="destRowBegin">Row index of the top left cell of the destination range</param>
      <param name="destColumnBegin">Column index of the top left cell of the destination range</param>
      <param name="destRowEnd">Row index of the bottom right cell of the destination range</param>
      <param name="destColumnEnd">Column index of the bottom right cell of the destination range</param>
      <param name="overwrite">Whether the destination range contains data</param>
      <param name="action">Whether the source range is copied or moved</param>
      <param name="dataOnly">Whether data or formatting (or both) is copied or moved</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DragDropBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the DragDropBlock event arguments.</summary>
      <param name="view">View from which to make a selection</param>
      <param name="rowBegin">Row index of the top left cell of the source range</param>
      <param name="columnBegin">Column index of the top left cell of the source range</param>
      <param name="rowEnd">Row index of the bottom right cell of the source range</param>
      <param name="columnEnd">Column index of the bottom right cell of the source range</param>
      <param name="destRowBegin">Row index of the top left cell of the destination range</param>
      <param name="destColumnBegin">Column index of the top left cell of the destination range</param>
      <param name="destRowEnd">Row index of the bottom right cell of the destination range</param>
      <param name="destColumnEnd">Column index of the bottom right cell of the destination range</param>
      <param name="overwrite">Whether the destination range contains data</param>
      <param name="action">Whether the source range is copied or moved</param>
      <param name="dataOnly">Whether data or formatting (or both) is copied or moved</param>
      <param name="cancel">Whether the copying or moving of data is cancelled</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.Action">
      <summary>Gets or sets whether the source range is copied or moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.Cancel">
      <summary>Gets or sets whether the copying or moving of data is cancelled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.ColumnBegin">
      <summary>Gets the column index of the top left cell of the source range (being dragged).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.ColumnEnd">
      <summary>Gets the column index of the bottom right cell of the source range (being dragged).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DataOnly">
      <summary>Gets or sets whether data or formatting (or both) is copied or moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationColumnBegin">
      <summary>Gets the column index of the top left cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationColumnEnd">
      <summary>Gets the column index of the bottom right cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationRowBegin">
      <summary>Gets the row index of the top left cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.DestinationRowEnd">
      <summary>Gets the row index of the bottom right cell of the destination range (where selection is dropped).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.Overwrite">
      <summary>Gets whether the destination range contains data (that is overwritten).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.RowBegin">
      <summary>Gets the row index of the top left cell of the source range (being dragged).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragDropBlockEventArgs.RowEnd">
      <summary>Gets the row index of the bottom right cell of the source range (being dragged).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs">
      <summary>Represents the event data for the DragFillBlockCompleted event for the Spread component, which occurs when the dragging and filling of a range of cells is completed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean)">
      <summary>Creates a new object with the DragDropBlockCompleted event arguments.</summary>
      <param name="view">View from which to make a selection</param>
      <param name="rowBegin">Row index of the top left cell of the range being used for the fill</param>
      <param name="columnBegin">Column index of the top left cell of the range being used for the fill</param>
      <param name="rowEnd">Row index of the bottom right cell of the range being used for the fill</param>
      <param name="columnEnd">Column index of the bottom right cell of the range being used for the fill</param>
      <param name="numberToCopy">Number of rows or columns being filled</param>
      <param name="direction">Direction of the fill</param>
      <param name="dataOnly">Whether only data is used</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.ColumnBegin">
      <summary>Gets the column index of the top left cell of the range being used for the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.ColumnEnd">
      <summary>Gets the column index of the bottom right cell of the range being used for the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.DataOnly">
      <summary>Gets whether only data is used.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.Direction">
      <summary>Gets the direction of the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.NumberToCopy">
      <summary>Gets the number of rows or columns being filled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.RowBegin">
      <summary>Gets the row index of the top left cell of the range being used for the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockCompletedEventArgs.RowEnd">
      <summary>Gets the row index of the bottom right cell of the range being used for the fill.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DragFillBlockEventArgs">
      <summary>Represents the event data for the DragFillBlock event for the Spread component, which occurs when the range of cells is being dragged and filled.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DragFillBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean)">
      <summary>Creates a new object with the DragFillBlock event arguments.</summary>
      <param name="view">View from which to make a selection</param>
      <param name="rowBegin">Row index of the top left cell of the range being used for the fill</param>
      <param name="columnBegin">Column index of the top left cell of the range being used for the fill</param>
      <param name="rowEnd">Row index of the bottom right cell of the range being used for the fill</param>
      <param name="columnEnd">Column index of the bottom right cell of the range being used for the fill</param>
      <param name="numberToCopy">Number of rows or columns being filled</param>
      <param name="direction">Direction of the fill</param>
      <param name="dataOnly">Data only flag</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DragFillBlockEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the DragFillBlock event arguments.</summary>
      <param name="view">View from which to make a selection</param>
      <param name="rowBegin">Row index of the top left cell of the range being used for the fill</param>
      <param name="columnBegin">Column index of the top left cell of the range being used for the fill</param>
      <param name="rowEnd">Row index of the bottom right cell of the block range used for the fill</param>
      <param name="columnEnd">Column index of the bottom right cell of the range being used for the fill</param>
      <param name="numberToCopy">Number of rows or columns being filled</param>
      <param name="direction">Direction of the fill</param>
      <param name="dataOnly">Data only flag</param>
      <param name="cancel">Whether to cancel the fill</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.ColumnBegin">
      <summary>Gets the column index of the top left cell of the range being used for the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.ColumnEnd">
      <summary>Gets the column index of the bottom right cell of the range being used for the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.DataOnly">
      <summary>Gets the data only flag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.Direction">
      <summary>Gets the direction of the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.NumberToCopy">
      <summary>Gets the number of rows or columns being filled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.RowBegin">
      <summary>Gets the row index of the top left cell of the range being used for the fill.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragFillBlockEventArgs.RowEnd">
      <summary>Gets the row index of the bottom right cell of the range being used for the fill.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DragMoveCompletedEventArgs">
      <summary>Represents the event data for the ColumnDragMoveCompleted and RowDragMoveCompleted event for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DragMoveCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new object with the DragMoveCompleted event arguments.</summary>
      <param name="view">SpreadView view</param>
      <param name="fromIndex">Column or row index of the starting location of the drag</param>
      <param name="count">Number of columns or rows</param>
      <param name="toIndex">Column or row index of the destination of the drag</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DragMoveCompletedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
      <summary>Creates a new object with the DragMoveCompleted event arguments.</summary>
      <param name="view">SpreadView view</param>
      <param name="fromIndex">Column or row index of starting place of the drag</param>
      <param name="toIndex">Column or row index of the destination of the drag</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.Count">
      <summary>Gets the number of columns or rows being moved.</summary>
      <value>The number of columns or rows being moved</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.FromIndex">
      <summary>Gets the column or row index of the start location of the drag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.ToIndex">
      <summary>Gets the column or row index of the destination of the drag</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveCompletedEventArgs.View">
      <summary>Gets the view in which the columns or row have been dragged.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DragMoveEventArgs">
      <summary>Represents the event data for the ColumnDragMove and RowDragMove events for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DragMoveEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the DragMove event arguments.</summary>
      <param name="view">SpreadView view</param>
      <param name="index">Column or row index of the drag</param>
      <param name="moveContent">Whether to move content in models without re-mapping the indexes</param>
      <param name="cancel">Whether to cancel the drag operation</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DragMoveEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the DragMove event arguments.</summary>
      <param name="view">SpreadView view</param>
      <param name="index">Column or row index of the drag</param>
      <param name="count">Number of columns or rows being moved</param>
      <param name="moveContent">Whether to move content in models without re-mapping the indexes</param>
      <param name="cancel">Whether to cancel the drag operation</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the drag operation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.Count">
      <summary>Gets the number of columns or rows to move.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.Index">
      <summary>Gets the column or row index of the drag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.MoveContent">
      <summary>Gets or sets whether the move operation moves the contents of the rows or columns (and rows or columns in between) without changing the index mapping.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DragMoveEventArgs.View">
      <summary>Gets the view in which the columns or row are being dragged.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DynamicFilterItem">
      <summary>Provides a DynamicFilter class to filter cells based on a set of built-in definitions due to DynamicFilterType.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DynamicFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.#ctor(FarPoint.Win.Spread.DynamicFilterType)">
      <summary>Creates a dynamic filter instance with customized settings.</summary>
      <param name="dynamicFilterType" />
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.IsObjectValueEditable">
      <summary>Gets or sets whether the object value can be edited. In the filter bar UI, the text editor is displayed if value is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.Label">
      <summary>Gets the displayed text of the filter (filter name or operator).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.ObjectValue">
      <summary>Gets or sets the text value for the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.SheetView">
      <summary>Sets the sheet to filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicFilterItem.Type">
      <summary>Gets or sets the dynamic filter type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current DynamicFilter object.</summary>
      <param name="obj">The System.Object to compare with the current System.Object.</param>
      <returns>true if all settings are equal; otherwise, false. The sheetview setting is not included</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Model column index</param>
      <returns>An integer array of filters of filtered rows</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:FarPoint.Win.Spread.DynamicFilterItem" /> class.</summary>
      <returns>A hash code for the current <see cref="T:FarPoint.Win.Spread.DynamicFilterItem" /> object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Model column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
      <returns>true if the name of the filter is displayed in the filter drop-down list; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DynamicStyleInfo">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> that is used to customize a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" /> under the <see cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" /> class.</summary>
      <remarks>This <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> allows you to customize a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> dynamically. You can attach a <see cref="P:FarPoint.Win.Spread.DynamicStyleInfo.ConditionHandler" /> event handling method, and return a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" nolink="true" /> with the given <see cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" />.</remarks>
      <seealso cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicCellStyleConditionHandler" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" />
      <seealso cref="T:FarPoint.Win.Spread.NamedAppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.CombinedStyleInfo" />
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.#ctor(FarPoint.Win.Spread.DynamicCellStyleConditionHandler)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> class.</summary>
      <param name="condition">A <see cref="T:FarPoint.Win.Spread.DynamicCellStyleConditionHandler" /> delegate that returns the actual <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />. instance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.BackColor">
      <summary>Gets the background color for the <see cref="!:GcMultiRow" /> cell.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the <see cref="!:GcMultiRow" /> cell. The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.Border">
      <summary>Gets the border of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.ConditionHandler">
      <summary>Gets or sets a condition handler that generates an actual <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> object.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.DynamicCellStyleConditionHandler" /> delegate that returns an actual <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> object.</value>
      <remarks>You can attach the <see cref="P:FarPoint.Win.Spread.DynamicStyleInfo.ConditionHandler" /> event handling method, and return a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> with the given <see cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" />.</remarks>
      <seealso cref="T:FarPoint.Win.Spread.DynamicCellStyleConditionHandler" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" />
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.Font">
      <summary>Gets the font of the text displayed by the <see cref="!:GcMultiRow" /> cell.</summary>
      <value>The <see cref="T:System.Drawing.Font" /> applied to the text displayed by the <see cref="!:GcMultiRow" /> cell. The default is <see langword="null" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.ForeColor">
      <summary>Gets the foreground color of the <see cref="!:GcMultiRow" /> cell.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the <see cref="!:GcMultiRow" /> cell. The default is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</value>
      <remarks>The <b>ForeColor</b> property typically specifies a color that contrasts with the <see cref="P:FarPoint.Win.Spread.DynamicStyleInfo.BackColor" /> property.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.HorizontalAlignment">
      <summary>Gets the horizontal alignment of the contents of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.TextIndent">
      <summary>Gets the text indent of the <see cref="!:GcMultiRow" /> cell.</summary>
      <value>An <see cref="T:System.Int32" /> that represents the text indent of the <see cref="!:GcMultiRow" /> cell. The value is in pixels. The default is -1 which means the value should be inherited.</value>
      <remarks>
        <list type="table">
          <listheader>
            <term>
              <b>Note:</b>
            </term>
          </listheader>
          <item>
            <term> This property only takes effect when the <see cref="!:AppearanceStyleInfo.TextAdjustment" /> property value is <see cref="!:TextAdjustment.Near" /> or <see cref="!:TextAdjustment.Far" />. The indent is before the text when <b>TextAdjustment</b> is <b>Near</b> and after the text when <b>TextAdjustment</b> is <b>Far</b>. </term>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfo.VerticalAlignment">
      <summary>Gets the vertical alignment of contents of the cell style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.Clone">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> that is a copy of the current <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" nolink="true" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> that is a copy of this <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" nolink="true" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfo.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DynamicStyleInfoContext">
      <summary>Provides context information for customizing a <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> object.</summary>
      <seealso cref="T:FarPoint.Win.Spread.DynamicStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicCellStyleConditionHandler" />
    </member>
    <member name="M:FarPoint.Win.Spread.DynamicStyleInfoContext.#ctor(FarPoint.Win.Spread.FpSpread,System.Object)">
      <summary>Initialize a new context</summary>
      <param name="fpspread" />
      <param name="value" />
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfoContext.Spread">
      <summary>Gets the FpSpread instance</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DynamicStyleInfoContext.Value">
      <summary>Gets the current value of the context</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EditErrorEventArgs">
      <summary>Represents the event data for the EditError event for the Spread component, which occurs when errors are generated when using the editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EditErrorEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.EditError,System.Int32,System.Int32)">
      <summary>Creates a new object with the EditError event arguments.</summary>
      <param name="view">View that contains the cell with the editor that raised the event</param>
      <param name="editError">Type of edit error</param>
      <param name="row">Row index of the cell with the editor that raised the event</param>
      <param name="column">Column index of the cell with the editor that raised the event</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.Column">
      <summary>Gets the column index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.EditError">
      <summary>Gets the type of edit error.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.Row">
      <summary>Gets the row index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditErrorEventArgs.View">
      <summary>Gets the view that contains the cell with the editor that raised the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EditingFocusIndicatorRenderer">
      <summary>Represents the renderer for the editor focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EditingFocusIndicatorRenderer.#ctor">
      <summary>Creates a new editing focus indicator renderer with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EditingFocusIndicatorRenderer.#ctor(FarPoint.Win.IBorder)">
      <summary>Creates a new editing focus indicator renderer with the specified border.</summary>
      <param name="borderType">Type of the border.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EditingFocusIndicatorRenderer.Border">
      <summary>Gets or sets the border.</summary>
      <value>Border</value>
    </member>
    <member name="M:FarPoint.Win.Spread.EditingFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EditingFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EditModeStartingEventArgs">
      <summary>Represents the event data for the EditModeOn event for the Spread component, which occurs when edit mode is starting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EditModeStartingEventArgs.#ctor(System.Boolean,System.Boolean)">
      <summary>Creates a new object with the EditModeStarting event arguments.</summary>
      <param name="editFormula">True if a cell formula will be edited; false if a cell value will be edited</param>
      <param name="cancel">True to cancel edit mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EditModeStartingEventArgs.#ctor(System.Boolean)">
      <summary>Creates a new object with the EditModeStarting event arguments.</summary>
      <param name="editFormula">True if a cell formula will be edited; false if a cell value will be edited</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EditModeStartingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditModeStartingEventArgs.EditFormula">
      <summary>Gets or sets whether the formula for the cell should be edited.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EditorNotifyEventArgs">
      <summary>Represents the event data for the EditorNotify event for the component, which occurs when the editor notifies the component of one of several changes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EditorNotifyEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Creates a new object with the EditorNotify event arguments.</summary>
      <param name="view">View that contains the cell with the editor that raised the event</param>
      <param name="editingControl">Control that raised the event</param>
      <param name="row">Row index of the cell with the editor that raised the event</param>
      <param name="column">Column index of the cell with the editor that raised the event</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.Column">
      <summary>Gets the column index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.EditingControl">
      <summary>Gets the Control object that raises the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.Row">
      <summary>Gets the row index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EditorNotifyEventArgs.View">
      <summary>Gets the view that contains the cell with the editor that raised the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EncodingValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.EncodingValidator" /> that validates the text based on the specified encoding.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EncodingValidator.Encoding">
      <summary>Gets or sets the encoding.</summary>
      <value>The encoding. The default is <see cref="P:System.Text.Encoding.Unicode" />.</value>
      <exception cref="T:System.ArgumentNullException"> The assigned value is <see langword="null" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.EncodingValidator.EncodingCodePage">
      <summary>Gets or sets the encoding code page.</summary>
      <value>The encoding code page. The default is Encoding.Unicode.CodePage.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.BaseDataValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.BaseDataValidator" nolink="true" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EncodingValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value satisfies the given condition by the <paramref name="context" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer">
      <summary>Represents the renderer for drawing the border around the active cell (that has focus).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer for drawing the border around the active cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.#ctor(System.Int32)">
      <summary>Creates a new renderer for drawing the border, with the specified thickness, around the active cell.</summary>
      <param name="thickness">Thickness in pixels</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.Thickness">
      <summary>Gets the thickness in pixels of the enhanced focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.Clone">
      <summary>Creates and returns a copy of the picture.</summary>
      <returns>Copy of the picture</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the default focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedFocusIndicatorRenderer.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.EnhancedInterfaceRenderer">
      <summary>Represents the painter of the visual elements with Excel2007 style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.#ctor">
      <summary>Creates a new enhanced interface renderer with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabShape,System.Drawing.Color,System.Windows.Forms.FlatStyle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.EnhancedInterfaceRenderer.ButtonStyles,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a new enhanced interface rendered with the specified parameters.</summary>
      <param name="arrowColorEnabled">Color of the arrow when enabled</param>
      <param name="arrowColorDisabled">Color of the arrow when disabled</param>
      <param name="foreColor">Color of the text</param>
      <param name="grayAreaColor">Color of the gray area</param>
      <param name="rangeGroupBackgroundColor">Color of the background of the outline (range group)</param>
      <param name="rangeGroupButtonBorderColor">Color of the button and border of the outline (range group)</param>
      <param name="rangeGroupLineColor">Color of the line of the outline (range group)</param>
      <param name="scrollBoxBackgroundColor">Color of the background of the scroll box</param>
      <param name="sheetTabBorderColor">Color of the border of the sheet tab</param>
      <param name="sheetTabLowerActiveColor">Color of the lower part of the sheet tab when selected</param>
      <param name="sheetTabLowerNormalColor">Color of the lower part of the sheet tab when not selected</param>
      <param name="sheetTabUpperActiveColor">Color of the upper part of the sheet tab when selected</param>
      <param name="sheetTabUpperNormalColor">Color of the upper part of the sheet tab when not selected</param>
      <param name="splitBarBackgroundColor">Color of the background of the splitter bar</param>
      <param name="splitBarDarkColor">Color of the dark part of the splitter bar</param>
      <param name="splitBarLightColor">Color of the light part of the splitter bar</param>
      <param name="splitBoxBackgroundColor">Color of the background of the splitter box</param>
      <param name="splitBoxBorderColor">Color of the border of the splitter box</param>
      <param name="tabShape">Sheet tab shape</param>
      <param name="tabStripBackgroundColor">Color of the background of the tab strip</param>
      <param name="tabStripButtonFlatStyle">Style of the tab strip button when flat</param>
      <param name="tabStripButtonLowerActiveColor">Color of the lower part of the tab strip button when selected</param>
      <param name="tabStripButtonLowerNormalColor">Color of the lower part of the tab strip button when not selected</param>
      <param name="tabStripButtonLowerPressedColor">Color of the lower part of the tab strip button when pressed</param>
      <param name="tabStripButtonStyle">Style of the tab strip button</param>
      <param name="tabStripButtonUpperActiveColor">Color of the upper part of the tab strip button when selected</param>
      <param name="tabStripButtonUpperNormalColor">Color of the upper part of the tab strip button when not selected</param>
      <param name="tabStripButtonUpperPressedColor">Color of the upper part of the tab strip button when pressed</param>
      <param name="tabStripButtonBorderColor">Color of the border of the tab strip button</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ArrowColorDisabled">
      <summary>Gets or sets the arrow color when the button is disabled.</summary>
      <value>The arrow color disabled.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ArrowColorEnabled">
      <summary>Gets or sets the arrow color when the button is enabled.</summary>
      <value>The arrow color enabled.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ForeColor">
      <summary>Gets or sets the color of the text.</summary>
      <value>The color of the fore.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.GrayAreaColor">
      <summary>Gets or sets the color of the gray area.</summary>
      <value>The color of the gray area.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.RangeGroupBackgroundColor">
      <summary>Gets or sets the color of the outline (range group) background.</summary>
      <value>Color of the outline (range group) background</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.RangeGroupButtonBorderColor">
      <summary>Gets or sets the color of the outline (range group) button border.</summary>
      <value>Color of the outline (range group) button border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.RangeGroupLineColor">
      <summary>Gets or sets the color of the outline (range group) line.</summary>
      <value>Color of the outline (range group) line</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ScrollBoxBackgroundColor">
      <summary>Gets or sets the color of the scroll box background.</summary>
      <value>The color of the scroll box background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabBorderColor">
      <summary>Gets or sets the color of the sheet tab border.</summary>
      <value>The color of the sheet tab border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabLowerActiveColor">
      <summary>Gets or sets the color of the lower, active sheet tab.</summary>
      <value>The color of the sheet tab lower active.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabLowerNormalColor">
      <summary>Gets or sets the color of the lower, normal sheet tab.</summary>
      <value>The color of the sheet tab lower normal.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabUpperActiveColor">
      <summary>Gets or sets the color of the upper, active sheet tab.</summary>
      <value>The color of the sheet tab upper active.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabUpperNormalColor">
      <summary>Gets or sets the color of the upper, normal sheet tab.</summary>
      <value>The color of the sheet tab upper normal.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SplitBarBackgroundColor">
      <summary>Gets or sets the color of the split bar background.</summary>
      <value>The color of the split bar background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SplitBarDarkColor">
      <summary>Gets or sets the color of the dark split bar.</summary>
      <value>The color of the split bar dark.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SplitBarLightColor">
      <summary>Gets or sets the light color of the split bar.</summary>
      <value>The color of the split bar light.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SplitBoxBackgroundColor">
      <summary>Gets or sets the color of the split box background.</summary>
      <value>The color of the split box background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SplitBoxBorderColor">
      <summary>Gets or sets the color of the split box border.</summary>
      <value>The color of the split box border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabShape">
      <summary>Gets or sets the tab shape.</summary>
      <value>The tab shape.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripBackgroundColor">
      <summary>Gets or sets the color of the tab strip background.</summary>
      <value>The color of the tab strip background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonBorderColor">
      <summary>Gets or sets the color of the tab strip button border.</summary>
      <value>The color of the tab strip button border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonFlatStyle">
      <summary>Gets or sets the tab strip button flat style.</summary>
      <value>The tab strip button flat style.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonLowerActiveColor">
      <summary>Gets or sets the color of the lower, active tab strip button.</summary>
      <value>The color of the tab strip button lower active.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonLowerNormalColor">
      <summary>Gets or sets the color of the lower, normal tab strip button.</summary>
      <value>The color of the tab strip button lower normal.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonLowerPressedColor">
      <summary>Gets or sets the color of the lower, pressed tab strip button.</summary>
      <value>The color of the tab strip button lower pressed.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonStyle">
      <summary>Gets or sets the tab strip button style.</summary>
      <value>The tab strip button style.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonUpperActiveColor">
      <summary>Gets or sets the color of the upper, active tab strip button.</summary>
      <value>The color of the tab strip button upper active.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonUpperNormalColor">
      <summary>Gets or sets the color of the upper, normal tab strip button.</summary>
      <value>The color of the tab strip button upper normal.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedInterfaceRenderer.TabStripButtonUpperPressedColor">
      <summary>Gets or sets the color of the upper, pressed tab strip button.</summary>
      <value>The color of the tab strip button upper pressed.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripButton,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints a tab strip button.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="button">Button to render</param>
      <param name="mouseOver">Whether the mouse is over the button</param>
      <param name="pressed">Whether the button is pressed</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the button is enabled</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintGrayArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the gray area.</summary>
      <param name="g">Graphics device interface for painting the gray area</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintRangeGroupArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints excel group area.</summary>
      <param name="g">Graphics device interface for painting the area</param>
      <param name="x">left-coordinate</param>
      <param name="y">top-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintRangeGroupButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.GroupState,System.Boolean,System.Boolean)">
      <summary>Paints the outline (range group) button.</summary>
      <param name="g">Graphics device interface for painting the button</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="groupState">State of the outline (range group)</param>
      <param name="rowGroup">Whether this outline (range group) is of rows</param>
      <param name="isLeftToRight">Whether it is set to right-to-left</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintRangeGroupLevelBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Paints the outline (range group) level indicator box.</summary>
      <param name="g">Graphics device interface for painting the box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="groupLevel">Level of the outline (range group)</param>
      <param name="rowGroup">Whether this outline (range group) is of rows</param>
      <param name="isLeftToRight">Whether it is set to right-to-left</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintRangeGroupLine(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point)">
      <summary>Paints the outline (range group) line.</summary>
      <param name="g">Graphics device interface for painting the line</param>
      <param name="startPoint">Starting point of the line</param>
      <param name="endPoint">Ending point of the line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintRangeGroupPoint(System.Drawing.Graphics,System.Drawing.Point)">
      <summary>Paints the outline (range group) point.</summary>
      <param name="g">Graphics device interface for painting the point</param>
      <param name="point">Point to draw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintScrollBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the scroll box.</summary>
      <param name="g">Graphics device interface for painting the scroll box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSheetTab(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the sheet tab.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="sheet">Sheet index of sheet tab to render</param>
      <param name="text">Sheet tab text</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="focused">Whether the sheet tab has focus</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSheetTabPartial(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints a sheet tab which is partially displayed.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="sheet">Sheet index of the tab strip to render</param>
      <param name="text">Sheet tab text</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="focused">Whether the sheet tab has focus</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSpecialSheetTab(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the special insert sheet tab.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSpecialSheetTab(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font,System.Drawing.Image)">
      <summary>Paints the special insert sheet tab.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
      <param name="newSheetImage">Custom image for insert sheet tab</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSplitBar(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split bar which splits view port.</summary>
      <param name="g">Graphics device interface for painting the split bar</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width of the split bar</param>
      <param name="height">Height of the split bar</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSplitBarCrossover(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the crossing area between the split bars.</summary>
      <param name="g">Graphics device interface for painting the split bars</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width of the crossing area</param>
      <param name="height">Height of the crossing area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintSplitBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split box.</summary>
      <param name="g">Graphics device interface for painting the split box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width of the split box</param>
      <param name="height">Height of the split box</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.PaintTabStripBackground(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripPlacement)">
      <summary>Paints the background of the tab strip.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="placement">Location of the tab strip</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EnhancedScrollBarRenderer">
      <summary>Represents the renderer that paints the the scroll bar with the enhanced skin.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.EnhancedScrollBarRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.EnhancedScrollBarRenderer" /> class.</summary>
      <param name="arrowColor">Color of the arrow</param>
      <param name="arrowHoveredColor">Color of the arrow hovered</param>
      <param name="arrowSelectedColor">Color of the arrow selected</param>
      <param name="buttonBackgroundColor">Color of the button background</param>
      <param name="buttonBorderColor">Color of the button border</param>
      <param name="buttonHoveredBackgroundColor">Color of the button hovered background</param>
      <param name="buttonHoveredBorderColor">Color of the button hovered border</param>
      <param name="buttonSelectedBackgroundColor">Color of the button selected background</param>
      <param name="buttonSelectedBorderColor">Color of the button selected border</param>
      <param name="trackBarBackgroundColor">Color of the track bar background</param>
      <param name="trackBarSelectedBackgroundColor">Color of the track bar selected background</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ArrowColor">
      <summary>Gets or sets the color of the arrow.</summary>
      <value>The color of the arrow.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ArrowHoveredColor">
      <summary>Gets or sets the color of the arrow when the mouse is over it.</summary>
      <value>The color of the arrow hovered.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ArrowSelectedColor">
      <summary>Gets or sets the color of the selected arrow.</summary>
      <value>The color of the selected arrow.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ButtonBackgroundColor">
      <summary>Gets or sets the color of the button background.</summary>
      <value>The color of the button background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ButtonBorderColor">
      <summary>Gets or sets the color of the button border.</summary>
      <value>The color of the button border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ButtonHoveredBackgroundColor">
      <summary>Gets or sets the color of the button hovered background.</summary>
      <value>The color of the button hovered background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ButtonHoveredBorderColor">
      <summary>Gets or sets the color of the button hovered border.</summary>
      <value>The color of the button hovered border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ButtonSelectedBackgroundColor">
      <summary>Gets or sets the color of the button selected background.</summary>
      <value>The color of the button selected background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ButtonSelectedBorderColor">
      <summary>Gets or sets the color of the button selected border.</summary>
      <value>The color of the button selected border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.Default">
      <summary>Gets the default value of the EnhancedScrollBarRenderer.</summary>
      <value>The default value of the EnhancedScrollBarRenderer.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.TrackBarBackgroundColor">
      <summary>Gets or sets the color of the track bar background.</summary>
      <value>The color of the track bar background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.EnhancedScrollBarRenderer.TrackBarSelectedBackgroundColor">
      <summary>Gets or sets the color of the track bar selected background.</summary>
      <value>The color of the track bar selected background.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the arrow button.</summary>
      <param name="g">Graphics object that represents drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawCustomButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the custom button.</summary>
      <param name="g">Graphics object that represents a drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents a drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawHorizontalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal scroll box.</summary>
      <param name="g">Graphics object that represents drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawHorizontalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal scroll box grip.</summary>
      <param name="g">Graphics object that represents drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawLeftHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the left horizontal track.</summary>
      <param name="g">Graphics object that represents drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents the drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawLowerVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the lower vertical track.</summary>
      <param name="g">Graphics object that represents drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents the drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawRightHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the right horizontal track.</summary>
      <param name="g">Graphics object that represents drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents the drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawUpperVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the upper vertical track.</summary>
      <param name="g">Graphics object that represents the drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents the drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawVerticalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical scroll box.</summary>
      <param name="g">Graphics object that represents the drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents the drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.DrawVerticalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical scroll box grip.</summary>
      <param name="g">Graphics object that represents a drawing device context</param>
      <param name="bounds">Rectangle object that represents drawing bounds</param>
      <param name="element">FpScrollBarButton object that represents a drawing object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EnhancedScrollBarRenderer.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.EnterCellEventArgs">
      <summary>Represents the event data for the EnterCell event for the Spread component, which occurs when the focus enters a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EnterCellEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
      <summary>Creates a new object with the EnterCell event arguments.</summary>
      <param name="view">View that contains the cell being entered</param>
      <param name="row">Row index of the cell being entered</param>
      <param name="column">Column index of the cell being entered</param>
    </member>
    <member name="P:FarPoint.Win.Spread.EnterCellEventArgs.Column">
      <summary>Gets the column index of the cell being entered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EnterCellEventArgs.Row">
      <summary>Gets the row index of the cell being entered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EnterCellEventArgs.View">
      <summary>Gets the view that contains the cell being entered.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ErrorConditionalFormattingRule">
      <summary>Represents a conditional formatting rule that accepts error or nonerror values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ErrorConditionalFormattingRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ErrorConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ErrorConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ErrorConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorConditionalFormattingRule.IsError">
      <summary>Gets or sets a value that indicates whether this conditional formatting rule accepts error values.</summary>
      <value>
        <c>true</c> if error values are accepted; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ErrorConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ErrorConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ErrorEventArgs">
      <summary>Represents the event data for the Error event for the Spread component, which occurs when errors are generated by user interaction.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ErrorEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean,FarPoint.Win.Spread.EditError,System.Int32,System.Int32,System.String,System.Exception)">
      <summary>Creates a new object with the Error event arguments.</summary>
      <param name="view">View that contains the cell with the editor that raised the event</param>
      <param name="isEditError">Whether the error occured in the editing of the control</param>
      <param name="editError">Type of edit error</param>
      <param name="row">Row index of the cell with the editor that raised the event</param>
      <param name="column">Column index of the cell with the editor that raised the event</param>
      <param name="errorMessage">Text describing the error</param>
      <param name="exception">Exception being thrown</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ErrorEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean,FarPoint.Win.Spread.EditError,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Exception)">
      <summary>Creates a new object with the Error event arguments.</summary>
      <param name="view">View that contains the cell with the editor that raised the event</param>
      <param name="isEditError">Whether the error occured in the editing of the control</param>
      <param name="editError">Type of edit error</param>
      <param name="row">The top row index of the cell that raised the event</param>
      <param name="column">The left column index of the cell that raised the event</param>
      <param name="row2">Bottom Row index of the cell that raised the event</param>
      <param name="column2">The right column index of the cell that raised the event</param>
      <param name="errorMessage">Text describing the error</param>
      <param name="exception">Exception being thrown</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.Cancel">
      <summary>Gets or sets whether to cancel default processing and throw exceptions or the EditError event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.Column">
      <summary>Gets the column index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.Column2">
      <summary>Gets the right column index that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.EditError">
      <summary>Gets the type of edit error.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.ErrorMessage">
      <summary>Gets the text description of the error.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.Exception">
      <summary>Gets the exception thrown by the error.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.IsEditError">
      <summary>Determines whether the error is an editing error.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.Row">
      <summary>Gets the row index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.Row2">
      <summary>Gets the bottom row index of the cell that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ErrorEventArgs.View">
      <summary>Gets the view that contains the cell with the editor that raised the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EventListener">
      <summary>Represents an event listener.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EventListener.#ctor(System.Object,System.Reflection.EventInfo)">
      <summary>Creates a new event listener with the specified target and event information.</summary>
      <param name="target">Target</param>
      <param name="eventInfo">Event information</param>
    </member>
    <member name="F:FarPoint.Win.Spread.EventListener.EventInfo">
      <summary>Read-only event information. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EventListener.Target">
      <summary>Read-only target. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EventListener.Enable">
      <summary>Gets or sets whether to enable the event listener.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EventListener.Dispose">
      <summary>Disposes and frees up resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EventListener.OnEventRaised(System.EventArgs)">
      <summary>Handles the raised event.</summary>
      <param name="args">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.EventListener.ToString">
      <summary>Returns a string representation of the event information.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.EventListener.EventRaised">
      <summary>Occurs when an event is raised.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EventListener.EventHandlerAdapter">
      <summary>Represents an event handler adapter. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EventListener.EventHandlerAdapter.#ctor(FarPoint.Win.Spread.EventListener)">
      <summary>Creates an event handler adapter.</summary>
      <param name="eventListener" />
    </member>
    <member name="F:FarPoint.Win.Spread.EventListener.EventHandlerAdapter.EventListener">
      <summary>Creates a new event listener. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.EventListener.EventHandlerAdapter.EventHandler">
      <summary>Represents a defined method that handles the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EventNameConverter">
      <summary>Converter for EventName</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EventNameConverter.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.EventNameConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.EventNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EventNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; false if other values are possible.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.EventNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer">
      <summary>Abstract class that represents the renderer of the Excel-like sparklines. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.GAP_WIDTH">
      <summary>The width of the Gap object. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.OFFSET_MIN">
      <summary>The minimum value of the Offset object. This field is constant and read-only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.CreateChartModelFromExcelSparklineSetting(FarPoint.Win.Spread.ExcelSparklineSetting)">
      <summary>Creates the chart model from excel sparkline settings.</summary>
      <param name="excelSparklineSetting">The excel sparkline setting.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.PaintSparkline(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Sparkline)">
      <summary>Paints the sparkline.</summary>
      <param name="g">The graphics object.</param>
      <param name="rectangle">The rectangle.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelBaseSparkLineRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ExcelSparkline">
      <summary>Represents sparkline data based on the cell range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparkline" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparkline" /> class.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="sheetView">The sheet view.</param>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparkline" /> class.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="formula">The formula that represents the sheet cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparkline" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparkline.Column">
      <summary>Gets or sets the column.</summary>
      <value>The column.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparkline.Formula">
      <summary>Gets or sets the formula.</summary>
      <value>The formula.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparkline.ReferenceError">
      <summary>Gets a value that indicates whether the current cell range is an invalid reference.</summary>
      <value>
        <c>true</c> if the current cell range is an invalid reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparkline.Row">
      <summary>Gets or sets the row.</summary>
      <value>The row.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.FireFormulaChanged">
      <summary>Fires the formula changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.GetSparkLineData">
      <summary>Gets the sparkline data used for rendering.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.ReLoadFormula(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView)">
      <summary>Reevaluates the formula.</summary>
      <param name="spread">The spread.</param>
      <param name="ownerSheetView">The sheetview that contains the sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparkline.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparkline.FormulaChanged">
      <summary>Occurs when the formula is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ExcelSparklineGroup">
      <summary>Represents a group of Excel-like sparklines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparklineGroup" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparklineGroup" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.#ctor(FarPoint.Win.Spread.ExcelSparklineSetting,FarPoint.Win.Spread.SparklineType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparklineGroup" /> class.</summary>
      <param name="setting">The setting.</param>
      <param name="type">The type.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineGroup.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <value>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineGroup.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <value>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineGroup.Item(System.Int32)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.ISparkline" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineGroup.ReferenceError">
      <summary>Gets a value that indicates whether the current cell range is an invalid reference.</summary>
      <value>
        <c>true</c> if the current cell range is an invalid reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineGroup.Renderer">
      <summary>Gets or sets the renderer.</summary>
      <value>The renderer.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineGroup.Setting">
      <summary>Gets or sets the setting.</summary>
      <value>The setting.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Add(FarPoint.Win.Spread.ISparkline)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.CloneSetting">
      <summary>Clones a new sparkline group that copies the setting of the current sparkline group.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Contains(FarPoint.Win.Spread.ISparkline)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.CopyTo(FarPoint.Win.Spread.ISparkline[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to a <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" nolink="true" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" nolink="true" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional or <paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" /> or the number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" /> or the type ISparkline cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object.</param>
      <returns>true if successful; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireClearItems(FarPoint.Win.Spread.ISparklineGroup)">
      <summary>Fires the clear items event.</summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireFormulaChanged">
      <summary>Fires the formula changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireItemAdded(FarPoint.Win.Spread.ISparkline)">
      <summary>Fires the item added event.</summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireItemRemoved(FarPoint.Win.Spread.ISparkline)">
      <summary>Fires the item removed event.</summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireItemUpdated(FarPoint.Win.Spread.ISparkline,System.String,System.Object,System.Object)">
      <summary>Fires the item updated event.</summary>
      <param name="item">The item.</param>
      <param name="propertyName">Name of the property.</param>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireItemUpdated(FarPoint.Win.Spread.ISparkline)">
      <summary>Fires the item updated event.</summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.FireUpdated">
      <summary>Fires the updated event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.GetExcelSetting">
      <summary>Gets the excel setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.IsSwitchable">
      <summary>Checks if the group is switchable.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.OnClearItems(FarPoint.Win.Spread.ItemEventArgs)">
      <summary>Raises the <see cref="E:ClearItems" /> event.</summary>
      <param name="e">The <see cref="!:FarPoint.Web.Spread.ItemEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.OnItemAdded(FarPoint.Win.Spread.ItemEventArgs)">
      <summary>Raises the <see cref="E:ItemAdded" /> event.</summary>
      <param name="e">The <see cref="!:FarPoint.Web.Spread.ItemEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.OnItemRemoved(FarPoint.Win.Spread.ItemEventArgs)">
      <summary>Raises the <see cref="E:ItemRemoved" /> event.</summary>
      <param name="e">The <see cref="!:FarPoint.Web.Spread.ItemEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.OnItemUpdated(FarPoint.Win.Spread.ItemEventArgs)">
      <summary>Raises the <see cref="E:ItemUpdated" /> event.</summary>
      <param name="e">The <see cref="!:FarPoint.Web.Spread.ItemEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.OnUpdated(System.EventArgs)">
      <summary>Raises the <see cref="E:Updated" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.ReLoadFormula(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView)">
      <summary>Reevaluates the formula which depends on the spread.</summary>
      <param name="spread">The spread.</param>
      <param name="ownerSheetView">The sheetview that contains the sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Remove(FarPoint.Win.Spread.ISparkline)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" nolink="true" />.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object.</param>
      <returns>true if successful; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.ShowSelectDataForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SparklineType)">
      <summary>Shows the select data form.</summary>
      <param name="parentForm">The parent form.</param>
      <param name="spread">The spread.</param>
      <param name="cameraShape">The camera shape.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.ShowSelectDataForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.ExcelSparkline)">
      <summary>Shows the select data form.</summary>
      <param name="parentForm">The parent form.</param>
      <param name="spread">The spread.</param>
      <param name="sparkline">The sparkline.</param>
      <param name="isDateAxis">if set to <c>true</c> is date axis.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.ShowSelectDataForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.ExcelSparklineGroup,System.Boolean)">
      <summary>Shows the select data form.</summary>
      <param name="parentForm">The parent form.</param>
      <param name="spread">The spread.</param>
      <param name="group">The group.</param>
      <param name="isDateAxis">if set to <c>true</c> is date axis.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineGroup.SwitchRowColumn">
      <summary>Switches sparkline rows or columns.</summary>
      <returns>True if switch action is finished; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineGroup.ClearItems">
      <summary>Occurs when a sparkline is added.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineGroup.FormulaChanged">
      <summary>Occurs when the date formula has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineGroup.ItemAdded">
      <summary>Occurs when a sparkline is added.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineGroup.ItemRemoved">
      <summary>Occurs when a sparkline is added.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineGroup.ItemUpdated">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineGroup.Updated">
      <summary>Occurs when a group has been updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ExcelSparklineSetting">
      <summary>Represents a setting of an Excel-like sparkline.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparklineSetting" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExcelSparklineSetting" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.AxisColor">
      <summary>Gets or sets the color of the axis.</summary>
      <value>The color of the axis.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.DateAxis">
      <summary>Gets or sets a value that indicates whether the sparkline is using the date axis.</summary>
      <value>
        <c>true</c> if date axis; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.DisplayEmptyCellsAs">
      <summary>Gets or sets what to display empty cells as.</summary>
      <value>The display empty cells as value.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.DisplayHidden">
      <summary>Gets or sets a value that indicates whether data in hidden cells is plotted for the sparklines in this sparkline group.</summary>
      <value>
        <c>true</c> to display data in hidden cells; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.DisplayXAxis">
      <summary>Gets or sets a value that indicates whether the horizontal axis is displayed for each sparkline in this sparkline group.</summary>
      <value>
        <c>true</c> to display the horizontal axis; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.FirstMarkerColor">
      <summary>Gets or sets the color of the first data point for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.Formula">
      <summary>Gets or sets a value that specifies the date range for the sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.HighMarkerColor">
      <summary>Gets or sets the color of the highest data point for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.LastMarkerColor">
      <summary>Gets or sets the color of the last data point for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.LineWeight">
      <summary>Gets or sets a value that specifies the line weight for each sparkline in the sparkline group, where the line weight is measured in points. The weight must be greater than or equal to zero, and must be less than or equal to 3 (LineSeries only supports a line weight value in the range of 0.0-&gt;3.0).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.LowMarkerColor">
      <summary>Gets or sets the color of the lowest data point for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ManualMax">
      <summary>Gets or sets a value that specifies the maximum for the vertical axis that is shared across all sparklines in this sparkline group. The value must be zero if maxAxisType does not equal custom.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ManualMin">
      <summary>Gets or sets a value that specifies the minimum for the vertical axis that is shared across all sparklines in this sparkline group. The value must be zero if minAxisType does not equal custom.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.MarkersColor">
      <summary>Gets or sets a value that specifies the color of the data markers for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.MaxAxisType">
      <summary>Gets or sets a value that specifies how the vertical axis maximums for the sparklines in this sparkline group are calculated.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.MinAxisType">
      <summary>Gets or sets a value that specifies how the vertical axis minimums for the sparklines in this sparkline group are calculated.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.NegativeColor">
      <summary>Gets or sets a value that specifies the color of the negative data points for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ReferenceError">
      <summary>Gets a value that indicates whether the current cell range is an invalid reference.</summary>
      <value>
        <c>true</c> if the current cell range is an invalid reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.RightToLeft">
      <summary>Gets or sets a value that specifies whether each sparkline in the sparkline group is displayed in a right-to-left manner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.SeriesColor">
      <summary>Gets or sets a value that specifies the color for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ShowFirst">
      <summary>Gets or sets a value that indicates whether the first data point is formatted differently for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ShowHigh">
      <summary>Gets or sets a value that specifies whether the data points with the highest value are formatted differently for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ShowLast">
      <summary>Gets or sets a value that indicates whether the last data point is formatted differently for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ShowLow">
      <summary>Gets or sets a value that specifies whether the data points with the lowest value are formatted differently for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ShowMarkers">
      <summary>Gets or sets a value that specifies whether data markers are displayed for each sparkline in this sparkline group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcelSparklineSetting.ShowNegative">
      <summary>Gets or sets a value that specifies whether the negative data points are formatted differently for each sparkline in this sparkline group.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.FireChanged(System.String)">
      <summary>Fires the changed event.</summary>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.FireFormulaChanged">
      <summary>Fires the formula changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.FireUpdated">
      <summary>Fires the updated event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:PropertyChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.OnUpdated(System.EventArgs)">
      <summary>Raises the <see cref="E:Updated" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ReLoadFormula(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView)">
      <summary>Reevaluates the formula.</summary>
      <param name="spread">The spread.</param>
      <param name="ownerSheetView">The sheetview that contains the sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeAxisColor">
      <summary>Sets whether to serialize the axis color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeDateAxis">
      <summary>Sets whether to serialize the date axis.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeDisplayEmptyCellsAs">
      <summary>Sets whether to serialize the display empty cells as option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeDisplayHidden">
      <summary>Sets whether to serialize the display hidden option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeDisplayXAxis">
      <summary>Sets whether to serialize the display X axis option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeFirstMarkerColor">
      <summary>Sets whether to serialize the first marker color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeFormula">
      <summary>Sets whether to serialize the formula.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeHighMarkerColor">
      <summary>Sets whether to serialize the high marker color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeLastMarkerColor">
      <summary>Sets whether to serialize the last marker color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeLineWeight">
      <summary>Sets whether to serialize line weight.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeLowMarkerColor">
      <summary>Sets whether to serialize the low marker color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeManualMax">
      <summary>Sets whether to serialize the manual max setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeManualMin">
      <summary>Sets whether to serialize the manual min setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeMarkersColor">
      <summary>Sets whether to serialize the markers color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeMaxAxisType">
      <summary>Sets whether to serialize the maximum axis type setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeMinAxisType">
      <summary>Sets whether to serialize the minimum axis type setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeNegativeColor">
      <summary>Sets whether to serialize the negative color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeRightToLeft">
      <summary>Sets whether to serialize the right to left setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeSeriesColor">
      <summary>Sets whether to serialize the series color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeShowFirst">
      <summary>Sets whether to serialize the show first option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeShowHigh">
      <summary>Sets whether to serialize the show high option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeShowLast">
      <summary>Sets whether to serialize the show last option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeShowLow">
      <summary>Sets whether to serialize the show low option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeShowMarkers">
      <summary>Sets whether to serialize show markers.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcelSparklineSetting.ShouldSerializeShowNegative">
      <summary>Sets whether to serialize the show negative setting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineSetting.FormulaChanged">
      <summary>Occurs when the formula is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineSetting.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ExcelSparklineSetting.Updated">
      <summary>Occurs when data has been updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ExcludeListValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that validates whether the specified value does not exist in the given <see cref="P:FarPoint.Win.Spread.ExcludeListValidator.Candidates" /> list.</summary>
      <remarks>You can set a pre-defined <see cref="T:System.String" /> array to the <see cref="P:FarPoint.Win.Spread.ExcludeListValidator.Candidates" /> property. If the cell value does not exist in the array, the validation succeeds.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExcludeListValidator.Candidates">
      <summary>Gets or sets a <see cref="T:System.String" /> array that indicates the specified value that is excluded in the candidate strings.</summary>
      <value>A <see cref="T:System.String" /> array that indicates the candidate strings. The default is <see langword="null" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.ExcludeListValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.ExcludeListValidator" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.ExcludeListValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ExcludeListValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value does not exist in the given <see cref="P:FarPoint.Win.Spread.ExcludeListValidator.Candidates" /> list.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated, and contains relative context information.</param>
      <returns>
        <see langword="true" /> if the specifed value does not exist in the given candidate string list; otherwise,<see langword="false" />.</returns>
      <remarks>If the cell's value is <see langword="null" />, and <see cref="P:FarPoint.Win.Spread.ExcludeListValidator.Candidates" /> also includes a <see langword="null" /> value, the validation fails.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.ExpandEventArgs">
      <summary>Represents the event data for the Expand event for the Spread component, which occurs when the hierarchy display is being expanded (showing child sheet views).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExpandEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean,System.Int32)">
      <summary>Creates a new object with the Expand event arguments.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExpandEventArgs.Expand">
      <summary>Gets whether the row is going to be expanded.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExpandEventArgs.Row">
      <summary>Gets the row to expand or collapse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExpandEventArgs.View">
      <summary>Gets the view that contains the row to be expanded or collapsed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ExpressionConsumerFormulaInfo">
      <summary>Contains information about IExpressionConsumer and the expressions corresponding to its formulas.</summary>
      <remarks>This class is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ExpressionConsumerFormulaInfo.#ctor(FarPoint.Win.Spread.Model.IExpressionConsumer,FarPoint.CalcEngine.Expression[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExpressionConsumerFormulaInfo" /> class.</summary>
      <param name="consumer">The consumer</param>
      <param name="expressions">Array of expressions</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ExpressionConsumerFormulaInfo.Consumer">
      <summary>Gets the consumer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExpressionConsumerFormulaInfo.GetExpression(System.Int32)">
      <summary>Gets the expression at the specified index.</summary>
      <param name="index">The expression index</param>
      <returns>The expression at the specified index</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ExtraRendererSettings">
      <summary>Represents the extra setting for the renderer to paint.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ExtraRendererSettings.#ctor(FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ExtraRendererSettings" /> class.</summary>
      <param name="prePaintTextDecorator">The prepaint text decorator.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ExtraRendererSettings.ExtraFormatter">
      <summary>Gets the extra formatter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ExtraRendererSettings.PrePaintTextDecorator">
      <summary>Gets the prepaint text decorator.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterBar">
      <summary>Provides a FilterBarInfo class that represents information about the filter bar in the Spread component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBar.Cells">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.FilterBarCellCollection" /> object of the filter bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBar.DefaultStyle">
      <summary>Gets or sets the default style information for the filter bar items in the filter bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBar.DefaultStyleName">
      <summary>Gets or sets the name of the default style for the filter bar.</summary>
      <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBar.Height">
      <summary>Gets or sets the filter bar height.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBar.HorizontalGridLine">
      <summary>Gets or sets the <see cref="T:FarPoint.Win.Spread.GridLine" /> object for the horizontal grid line in the filter bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBar.VerticalGridLine">
      <summary>Gets or sets the <see cref="T:FarPoint.Win.Spread.GridLine" /> object for the vertical grid line in the filter bar.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FilterBar.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterBarCell">
      <summary>Represents a cell in the filter bar of the sheet view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.BackColor">
      <summary>Gets or sets the background color.</summary>
      <value>The color of the background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.Border">
      <summary>Gets or sets the border for a filter bar item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.CellPadding">
      <summary>Gets or sets the number of spaces to pad the filter bar item(s) with, in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.CellType">
      <summary>Gets or sets the type of the cell.</summary>
      <value>The type of the cell.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.Font">
      <summary>Gets or sets the text font in a filter bar item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.ForeColor">
      <summary>Gets or sets the text color.</summary>
      <value>The color of the text.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of contents for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.ImeMode">
      <summary>Gets or sets the IME mode setting for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.ImeSentenceMode">
      <summary>Gets or sets the IME sentence mode setting for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.InputScope">
      <summary>Gets or sets the input scope setting for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.Locked">
      <summary>Gets or sets whether the cell is locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.ParentStyleName">
      <summary>Gets or sets the name of the parent style for a filter bar item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.StyleName">
      <summary>Gets or sets the name of the custom style for a filter bar item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.TextIndent">
      <summary>Gets or sets the amount to indent the text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of contents for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCell.VisualStyles">
      <summary>Gets or sets the setting of visual styles (XP themes) for the filter bar item.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterBarCellCollection">
      <summary>Represents all cells in the filter bar of the sheet view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCellCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.FilterBarCell" /> object of a filter bar item using the specified index.</summary>
      <param name="index">Item index</param>
      <value>A FilterBarCell reference</value>
      <exception cref="T:System.IndexOutOfRangeException">Specified item index is not valid; must be between zero and the total number of columns</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarCellCollection.Parent">
      <summary>Gets the parent object that contains this collection of filter bar items.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterBarCellCollection.Get(System.Int32)">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.FilterBarCell" /> object for a filter bar item at the specified index.</summary>
      <param name="index">Item index</param>
      <returns>A FilterBarCell reference</returns>
      <exception cref="T:System.IndexOutOfRangeException">Specified item index is not valid; must be between zero and the total number of columns</exception>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterBarEventArgs">
      <summary>Represents the event data for the FilterBarClick and FilterBarDoubleClick events for the Spread component, which occur when the user clicks or double-clicks the mouse button with the pointer on the filter bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterBarEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MouseButtons)">
      <summary>Creates a new object with the FilterBarClick event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the filter bar cell clicked</param>
      <param name="column">Column index of filter bar cell clicked</param>
      <param name="x">X-coordinate of the pointer position</param>
      <param name="y">Y-coordinate of the pointer position</param>
      <param name="button">Which mouse button was pressed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarEventArgs.Button">
      <summary>Gets which mouse button has been pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarEventArgs.Cancel">
      <summary>Gets or sets whether to cancel default processing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarEventArgs.Column">
      <summary>Gets the column index of the cell in filter bar that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarEventArgs.View">
      <summary>Gets the view that contains the filter bar cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarEventArgs.X">
      <summary>Gets the x-coordinate of the pointer position.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarEventArgs.Y">
      <summary>Gets the y-coordinate of the pointer position.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterBarHitTestInformation">
      <summary>Represents hit test information for the filter bar of the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterBarHitTestInformation.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.FilterBarHitTestInformation" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterBarHitTestInformation.Column">
      <summary>Gets the column location referred to in the filter bar.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterColumnDefinition">
      <summary>Represents a filter column definition.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FilterColumnDefinition" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor">
      <summary>Creates a new filter column definition with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor(System.Int32)">
      <summary>Creates a filter column definition.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.#ctor(System.Int32,FarPoint.Win.Spread.FilterListBehavior)">
      <summary>Creates a filter column definition with the specified list behavior.</summary>
      <param name="columnIndex">Column index</param>
      <param name="listBehavior">List behavior</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.CanSerializeXml">
      <summary>Gets whether the object in its entirety can be rendered with XML without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.ColumnIndex">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.Filters">
      <summary>Gets the filter item collection from this filter column definition.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinition.ListBehavior">
      <summary>Gets the list behavior.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.Deserialize(System.Xml.XmlNodeReader,FarPoint.Win.Spread.SheetView)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <param name="sheetView">SheetView object that contains the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinition.SetFilterItemListBehavior(FarPoint.Win.Spread.FilterListBehavior,FarPoint.Win.Spread.SheetView)">
      <summary>Set <see cref="T:FarPoint.Win.Spread.FilterListBehavior" /> filter behavior.</summary>
      <param name="filterListBehavior">
        <see cref="T:FarPoint.Win.Spread.FilterListBehavior" /> object</param>
      <param name="sheetView">
        <see cref="T:FarPoint.Win.Spread.SheetView" /> object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterColumnDefinitionCollection">
      <summary>Represents a collection of filter column definitions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.#ctor">
      <summary>Creates a new collection of filter column definitions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Count">
      <summary>Gets or sets the number of filter column definitions in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.IsFixedSize">
      <summary>Gets whether the collection has a fixed size. (This implementation always returns false.)</summary>
      <value>Always returns false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.IsReadOnly">
      <summary>Gets whether the collection is read-only. (This implementation always returns false.)</summary>
      <value>Always returns false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Item(System.Int32)">
      <summary>Gets or sets the filter column definition at the specified position in the collection.</summary>
      <param name="index">Zero-based index of the filter column definition in the collection</param>
      <exception cref="T:System.Exception"> Specified index is not valid; must be between 0 and total number in the collection </exception>
      <exception cref="T:System.ArgumentNullException"> Index not specified or specified index is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Add(FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Adds a filter column definition to the collection.</summary>
      <param name="fcd">Filter column definition to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Clear">
      <summary>Removes all the filter column definitions from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Contains(FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Specifies whether the collection contains the specified filter column definition.</summary>
      <param name="fcd">Filter column definition for which to check the collection</param>
      <returns>true if the sheet is found in the collection; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the filter column definition in the collection to an array.</summary>
      <param name="array">Array to which to copy the filter column definitions</param>
      <param name="arrayIndex">Array index at which to start pasting the filter column definitions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Deserialize(System.Xml.XmlNodeReader,FarPoint.Win.Spread.SheetView)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <param name="sheetView">SheetView object that contains the sheet</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.GetColumnDefinitionIndexFromColumnIndex(System.Int32)">
      <summary>Gets the index of a filter column definition in the collection based on the specified column index.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.GetColumnIndexes">
      <summary>Gets an array of column indexes where filter column definitions exist.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.IndexOf(FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Returns the index of the specified filter column definition in the collection.</summary>
      <param name="fcd">Filter column definition for which to return the index</param>
      <returns>Zero-based index of the filter column definition in the collection, or -1 if the filter column definition was not found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Insert(System.Int32,FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Inserts a filter column definition into the collection at the specified index.</summary>
      <param name="index">Zero-based index at which to insert the filter column definition</param>
      <param name="fcd">Filter column definition to insert into the collection</param>
      <exception cref="T:System.ArgumentNullException"> Filter column definition is not specified or is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Remove(FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Removes the specified filter column definition from the collection.</summary>
      <param name="fcd">Filter column definition to remove from the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.RemoveAt(System.Int32)">
      <summary>Removes a filter column definition from the collection at the specified index.</summary>
      <param name="index">Zero-based index of the filter column definition to remove from the collection</param>
      <exception cref="T:System.IndexOutOfRangeException"> Filter column definition index out of range; must be between 0 and the total number of filter column definitions in the collection </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.FilterColumnDefinitionCollection.Changed">
      <summary>Occurs when a sheet is added, removed, or changed in the collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterCondition">
      <summary>Provides a CustomFilter class that specifies an operator and a value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterCondition.#ctor(FarPoint.Win.Spread.CustomFilterOperatorType,System.Object)">
      <summary>Creates a new filter condition.</summary>
      <param name="operator">Custom filter operator type</param>
      <param name="value">Compares value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterCondition.Operator">
      <summary>Gets or sets the operator for filter comparision.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterCondition.Value">
      <summary>Gets or sets the value used for filter criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterCondition.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterCondition.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterCondition.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterItemCollection">
      <summary>Represents a collection of custom filters.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.#ctor">
      <summary>Creates a custom filter collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterItemCollection.Item(System.Int32)">
      <summary>Gets a custom filter item from the collection.</summary>
      <param name="index">Zero-based index of the filter item in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.Add(FarPoint.Win.Spread.IFilterItem)">
      <summary>Adds a filter item to the collection.</summary>
      <param name="filterItem">Custom filter item to add</param>
      <exception cref="T:System.ArgumentException"> No display name or length of the display name of the specified filter is zero </exception>
      <exception cref="T:System.ArgumentException"> No specified custom filter or specified custom filter is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.Clear">
      <summary>Removes the custom filter items from the filter item list. This method does not remove the DefaultFilterItem from the list if it exists.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Internal implementation of ISerializeSupport interface method. Internal use only.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.Deserialize(System.Xml.XmlNodeReader,FarPoint.Win.Spread.SheetView)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <param name="sheetView">SheetView object that contains the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.Insert(System.Int32,FarPoint.Win.Spread.IFilterItem)">
      <summary>Inserts a filter item into the collection at a specified location.</summary>
      <param name="index">Index in the collection at which to add the filter</param>
      <param name="filterItem">Custom filter item to add</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of filters in the collection </exception>
      <exception cref="T:System.ArgumentException"> No display name or length of the display name of the specified custom filter is zero </exception>
      <exception cref="T:System.ArgumentException"> No specified custom filter or specified custom filter is null </exception>
      <exception cref="T:System.ArgumentException"> Specified custom filter display name already exists in the collection; the name must be unique </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.RemoveAt(System.Int32)">
      <summary>Removes the specified custom filter item from the filter item list. This method does not remove the DefaultfilterItem from the list if it exists.</summary>
      <param name="index">Zero-based index of the custom filter item to remove from the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterItemValue">
      <summary>Provides a ValueFilterItem class used as filter criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.#ctor(System.DateTime)">
      <summary>Creates an instance of the ValueFilterItem object.</summary>
      <param name="value">DateTime value to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.#ctor(System.DateTime,FarPoint.Win.Spread.DateTimeGroupingType)">
      <summary>Creates an instance of the ValueFilterItem object.</summary>
      <param name="value">DateTime value to compare</param>
      <param name="dateTimeGroupingType" />
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.#ctor(System.String)">
      <summary>Creates an instance of the ValueFilterItem object.</summary>
      <param name="value">String to compare which displays text</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterItemValue.Value">
      <summary>Gets the value for the ValueFilterItem object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current System.Object.</summary>
      <param name="obj">The System.Object to compare with the current System.Object.</param>
      <returns>true if the specified System.Object is equal to the current System.Object; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current System.Object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValue.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterItemValueCollection">
      <summary>Provides a ValueFilterItemCollection object used as a collection of alternative ValueFilterItem elements.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.#ctor">
      <summary>Creates a ValueFilterItemCollection instance.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FilterItemValueCollection.Count">
      <summary>Gets the number of elements actually contained in the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.Add(FarPoint.Win.Spread.FilterItemValue)">
      <summary>Adds a ValueFilterItem object to the end of the collection.</summary>
      <param name="item">The ValueFilterItem object to be added to the end of the collection. The value can be null. A duplicate value of an item already contained in the collection will not be added.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.Contains(FarPoint.Win.Spread.FilterItemValue)">
      <summary>Determines whether a ValueFilterItem element is in the collection.</summary>
      <param name="item">The ValueFilterItem object to locate in the collection. The value can be null</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.CopyTo(FarPoint.Win.Spread.FilterItemValue[],System.Int32)">
      <summary>Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator for the collection</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.Remove(FarPoint.Win.Spread.FilterItemValue)">
      <summary>Removes the first occurrence of a specific object from the collection.</summary>
      <param name="item">The ValueFilterItem object to remove from the collection. The value can be null.</param>
      <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FilterItemValueCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FlatFocusIndicatorRenderer">
      <summary>Represents the renderer for drawing the border around the active cell (that has focus).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.#ctor">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.FlatFocusIndicatorRenderer" /> instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.#ctor(System.Int32,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.FlatFocusIndicatorRenderer" /> instance.</summary>
      <param name="thickness">Thickness size.</param>
      <param name="color">Color.</param>
      <param name="backColor">Backcolor.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.BackColor">
      <summary>Gets or sets the backcolor of the gripper indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.Color">
      <summary>Gets or sets the color of the focus indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.Thickness">
      <summary>Gets or sets the thickness in pixels of the focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Deserializes from XML.</summary>
      <param name="r">XML reader</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current System.Object.</summary>
      <param name="obj">The object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the indicator.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="left">Specifies whether to paint left.</param>
      <param name="top">Specifies whether to paint the top.</param>
      <param name="right">Specifies whether to paint right.</param>
      <param name="bottom">Specifies whether to paint the bottom.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.PaintTouchGripper(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Color,System.Drawing.Color)">
      <summary>Paints the gripper focus indicator.</summary>
      <param name="g">Graphics device interface for painting</param>
      <param name="rect">Paint rectangle</param>
      <param name="thickness">Thickness</param>
      <param name="backColor">Background color</param>
      <param name="foreColor">Foreground color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Serializes the object to XML.</summary>
      <param name="w">A <see cref="T:System.Xml.XmlTextWriter" /> object.</param>
      <returns>TRUE if success. Otherwise, FALSE</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatFocusIndicatorRenderer.ToString">
      <summary>Converts to a string value.</summary>
      <returns>A <see cref="T:System.String" />value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FlatInterfaceRenderer">
      <summary>Represents the painter of the visual elements with Excel2013 style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.FlatInterfaceRenderer" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ActiveFontStyle">
      <summary>Gets or sets the font style of the sheet tab when active or the mouse is over the tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ActiveForeColor">
      <summary>Gets or sets the active foreground color of sheet tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ActiveTabBackColor">
      <summary>Gets or sets the overall active tab background color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ArrowColorDisabled">
      <summary>Gets or sets the color of the arrow button when disabled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ArrowColorEnabled">
      <summary>Gets or sets the color of the arrow button when enabled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.BackColor">
      <summary>Gets or sets the overall background color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.BorderColor">
      <summary>Gets or sets the border color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ButtonActiveColor">
      <summary>Gets or sets the button color (add new, arrow) in active mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ButtonNormalColor">
      <summary>Gets or sets the button color (add new) in normal mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.ForeColor">
      <summary>Gets or sets the foreground color of the sheet tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.GrayAreaColor">
      <summary>Gets or sets the color of the gray area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.RangeGroupBackgroundColor">
      <summary>Gets or sets the background color of the range group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.RangeGroupButtonBorderColor">
      <summary>Gets or sets the border color of the range group button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.RangeGroupLineColor">
      <summary>Gets or sets the color of the range group line.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.SplitBarBackgroundColor">
      <summary>Gets or sets the color of the split bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.SplitBoxBackgroundColor">
      <summary>Gets or sets the split box background color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatInterfaceRenderer.SplitBoxBorderColor">
      <summary>Gets or sets the color of the split box border.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripButton,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the button.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="button">Tab strip button.</param>
      <param name="mouseOver">Specifies whether mouse is over.</param>
      <param name="pressed">Specifies whether it is pressed.</param>
      <param name="isLeftToRight">Specifies whether to paint from left to right.</param>
      <param name="enabled">Specifies whether it is enabled.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintGrayArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the gray area.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintRangeGroupArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the range group area.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintRangeGroupButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.GroupState,System.Boolean,System.Boolean)">
      <summary>Paints the range group button.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="groupState">Group state.</param>
      <param name="rowGroup">Specifies whether it is a row group.</param>
      <param name="isLeftToRight">Specifies whether to paint from left to right.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintRangeGroupLevelBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Paints the range group level box.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="groupLevel">Group level index.</param>
      <param name="rowGroup">Specifies whether it is a row group.</param>
      <param name="isLeftToRight">Specifies whether to paint from left to right.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintRangeGroupLine(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point)">
      <summary>Paints a range group line.</summary>
      <param name="g">Graphics object.</param>
      <param name="startPoint">Start point.</param>
      <param name="endPoint">End point.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintRangeGroupPoint(System.Drawing.Graphics,System.Drawing.Point)">
      <summary>Paints a range group point.</summary>
      <param name="g">Graphics object.</param>
      <param name="point">Point to paint.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintScrollBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the scoll box.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintSheetTab(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the tab sheet.</summary>
      <param name="g">Graphics object.</param>
      <param name="sheet">Index of sheetView.</param>
      <param name="text">Text to paint.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="mouseOver">Specifies whether the mouse is over the sheet.</param>
      <param name="focused">Specifies whether the sheet has focus.</param>
      <param name="placement">Tap strip placement.</param>
      <param name="isLeftToRight">Specifies whether it paints from left to right.</param>
      <param name="enabled">Specifies whether the sheet is enabled.</param>
      <param name="font">Font.</param>
      <param name="activeFont">The active font.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintSheetTabPartial(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints a partial tab sheet.</summary>
      <param name="g">Graphics object.</param>
      <param name="sheet">Index of sheetView.</param>
      <param name="text">Text to paint.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="mouseOver">Specifies whether mouse is over.</param>
      <param name="focused">Specifies whether it is focused.</param>
      <param name="placement">Tab strip placement.</param>
      <param name="isLeftToRight">Specifies whether to paint from left to right.</param>
      <param name="enabled">Specifies whether it is enabled.</param>
      <param name="font">Font.</param>
      <param name="activeFont">The active font.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintSpecialSheetTab(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the special tab sheet.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="mouseOver">Specifies whether mouse is over.</param>
      <param name="placementbStrip">Tab strip placement.</param>
      <param name="isLeftToRight">Specifies whether to paint from left to right.</param>
      <param name="enabled">Specifies whether the sheet is enabled.</param>
      <param name="font">Font.</param>
      <param name="activeFont">The active font.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintSplitBar(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split bar.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintSplitBarCrossover(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split bar cross-over.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintSplitBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split box.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintTabStripBackground(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripPlacement)">
      <summary>Paints the tab strip background.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="placement">Tap strip placement.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.PaintTabstripResizeBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the tab strip resize box.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatInterfaceRenderer.ToString">
      <summary>Gets the string.</summary>
      <returns>A <see cref="T:System.String" /> object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FlatScrollBarRenderer">
      <summary>Represents the renderer that paints the the scroll bar with the flat skin.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.FlatScrollBarRenderer" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatScrollBarRenderer.ArrowColor">
      <summary>Gets or sets the arrow color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatScrollBarRenderer.BackColor">
      <summary>Gets or sets the background color of scroll bar elements.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatScrollBarRenderer.BorderActiveColor">
      <summary>Gets or sets the border color of scroll bar elements in an active state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatScrollBarRenderer.BorderColor">
      <summary>Gets or sets the border color of scroll bar elements.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FlatScrollBarRenderer.TrackBarBackColor">
      <summary>Gets or sets the background color of the track bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.Clone">
      <summary>Clones this object.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.FlatScrollBarRenderer" /></returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Deserializes from XML.</summary>
      <param name="r">
        <see cref="T:System.Xml.XmlNodeReader" /> reader.</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws an arrow button.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawCustomButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the custom button.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawHorizontalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal scroll box.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawHorizontalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal scroll box grip.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawLeftHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the left horizontal track.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawLowerVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the lower vertical track.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawRightHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the right horizontal track.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawUpperVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the upper vertical track.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawVerticalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical scroll box.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.DrawVerticalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical scroll box grip.</summary>
      <param name="g">Graphics object.</param>
      <param name="bound">Rectangle boundary.</param>
      <param name="element">FpScrollBar button.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Serializes to XML.</summary>
      <param name="w">
        <see cref="T:System.Xml.XmlTextWriter" /> writer.</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatScrollBarRenderer.ToString">
      <summary>Gets a string.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FlatSelectionRenderer">
      <summary>Represents the default selection renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.FlatSelectionRenderer" /> object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintColumnFooterSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the column footer selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintColumnHeaderSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the column header selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintCornerFooterSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the corner footer selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintCornerHeaderSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the corner header selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintFilterBarHeaderSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the filter-bar header selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintFilterBarSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the filter-bar selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintRowHeaderSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the row header selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.PaintSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the selection.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FlatSelectionRenderer.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FocusProcess">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that keeps the focus on the validating <see cref="T:FarPoint.Win.Spread.Cell" /> when validation fails.</summary>
      <remarks>
        <para> This action is similar to setting cancel to <see langword="true" /> in the <see cref="!:CellValidating" /> event. If you change the <see cref="P:FarPoint.Win.Spread.ValidateActionBase.DoActionReason" />, the behavior of this action is special. For example, if you add <see cref="F:FarPoint.Win.Spread.ValidateReasons.EndEdit" /> and <see cref="F:FarPoint.Win.Spread.ValidateReasons.CancelEdit" />, the validating cell cannot end edit mode even if you do not leave the current cell. </para>
        <para> This action only takes effect when setting the <see cref="P:FarPoint.Win.Spread.FocusProcess.PreventFocusLeave" /> property value to <see langword="true" />. </para>
      </remarks>
      <seealso cref="T:FarPoint.Win.Spread.ValidateActionBase" />
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FocusProcess" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FocusProcess" /> class.</summary>
      <param name="preventFocusLeave">
        <see langword="true" /> to prevent the focus from moving; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FocusProcess.PreventFocusLeave">
      <summary>Gets or sets whether to keep the focus on the validating <see cref="T:FarPoint.Win.Spread.Cell" />.</summary>
      <value>
        <see langword="true" /> to keep the focus on the validating <see cref="T:FarPoint.Win.Spread.Cell" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.FocusProcess" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.FocusProcess" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current <see cref="T:FarPoint.Win.Spread.FocusProcess" /> using the <paramref name="context" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates whether the validation failed, and that includes relative context information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FocusProcess.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FormatCells">
      <summary>Represents the format cell dialog.</summary>
      <remarks>The format cell dialog works in the flat style mode only.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.FormatCells.#ctor(GrapeCity.Spreadsheet.IRange,FarPoint.Win.Spread.FormatCells.FormatCellsTab)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FormatCells" /> class.</summary>
      <param name="cells">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> value indicates the formatted cells.</param>
      <param name="activeTab">The default tab to display.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormatCells.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference,FarPoint.Win.Spread.FormatCells.FormatCellsTab)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FormatCells" /> class.</summary>
      <param name="worksheet">The worksheet contains formatted cells.</param>
      <param name="cells">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> value indicates the formatted cells.</param>
      <param name="activeTab">The default tab to display.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormatCells.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference[],FarPoint.Win.Spread.FormatCells.FormatCellsTab)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FormatCells" /> class.</summary>
      <param name="worksheet">The worksheet contains formatted cells.</param>
      <param name="cells">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> array indicates the formatted cells.</param>
      <param name="activeTab">The default tab to display.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FormatCells.SelectedTab">
      <summary>Gets the current display tab.</summary>
      <value>The current display selected tab.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.FormatCells.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FormulaConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that uses a formula to determine which cells to format before starting to paint the background.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaConditionalFormattingRule.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FormulaConditionalFormattingRule" /> class.</summary>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaConditionalFormattingRule.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FormulaConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FormulaConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaConditionalFormattingRule.Formula">
      <summary>Gets or sets the formula.</summary>
      <value>The formula.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaConditionalFormattingRule.Execute(System.Int32,System.Int32,System.Object)">
      <summary>Executes the conditional format rule to change the cell's style.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value to determine what the result style is.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FormulaEditorUI">
      <summary>Internal use only. Represents the user interface for the Formula Editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaEditorUI.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new user interface for the Formula Editor for the specified sheet.</summary>
      <param name="sheetView">Sheet on which to add formula</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaEditorUI.SheetView">
      <summary>Gets or sets the SheetView the editor works with.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaEditorUI.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
      <summary>Adds the specified custom function information into the list of available functions in the Formula Editor.</summary>
      <param name="customFunction">Custom function information to add</param>
      <returns>true if the custom function information was successfully added; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaEditorUI.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaEditorUI.GetFormula">
      <summary>Gets the formula from the text box of the Formula Editor.</summary>
      <returns>String that contains the formula</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaEditorUI.SetFormula(System.String)">
      <summary>Sets the formula into the text box of the Formula Editor.</summary>
      <param name="formula">String that contains the formula</param>
    </member>
    <member name="E:FarPoint.Win.Spread.FormulaEditorUI.ApplyButtonClicked">
      <summary>Occurs when the Apply button is clicked in the Formula Editor.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FormulaEditorUI.ApplyChanged">
      <summary>Occurs when the changes are applied from the Formula Editor.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FormulaProvider">
      <summary>Represents a way to provide a formula property (and trigger event) to any control on the form.</summary>
      <remarks>The FormulaProvider component requires a license for Spread .NET Professional.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.#ctor">
      <summary>Creates a new formula property (and trigger event) provider.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaProvider.AutoCalculate">
      <summary>Gets or sets whether the formula is automatically calculated.</summary>
      <value>
        <c>true</c> to calculate automatically; <c>false</c> otherwise</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaProvider.CalculationPolicy">
      <summary>Gets or sets the calculation policy.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaProvider.ShowError">
      <summary>Gets or sets whether this instance shows an error icon next to the control that has an error in the formula.</summary>
      <value>
        <c>true</c> if the error icon will be shown; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaProvider.ShowPrecedents">
      <summary>Gets or sets whether this instance is show precedents.</summary>
      <value>
        <c>true</c> if this instance is show precedents; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.AddCustomFunctionInfo(FarPoint.CalcEngine.FunctionInfo)">
      <summary>Adds the custom function information that is used when parsing and evaluating the formula.</summary>
      <param name="func">Custom function information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.AddQueryValueName(System.String)">
      <summary>Adds the name of the query value which is used when parse and evaluate formula.</summary>
      <param name="customName">Name of the custom.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.Calculate">
      <summary>Calculates the result for the formula of each control and updates the corresponding property.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.CanExtend(System.Object)">
      <summary>Specifies whether this object can provide its extender properties to the specified object. Only support Windows.Forms.Control</summary>
      <param name="extendee">
        <see cref="T:System.Object" /> to receive the extender properties.</param>
      <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:FarPoint.Win.Spread.FormulaProvider" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.GetFormula(System.Windows.Forms.Control)">
      <summary>Gets the formula of the control.</summary>
      <param name="control">Control that contains this formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.GetFormulaTriggerEvent(System.Windows.Forms.Control)">
      <summary>Gets the formula trigger event for the specified control.</summary>
      <param name="control">Control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.GetPrecedenceControls(System.Windows.Forms.Control)">
      <summary>Gets the precedence controls.</summary>
      <param name="control">Control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.RemoveControl(System.ComponentModel.IComponent)">
      <summary>Sets all the extender properties to empty for the specified component (control).</summary>
      <param name="com">Component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.RemoveCustomFunctionInfo(System.String)">
      <summary>Removes the custom function information.</summary>
      <param name="funcName">Name of the function</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.RemoveQueryValueName(System.String)">
      <summary>Removes the name of the query value.</summary>
      <param name="customName">Name of the custom.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.SetFormula(System.Windows.Forms.Control,System.String)">
      <summary>Sets the formula for the specified control.</summary>
      <param name="control">Control that contains this formula</param>
      <param name="formulaExpression">Formula expression</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaProvider.SetFormulaTriggerEvent(System.Windows.Forms.Control,System.String)">
      <summary>Sets the formula trigger event for the specified control.</summary>
      <param name="control">Control</param>
      <param name="triggerEvent">Trigger event</param>
    </member>
    <member name="E:FarPoint.Win.Spread.FormulaProvider.BeforeSettingPropertyValue">
      <summary>Occurs before the property value is set.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FormulaProvider.QueryValue">
      <summary>Occurs when the value is queried.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FormulaTextBox">
      <summary>Represents the floating formula editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.#ctor">
      <summary>Creates a new floating formula editor bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.AcceptsTab">
      <summary>Internal use only. Gets or sets whether tabs are accepted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.AllowDrop">
      <summary>Internal use only. Gets or sets whether to allow drag and drop.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.AutoComplete">
      <summary>Gets or sets whether to allow the automatic completion of text in the formula text box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.AutoScrollOffset">
      <summary>Internal use only. Gets or sets the automatic scroll offset.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.AutoWordSelection">
      <summary>Internal use only. Gets or sets whether to automatically select words.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.BindingContext">
      <summary>Internal use only. Gets or sets the binding context.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.BulletIndent">
      <summary>Internal use only. Gets or sets the bullet indent.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.CanFocus">
      <summary>Internal use only. Gets or sets whether the user can set focus to the cell using the keyboard or mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Capture">
      <summary>Internal use only. Gets or sets whether to capture.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.CausesValidation">
      <summary>Internal use only. Gets whether to cause validation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.ContextMenu">
      <summary>Internal use only. Gets or sets the context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.ContextMenuStrip">
      <summary>Internal use only. Gets or sets the context menu strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.DataBindings">
      <summary>Internal use only. Gets or sets .</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.DetectUrls">
      <summary>Internal use only. Gets whether it detects URLs.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.EnableAutoDragDrop">
      <summary>Internal use only. Gets whether automatic drag-drop is enabled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.HideSelection">
      <summary>Internal use only. Gets whether to hide the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Lines">
      <summary>Internal use only. Gets the lines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Modified">
      <summary>Internal use only. Gets or sets whether modified.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Multiline">
      <summary>Internal use only. Gets or sets whether multiple lines are allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Rtf">
      <summary>Internal use only. Gets RTF string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectedRtf">
      <summary>Internal use only. Gets selected RTF string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectedText">
      <summary>Internal use only. Gets or sets the selected text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionAlignment">
      <summary>Internal use only. Gets the alignment of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionBackColor">
      <summary>Internal use only. Gets the background color of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionBullet">
      <summary>Internal use only. Gets the bullet for the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionCharOffset">
      <summary>Internal use only. Gets the character offset of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionColor">
      <summary>Internal use only. Gets or sets the color of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionFont">
      <summary>Internal use only. Gets or sets the font of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionHangingIndent">
      <summary>Internal use only. Gets the hanging indent of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionIndent">
      <summary>Internal use only. Gets the indent of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionLength">
      <summary>Internal use only. Gets or sets the length of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionProtected">
      <summary>Internal use only. Gets or sets whether the selection is protected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionRightIndent">
      <summary>Internal use only. Gets the right indent of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionStart">
      <summary>Internal use only. Gets or sets the start of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.SelectionTabs">
      <summary>Internal use only. Gets the tabs of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.ShortcutsEnabled">
      <summary>Internal use only. Gets or sets whether the shortcut keys are enabled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Spread">
      <summary>Gets or sets the Spread.</summary>
      <value>Spread</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.Text">
      <summary>Gets or sets the current text in the formula text box.</summary>
      <value>Text displayed in the control</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FormulaTextBox.ZoomFactor">
      <summary>Internal use only. Gets the numeric scaling factor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.Attach(FarPoint.Win.Spread.FpSpread)">
      <summary>Attaches the specified Spread component to the formula text box.</summary>
      <param name="spread">Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.Detach">
      <summary>Detaches the Spread component from the formula text box.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.TextBox" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.Finalize">
      <summary>The destructor method.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is an input key or a special key that requires preprocessing.</summary>
      <param name="keyData">One of the keys value.</param>
      <returns>true if the specified key is an input key; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.OnTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:TextChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FormulaTextBox.WndProc(System.Windows.Forms.Message@)">
      <summary>Handles windows messages.</summary>
      <param name="m">The message</param>
    </member>
    <member name="E:FarPoint.Win.Spread.FormulaTextBox.FormulaChanged">
      <summary>Raised when the formula is changed. This is different from TextChanged since if the text is changed manually, the FormulaChanged event is not raised.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpBaseStatusBarElement">
      <summary>Represents the basis for all status bar elements. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.#ctor">
      <summary>Instantiate a FpBaseStatusBarElement object.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FpBaseStatusBarElement.align">
      <summary>Align setting of a status bar element.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FpBaseStatusBarElement.bound">
      <summary>represent the rectangle bounding the eelements</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FpBaseStatusBarElement.visible">
      <summary>The visible state of a status bar element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpBaseStatusBarElement.Align">
      <summary>Gets or sets the element alignment in the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpBaseStatusBarElement.MenuText">
      <summary>Gets or sets the text of element in context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpBaseStatusBarElement.Owner">
      <summary>Gets or sets the status bar that contains the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpBaseStatusBarElement.Text">
      <summary>Gets or sets the element name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpBaseStatusBarElement.ValueText">
      <summary>Get value as string type</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpBaseStatusBarElement.Visible">
      <summary>Gets or sets whether the element is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.CalculateValue">
      <summary>Calcualate value of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Deserialize element from Xml</summary>
      <param name="r" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.Dopaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the element.</summary>
      <param name="g">Graphics device interface for painting</param>
      <param name="r">Rectangle that contains the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.FireOnChanged(System.String)">
      <summary>Fire event when the element is changed</summary>
      <param name="propertyName" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.GetPreferedWidth">
      <summary>Returns the preferred width of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.GetTextTip(System.Drawing.Point)">
      <summary>Returns the text tip when the mouse moves over the element.</summary>
      <param name="pt" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.OnAttachSpreadContext">
      <summary>Calls the function when attaching the spread context to the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.OnDetachSpreadContext">
      <summary>Calls the function when detaching the spread context to the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Handles the mouse down event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.OnMouseLeave(System.EventArgs)">
      <summary>Handles the mouse leave event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Handles the mouse move event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse up event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.Serialize(System.Xml.XmlTextWriter)">
      <summary>Save element to XML</summary>
      <param name="w" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpBaseStatusBarElement.SetBound(System.Drawing.Rectangle)">
      <summary>Sets the element boundary.</summary>
      <param name="r" />
    </member>
    <member name="E:FarPoint.Win.Spread.FpBaseStatusBarElement.OnChanged">
      <summary>Represents the event that fires when the element is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpHorizontalScrollBar">
      <summary>Represents the Spread horizontal scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpHorizontalScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FpHorizontalScrollBar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpHorizontalScrollBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread horizontal scroll bar from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpHorizontalScrollBar.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <value>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpHorizontalScrollBar.DefaultSize">
      <summary>Gets the default size of the control.</summary>
      <value>The default <see cref="T:System.Drawing.Size" /> of the control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpHorizontalScrollBar.RightToLeft">
      <summary>Gets or sets the right-to-left layout setting of the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpHorizontalScrollBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBar">
      <summary>Represents the Spread scroll bar. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.#ctor">
      <summary>Initializes the <see cref="T:FarPoint.Win.Spread.FpScrollBar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.AutoSize">
      <summary>This property is not relevant for this class.</summary>
      <value>true if enabled; otherwise, false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.BackColor">
      <summary>Gets or sets the background color for the control.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.BackgroundImage">
      <summary>Gets or sets the background image displayed in the control.</summary>
      <value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.BackgroundImageLayout">
      <summary>Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</summary>
      <value>One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />). <see cref="F:System.Windows.Forms.ImageLayout.Tile" nolink="true" /> is the default value.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified enumeration value does not exist. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Buttons">
      <summary>Gets or sets the Spread scroll bar buttons collection.</summary>
      <value>Buttons</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.ContextMenu">
      <summary>Gets or sets the shortcut menu associated with the control.</summary>
      <value>A <see cref="T:System.Windows.Forms.ContextMenu" /> that represents the shortcut menu associated with the control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <value>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.DefaultImeMode">
      <summary>Gets the default Input Method Editor (IME) mode supported by the control.</summary>
      <value>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.DefaultMargin">
      <summary>Gets the space between controls, in pixels, that is specified by default.</summary>
      <value>A <see cref="T:System.Windows.Forms.Padding" /> that represents the default space between controls.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Font">
      <summary>Gets or sets the font of the text displayed by the control.</summary>
      <value>The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.ForeColor">
      <summary>Gets or sets the foreground color of the control.</summary>
      <value>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Height">
      <summary>Gets or sets the height of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.ImeMode">
      <summary>Gets or sets the Input Method Editor (IME) mode of the control.</summary>
      <value>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values. The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Location">
      <summary>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</summary>
      <value>The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the control relative to the upper-left corner of its container.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Renderer">
      <summary>Get or sets the scroll bar renderer that draws the skin of the scroll bar.</summary>
      <value>Renderer</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.ScrollBarShowMax">
      <summary>Gets the value of ScrollbarShowMax. If the parent control is Spread; return parent.ScrollBarShowMax, else return true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Size">
      <summary>Gets or sets the size of the control.</summary>
      <value>
        <see cref="T:System.Drawing.Size" /> that represents the height and width of the control in pixels.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.TabIndex">
      <summary>Gets or sets the tab order of the control within its container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.TabStop">
      <summary>Gets or sets whether the user can give the focus to this control using the Tab key.</summary>
      <value>true if the user can give focus to the control using the Tab key; otherwise, false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Text">
      <summary>Gets or sets the text associated with this control.</summary>
      <value>The text associated with this control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBar.Width">
      <summary>Gets or sets the width of the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values</param>
      <param name="handled" />
      <returns>true if the specified key is a regular input key; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnButtonClick(System.Object,FarPoint.Win.Spread.FpScrollBarButtonClickEventArgs)">
      <summary>Called when clicking the scroll bar button.</summary>
      <param name="sender">The event source</param>
      <param name="e">A FpScrollBarButtonClickEventArgs that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnDeserialization(System.Object)">
      <summary>Runs when the entire object graph has been deserialized.</summary>
      <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnEnabledChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnRightToLeftChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnScroll(System.Windows.Forms.ScrollEventArgs)">
      <summary>Raises the Scroll event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs" /> instance that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.OnValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpScrollBar.ValueChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBar.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.AutoSizeChanged">
      <summary>This event is not relevant for this class.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.BackgroundImageLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.ButtonClick">
      <summary>Occurs when a button of the scroll bar is clicked.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.Click">
      <summary>Occurs when the control is clicked.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.DoubleClick">
      <summary>Occurs when the control is double-clicked.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.FontChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Font" /> property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.ForeColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.ImeModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.MouseClick">
      <summary>Occurs when the control is clicked with the mouse.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked with the mouse.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.Scroll">
      <summary>Occurs when the scroll bar is scrolling.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.TabIndexChanged">
      <summary>This event is not relevant for this class.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.TabStopChanged">
      <summary>This event is not relevant for this class.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpScrollBar.ValueChanged">
      <summary>Occurs when the value of the scroll bar is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButton">
      <summary>Represents the Spread scroll bar button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.#ctor">
      <summary>Creates a new Spread scroll bar button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButton.ChangeType">
      <summary>Gets or sets the type of change of the scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButton.ChangeValue">
      <summary>Gets or sets the moving value of the button when the scroll bar button is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButton.ScrollOrientation">
      <summary>Gets the orientation of the scroll bar.</summary>
      <value>Scroll orientation</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButton.Visible">
      <summary>Gets or sets whether the scroll bar is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.GetPreferredSize">
      <summary>Gets the preferred (maximum) size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButton.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonBackwardHome">
      <summary>Represents a Spread scroll bar backward-to-home button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardHome.#ctor">
      <summary>Creates a new Spread scroll bar backward-to-home button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardHome.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar backward-to-home button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardHome.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardHome.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardHome.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonBackwardLine">
      <summary>Represents a Spread scroll bar back-by-line button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardLine.#ctor">
      <summary>Creates a new Spread scroll bar back-by-line button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardLine.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar back-by-line button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardLine.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardLine.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardLine.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonBackwardPage">
      <summary>Represents a Spread scroll bar page back button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardPage.#ctor">
      <summary>Creates a new Spread scroll bar page back button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardPage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar page back button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardPage.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardPage.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonBackwardPage.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonClickEventArgs">
      <summary>Represents the event data for the FpScrollBarButtonClickEvent, for the Spread component, which occurs when the Spread scroll bar button is clicked.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonClickEventArgs.#ctor(FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Creates a new Spread scroll bar button click event.</summary>
      <param name="element">FarPoint scroll bar button element</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonClickEventArgs.Button">
      <summary>Gets or sets the scroll bar button that is clicked.</summary>
      <value>FpScrollBarButton object.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonCollection">
      <summary>Represents the collection of elements for the Spread scroll bar. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.#ctor">
      <summary>Creates a new collection of Spread scroll bar buttons.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.#ctor(FarPoint.Win.Spread.FpScrollBarButton[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FpScrollBarButtonCollection" /> class.</summary>
      <param name="buttons">Array of scroll bar button objects</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.#ctor(System.String)">
      <summary>Creates a new collection of Spread scroll bar buttons with the specified value.</summary>
      <param name="value">String object</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.Count">
      <summary>Gets the number of buttons contained in the <see cref="T:System.Collections.ICollection" />.</summary>
      <value>The number of buttons contained in the <see cref="T:System.Collections.ICollection" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.Empty">
      <summary>Gets the empty collection of the Spread scroll bar buttons.</summary>
      <value>Empty object of FpScrollBarButtonCollection</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.IsFixedSize">
      <summary>Gets whether the <see cref="T:System.Collections.IList" /> has a fixed size.</summary>
      <value>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</summary>
      <value>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.IsSynchronized">
      <summary>Gets whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <value>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Object" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarButtonCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <value>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" /></param>
      <returns>The position into which the new element was inserted.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" nolink="true" /> has a fixed size. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.AddRange(System.Collections.ICollection)">
      <summary>Adds a range of objects of the collection.</summary>
      <param name="c">Collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" /></param>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the buttons of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" nolink="true" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the buttons copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" nolink="true" /> must have zero-based indexing</param>
      <param name="index">The zero-based index in array at which copying begins</param>
      <exception cref="T:System.ArgumentNullException">array is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
      <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of buttons in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from index to the end of the destination array. </exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination array. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" /></param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" /></param>
      <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" nolink="true" /> has a fixed size. </exception>
      <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" /></param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" nolink="true" /> has a fixed size. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only.-or- The <see cref="T:System.Collections.IList" nolink="true" /> has a fixed size. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.op_Implicit(FarPoint.Win.Spread.ScrollBarButtons)~FarPoint.Win.Spread.FpScrollBarButtonCollection">
      <summary>Performs an implicit conversion from <see cref="T:FarPoint.Win.Spread.ScrollBarButtons" /> to <see cref="T:FarPoint.Win.Spread.FpScrollBarButtonCollection" />.</summary>
      <param name="scrollBarButtons">ScrollBarButtons object</param>
      <returns>The FpScrollBarButtonCollection object of the conversion</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonCollection.op_Implicit(FarPoint.Win.Spread.FpScrollBarButtonCollection)~FarPoint.Win.Spread.ScrollBarButtons">
      <summary>Performs an implicit conversion from <see cref="T:FarPoint.Win.Spread.FpScrollBarButtonCollection" /> to <see cref="T:FarPoint.Win.Spread.ScrollBarButtons" />.</summary>
      <param name="buttonsCollection">FpScrollBarButtonCollection object</param>
      <returns>The ScrollBarButtons object of the conversion</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonForwardEnd">
      <summary>Represents a Spread scroll bar forward-to-end button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardEnd.#ctor">
      <summary>Creates a new Spread scroll bar forward-to-end button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardEnd.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar forward-to-end button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardEnd.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardEnd.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardEnd.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonForwardLine">
      <summary>Represents a Spread scroll bar forward-by-line button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardLine.#ctor">
      <summary>Creates a new Spread scroll bar forward-by-line button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardLine.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar forward-by-line button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardLine.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardLine.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardLine.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonForwardPage">
      <summary>Represents a Spread scroll bar page forward button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardPage.#ctor">
      <summary>Creates a new Spread scroll bar page back button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardPage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar page back button from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardPage.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardPage.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarButtonForwardPage.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarComboThumb">
      <summary>Represents a combination of the backward track, forward track, and thumb of the scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.#ctor(System.Object,FarPoint.Win.Spread.FpScrollBarTrackBackward,FarPoint.Win.Spread.FpScrollBarThumb,FarPoint.Win.Spread.FpScrollBarTrackForward)">
      <summary>Creates a new combination of the backward track, forward track, and thumb of the scroll bar with the specified parent.</summary>
      <param name="parent">Parent object</param>
      <param name="scrollTrackBackward">Scroll bar track backward object</param>
      <param name="scrollThumb">Scroll bar thumb object</param>
      <param name="scrollTrackForward">Scroll bar track forward object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.#ctor">
      <summary>Creates a new combination of the backward track, forward track, and thumb of the scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarComboThumb.ScrollThumb">
      <summary>Gets or sets the scroll box of the Spread scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarComboThumb.ScrollTrackBackward">
      <summary>Gets or sets the backward track of the Spread scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarComboThumb.ScrollTrackForward">
      <summary>Gets or sets the forward track of the Spread scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.GetPreferredSize">
      <summary>Gets the preferred (maximum) size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarComboThumb.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarGripper">
      <summary>Represents the Spread scroll bar grip.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarGripper.#ctor(System.Object)">
      <summary>Creates a new Spread scroll bar grip with the specified parent.</summary>
      <param name="parent">Parent object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarGripper.#ctor">
      <summary>Creates a new Spread scroll bar grip.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarGripper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar grip from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarGripper.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarGripper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarGripper.GetPreferredSize">
      <summary>Gets the preferred (maximum) size.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarThumb">
      <summary>Represents a Spread scroll bar thumb.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.#ctor(System.Object)">
      <summary>Creates a new Spread scroll bar thumb with the specified parent.</summary>
      <param name="parent">Parent object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.#ctor(System.Object,FarPoint.Win.Spread.FpScrollBarGripper)">
      <summary>Creates a new Spread scroll bar thumb with the specified parent and grip.</summary>
      <param name="parent">Parent object</param>
      <param name="scrollGripper">FarPoint scroll bar gripper object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.#ctor">
      <summary>Creates a new Spread scroll bar thumb.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar thumb from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpScrollBarThumb.ScrollGripper">
      <summary>Gets or sets the Spread scroll bar grip.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarThumb.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarTrack">
      <summary>Represents a Spread scroll bar track. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrack.#ctor(System.Object)">
      <summary>Creates a new Spread scroll bar track with the specified parent.</summary>
      <param name="parent">Parent object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrack.#ctor">
      <summary>Creates a new Spread scroll bar track.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrack.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar track from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarTrackBackward">
      <summary>Represents the backward track of the Spread scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackBackward.#ctor(System.Object)">
      <summary>Creates a new Spread scroll bar backward track with the specified parent.</summary>
      <param name="parent">Parent object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackBackward.#ctor">
      <summary>Creates a new Spread scroll bar backward track.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackBackward.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar backward track from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackBackward.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackBackward.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarTrackForward">
      <summary>Represents the forward track of the Spread scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackForward.#ctor(System.Object)">
      <summary>Creates a new Spread scroll bar forward track with the specified parent.</summary>
      <param name="parent">Parent object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackForward.#ctor">
      <summary>Creates a new Spread scroll bar forward track.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackForward.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread scroll bar forward track from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackForward.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpScrollBarTrackForward.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
    </member>
    <member name="T:FarPoint.Win.Spread.FpSpread">
      <summary>Represents the Spreadsheet component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.#ctor">
      <summary>Creates a new Spreadsheet component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.#ctor(FarPoint.Win.Spread.LegacyBehaviors,System.Object)">
      <summary>Creates a new Spreadsheet component.</summary>
      <param name="legacyBehaviors">The <see cref="T:FarPoint.Win.Spread.LegacyBehaviors" /> value that indicating which behaviors are backward-compatible.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.#ctor(FarPoint.Win.Spread.LegacyBehaviors)">
      <summary>Creates a new Spreadsheet component.</summary>
      <param name="legacyBehaviors">The <see cref="T:FarPoint.Win.Spread.LegacyBehaviors" /> value that indicating which behaviors are backward-compatible.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.About">
      <summary>Gets the version information about the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ActiveChartIndicator">
      <summary>Gets the active chart indicator.</summary>
      <value>The active chart indicator.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ActiveChildControl">
      <summary>Gets or sets the active embedded child control object of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ActiveSheet">
      <summary>Gets or sets the active sheet in the component.</summary>
      <exception cref="T:System.ArgumentException"> Specified sheet is not in the collection </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ActiveSheetIndex">
      <summary>Gets or sets the index of the active sheet in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ActiveWindowlessObject">
      <summary>Gets or sets the active windowless shape object of the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowCellContentFloat">
      <summary>Indicates whether the content of a cell should float when the display rectangle of that cell changes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowCellOverflow">
      <summary>Gets or sets whether data can overflow into adjacent empty cells in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowChildControlDesign">
      <summary>Gets or sets whether child controls allow user actions for design.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowColumnMove">
      <summary>Gets or sets whether to allow the user to move columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowColumnMoveMultiple">
      <summary>Gets or sets whether to allow the user to move multiple columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowDragDrop">
      <summary>Gets or sets whether to allow the user to drag-and-drop a range of cells in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowDragFill">
      <summary>Gets or sets whether to allow the user to drag and fill cells in the component with the contents of a cell or cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowEditOverflow">
      <summary>Gets or sets whether data can overflow into adjacent empty cells in the component while that cell is in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowEditorReservedLocations">
      <summary>Gets or sets whether cell editor reserved mouse locations are allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowRowMove">
      <summary>Gets or sets whether to allow the user to move rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowRowMoveDataAllowAddNew">
      <summary>Gets or sets a value that indicates whether to allow the user to move the add new row or asterisk row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowRowMoveMultiple">
      <summary>Gets or sets whether to allow the user to move multiple rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowSheetMove">
      <summary>Gets or sets whether sheets can be moved by dragging and dropping the sheet tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowUndo">
      <summary>Gets or sets whether to allow the user to undo edit operations.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowUserFormulas">
      <summary>Gets or sets whether to allow the user to enter formulas in a cell in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowUserToTouchZoom">
      <summary>Gets or sets a value that indicates whether to allow the user to zoom FpSpread using touch behavior.</summary>
      <value>
        <see langword="true" /> if the user can zoom <see cref="T:FarPoint.Win.Spread.FpSpread" /> using touch behavior; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AllowUserZoom">
      <summary>Gets or sets whether the user can scale the display of the component using the Ctrl key and the mouse wheel.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoAdvance">
      <summary>Gets or sets whether the user can move to another control from the first or last cell using Shift+Tab or the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoClipboard">
      <summary>Gets or sets whether the component handles the shortcut keys for Clipboard actions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoFitColumnOptions">
      <summary>Gets or sets the behavior of automatic fit when double-clicking the right edge of the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoFitRowOptions">
      <summary>Gets or sets the behavior of automatic fit when double-clicking the bottom edge of the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoImeMode">
      <summary>Gets or sets whether to use the CharacterSet property in a cell that is not in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoLaunchSpreadDesigner">
      <summary>Gets or sets whether Spread Designer automatically launches when a Spread component is placed on a form.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.AutoScrollWhenKeyboardShowing">
      <summary>Gets or sets the automatic scroll when the keyboard is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.BackgroundImage">
      <summary>Gets or sets the image to paint in the background of the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.BorderCollapse">
      <summary>Gets or sets whether adjacent cell borders are collapsed into a single line for cells in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.BorderStyle">
      <summary>Gets or sets the style of the border around the component.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified value is not a valid border style </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.BoundaryFeedbackMode">
      <summary>Gets or sets the way <see cref="T:FarPoint.Win.Spread.FpSpread" /> reacts when the manipulation has gone beyond certain boundaries.</summary>
      <remarks>The <c>BoundaryFeedbackMode</c> property specifies the way <see cref="T:FarPoint.Win.Spread.FpSpread" /> reacts when users pan to scroll out of the scrollable area.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ButtonDrawMode">
      <summary>Gets or sets whether to display buttons in button and combo box cells in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.CellNoteIndicatorRenderer">
      <summary>Gets or sets the cell note indicator renderer for drawing the cell note indicator in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.CellNoteIndicatorVisible">
      <summary>Gets or sets whether the cell note indicator appears in cells in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.CellSpanSelectionPolicy">
      <summary>Gets or sets the selection model to use with the span.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ClipboardOptions">
      <summary>Gets or sets whether the headers and the filter bar are included when data is copied to or pasted from the Clipboard in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ClipboardPasteToFill">
      <summary>Gets or sets whether a single cell copied to the Clipboard fills the range when pasted from the Clipboard to the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ColumnSplitBoxAlignment">
      <summary>Gets or sets the alignment of the column split box relative to the horizontal scroll bar for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ColumnSplitBoxPolicy">
      <summary>Gets or sets the display policy for the column split box for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.CreateParams">
      <summary>Gets the required creation parameters when the component handle is created.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Cursor">
      <summary>Gets or sets the pointer to display in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.CustomFillSeriesList">
      <summary>Gets the custom list fill series.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.CustomIconContainer">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.CustomIconContainer" /> object for the current spread object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DataMember">
      <summary>Gets or sets the name of the data member that populates the active sheet in this component.</summary>
      <exception cref="T:System.InvalidOperationException"> Sheet count is zero; must have at least one sheet before the data member can be set </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DataSource">
      <summary>Gets or sets the name of the data source that populates the active sheet in this component.</summary>
      <exception cref="T:System.InvalidOperationException"> Sheet count is zero; must have at least one sheet before DataSource can be set </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DefaultSize">
      <summary>Gets the default size of the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DefaultSkin">
      <summary>Gets, or Sets the default Skin that will be used for painting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DesignMode">
      <summary>Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component" /> is currently in design mode.</summary>
      <value>true if the <see cref="T:System.ComponentModel.Component" /> is in design mode; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DocumentProperties">
      <summary>Gets or sets the DocumentProperties object that represents all properties of the Spread document.</summary>
      <value>A DocumentProperties object represents all properties of the Spread document.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.DragFillDataOnly">
      <summary>Gets or sets a value that indicates whether the drag fill action copies data only.</summary>
      <value>
        <c>true</c> if the drag fill action copies data only; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.EditMode">
      <summary>Gets or sets whether the active cell in the component is in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.EditModePermanent">
      <summary>Gets or sets whether edit mode remains on for any cell in the component when that cell becomes active.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.EditModeReplace">
      <summary>Gets or sets whether the existing contents of a cell in the component are selected when that cell enters edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.EditingControl">
      <summary>Gets the Control object editing the active cell, or null if the component is not in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.EnableCrossSheetReference">
      <summary>Enables cross-sheet referencing for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.EnableDragFillMenu">
      <summary>Gets or sets a value to show drag fill button and drag fill context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.FocusRenderer">
      <summary>Gets or sets the focus indicator renderer for drawing the focus rectangle in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Font">
      <summary>Gets or sets the default font for sheets in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ForeColor">
      <summary>Not supported in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.GroupBarText">
      <summary>Gets or sets the group bar text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.HeaderIndicatorPositionAdjusting">
      <summary>Gets or sets the distance between the sorting and filtering indicators and the right edge of the column.</summary>
      <value>An <see cref="T:System.Int32" /> value that specifies the distance to move the sort and filter indicators to the left.</value>
      <remarks>In touch devices, moving the sort and filter indicators to the left, makes the resizing operation easier.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBar">
      <summary>Gets the horizontal scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBarHeight">
      <summary>Gets or sets the height of horizontal scroll bars in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBarMode">
      <summary>Gets or Sets horizontal scroll bar mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBarPolicy">
      <summary>Gets or sets when to display the horizontal scroll bars in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.HorizontalScrollBarSmallChange">
      <summary>Gets or sets the small increment for the horizontal scrollbar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ImeMode">
      <summary>Gets or sets the Input Method Editor (IME) mode of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ImeModeBase">
      <summary>Gets or sets IME mode base.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ImeSentenceMode">
      <summary>Gets or sets IME sentence mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.InputDeviceType">
      <summary>Gets the input device type which indicates the current device.</summary>
      <value>A <see cref="P:FarPoint.Win.Spread.FpSpread.InputDeviceType" /> that indicates the current device.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.InputScope">
      <summary>Gets or sets the input scope for the Spread.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.InterfaceRenderer">
      <summary>Gets or sets the tab strip renderer for drawing tab strip elements.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.IsLayoutSuspended">
      <summary>Returns whether the layout is suspended in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.IsProtectedStructure">
      <summary>Specifies whether Spread allows the user to change the structure of the sheet collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.LeftTab">
      <summary>Gets or sets the leftmost sheet tab of the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.LegacyBehaviors">
      <summary>Gets or sets the <see cref="T:FarPoint.Win.Spread.LegacyBehaviors" /> value that indicating which behaviors are backward-compatible.</summary>
      <value>A <see cref="P:FarPoint.Win.Spread.FpSpread.LegacyBehaviors" /> value represents the backward behaviors.</value>
      <remarks>This property should be assigned before any other actions. The behaviors may not be backward-compatible fully if you changed data before. <para>The default options may change in future version. If you need to stick with the specified behavior, assign it explicitly.</para></remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.MinZoomFactor">
      <summary>Gets or sets a value that indicates the minimum zoom factor for the active <see cref="T:FarPoint.Win.Spread.SheetView" />.</summary>
      <value>A <see cref="T:System.Single" /> value that represents the active <see cref="T:FarPoint.Win.Spread.SheetView" /> minimum zoom factor. The default is <b>0.1f</b>.</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is greater than 4 or less than 0.1. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.MoveActiveOnFocus">
      <summary>Gets or sets whether the location of the active cell moves when the user moves the focus to the view using the mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Name">
      <summary>Gets or sets the name of the Spread component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.NamedStyles">
      <summary>Gets or sets a pre-defined style (<see cref="T:FarPoint.Win.Spread.NamedStyleCollection" /> object).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.PaintActiveCellInSelection">
      <summary>Gets or sets whether the active cell is painted in the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.PaintSelectionBorder">
      <summary>Gets or sets a value that indicates whether to allow the border selection to paint.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.PaintSelectionHeader">
      <summary>Gets or sets whether to allow the header selection to paint.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.PanningMode">
      <summary>Gets or sets the way <see cref="T:FarPoint.Win.Spread.FpSpread" /> reacts to touch manipulation.</summary>
      <remarks>The <c>PanningMode</c> property specifies whether the <see cref="T:FarPoint.Win.Spread.FpSpread" /> scrolls horizontally, vertically, or both. The <see cref="T:FarPoint.Win.Spread.FpSpread" nolink="true" /> scrolls when a user drags a finger on the control while using a touch device that supports Windows Touch.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.RangeDragFillMode">
      <summary>Gets or sets the mode the user can use to drag and fill cells in the component using the contents of a cell or cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ResizeZeroIndicator">
      <summary>Gets or sets the way <see cref="T:FarPoint.Win.Spread.FpSpread" /> processes resizing for zero-height rows and zero-width columns.</summary>
      <remarks>The <c>ResizeZeroIndicator</c> property specifies whether a zero-height row or zero-width column can be resized when users drag a finger using a touch device.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.RetainSelectionBlock">
      <summary>Gets or sets whether the selected range of cells remains highlighted when the component loses the focus.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.RowSplitBoxAlignment">
      <summary>Gets or sets the alignment of the row split box relative to the vertical scroll bar for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.RowSplitBoxPolicy">
      <summary>Gets or sets the display policy of the row split box in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SaveNamedStyles">
      <summary>Saves the collection of custom styles.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ScaleChildren">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ScrollBarMaxAlign">
      <summary>Gets or sets whether the scroll bar aligns with the last row and column of the active sheet in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ScrollBarShowMax">
      <summary>Gets or sets whether the displayed scroll bars are based on the entire number of columns and rows in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ScrollBarTrackPolicy">
      <summary>Gets or sets whether the sheet in the component scrolls when the user moves the scroll box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ScrollTipPolicy">
      <summary>Gets or sets whether scroll tips appear when the user moves the scroll box in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SearchDialog">
      <summary>Gets the dialog associated with searching for text in a cell of a sheet in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SelectionBlockOptions">
      <summary>Gets or sets which type of selections in the component the user can make.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SelectionRenderer">
      <summary>Gets or sets the selection renderer for drawing selections in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SerializingWorkbookData">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Sheets">
      <summary>Gets the sheets (<see cref="T:FarPoint.Win.Spread.SheetView" /> objects) in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ShowCellErrors">
      <summary>Gets or sets whether to allow the user to display row error by icon in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ShowDragBandOnMoving">
      <summary>Gets or sets whether the drag band is displayed when moving the row or column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ShowGrippersInEditingStatus">
      <summary>Gets or sets whether tapping displays the gripper in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ShowRowErrors">
      <summary>Gets or sets whether to allow the user to display the cell error using an icon or sticky note in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Skin">
      <summary>Gets or sets the skin for the spread.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SkipMouseProcessing">
      <summary>Sets the mouse processing flag of the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SpreadScaleMode">
      <summary>Gets or sets whether Spread controls automatic scaling with a different system dpi, Spread only supports one dimension so the application should use AutoScaleMode.Dpi for correct scaling, or else scaling uses the application width.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.StatusBar">
      <summary>Gets the status bar control of spread.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.StatusBarVisible">
      <summary>Gets or sets whether the status bar is enabled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.SuspendAnimations">
      <summary>Gets or sets whether to suspend animations such as an animated focus renderer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TabStrip">
      <summary>Gets the object that represents the tab strip for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TabStripInsertTab">
      <summary>Gets or sets whether a special tab is displayed to allow inserting new sheets.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TabStripInsertTabImage">
      <summary>Gets or sets the tabstrip insert tab image.</summary>
      <value>The tabstrip insert tab image.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TabStripPlacement">
      <summary>Gets or sets the location of the tab strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TabStripPolicy">
      <summary>Gets or sets the display policy for the sheet tab strip for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TabStripRatio">
      <summary>Gets or sets the width of the tab strip for this component expressed as a percentage of the overall horizontal scroll bar width.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TableStyleCollection">
      <summary>Gets a table style collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Tag">
      <summary>Gets or sets extra data for the application for this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TapToAddSelection">
      <summary>Gets or sets whether to tap to add selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.Text">
      <summary>Not supported in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TextTipAppearance">
      <summary>Gets or sets the appearance of text tips in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TextTipDelay">
      <summary>Gets or sets the time (in milliseconds) the component waits before displaying the text tip for the cell or header under the pointer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TextTipPolicy">
      <summary>Gets or sets whether to display text tips and cell notes and the location of the tips and notes in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TitleInfo">
      <summary>Gets or sets the collection of title information objects for Spread.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TouchDropDownScale">
      <summary>Gets or sets the <c>TouchDropDownScale</c> to specify the zoom scale value that applies to a cell type drop-down item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TouchSelectionGripperBackColor">
      <summary>Gets or sets the touch selection gripper's backcolor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TouchSelectionGripperLineColor">
      <summary>Gets or sets the touch selection gripper's line color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TouchSelectionGripperThickness">
      <summary>Gets or sets the touch selection gripper's thickness.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TouchZoomSnapDistance">
      <summary>Gets or sets a value that indicates the minmum distance that can cause the current zoom factor to snap to a zoom factor in <see cref="P:FarPoint.Win.Spread.FpSpread.TouchZoomSnapPoints" />.</summary>
      <value>A <see cref="T:System.Single" /> value that represents the minmum distance that can cause the current zoom factor to snap to a zoom factor in <see cref="P:FarPoint.Win.Spread.FpSpread.TouchZoomSnapPoints" />.</value>
      <seealso cref="P:FarPoint.Win.Spread.FpSpread.TouchZoomSnapPoints" />
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.TouchZoomSnapPoints">
      <summary>Gets a zoom factor group and when the zoom ends, the final zoom factor snaps to a snap point in this group.</summary>
      <value>A <see cref="T:System.Single" /> value list that represents a zoom factor group and when the zoom ends, the final zoom factor tries to snap to a zoom factor in this group.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.UndoManager">
      <summary>Gets or sets the undo manager for this Spread component.</summary>
      <remarks>This property wraps GetRootWorkbook().UndoManager. You can set this property to null to recreate the UndoManager and clear the undo or redo state.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.UseOptimizedSelectionForTouch">
      <summary>Gets or sets whether to use optimized selection for touch.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBar">
      <summary>Gets the vertical scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBarMode">
      <summary>Gets or Sets vertical scroll bar mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBarPolicy">
      <summary>Gets or sets when to display the vertical scroll bars in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBarSmallChange">
      <summary>Gets or sets the small increment for the horizontal scrollbar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.VerticalScrollBarWidth">
      <summary>Gets or sets the width of vertical scroll bars in this component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.VisualStyles">
      <summary>Gets or sets whether to use visual styles when rendering objects in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.WorkbookData">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpSpread.ZoomFactor">
      <summary>Gets or sets the scaling factor of the display of the active sheet in this component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AddControl(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a child control to a specified sheet at the location of the specified row and column.</summary>
      <param name="child">Child control being added</param>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="rowIndex">Index of the row to align</param>
      <param name="columnIndex">Index of the column to align</param>
      <returns>true if the control was successfully added; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AddControl(System.Windows.Forms.Control,System.Int32)">
      <summary>Adds a child control to the specified sheet using the control's Top and Left properties for location.</summary>
      <param name="child">Child control being added</param>
      <param name="sheetIndex">Index of the sheet</param>
      <returns>True if the control was successfully added; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AddCustomFunction(GrapeCity.CalcEngine.Function)">
      <summary>Adds a user-defined custom function (GrapeCity.CalcEngine.Function object) to the model for use in formulas.</summary>
      <param name="function">The <see cref="T:GrapeCity.CalcEngine.Function" /> object of the custom function to add.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AddNewSheetView(System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new SheetView and inserts or replaces the sheet at the specified sheet index.</summary>
      <param name="sheetIndex">The sheet index is where the new SheetView is inserted or replaced. If sheetIndex is -1, the new SheetView is added to the end of SheetViewCollection.</param>
      <param name="sheetName">The sheet name.</param>
      <param name="rowCount">Row count of the new sheet. -1 for default count.</param>
      <param name="columnCount">Column count of the new sheet. -1 for default count.</param>
      <param name="shareNamedStyle">Indicates whether the new SheetView shares the named style of Spread</param>
      <param name="replace">Indicates whether the new SheetView replaces the current sheet at the specified sheet index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AddViewport(System.Int32,System.Int32)">
      <summary>Adds a row or column of viewports.</summary>
      <param name="rowViewportIndex">Index of viewport row to add</param>
      <param name="columnViewportIndex">Index of viewport column to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AddViewport(System.Int32,System.Int32,System.Int32)">
      <summary>Adds a row or column of viewports to the specified sheet.</summary>
      <param name="sheetIndex">Index of sheet to which to add viewports</param>
      <param name="rowViewportIndex">Index of viewport row to add</param>
      <param name="columnViewportIndex">Index of viewport column to add</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.AsWorkbook">
      <summary>Gets the coressponding <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object that allows accessing to new object model and API set.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object represents the coressponding workbook.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Attach(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>Attachs a <see cref="P:FarPoint.Win.Spread.FpSpread.Workbook" /> object to the spread control.</summary>
      <param name="workbook">A <see cref="P:FarPoint.Win.Spread.FpSpread.Workbook" /> object to attach to the spread control.</param>
      <returns>
        <c>true</c> if the specified workbook is attached to this <see cref="T:FarPoint.Win.Spread.FpSpread" />, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CancelAnnotationMode">
      <summary>Cancels annotation mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CancelCellEditing">
      <summary>Cancels cell editing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ClearCachedStyle">
      <summary>Clears the cached composition result of all sheets. Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ClearCustomFunctions">
      <summary>Clears all custom functions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CopyTableStyleTo(FarPoint.Win.Spread.FpSpread,System.String)">
      <summary>Copy table style name to target FpSpread</summary>
      <param name="targetSpread" />
      <param name="tableStyleName" />
      <remarks>Internal use only</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CreateSheetView">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.SheetView" /> object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CreateSheetView(GrapeCity.Spreadsheet.Worksheet)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.SheetView" /> object. Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CreateSheetView(FarPoint.Win.Spread.NamedStyleCollection)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.SheetView" /> object.</summary>
      <param name="nameStyles" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.CreateTableStyle(System.String,System.String)">
      <summary>Creates a table style based on the table style contained in the table style collection or a built-in table style.</summary>
      <param name="styleName">Style name.</param>
      <param name="sourceStyleName">Source style name.</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableStyle" />The object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.DisplayHelp(System.Object,System.String)">
      <summary>Show help</summary>
      <param name="owner" />
      <param name="topic" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
      <param name="disposing">Whether the object is being disposed through the IDisposable interface (or else the object is being finalized by the garbage collector)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Finalize">
      <summary>The destructor method</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetActionMap">
      <summary>Gets the action map, that maps action identifiers (for keystrokes) to particular actions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveColumnViewportIndex">
      <summary>Gets the index of the active viewport column for the active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveColumnViewportIndex(System.Int32)">
      <summary>Gets the index of the active viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveRowViewportIndex">
      <summary>Gets the index of the active viewport row for the active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetActiveRowViewportIndex(System.Int32)">
      <summary>Gets the index of the active viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetCellFromPixel(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the cell at the specified pointer location.</summary>
      <param name="rowViewportIndex">Index of the row of the viewport</param>
      <param name="columnViewportIndex">Index of the column of the viewport</param>
      <param name="x">X-coordinate of the pointer location</param>
      <param name="y">Y-coordinate of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetCellRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the rectangle of the cell.</summary>
      <param name="rowViewportIndex">Index of the row of the viewport</param>
      <param name="columnViewportIndex">Index of the column of the viewport</param>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnHeaderRectangle(System.Int32)">
      <summary>Gets the rectangle of the column header.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the column header.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnPageBreaks(System.Int32)">
      <summary>Gets the column page breaks for the specified sheet under the current printing conditions.</summary>
      <param name="sheet">Index of sheet for which to return column page breaks</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnPageBreaks(System.Int32,System.Boolean)">
      <summary>Gets the column page breaks for the specified sheet under the current printing conditions with the option to recalculate.</summary>
      <param name="sheet">Index of sheet for which to return column page breaks</param>
      <param name="reCalc">Whether to recalculate the page break</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnRangeGroupHeight">
      <summary>Gets the height of the column range group.</summary>
      <returns>Height of the column range group.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnSplitBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the column split bar.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the column split bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnSplitBoxRectangle(System.Int32)">
      <summary>Gets the rectangle of the column split box.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the column split box.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnViewportCount">
      <summary>Gets the number of viewport columns in the active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnViewportCount(System.Int32)">
      <summary>Gets the number of viewport columns in the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetColumnViewportIndexFromX(System.Int32)">
      <summary>Gets the index of the viewport column for the specified coordinate for the active sheet.</summary>
      <param name="x">X-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetCursor(FarPoint.Win.Spread.CursorType)">
      <summary>Gets the pointer displayed over different areas of the component.</summary>
      <param name="index">Pointer type index (for a specific part of the component)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetExcelSheetNames(System.IO.Stream)">
      <summary>Gets an array of sheet names from the specified Excel stream.</summary>
      <param name="stream">Stream that contains an Excel Compound Document File</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetExcelSheetNames(System.IO.Stream,System.String)">
      <summary>Gets an array of sheet names from the specified Excel stream.</summary>
      <param name="stream">Stream that contains an Excel Compound Document File</param>
      <param name="password">File password</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetExcelSheetNames(System.String)">
      <summary>Gets an array of sheet names from the specified Excel-compatible file.</summary>
      <param name="fileName">Path and name of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetExcelSheetNames(System.String,System.String)">
      <summary>Gets an array of sheet names from the specified Excel-compatible file.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetFilterBarHeaderRectangle">
      <summary>Gets the rectangle of the column header.</summary>
      <returns>Rectangle of the filter bar header.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetFilterBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the filter bar.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the filter bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetHorizontalScrollBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the horizontal scroll bar.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the horizontal scroll bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMap(FarPoint.Win.Spread.InputMapMode)">
      <summary>Gets the input map defined for the specified focus mode.</summary>
      <param name="inputMapMode">Focus mode (control or child of the component)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Gets the input map defined for the specified focus mode and operation mode.</summary>
      <param name="inputMapMode">Focus mode (control or child of the component)</param>
      <param name="operationMode">Operation mode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMapWhenChildHasFocus">
      <summary>Gets the input map when a child control has keyboard focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetInputMapWhenShapeHasFocus">
      <summary>Gets the input map when a shape has keyboard focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetMaximumCellOverflowWidth">
      <summary>Gets the maximum cell overflow width in pixels.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintColumnPageBreaks(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean)">
      <summary>Gets the column page breaks for the specified sheet under the current printing conditions.</summary>
      <param name="g">Graphics object used for printing</param>
      <param name="rect">Rectangle area that represents the area for printing</param>
      <param name="sheet">Sheet for which to calculate page breaks</param>
      <param name="reCalc">Whether to recalcuate the page break</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintColumnPageBreaks(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean,FarPoint.Win.Spread.OwnerPrintInfo)">
      <summary>Gets the column page breaks for the specified sheet under the current printing conditions.</summary>
      <param name="g">Graphics object used for printing</param>
      <param name="rect">Rectangle area representing the area for printing</param>
      <param name="sheet">Sheet for which to calculate page breaks</param>
      <param name="reCalc">Whether to recalcuate the page break</param>
      <param name="info">The printing information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintInfo(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
      <summary>Gets the printing information required to print a given sheet into the supplied rectangle.</summary>
      <param name="g">Graphics object that handles printing</param>
      <param name="rect">Rectangular area that represents the area for printing</param>
      <param name="sheet">Sheet to print</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintPageCount(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
      <summary>Gets the number of pages required to print a given sheet into the supplied rectangle.</summary>
      <param name="g">Graphics object that handles printing</param>
      <param name="rect">Rectangle area that represents the area for printing</param>
      <param name="sheet">Sheet to print</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintRowPageBreaks(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean)">
      <summary>Gets the row page breaks for the specified sheet under the current printing conditions.</summary>
      <param name="g">Graphics object used for printing</param>
      <param name="rect">Rectangle area that represents the area for printing</param>
      <param name="sheet">Sheet for which to calculate page breaks</param>
      <param name="reCalc">Whether to recalcuate the page break</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetOwnerPrintRowPageBreaks(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean,FarPoint.Win.Spread.OwnerPrintInfo)">
      <summary>Gets the row page breaks for the specified sheet under the current printing conditions.</summary>
      <param name="g">Graphics object used for printing</param>
      <param name="rect">Rectangle area representing the area for printing</param>
      <param name="sheet">Sheet for which to calculate page breaks</param>
      <param name="reCalc">Whether to recalcuate page break</param>
      <param name="info">The printing information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetPrintPageCount(System.Int32)">
      <summary>Gets the number of pages required to print the specified sheet.</summary>
      <param name="sheet">Sheet index to print</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetPrintPreview">
      <summary>Gets the print preview dialog.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRootWorkbook">
      <summary>Gets the main workbook associated with the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowHeaderRectangle(System.Int32)">
      <summary>Gets the rectangle of the row header.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the row header.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowPageBreaks(System.Int32)">
      <summary>Gets the row page breaks for the specified sheet under the current printing conditions.</summary>
      <param name="sheet">Sheet index for which to return row page breaks</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowPageBreaks(System.Int32,System.Boolean)">
      <summary>Gets the row page breaks for the specified sheet under the current printing conditions with the option to recalculate.</summary>
      <param name="sheet">Sheet index for which to return row page breaks</param>
      <param name="reCalc">Whether to recalculate the page break</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowRangeGroupWidth">
      <summary>Gets the width of the row range group.</summary>
      <returns>Width of the row range group.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowSplitBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the row split bar.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the row split bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowSplitBoxRectangle(System.Int32)">
      <summary>Gets the rectangle of the row split box.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the row split box.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowViewportCount">
      <summary>Gets the number of viewport rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowViewportCount(System.Int32)">
      <summary>Gets the number of viewport rows for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetRowViewportIndexFromY(System.Int32)">
      <summary>Gets the index of the viewport row for the specified coordinate for the active sheet.</summary>
      <param name="y">Y-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetSheet(System.Int32)">
      <summary>Gets sheetview at index.</summary>
      <param name="index" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetSheetFromTag(FarPoint.Win.Spread.SheetView,System.Object)">
      <summary>Gets a sheet with a specific tag.</summary>
      <param name="sheetToStart">Sheet from which to start (null to start from the beginning)</param>
      <param name="tagToFind">Tag object used to identify the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetSheetTabRectangle(System.Int32)">
      <summary>Gets the rectangle of the tab associated with a sheet.</summary>
      <param name="sheetIndex">Index of the sheet from which to retrieve a tab rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetTabSplitBoxRectangle">
      <summary>Gets the rectangle of the split box on the tab strip.</summary>
      <returns>Rectangle of the split box on the tab strip.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetTabStripRectangle">
      <summary>Gets the rectangle of the tab strip.</summary>
      <returns>Rectangle of the tab strip.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetVerticalScrollBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the vertical scroll bar.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the vertical scroll bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportBottomRow(System.Int32)">
      <summary>Gets the bottom row of cells of the specified viewport row for the active sheet.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportBottomRow(System.Int32,System.Int32)">
      <summary>Gets the bottom row of cells of the specified viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Index of sheet</param>
      <param name="rowViewportIndex">Index of viewport row</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportLeftColumn(System.Int32)">
      <summary>Gets the leftmost column of cells of the specified viewport column for the active sheet.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportLeftColumn(System.Int32,System.Int32)">
      <summary>Gets the leftmost column of cells of the specified viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredHeight(System.Int32)">
      <summary>Gets the maximum height of the viewport row for the active sheet.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredHeight(System.Int32,System.Int32)">
      <summary>Gets the maximum height of the viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredWidth(System.Int32)">
      <summary>Gets the maximum width of the specified viewport column.</summary>
      <param name="columnViewportIndex">Column index of viewport</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportPreferredWidth(System.Int32,System.Int32)">
      <summary>Gets the maximum width of the specified viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Column index of viewport</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportRectangle(System.Int32,System.Int32)">
      <summary>Gets the rectangle of the viewport.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the viewport.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportRightColumn(System.Int32)">
      <summary>Gets the rightmost column of cells of the specified viewport column for the active sheet.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportRightColumn(System.Int32,System.Int32)">
      <summary>Gets the rightmost column of cells of the specified viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportTopRow(System.Int32)">
      <summary>Gets the top row of cells of the specified viewport row for the specified sheet.</summary>
      <param name="rowViewportIndex">Index of the viewport row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GetViewportTopRow(System.Int32,System.Int32)">
      <summary>Gets the top row of cells of the specified viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.GoalSeek(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Attempts to find the value for one cell that produces the desired formula result in another cell.</summary>
      <param name="variableSheet">Sheet index of cell that contains value to adjust</param>
      <param name="variableRow">Row index of cell that contains value to adjust</param>
      <param name="variableColumn">Column index of cell that contains value to adjust</param>
      <param name="formulaSheet">Sheet index of cell that contains the formula</param>
      <param name="formulaRow">Row index of cell that contains the formula</param>
      <param name="formulaColumn">Column index of cell that contains the formula</param>
      <param name="desiredResult">Formula result you wish to achieve</param>
      <returns>true if value is found, false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HideDependents(System.Int32,System.Int32,System.Int32)">
      <summary>Hides the dependents.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="row">Index of the row</param>
      <param name="column">Index of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HideDependents(System.Int32)">
      <summary>Hides the dependents.</summary>
      <param name="sheetIndex">Index of the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HideDragFillPopup">
      <summary>Hide drag fill context menu.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HidePrecedents(System.Int32,System.Int32,System.Int32)">
      <summary>Hides the precedents.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="row">Index of the row</param>
      <param name="column">Index of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HidePrecedents(System.Int32)">
      <summary>Hides the precedents.</summary>
      <param name="sheetIndex">Index of the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HideTouchKeyboard">
      <summary>Hides the touch keyboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.HitTest(System.Int32,System.Int32)">
      <summary>Performs a hit test.</summary>
      <param name="x">The x-coordinate of the point</param>
      <param name="y">The y-coordinate of the point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsCellInView(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Returns whether the cell at the specified location is visible in the specified view.</summary>
      <param name="rowViewportIndex">Index of viewport row</param>
      <param name="columnViewportIndex">Index of viewport column</param>
      <param name="cellRowIndex">Index of row in that viewport</param>
      <param name="cellColumnIndex">Index of column in that viewport</param>
      <returns>true if the cell with specified indexes is visible; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelFile(System.String)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered an Excel file.</summary>
      <param name="fileName">String that contains the path and file name</param>
      <returns>Boolean: true if it is an Excel file; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelFile(System.String,FarPoint.Excel.ExcelWorkbookType@,System.Boolean@)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered a structured storage file containing an Excel workbook.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="workbookType">Returns the type of Excel workbook</param>
      <param name="isEncrypt">Returns true the file is encrypted; false otherwise</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelFile(System.String,FarPoint.Excel.ExcelWorkbookType@)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered a structured storage file that contains an Excel workbook.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="workbookType">Returns the type of Excel workbook</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelStream(System.IO.Stream,FarPoint.Excel.ExcelWorkbookType@)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered a stream that contains an Excel workbook.</summary>
      <param name="stream">Stream</param>
      <param name="workbookType">Workbook type</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelStream(System.IO.Stream)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered an Excel-compatible stream.</summary>
      <param name="stream">Stream</param>
      <returns>Boolean: true if it is an Excel stream; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsExcelStream(System.IO.Stream,FarPoint.Excel.ExcelWorkbookType@,System.Boolean@)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered a stream that contains an Excel workbook.</summary>
      <param name="stream">Stream</param>
      <param name="workbookType">Workbook type</param>
      <param name="isEncrypt">isEncrypt</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsInputChar(System.Char)">
      <summary>Determines whether the specified character is an input character that the component can handle without preprocessing.</summary>
      <param name="charCode">Character to check</param>
      <returns>true if the character can be handled by the component without preprocessing; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is an input key that the component can handle without preprocessing.</summary>
      <param name="keyData">Key to check</param>
      <returns>true if the key can be handled by the component without preprocessing; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsSpreadSSFile(System.String)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered a Spread SS file.</summary>
      <param name="fileName">String that contains the path and file name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.IsSpreadXmlFile(System.String)">
      <summary>Opens the specified file and determines whether it meets the minimal requirements to be considered a Spread XML file.</summary>
      <param name="fileName">String that contains the path and file name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadC1Assembly(System.String)">
      <summary>Load C1 Assembly from installation folder</summary>
      <param name="c1AssemblyName" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadFormulas(System.Boolean)">
      <summary>Loads formulas that are deserialized but not parsed yet, to be used after all sheets have been created and deserialized.</summary>
      <param name="recalculate">Whether to recalculate all the formulas in cells on the sheet that have changed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFile(System.String,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified operation mode.</summary>
      <param name="fileName">Name of the file.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFile(System.IO.Stream,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified operation mode.</summary>
      <param name="stream">The stream of the file.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFile(System.String,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified input map mode and operation mode.</summary>
      <param name="fileName">Name of the file.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFile(System.IO.Stream,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified input map mode and operation mode.</summary>
      <param name="stream">Stream of the file.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFile(System.String)">
      <summary>Loads the XML input map file.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFile(System.IO.Stream)">
      <summary>Loads the XML input map file.</summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFileWhenChildHasFocus(System.String)">
      <summary>Loads the XML input map file when the child has the focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFileWhenChildHasFocus(System.IO.Stream)">
      <summary>Loads the XML input map file when the child has the focus.</summary>
      <param name="stream">Stream of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFileWhenShapeHasFocus(System.String)">
      <summary>Loads the XML input map file when the shape has the focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.LoadXmlInputMapFileWhenShapeHasFocus(System.IO.Stream)">
      <summary>Loads the XML input map file when the shape has the focus.</summary>
      <param name="stream">Stream of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnActiveSheetChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanged" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnActiveSheetChanging(FarPoint.Win.Spread.ActiveSheetChangingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanging" /> event.</summary>
      <param name="e">ActiveSheetChangingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnActiveSpreadViewChanged(System.EventArgs)">
      <summary>Raises the ActiveSpreadViewChanged event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnActiveSpreadViewChanging(System.EventArgs)">
      <summary>Raises the ActiveSpreadViewChanging event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAdvance(FarPoint.Win.Spread.AdvanceEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Advance" /> event.</summary>
      <param name="e">AdvanceEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAllowUserToTouchZoomChanged(System.EventArgs)">
      <summary>Raises the <see cref="!:AllowUserToZoomChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAnnotationModeEnding(FarPoint.Win.Spread.AnnotationModeEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AnnotationModeEnding" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAnnotationModeStarting(FarPoint.Win.Spread.AnnotationModeEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AnnotationModeStarting" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoFilteredColumn(FarPoint.Win.Spread.AutoFilteredColumnEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoFilteredColumn" /> event.</summary>
      <param name="e">AutoFilteredColumnEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoFilteringColumn(FarPoint.Win.Spread.AutoFilteringColumnEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoFilteringColumn" /> event.</summary>
      <param name="e">AutoFilteringColumnEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoScrollWhenKeyboardShowingChanged(System.EventArgs)">
      <summary>Raises the AutoScrollWhenKeyboardShowingChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoSortedColumn(FarPoint.Win.Spread.AutoSortedColumnEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoSortedColumn" /> event.</summary>
      <param name="e">AutoSortedColumnEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnAutoSortingColumn(FarPoint.Win.Spread.AutoSortingColumnEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.AutoSortingColumn" /> event.</summary>
      <param name="e">AutoSortingColumnEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnBoundaryFeedbackModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.BoundaryFeedbackModeChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnButtonClicked(FarPoint.Win.Spread.EditorNotifyEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ButtonClicked" /> event.</summary>
      <param name="e">EditorNotifyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnCellClick(FarPoint.Win.Spread.CellClickEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.CellClick" /> event.</summary>
      <param name="e">CellClickEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnCellDoubleClick(FarPoint.Win.Spread.CellClickEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.CellDoubleClick" /> event.</summary>
      <param name="e">CellClickEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnCellValidateInfoNeeded(FarPoint.Win.Spread.CellValidateInfoNeededEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.CellValidateInfoNeeded" /> event.</summary>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.CellValidateInfoNeededEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnChange(FarPoint.Win.Spread.ChangeEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Change" /> event.</summary>
      <param name="e">ChangeEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnChildControlActivated(FarPoint.Win.Spread.ChildControlEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ChildControlActivated" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnChildControlDeactivated(FarPoint.Win.Spread.ChildControlEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ChildControlDeactivated" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnChildViewCreated(FarPoint.Win.Spread.ChildViewCreatedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ChildViewCreated" /> event.</summary>
      <param name="e">ChildViewCreatedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnChildWorkbookCreated(FarPoint.Win.Spread.ChildWorkbookCreatedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ChildWorkbookCreated" /> event.</summary>
      <param name="e">ChildWorkbookCreatedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnCircularFormulaFpSpread(FarPoint.Win.Spread.CircularFormulaEventArgs)">
      <summary>Raises the <see cref="E:CircularFormulaFpSpread" /> event.</summary>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.CircularFormulaEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnClientSizeChanged(System.EventArgs)">
      <summary>Overrides to adjust the client area.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnClipboardChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ClipboardChanged" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnClipboardChanging(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ClipboardChanging" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnClipboardPasted(FarPoint.Win.Spread.ClipboardPastedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ClipboardPasted" /> event.</summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnClipboardPasting(FarPoint.Win.Spread.ClipboardPastingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ClipboardPasting" /> event.</summary>
      <param name="e">ClipboardPastingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnDragMove(FarPoint.Win.Spread.DragMoveEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnDragMove" /> event.</summary>
      <param name="e">DragMoveEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnDragMoveCompleted(FarPoint.Win.Spread.DragMoveCompletedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnDragMoveCompleted" /> event.</summary>
      <param name="e">DragMoveCompletedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnViewportWidthChanged(FarPoint.Win.Spread.ColumnViewportWidthChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnViewportWidthChanged" /> event.</summary>
      <param name="e">ColumnViewportWidthChangedEventArgs that contain the event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnWidthChanged(FarPoint.Win.Spread.ColumnWidthChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnWidthChanged" /> event.</summary>
      <param name="e">ColumnWidthChangedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnColumnWidthChanging(FarPoint.Win.Spread.ColumnWidthChangingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ColumnWidthChanging" /> event.</summary>
      <param name="e">ColumnWidthChangingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnComboCloseUp(FarPoint.Win.Spread.EditorNotifyEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ComboCloseUp" /> event.</summary>
      <param name="e">EditorNotifyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnComboDropDown(FarPoint.Win.Spread.EditorNotifyEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ComboDropDown" /> event.</summary>
      <param name="e">EditorNotifyEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnComboSelChange(FarPoint.Win.Spread.EditorNotifyEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ComboSelChange" /> event.</summary>
      <param name="e">EditorNotifyEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDataColumnConfigure(FarPoint.Win.Spread.DataColumnConfigureEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DataColumnConfigure" /> event.</summary>
      <param name="e">DataColumnConfigureEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDialogChar(FarPoint.Win.Spread.DialogCharEventArgs)">
      <summary>Raises the DialogChar event.</summary>
      <param name="e">DialogCharEventArgs that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDialogKey(FarPoint.Win.Spread.DialogKeyEventArgs)">
      <summary>Raises the DialogKey event.</summary>
      <param name="e">DialogKeyEventArgs that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDoubleClick(System.EventArgs)">
      <summary>Raises the DoubleClick event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDragDropBlock(FarPoint.Win.Spread.DragDropBlockEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragDropBlock" /> event.</summary>
      <param name="e">DragDropBlockEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDragDropBlockCompleted(FarPoint.Win.Spread.DragDropBlockCompletedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragDropBlockCompleted" /> event.</summary>
      <param name="e">DragDropBlockCompletedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDragFillBlock(FarPoint.Win.Spread.DragFillBlockEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragFillBlock" /> event.</summary>
      <param name="e">DragFillBlockEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnDragFillBlockCompleted(FarPoint.Win.Spread.DragFillBlockCompletedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.DragFillBlockCompleted" /> event.</summary>
      <param name="e">DragFillBlockEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEditChange(FarPoint.Win.Spread.EditorNotifyEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditChange" /> event.</summary>
      <param name="e">EditorNotifyEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEditError(FarPoint.Win.Spread.EditErrorEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditError" /> event.</summary>
      <param name="e">EditErrorEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEditModeOff(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditModeOff" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEditModeOn(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditModeOn" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEditModeStarting(FarPoint.Win.Spread.EditModeStartingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditModeStarting" /> event.</summary>
      <param name="e">EditModeStartingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEditorFocused(FarPoint.Win.Spread.EditorNotifyEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EditorFocused" /> event.</summary>
      <param name="e">EditorNotifyEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEnabledChanged(System.EventArgs)">
      <summary>Raises the EnableChanged event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnEnterCell(FarPoint.Win.Spread.EnterCellEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.EnterCell" /> event.</summary>
      <param name="e">EnterCellEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnError(FarPoint.Win.Spread.ErrorEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Error" /> event.</summary>
      <param name="e">ErrorEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnExpand(FarPoint.Win.Spread.ExpandEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Expand" /> event.</summary>
      <param name="e">ExpandEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnFilterBarClick(FarPoint.Win.Spread.FilterBarEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.FilterBarClick" /> event.</summary>
      <param name="e">FilterBarEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnFilterBarDoubleClick(FarPoint.Win.Spread.FilterBarEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.FilterBarDoubleClick" /> event.</summary>
      <param name="e">FilterBarEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnGotFocus(System.EventArgs)">
      <summary>Raises the GotFocus event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnGrouped(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Grouped" /> event.</summary>
      <param name="e">GroupedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnGrouping(FarPoint.Win.Spread.GroupingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Grouping" /> event.</summary>
      <param name="e">GroupingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnHandleCreated(System.EventArgs)">
      <summary>Occurs when the handle is created.</summary>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnHandleDestroyed(System.EventArgs)">
      <summary>Raises the HandleDestroyed event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnHeaderIndicatorPositionAdjustingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.HeaderIndicatorPositionAdjustingChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
      <summary>Occurs when help is requested.</summary>
      <param name="hevent">Help event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnHyperLinkClicked(FarPoint.Win.Spread.HyperLinkClickedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.HyperLinkClicked" /> event.</summary>
      <param name="e">HyperLinkClickedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnImeModeChanged(System.EventArgs)">
      <summary>Occurs when IME mode is changed.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnInputScopeChanged(System.EventArgs)">
      <summary>Raises the InputScopeChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Processes KeyDown events.</summary>
      <param name="e">KeyEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Processes KeyPress events.</summary>
      <param name="e">KeyPressEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Processes KeyUp events.</summary>
      <param name="e">KeyEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnLeaveCell(FarPoint.Win.Spread.LeaveCellEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.LeaveCell" /> event.</summary>
      <param name="e">LeaveCellEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnLeftChange(FarPoint.Win.Spread.LeftChangeEventArgs)">
      <summary>Raises the LeftChange event. Internal use only.</summary>
      <param name="e">LeftChangeEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnLostFocus(System.EventArgs)">
      <summary>Raises the LostFocus event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the MouseDown event.</summary>
      <param name="e">MouseEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseEnter(System.EventArgs)">
      <summary>Raises the MouseEnter event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseLeave(System.EventArgs)">
      <summary>Raises the MouseLeave event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the MouseMove event.</summary>
      <param name="e">MouseEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the MouseUp event.</summary>
      <param name="e">MouseEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the MouseWheel event.</summary>
      <param name="e">MouseEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the Paint event.</summary>
      <param name="e">PaintEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>Paints the background of the component.</summary>
      <param name="e">PaintEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintGrayArea(FarPoint.Win.Spread.PaintGrayAreaEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PaintGrayArea" /> event.</summary>
      <param name="e">PaintGrayAreaEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintGroupBarBackground(FarPoint.Win.Spread.PaintGroupBarBackgroundEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PaintGroupBarBackground" /> event.</summary>
      <param name="e">PaintGroupBarBackgroundEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintTabStrip(FarPoint.Win.Spread.PaintTabStripEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PaintTabStrip" /> event.</summary>
      <param name="e">PaintTabStripEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintTabStripButton(FarPoint.Win.Spread.PaintTabStripButtonEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PaintTabStripButton" /> event.</summary>
      <param name="e">PaintTabStripButtonEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPaintTabStripTab(FarPoint.Win.Spread.PaintTabStripTabEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PaintTabStripTab" /> event.</summary>
      <param name="e">PaintTabStripTabEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPanningModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PanningModeChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
      <summary>Processes PreviewKeyDown event.</summary>
      <param name="e">PreviewKeyDownEventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPreviewRowFetch(FarPoint.Win.Spread.PreviewRowFetchEventArgs)">
      <summary>Raises the <see cref="E:PreviewRowFetch" /> event.</summary>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.PreviewRowFetchEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintAbort(FarPoint.Win.Spread.PrintAbortEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintAbort" /> event.</summary>
      <param name="e">PrintAbortEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintBackground(FarPoint.Win.Spread.PrintBackgroundEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintBackground" /> event.</summary>
      <param name="e">PrintBackgroundEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintCancelled(FarPoint.Win.Spread.PrintCancelledEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintCancelled" /> event.</summary>
      <param name="e">PrintCancelledEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintDocument(FarPoint.Win.Spread.PrintDocumentEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintDocument" /> event.</summary>
      <param name="e">PrintMessageBoxEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintHeaderFooterArea(FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintHeaderFooterArea" /> event.</summary>
      <param name="e">PrintHeaderFooterAreaEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintMessageBox(FarPoint.Win.Spread.PrintMessageBoxEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintMessageBox" /> event.</summary>
      <param name="e">PrintMessageBoxEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnPrintPreviewShowing(FarPoint.Win.Spread.PrintPreviewShowingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.PrintPreviewShowing" /> event.</summary>
      <param name="e">PrintPreviewShowingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRangeGroupStateChanged(FarPoint.Win.Spread.RangeGroupStateChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RangeGroupStateChanged" /> event.</summary>
      <param name="e">RangeGroupStateChangedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRangeGroupStateChanging(FarPoint.Win.Spread.RangeGroupStateChangingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RangeGroupStateChanging" /> event.</summary>
      <param name="e">RangeGroupStateChangingEventArgs object that contain the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnResize(System.EventArgs)">
      <summary>Raises the Resize event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnResizeZeroIndicatorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ResizeZeroIndicatorChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRightToLeftChanged(System.EventArgs)">
      <summary>Raises the RightToLeftChanged event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRowDragMove(FarPoint.Win.Spread.DragMoveEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowDragMove" /> event.</summary>
      <param name="e">DragMoveEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRowDragMoveCompleted(FarPoint.Win.Spread.DragMoveCompletedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowDragMoveCompleted" /> event.</summary>
      <param name="e">DragMoveCompletedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRowHeightChanged(FarPoint.Win.Spread.RowHeightChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowHeightChanged" /> event.</summary>
      <param name="e">RowHeightChangedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRowHeightChanging(FarPoint.Win.Spread.RowHeightChangingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowHeightChanging" /> event.</summary>
      <param name="e">RowHeightChangingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnRowViewportHeightChanged(FarPoint.Win.Spread.RowViewportHeightChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.RowViewportHeightChanged" /> event.</summary>
      <param name="e">RowViewportHeightChangedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnScrollTipFetch(FarPoint.Win.Spread.ScrollTipFetchEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ScrollTipFetch" /> event.</summary>
      <param name="e">ScrollTipFetchEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSearchDialogClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SearchDialogClosing" /> event.</summary>
      <param name="e">SubEditorClosedEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSelectionChanged(FarPoint.Win.Spread.SelectionChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SelectionChanged" /> event.</summary>
      <param name="e">SelectionChangedEventArgs that contain the event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSelectionChanging(FarPoint.Win.Spread.SelectionChangingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SelectionChanging" /> event.</summary>
      <param name="e">SelectionChangingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnShapeActivated(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ShapeActivated" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnShapeDeactivated(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.ShapeDeactivated" /> event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSheetDragMoved(FarPoint.Win.Spread.SheetDragMovedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SheetDragMoved" /> event.</summary>
      <param name="e">SheetDragMovedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSheetDragMoving(FarPoint.Win.Spread.SheetDragMovingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SheetDragMoving" /> event.</summary>
      <param name="e">SheetDragMovingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSheetTabClick(FarPoint.Win.Spread.SheetTabClickEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SheetTabClick" /> event.</summary>
      <param name="e">SheetTabClickEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSheetTabDoubleClick(FarPoint.Win.Spread.SheetTabDoubleClickEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SheetTabDoubleClick" /> event.</summary>
      <param name="e">SheetTabDoubleClickEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnShowGrippersInEditingStatusChanged(System.EventArgs)">
      <summary>Raises the ShowGrippersInEditingStatusChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSorted(FarPoint.Win.Spread.SortedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Sorted" /> event.</summary>
      <param name="e">SortedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSorting(FarPoint.Win.Spread.SortingEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Sorting" /> event.</summary>
      <param name="e">SortingEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSubEditorClosed(FarPoint.Win.Spread.SubEditorClosedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SubEditorClosed" /> event.</summary>
      <param name="e">SubEditorClosedEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnSubEditorOpening(FarPoint.Win.Spread.SubEditorOpeningEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.SubEditorOpening" /> event.</summary>
      <param name="e">SubEditorOpenEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTapToAddSelectionChanged(System.EventArgs)">
      <summary>Raises the TapToAddSelectionChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTextTipFetch(FarPoint.Win.Spread.TextTipFetchEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.TextTipFetch" /> event.</summary>
      <param name="e">TextTipFetchEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTopChange(FarPoint.Win.Spread.TopChangeEventArgs)">
      <summary>Raises the TopChange event. Internal use only.</summary>
      <param name="e">TopChangeEventArgs object that contains event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTouchDropDownScaleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.TouchDropDownScaleChanged" /> event.</summary>
      <param name="e">An EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTouchSelectionGripperBackColorChanged(System.EventArgs)">
      <summary>Raises the TouchSelectionGripperBackColorChanged event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTouchSelectionGripperLineColorChanged(System.EventArgs)">
      <summary>Raises the TouchSelectionGripperLineColorChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTouchSelectionGripperThicknessChanged(System.EventArgs)">
      <summary>Raises the TouchSelectionGripperThicknessChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTouchStripOpening(FarPoint.Win.Spread.TouchStripOpeningEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.TouchStripOpening" /> event.</summary>
      <param name="e">A TouchStripOpeningEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnTouchZoomSnapDistanceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.TouchZoomSnapDistanceChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnUngrouped(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.Grouped" /> event.</summary>
      <param name="e">GroupedEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnUseOptimizedSelectionForTouchChanged(System.EventArgs)">
      <summary>Raises the UseOptimizedSelectionForTouchChanged event.</summary>
      <param name="e">The EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnUserFormulaEntered(FarPoint.Win.Spread.UserFormulaEnteredEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.UserFormulaEntered" /> event.</summary>
      <param name="e">UserFormulaEnteredEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnUserZooming(FarPoint.Win.Spread.ZoomEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.FpSpread.UserZooming" /> event.</summary>
      <param name="e">ZoomEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the Validating event.</summary>
      <param name="e">CancelEventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OnVisibleChanged(System.EventArgs)">
      <summary>Raises the VisibleChanged event.</summary>
      <param name="e">EventArgs event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Open(System.String)">
      <summary>Opens a saved XML file.</summary>
      <param name="fileName">Path and name of file from which to load the data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Open(System.IO.Stream)">
      <summary>Opens saved XML from a stream.</summary>
      <param name="stream">Stream from which to load the data</param>
      <exception cref="T:System.ArgumentNullException"> No stream specified or specified stream is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags)">
      <summary>Opens an Excel Compound Document File and loads it into Spread.</summary>
      <param name="stream">Stream</param>
      <param name="openFlags">Open flag</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags,System.String)">
      <summary>Opens an Excel Compound Document File and loads it into Spread.</summary>
      <param name="stream">Stream</param>
      <param name="openFlags">Open flag</param>
      <param name="password">File password</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList)">
      <summary>Opens an Excel Compound Document File and loads it into Spread with a list of warnings.</summary>
      <param name="stream">Stream</param>
      <param name="openFlags">Open flag</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList,System.String)">
      <summary>Opens an Excel Compound Document File and loads it into Spread with a list of warnings.</summary>
      <param name="stream">Stream</param>
      <param name="openFlags">Open flag</param>
      <param name="warningList">List of Excel warnings</param>
      <param name="password">File password</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList,System.String,System.Boolean)">
      <summary>Opens an Excel Compound Document File and loads it into Spread with a list of warnings.</summary>
      <param name="stream">Stream</param>
      <param name="openFlags">Open flag</param>
      <param name="warningList">List of Excel warnings</param>
      <param name="password">File password</param>
      <param name="isClearInputMapKey">Clear current input map key</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream)">
      <summary>Opens an Excel Compound Document File and loads it into Spread.</summary>
      <param name="stream">Stream that contains an Excel Compound Document File</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,System.Boolean)">
      <summary>Opens an Excel Compound Document File and loads it into Spread.</summary>
      <param name="stream">Stream that contains an Excel Compound Document File</param>
      <param name="isClearInputMapKey">Clear current input map key of Spread.</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,System.String)">
      <summary>Opens an Excel Compound Document File and loads it into Spread.</summary>
      <param name="stream">Stream that contains an Excel Compound Document File</param>
      <param name="password">File password</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.IO.Stream,FarPoint.Excel.ExcelWarningList)">
      <summary>Opens an Excel Compound Document File and loads it into Spread with a list of warnings.</summary>
      <param name="stream">Stream</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
      <exception cref="T:System.ArgumentException">No stream specified or specified stream is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags)">
      <summary>Opens an Excel-compatible file and loads it into Spread.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="openFlags">Open flag</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags,System.String)">
      <summary>Opens an Excel-compatible file and loads it into Spread.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="openFlags">Open flag</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList)">
      <summary>Opens an Excel-compatible file and loads it into Spread with a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="openFlags">Open flag</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList,System.String)">
      <summary>Opens an Excel-compatible file and loads it into Spread with a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="openFlags">Open flag</param>
      <param name="warningList">List of Excel warnings</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelOpenFlags,FarPoint.Excel.ExcelWarningList,System.String,System.Boolean)">
      <summary>Opens an Excel-compatible file and loads it into Spread with a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="openFlags">Open flag</param>
      <param name="warningList">List of Excel warnings</param>
      <param name="password">Password of file</param>
      <param name="isClearInputMapKey">Clear current input map key of Spread.</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String)">
      <summary>Opens an Excel-compatible file and loads it into Spread.</summary>
      <param name="fileName">Path and name of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,System.Boolean)">
      <summary>Opens an Excel-compatible file and loads it into Spread.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="isClearInputMapKey">Clear current input map key of Spread.</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,System.String)">
      <summary>Opens an Excel-compatible file and loads it into Spread.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenExcel(System.String,FarPoint.Excel.ExcelWarningList)">
      <summary>Opens an Excel-compatible file and loads it into Spread with a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OpenSpreadFile(System.String,System.Int32)">
      <summary>Opens a saved Spread file.</summary>
      <param name="fileName">Path and name of the Spread-compatible file from which to load the contents</param>
      <param name="sheetIndex">Index of sheet into which to load the data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OwnerPrintDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>Prints the specified page of the specified sheet to a specified graphics interface with the specified size.</summary>
      <param name="g">Graphics device that handles printing</param>
      <param name="rect">Location and size of a rectangular region</param>
      <param name="sheet">Sheet from which to print</param>
      <param name="page">Specific page of the sheet to print</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between zero and the total number of sheets </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified page index is out of range; must be greater than one </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.OwnerPrintDraw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,FarPoint.Win.Spread.OwnerPrintInfo)">
      <summary>Prints the specified page of the specified sheet to a specified graphics interface with the specified size.</summary>
      <param name="g">Graphics device that handles printing</param>
      <param name="rect">Location and size of a rectangular region</param>
      <param name="sheet">Sheet from which to print</param>
      <param name="page">Specific page of the sheet to print</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between zero and the total number of sheets </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified page index is out of range; must be greater than one </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PassString(System.String,System.String@)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PassStringBytes(System.String,System.Byte[]@)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PerformLayout">
      <summary>Forces the component to apply layout logic to its child controls.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PerformLayout(System.Windows.Forms.Control,System.String)">
      <summary>Forces the component to apply layout logic to the specified child control for the specified property change.</summary>
      <param name="affectedControl">Child control</param>
      <param name="affectedProperty">Property that changed in the child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PrintSheet(System.Int32)">
      <summary>Handles the printing of the specified sheet in a separate thread.</summary>
      <param name="sheet">Index of sheet to print; -1 for all sheets</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets (or -1 for all sheets) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PrintSheet(System.Int32,System.Boolean)">
      <summary>Handles the printing of the specified sheet.</summary>
      <param name="sheet">Index of sheet to print; -1 for all sheets</param>
      <param name="newThread">True to create a new thread for the print job, or false to print the sheet in the UI thread.</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets (or -1 for all sheets) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.PrintSheet(FarPoint.Win.Spread.SheetView)">
      <summary>Handles the printing of the specified sheet in a separate thread.</summary>
      <param name="sheet">Sheet to be printed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>Processes a command key.</summary>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
      <returns>true if the character was processed by the control; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ProcessDialogChar(System.Char)">
      <summary>Processes the specified dialog character by the component.</summary>
      <param name="charCode">Character for the component to process</param>
      <returns>true if the character was processed by the component; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes the specified dialog key by the component.</summary>
      <param name="keyData">Key for the component to process</param>
      <returns>true if the key was processed by the component; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ProcessKeyPreview(System.Windows.Forms.Message@)">
      <summary>Processes a key by the component by previewing the specified keyboard message.</summary>
      <param name="msg">Message object, passed by reference, that contains the message to process</param>
      <returns>true if the message was processed by the component; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.RemoveControl(System.Windows.Forms.Control,System.Int32)">
      <summary>Removes a child control from the specified sheet.</summary>
      <param name="child">Child control being removed</param>
      <param name="sheetIndex">Sheet index</param>
      <returns>True if the control was successfully removed; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.RemoveCustomFunction(System.String)">
      <summary>Removes a user-defined custom function.</summary>
      <param name="name">The name of the function to remove.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.RemoveViewport(System.Int32,System.Int32)">
      <summary>Removes a row or column of viewports.</summary>
      <param name="rowViewportIndex">Index of viewport row to remove</param>
      <param name="columnViewportIndex">Index of viewport column to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.RemoveViewport(System.Int32,System.Int32,System.Int32)">
      <summary>Removes a row or column of viewports.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Index of viewport row to remove</param>
      <param name="columnViewportIndex">Index of viewport column to remove</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Reset">
      <summary>Resets the component to its original state.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ResetCellNoteIndicatorRenderer">
      <summary>Resets the focus renderer to its original state.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ResetFocusRenderer">
      <summary>Resets the focus renderer to its original state.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ResumeCheckProtectedStructure">
      <summary>Resumes the check protected structure.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ResumeLayout">
      <summary>Resumes normal layout logic.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ResumeLayout(System.Boolean)">
      <summary>Resumes normal layout logic and optionally forces the component to apply layout logic to its child controls.</summary>
      <param name="performLayout">Whether to perform layout logic on the child controls</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SafeAbort(FarPoint.Win.Spread.FpSpread)">
      <summary>Handles the closing of the abort dialog in the specified FpSpread component in a separate thread.</summary>
      <param name="spread">FpSpread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SafePrint(FarPoint.Win.Spread.FpSpread,System.Int32)">
      <summary>Handles the printing of the specified sheet in the specified FpSpread component in the same thread.</summary>
      <param name="spread">FpSpread component</param>
      <param name="sheet">Integer number of the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Save(System.String,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves the content of the Spread component to the specified file.</summary>
      <param name="fileName">Path and name of the file to which to save</param>
      <param name="saveOption">Save xml option</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Save(System.String,System.Boolean)">
      <summary>Saves the content of the Spread component to the specified file.</summary>
      <param name="fileName">Path and name of the file to which to save</param>
      <param name="dataOnly">Whether to save data only</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Save(System.IO.Stream,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves the content of the Spread component to the specified stream.</summary>
      <param name="stream">Stream</param>
      <param name="dataOnly">Whether to save saveOption</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Save(System.IO.Stream,System.Boolean)">
      <summary>Saves the content of the Spread component to the specified stream.</summary>
      <param name="stream">Stream</param>
      <param name="dataOnly">Whether to save data only</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelWarningList)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Win.Spread.Model.IncludeHeaders)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with the headers exported as data.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="includeHeaders">Whether to include headers</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Win.Spread.Model.IncludeHeaders,FarPoint.Excel.ExcelWarningList)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with headers and a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="includeHeaders">Whether to include headers</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream)">
      <summary>Saves the content of the Spread component to the specified stream.</summary>
      <param name="stream">Stream to which to save the data</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,System.String)">
      <summary>Saves the content of the Spread component to the specified stream.</summary>
      <param name="stream">Stream to which to save the data</param>
      <param name="password">The file password</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelWarningList)">
      <summary>Saves the content of the Spread component to the specified stream with a list of warnings.</summary>
      <param name="stream">The stream to save to</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags)">
      <summary>Saves the content of the Spread component to the specified stream with the headers exported as data.</summary>
      <param name="stream">Stream</param>
      <param name="saveFlags">Save flag</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags,System.String)">
      <summary>Saves the content of the Spread component to the specified stream with the headers exported as data.</summary>
      <param name="stream">Stream</param>
      <param name="saveFlags">Save flag</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
      <summary>Saves the content of the Spread component to the specified stream with headers and a list of warnings.</summary>
      <param name="stream">Stream</param>
      <param name="saveFlags">Save flag</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.IO.Stream,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList,System.String)">
      <summary>Saves the content of the Spread component to the specified stream with headers and a list of warnings.</summary>
      <param name="stream">Stream</param>
      <param name="saveFlags">Save flag</param>
      <param name="warningList">List of Excel warnings</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.ArgumentNullException">No stream specified or specified stream is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with the headers exported as data.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="saveFlags">Save flag</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags,System.String)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with the headers exported as data.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="saveFlags">Save flag</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with headers and a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="saveFlags">Save flag</param>
      <param name="warningList">List of Excel warnings</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,FarPoint.Excel.ExcelSaveFlags,FarPoint.Excel.ExcelWarningList,System.String)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file with headers and a list of warnings.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="saveFlags">Save flag</param>
      <param name="warningList">List of Excel warnings</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file.</summary>
      <param name="fileName">Path and name of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveExcel(System.String,System.String)">
      <summary>Saves the content of the Spread component to the specified Excel-compatible file.</summary>
      <param name="fileName">Path and name of file</param>
      <param name="password">Password of file</param>
      <exception cref="T:System.IO.FileNotFoundException">Specified file is not found</exception>
      <exception cref="T:System.ArgumentNullException">No file name is specified (or specified file name is null)</exception>
      <exception cref="T:System.ArgumentException">No file name is specified (or specified file name is empty)</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFile(System.String,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Saves the XML input map file.</summary>
      <param name="fileName">Name of the file.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFile(System.IO.Stream,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Saves the XML input map file.</summary>
      <param name="stream">Stream of the file.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFile(System.String)">
      <summary>Saves the XML input map file.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFile(System.IO.Stream)">
      <summary>Saves the XML input map file.</summary>
      <param name="stream">Stream of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFileWhenChildHasFocus(System.String)">
      <summary>Saves the XML input map file when child has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFileWhenChildHasFocus(System.IO.Stream)">
      <summary>Saves the XML input map file when child has focus.</summary>
      <param name="stream">Stream of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFileWhenShapeHasFocus(System.String)">
      <summary>Saves the XML input map file when shape has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SaveXmlInputMapFileWhenShapeHasFocus(System.IO.Stream)">
      <summary>Saves the XML input map file when shape has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ScaleCore(System.Single,System.Single)">
      <summary>Performs the work of scaling the entire component and any child controls.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Searches the text in the cells in the specified sheet for the specified string with the specified criteria.</summary>
      <param name="sheetIndex">Index of sheet on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="startRowIndex">Index of row at which to start</param>
      <param name="startColumnIndex">Index of column at which to start</param>
      <param name="foundRowIndex">Index of row at which match is found</param>
      <param name="foundColumnIndex">Index of column at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Searches the text in the specified range of cells in the specified sheet for the specified string with the specified criteria.</summary>
      <param name="sheetIndex">Index of sheet on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="startRowIndex">Index of row at which to start</param>
      <param name="startColumnIndex">Index of column at which to start</param>
      <param name="endRowIndex">Index of row at which to end</param>
      <param name="endColumnIndex">Index of column at which to end</param>
      <param name="foundRowIndex">Index of row at which match is found</param>
      <param name="foundColumnIndex">Index of column at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@)">
      <summary>Searches the text in the cells in the specified sheet for the specified string with the specified criteria and the location to start and end, and whether to search notes and tags as well.</summary>
      <param name="sheetIndex">Index of sheet on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="includeCellText">Whether the search includes the content in the cell</param>
      <param name="includeNotes">Whether the search includes the content in the cell notes</param>
      <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
      <param name="reverseSearching">Whether the search is in reversed order</param>
      <param name="startRowIndex">Index of row at which to start</param>
      <param name="startColumnIndex">Index of column at which to start</param>
      <param name="endRowIndex">Index of row at which to end</param>
      <param name="endColumnIndex">Index of column at which to end</param>
      <param name="searchAsBlockRange">Specifies whether to search the specified block of cells only</param>
      <param name="foundRowIndex">Index of row at which match is found</param>
      <param name="foundColumnIndex">Index of column at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Searches the text in the specified range of cells in the specified sheet for the specified string with the specified criteria.</summary>
      <param name="sheetIndex">Sheet index on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="includeCellText">Whether the search includes the content in the cell</param>
      <param name="includeNotes">Whether the search includes the content in the cell notes</param>
      <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
      <param name="startRowIndex">Index of row at which to start</param>
      <param name="startColumnIndex">Index of column at which to start</param>
      <param name="foundRowIndex">Index of row at which match is found</param>
      <param name="foundColumnIndex">Index of column at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Searches the text in the specified range of cells in the specified sheet for the specified string with the specified criteria.</summary>
      <param name="sheetIndex">Sheet index on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="includeNotes">Whether the search includes the content in the cell notes</param>
      <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
      <param name="startRowIndex">Row index at which to start</param>
      <param name="startColumnIndex">Column index at which to start</param>
      <param name="endRowIndex">Row index at which to end</param>
      <param name="endColumnIndex">Column index at which to end</param>
      <param name="foundRowIndex">Row index at which match is found</param>
      <param name="foundColumnIndex">Column index at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Searches the text in the specified range of cells in the specified sheet for the specified string with the specified criteria.</summary>
      <param name="sheetIndex">Sheet index on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="includeCellText">Whether the search includes the content in the cell</param>
      <param name="includeNotes">Whether the search includes the content in the cell notes</param>
      <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
      <param name="searchAsBlockRange">Specifies whether to search the specified block of cells only</param>
      <param name="startRowIndex">Row Index at which to start</param>
      <param name="startColumnIndex">Column index at which to start</param>
      <param name="endRowIndex">Row Index at which to end</param>
      <param name="endColumnIndex">Column index at which to end</param>
      <param name="foundRowIndex">Row Index at which match is found</param>
      <param name="foundColumnIndex">Column index at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Search(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Searches the text in the specified range of cells in the specified sheet range for the specified string with the specified criteria.</summary>
      <param name="startSheetIndex">Sheet index on which to start the search</param>
      <param name="endSheetIndex">Sheet index on which to end the search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="includeCellText">Whether the search includes the content in the cell</param>
      <param name="includeNotes">Whether the search includes the content in the cell notes</param>
      <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
      <param name="startRowIndex">Row index at which to start</param>
      <param name="startColumnIndex">Column index at which to start</param>
      <param name="endRowIndex">Row index at which to end</param>
      <param name="endColumnIndex">Column index at which to end</param>
      <param name="foundSheetIndex">Sheet index at which the match is found</param>
      <param name="foundRowIndex">Row index at which the match is found</param>
      <param name="foundColumnIndex">Column index at which the match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SearchHeaders(System.Int32,System.String,System.Boolean,System.Int32@,System.Int32@)">
      <summary>Searches the text in the header cells in the specified sheet for the specified string.</summary>
      <param name="sheetIndex">Index of sheet on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="searchRowHeaders">Whether to search row headers instead of column headers</param>
      <param name="foundRowIndex">Index of row at which match is found</param>
      <param name="foundColumnIndex">Index of column at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SearchHeaders(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Searches the text in the specified range of header cells in the specified sheet for the specified string with the specified criteria, the start and end locations, and whether to include notes and tags.</summary>
      <param name="sheetIndex">Index of sheet on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="searchRowHeaders">Whether to search row headers instead of column headers</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="includeCellText">Whether the search includes the content in the cell</param>
      <param name="includeNotes">Whether the search includes the content in the cell notes</param>
      <param name="includeTags">Whether the search includes the content in the cell tags or their string representations</param>
      <param name="startRowIndex">Index of row at which to start</param>
      <param name="startColumnIndex">Index of column at which to start</param>
      <param name="endRowIndex">Index of row at which to end</param>
      <param name="endColumnIndex">Index of column at which to end</param>
      <param name="foundRowIndex">Index of row at which match is found</param>
      <param name="foundColumnIndex">Index of column at which match is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialog(System.String)">
      <summary>Searches the text in the cells of the active sheet for the search string with the default criteria using a provided search dialog.</summary>
      <param name="searchString">String for which to search</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialog(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Searches the text in the cells of the specified sheet for the specified string with the specified criteria using a provided search dialog.</summary>
      <param name="sheetIndex">Sheet index on which to search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether the search considers the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search considers only an exact match</param>
      <param name="alternateSearch">Whether the search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether the search considers wildcard characters (*, ?) in the search string</param>
      <param name="startRowIndex">Row index at which to start</param>
      <param name="startColumnIndex">Column index at which to start</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialogAdvanced(System.String)">
      <summary>Searches the text in the cells of the sheets for the search string with the default criteria using a provided advanced search dialog.</summary>
      <param name="searchString">String for which to search</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SearchWithDialogAdvanced(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Searches the text in the cells of the specified sheet range for the specified string with the specified criteria using a provided advanced search dialog.</summary>
      <param name="startSheetIndex">Sheet index on which to start the search</param>
      <param name="endSheetIndex">Sheet index on which to end the search</param>
      <param name="searchString">String for which to search</param>
      <param name="caseSensitive">Whether search should consider the case of the letters in the search string</param>
      <param name="exactMatch">Whether the search should consider only an exact match</param>
      <param name="alternateSearch">Whether search goes by alternate coordinates of column, row (instead of row, column)</param>
      <param name="useWildcards">Whether search considers wildcard characters (*, ?) in the search string</param>
      <param name="startRowIndex">Row index at which to start</param>
      <param name="startColumnIndex">Column index at which to start</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.Select(System.Boolean,System.Boolean)">
      <summary>Selects the Spread component.</summary>
      <param name="directed">Whether selected</param>
      <param name="forward">Whether forward</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetActionMap(FarPoint.Win.Spread.ActionMap)">
      <summary>Sets the action map, that maps action identifiers (for keystrokes) to particular actions.</summary>
      <param name="value">New action map</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetActiveViewport(System.Int32,System.Int32)">
      <summary>Sets the active viewport for the active sheet.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetActiveViewport(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the active viewport for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetCursor(FarPoint.Win.Spread.CursorType,System.Windows.Forms.Cursor)">
      <summary>Sets the pointer displayed over different areas of the component.</summary>
      <param name="index">Pointer type index (for a specific part of the component)</param>
      <param name="cursor">Image used to paint the pointer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map for the specified focus mode.</summary>
      <param name="inputMapMode">Focus mode (control or child of the component)</param>
      <param name="value">Input map (<see cref="T:FarPoint.Win.Spread.InputMap" /> object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode,FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map for the specified focus mode and operation mode.</summary>
      <param name="inputMapMode">Focus mode (control or child of the component)</param>
      <param name="operationMode">Operation mode</param>
      <param name="value">
        <see cref="T:FarPoint.Win.Spread.InputMap" /> object that contains the input map</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMapWhenChildHasFocus(FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map when a child control has keyboard focus.</summary>
      <param name="value">Input map (<see cref="T:FarPoint.Win.Spread.InputMap" /> object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetInputMapWhenShapeHasFocus(FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map when a shape has keyboard focus.</summary>
      <param name="value">Input map (<see cref="T:FarPoint.Win.Spread.InputMap" /> object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetInsertSheetImage(System.Drawing.Image)">
      <summary>Sets the custom image displayed on the insert sheet tab.</summary>
      <param name="newSheetImage">Image displayed on the insert sheet tab</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetMaximumCellOverflowWidth(System.Int32)">
      <summary>Sets the maximum cell overflow width in pixels.</summary>
      <param name="width">Width in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetPrintInfo(FarPoint.Win.Spread.PrintInfo,System.Int32)">
      <summary>Sets the <see cref="T:FarPoint.Win.Spread.PrintInfo" /> object for the specfied sheet.</summary>
      <param name="pi">
        <see cref="T:FarPoint.Win.Spread.PrintInfo" /> object</param>
      <param name="sheet">Sheet for which to set PrintInfo; -1 to specify all sheets</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetPrintPreview(System.Windows.Forms.PrintPreviewDialog)">
      <summary>Sets the print preview dialog.</summary>
      <param name="dialog">Print preview dialog</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetProtect(System.Boolean,System.String)">
      <summary>Changes the protect structure setting with the password parameter.</summary>
      <param name="protect">The boolean value that specifies whether to protect or unprotect spread.</param>
      <param name="password">The password to protect or unprotect spread.</param>
      <returns>True, if successful; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportLeftColumn(System.Int32,System.Int32)">
      <summary>Sets the leftmost column of cells of the specified viewport column for the active sheet.</summary>
      <param name="columnViewportIndex">Index of the viewport column</param>
      <param name="value">Column index to set as the leftmost column of that viewport</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportLeftColumn(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the leftmost column of cells of the specified viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Index of sheet</param>
      <param name="columnViewportIndex">Index of the viewport column</param>
      <param name="value">Index of the column to set as the leftmost column of that viewport</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredHeight(System.Int32,System.Int32)">
      <summary>Sets the maximum height of the specified viewport row for the active sheet.</summary>
      <param name="rowViewportIndex">Row index of viewport</param>
      <param name="value">Height value in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredHeight(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the maximum height of the specified viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Row index of viewport</param>
      <param name="value">Height value in pixels</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredWidth(System.Int32,System.Int32)">
      <summary>Sets the maximum width of the specified viewport column for the active sheet.</summary>
      <param name="columnViewportIndex">Column index of viewport</param>
      <param name="value">Width of the viewport in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportPreferredWidth(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the maximum width of the specified viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Column index of viewport</param>
      <param name="value">Width of the viewport in pixels</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportTopRow(System.Int32,System.Int32)">
      <summary>Sets the top row of cells of the specified viewport row for the active sheet.</summary>
      <param name="rowViewportIndex">Index of the viewport row</param>
      <param name="value">Index of the row to set as the top of that viewport</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SetViewportTopRow(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the top row of cells of the specified viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="rowViewportIndex">Index of the viewport row</param>
      <param name="value">Index of the row to set as the top of that viewport</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShouldSerializeAsResource">
      <summary>Determines whether the workbook data should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShouldSerializeGroupBarText">
      <summary>Indicates whether the GroupBarText property should be persisted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShouldSerializeNamedStyles">
      <summary>Determines whether the named styles are serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShouldSerializeSaveNamedStyles">
      <summary>Gets whether to serialize the custom styles.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowActiveCell(FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
      <summary>Moves the active cell to the specified position in the component.</summary>
      <param name="verticalPosition">New position (vertical coordinate) of active cell</param>
      <param name="horizontalPosition">New position (horizontal coordinate) of active cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowCell(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
      <summary>Moves the specified cell in the specified viewport to the specified position in the component.</summary>
      <param name="rowViewportIndex">Row index of the viewport</param>
      <param name="columnViewportIndex">Column index of the viewport</param>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell cell</param>
      <param name="verticalPosition">New position (vertical coordinate) of the cell</param>
      <param name="horizontalPosition">New position (horizontal coordinate) of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowCellValidatorsForm(System.Windows.Forms.Form,System.Boolean)">
      <summary>Shows the form that is used to edit Cell Validators of selected range</summary>
      <param name="parent">The parent form</param>
      <param name="autoYes">A flag to determine what action should be performed when has conflict in loading settings of cell validators</param>
      <returns>A Form object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowCollectionEditor(System.Object,FarPoint.Win.Spread.CollectionEditorOptions)">
      <summary>Shows the collection editor.</summary>
      <param name="collectionOwner">Collection owner</param>
      <param name="whichEditor">Collection editor options</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowColumn(System.Int32,System.Int32,FarPoint.Win.Spread.HorizontalPosition)">
      <summary>Moves a column of cells in the specified viewport to the specified position in the component.</summary>
      <param name="columnViewportIndex">Column index of the viewport that has this column</param>
      <param name="column">Column index to move</param>
      <param name="horizontalPosition">New position of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowDataValidationForm(System.Windows.Forms.Form,System.Boolean)">
      <summary>Shows the form that is used to edit DataValidation of selected range</summary>
      <param name="parent">The parent form</param>
      <param name="autoYes">A flag to determine what action should be performed when has conflict in loading settings of data validation</param>
      <returns>A Form object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowDependents(System.Int32,System.Int32,System.Int32)">
      <summary>Shows the dependent cells for a formula cell.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="row">Index of the row</param>
      <param name="column">Index of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowEditForm(System.Windows.Forms.Form,System.Int32,System.Int32)">
      <summary>Displays the form used for editing custom names.</summary>
      <param name="parentForm" />
      <param name="spread" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowInputMapEditor(System.Windows.Forms.IWin32Window)">
      <summary>Displays the input map editor.</summary>
      <param name="owner">The owner.</param>
      <returns>One of the System.Windows.Forms.DialogResult values.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowListCustomNameForm(System.Windows.Forms.Form,System.Boolean)">
      <summary>Displays the form that contains a list of custom names.</summary>
      <param name="parentForm" />
      <param name="spread" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowPageSetup(System.Int32,System.Boolean,System.Boolean)">
      <summary>Shows the page setup dialog with the specified buttons for the specified sheet.</summary>
      <param name="sheet">Sheet index</param>
      <param name="showPrintButton">Whether to display the Print button</param>
      <param name="showPreviewButton">Whether to display the Print Preview button</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is out of range; must be between 0 and the total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowPageSetup(FarPoint.Win.Spread.SheetView,System.Boolean,System.Boolean)">
      <summary>Shows the page setup dialog with the specified buttons for the specified sheet.</summary>
      <param name="sheet">Sheet</param>
      <param name="showPrintButton">Whether to display the Print button</param>
      <param name="showPreviewButton">Whether to display the Print Preview button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowPrecedents(System.Int32,System.Int32,System.Int32)">
      <summary>Shows the cells that are referred to by formulas in other cells.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="row">Index of the row</param>
      <param name="column">Index of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowRow(System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition)">
      <summary>Moves a row in the specified viewport to the specified position in the component.</summary>
      <param name="rowViewportIndex">Row index of the viewport that has this row</param>
      <param name="row">Row index to move</param>
      <param name="verticalPosition">New vertical position of the row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.ShowTouchKeyboard">
      <summary>Displays the touch keyboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartAnnotationMode">
      <summary>Starts annotation mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartAnnotationMode(System.Boolean)">
      <summary>Starts annotation mode while specifying whether to close figures when a new drawing is started.</summary>
      <param name="closeFigures">Whether each figure is closed before the next figure is drawn</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartCellEditing(System.EventArgs,System.Boolean)">
      <summary>Starts cell editing.</summary>
      <param name="e">Event</param>
      <param name="formula">Whether there is a formula</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation">
      <summary>Starts ink notation in the active viewport if the Microsoft.Ink assembly is found in the GAC.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation(System.Int32,System.Int32)">
      <summary>Starts ink notation in the specified viewport if the Microsoft.Ink assembly is found in the GAC.</summary>
      <param name="rowPaneIndex">Viewport row index</param>
      <param name="columnPaneIndex">Viewport column index</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation(System.Drawing.Color,System.Int32)">
      <summary>Starts ink notation in the active viewport with the specified notation background color, if the Microsoft.Ink assembly is found in the GAC.</summary>
      <param name="inkBackColor">Background color for the notation viewport</param>
      <param name="alphaBlend">Alphablending value for the notation viewport</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StartInkNotation(System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
      <summary>Starts ink notation in the specified viewport with the specified notation background color, if the Microsoft.Ink assembly is found in the GAC.</summary>
      <param name="rowPaneIndex">Viewport row index</param>
      <param name="columnPaneIndex">Viewport column index</param>
      <param name="inkBackColor">Background color for the notation viewport</param>
      <param name="alphaBlend">Alphablending value for the notation viewport</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StopAnnotationMode">
      <summary>Stops annotation mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.StopCellEditing">
      <summary>Stops cell editing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SuspendCheckProtectedStructure">
      <summary>Suspends the check protected structure.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.SuspendLayout">
      <summary>Temporarily suspends the layout logic for this component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.TriggerVolatileCells">
      <summary>This function will notify all cells, which contains volatile functions or belong to a circuit, to recalculate.</summary>
      <returns>TRUE if there is any volatile cells.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpSpread.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
      <param name="m">Message</param>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanged">
      <summary>Occurs when the user has changed the active sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ActiveSheetChanging">
      <summary>Occurs when the user changes the active sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ActiveSpreadViewChanged">
      <summary>Occurs when the user has changed the active SpreadView.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ActiveSpreadViewChanging">
      <summary>Occurs when the user changes the active SpreadView.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Advance">
      <summary>Occurs when the user tries to advance from the first or last row in Spread.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AllowUserToTouchZoomChanged">
      <summary>Occurs when the <see cref="!:AllowUserToZoom" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AnnotationModeEnding">
      <summary>Occurs when the user ends annotation mode.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AnnotationModeStarting">
      <summary>Occurs when the user begins annotation mode.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AutoFilteredColumn">
      <summary>Occurs when a column has just been automatically filtered.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AutoFilteringColumn">
      <summary>Occurs when a column is about to be automatically filtered.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AutoScrollWhenKeyboardShowingChanged">
      <summary>Occurs when the AutoScrollWhenKeyboardShowing property is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AutoSortedColumn">
      <summary>Occurs when a column has just been automatically sorted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.AutoSortingColumn">
      <summary>Occurs when a column is about to be automatically sorted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.BoundaryFeedbackModeChanged">
      <summary>Occurs when the <see cref="P:FarPoint.Win.Spread.FpSpread.BoundaryFeedbackMode" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ButtonClicked">
      <summary>Occurs when the user clicks a button, check box, or hyperlink in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.CellClick">
      <summary>Occurs when the user presses the left mouse button down in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.CellDoubleClick">
      <summary>Occurs when the user presses the left mouse button down twice (double-clicks) in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.CellErrorTextChanged">
      <summary>Occurs when the cell error text has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.CellValidateInfoNeeded">
      <summary>Occurs when cell validate infomation is needed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Change">
      <summary>Occurs after the user modifies data in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ChartIndicatorActivated">
      <summary>Occurs when the chart indicator is activated.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ChartIndicatorDeactivated">
      <summary>Occurs when the chart indicator is deactivated.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ChildControlActivated">
      <summary>Occurs when a child control is activated.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ChildControlDeactivated">
      <summary>Occurs when a child control is deactivated.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ChildViewCreated">
      <summary>Occurs when a child view of the Spread component is created.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ChildWorkbookCreated">
      <summary>Occurs when a child workbook of the Spread component is created.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.CircularFormula">
      <summary>Occurs when one or more circular reference is created.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ClipboardChanged">
      <summary>Occurs when a Clipboard change occurs that can affect the FarPoint Spread component.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ClipboardChanging">
      <summary>Occurs when the Clipboard is changing through a Spread action.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ClipboardPasted">
      <summary>Occurs when the user pastes from the clipboard.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ClipboardPasting">
      <summary>Occurs when the user pastes from the clipboard.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ColumnDragMove">
      <summary>Occurs when <see cref="P:FarPoint.Win.Spread.FpSpread.AllowColumnMove" /> is true and the user drags to move a column.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ColumnDragMoveCompleted">
      <summary>Occurs when the user finishes moving a column by dragging.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ColumnViewportWidthChanged">
      <summary>Occurs when a viewport column width has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ColumnWidthChanged">
      <summary>Occurs when the column width has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ColumnWidthChanging">
      <summary>Occurs when the column width is changing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ComboCloseUp">
      <summary>Occurs when the user closes a combo box in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ComboDropDown">
      <summary>Occurs when the user drops down a combo box in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ComboSelChange">
      <summary>Occurs when the user changes the selection in a combo box in a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.CustomNameChanged">
      <summary>Occurs when the custom name of the data model changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DataColumnConfigure">
      <summary>Occurs when the sheet is binding a column to a data source after it has been initialized.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DialogChar">
      <summary>Occurs during message preprocessing of dialog characters.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DialogKey">
      <summary>Occurs during message preprocessing of dialog keys.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DragDropBlock">
      <summary>Occurs when the user drags and drops a range of cells.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DragDropBlockCompleted">
      <summary>Occurs at the completion of the user dragging and dropping a range of cells.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DragFillBlock">
      <summary>Occurs when the user drags to fill a range of cells.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.DragFillBlockCompleted">
      <summary>Occurs at the completion of the user dragging to fill a range of cells.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EditChange">
      <summary>Occurs when the user changes the text in a cell in edit mode.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EditError">
      <summary>Occurs when the user performs an invalid input operation.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EditModeOff">
      <summary>Occurs when edit mode is stopped.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EditModeOn">
      <summary>Occurs when edit mode is started.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EditModeStarting">
      <summary>Occurs when edit mode is about to start in the active sheet's active cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EditorFocused">
      <summary>Occurs when the editing control gets focus.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.EnterCell">
      <summary>Occurs when the user enters a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Error">
      <summary>Occurs when the user performs an invalid operation.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Expand">
      <summary>Occurs when a row is expanded or collapsed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.FilterBarClick">
      <summary>Occurs when the user presses the left mouse button in a filter bar cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.FilterBarDoubleClick">
      <summary>Occurs when the user presses the left mouse button down twice (double-clicks) in a filter bar cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.FilterBarDropDownSelectionChanging">
      <summary>Occurs when the user selects a value from the drop-down list in the filter bar editor.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Grouped">
      <summary>Occurs when the grouping is finished.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Grouping">
      <summary>Occurs when the user performs grouping.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.HeaderIndicatorPositionAdjustingChanged">
      <summary>Occurs when the <see cref="P:FarPoint.Win.Spread.FpSpread.HeaderIndicatorPositionAdjusting" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.HyperLinkClicked">
      <summary>Occurs when the user clicks on hyper link text.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.InputScopeChanged">
      <summary>Occurs when the InputScope property is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.LeaveCell">
      <summary>Occurs when the user leaves a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.LeftChange">
      <summary>Occurs when the left column changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PaintGrayArea">
      <summary>Occurs when the gray area needs painting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PaintGroupBarBackground">
      <summary>Occurs when the group bar background is painted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PaintTabStrip">
      <summary>Occurs when the tab strip needs painting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PaintTabStripButton">
      <summary>Occurs when a TabStrip button needs painting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PaintTabStripTab">
      <summary>Occurs when a TabStrip tab needs painting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PanningModeChanged">
      <summary>Occurs when the <see cref="P:FarPoint.Win.Spread.FpSpread.PanningMode" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PreviewRowFetch">
      <summary>Occurs when the user customizes the preview row of the Spread component.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintAbort">
      <summary>Occurs continually as printing occurs in order to give the user the opportunity to discontinue a print job.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintBackground">
      <summary>Occurs before each page is printed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintCancelled">
      <summary>Occurs when a print job is discontinued by the user.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintDocument">
      <summary>Occurs when printing a sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintHeaderFooterArea">
      <summary>Occurs when the header or footer needs printing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintMessageBox">
      <summary>Occurs before and after a print job.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.PrintPreviewShowing">
      <summary>Occurs before the preview dialog appears.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RangeGroupStateChanged">
      <summary>Occurs when the user has changed the state of the row or column outline (range group).</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RangeGroupStateChanging">
      <summary>Occurs before the user changes the state of row or column outlines (range group).</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ResizeZeroIndicatorChanged">
      <summary>Occurs when the <see cref="P:FarPoint.Win.Spread.FpSpread.ResizeZeroIndicator" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RowDragMove">
      <summary>Occurs when <see cref="P:FarPoint.Win.Spread.FpSpread.AllowRowMove" /> is true and the user drags to move a row.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RowDragMoveCompleted">
      <summary>Occurs when the user finishes moving a row by dragging.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RowErrorTextChanged">
      <summary>Occurs when the row error text has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RowHeightChanged">
      <summary>Occurs when the row height has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RowHeightChanging">
      <summary>Occurs when the column width is changing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.RowViewportHeightChanged">
      <summary>Occurs when a viewport row height has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ScrollTipFetch">
      <summary>Occurs when the user scrolls the Spread component.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SearchDialogClosing">
      <summary>Occurs when the search form is closing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SelectionChanged">
      <summary>Occurs when the selection of cells on the sheet has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SelectionChanging">
      <summary>Occurs when the selection of cells on the sheet is changing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ShapeActivated">
      <summary>Occurs when the user changes the active shape object.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ShapeDeactivated">
      <summary>Occurs when the user deactivates the active shape object.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SheetDragMoved">
      <summary>Occurs right after the user finishes drag-moving the sheet to another index.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SheetDragMoving">
      <summary>Occurs when the user drag-move the sheet name tab to move sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SheetTabClick">
      <summary>Occurs when the user clicks the sheet tab.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SheetTabDoubleClick">
      <summary>Occurs when the user double-clicks the sheet tab.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.ShowGrippersInEditingStatusChanged">
      <summary>Occurs when the ShowGrippersInEditingStatus value is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Sorted">
      <summary>Occurs when spread is sorted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Sorting">
      <summary>Occurs when spread is sorting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SubEditorClosed">
      <summary>Occurs when a subeditor is closed for a cell.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.SubEditorOpening">
      <summary>Occurs when a subeditor is about to be displayed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TableChanged">
      <summary>Occurs when the table changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TapToAddSelectionChanged">
      <summary>Occurs when the TapToAddSelection property is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TextTipFetch">
      <summary>Occurs when the pointer (cursor) is over a cell and the text tip or cell note should be displayed (the TextTip property is set to a value other than Off).</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TopChange">
      <summary>Occurs when the top row changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TouchDropDownScaleChanged">
      <summary>Occurs when the <see cref="P:FarPoint.Win.Spread.FpSpread.TouchDropDownScale" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TouchSelectionGripperBackColorChanged">
      <summary>Occurs when the TouchSelectionGripperBackColor is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TouchSelectionGripperLineColorChanged">
      <summary>Occurs when TouchSelectionGripperLineColor is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TouchSelectionGripperThicknessChanged">
      <summary>Occurs when the TouchSelectionGripperThickness is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TouchStripOpening">
      <summary>Occurs when FpSpread tries to show a <see cref="!:FarPoint.Win.Spread.TouchStrip" /> in a touch device.</summary>
      <remarks>If some objects are already selected, such as cell, row, column, shape, or chart, and you tap the objects again, FpSpread raises this event to show a <see cref="!:FarPoint.Win.Spread.TouchStrip" />. You can create your own <see cref="!:FarPoint.Win.Spread.TouchStrip" nolink="true" /> and show it in the event handler. To do so, set the <see cref="!:TouchStripOpeningEventArgs.Cancel">TouchStripOpeningEventArgs.Cancel</see> to true. Set the <see cref="!:TouchStripOpeningEventArgs.UseBuiltInTouchStrip">TouchStripOpeningEventArgs.UseBuiltInTouchStrip</see> to <c>True</c> to make FpSpread show a built-in <see cref="!:FarPoint.Win.Spread.TouchStrip" nolink="true" />.</remarks>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.TouchZoomSnapDistanceChanged">
      <summary>Occurs when the <see cref="P:FarPoint.Win.Spread.FpSpread.TouchZoomSnapDistance" /> property has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.Ungrouped">
      <summary>Occurs when all the grouping is removed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.UseOptimizedSelectionForTouchChanged">
      <summary>Occurs when the UseOptimizedSelectionForTouch is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.UserFormulaEntered">
      <summary>Occurs when the user types a formula.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpSpread.UserZooming">
      <summary>Occurs when the user zooms.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBar">
      <summary>Represents the status bar control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.BackColor">
      <summary>Gets or sets the backcolor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.Elements">
      <summary>Gets the collection of elements in the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.EnableContextMenu">
      <summary>Gets or sets where the context menu of status bar is enabled</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.Font">
      <summary>Gets or sets the font for the text in the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.ForeColor">
      <summary>Gets or sets the forecolor for the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.Owner">
      <summary>Gets the fpspread that owns the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.Skin">
      <summary>Gets or sets the skin for the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.ZoomButtonHoverColor">
      <summary>Gets or sets the zoom level button color when the mouse is over it.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.ZoomSliderColor">
      <summary>Gets or sets the color of the zoom slider button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.ZoomSliderHoverColor">
      <summary>Gets or sets the color for the zoom slider button when the mouse is over it.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBar.ZoomSliderTrackColor">
      <summary>Gets or sets the color for the track of the zoom slider in the status bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.ApplySkin(FarPoint.Win.Spread.StatusBarSkin)">
      <summary>Applies the skin to the status bar.</summary>
      <param name="skin" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Save the status bar to XML</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.FireElementVisibleChanged">
      <summary>Causes the element visible changed event to occur.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse down event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.OnMouseLeave(System.EventArgs)">
      <summary>Processes the mouse leave event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse move event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse up event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.OnSizeChanged(System.EventArgs)">
      <summary>Raises the System.Windows.Forms.Control.SizeChanged event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.OnVisibleChanged(System.EventArgs)">
      <summary>Raises the System.Windows.Forms.Control.VisibleChanged event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the status bar to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.SetStatusBarElements(FarPoint.Win.Spread.IFpStatusBarElement[])">
      <summary>Sets the elements for the status bar.</summary>
      <param name="arr" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBar.ShouldSerialize">
      <summary>Gets whether the status bar should serialize to the code DOM.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.FpStatusBar.ElementVisibleChanged">
      <summary>Occurs when the visible property of the element is changed by the menu strip.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarAverageElement">
      <summary>Represents the status bar element that displays the average of the selected cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarAverageElement.#ctor">
      <summary>Instantiate a FpStatusBarAverageElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarAverageElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a FpStatusBarAverageElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarAverageElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarCountElement">
      <summary>Represents the status bar element that displays the number of selected cells that contain data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarCountElement.#ctor">
      <summary>Instantiate a FpStatusBarCountElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarCountElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a FpStatusBarCountElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarCountElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarElementCollection">
      <summary>Represents the collection of status bar elements.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.#ctor">
      <summary>Creates a new collection of values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBarElementCollection.Count">
      <summary>Gets the number of values in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBarElementCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:FarPoint.Win.Spread.FpStatusBarElementCollection" /> is read-only.</summary>
      <value>true if the <see cref="T:FarPoint.Win.Spread.FpStatusBarElementCollection" /> is read-only; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBarElementCollection.Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.Add(FarPoint.Win.Spread.IFpStatusBarElement)">
      <summary>Adds a value to the collection.</summary>
      <param name="item">value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.AddRange(FarPoint.Win.Spread.IFpStatusBarElement[])">
      <summary>Adds the elements of the specified collection to the end of the collection</summary>
      <param name="arr">The not null collection whose elements should be added to the end of the FpStatusBarElementCollection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.Clear">
      <summary>Removes all values from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.Contains(FarPoint.Win.Spread.IFpStatusBarElement)">
      <summary>Determines whether the collection contains a specific value.</summary>
      <param name="item">The value to locate in collection.</param>
      <returns>true if value is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.CopyTo(FarPoint.Win.Spread.IFpStatusBarElement[],System.Int32)">
      <summary>Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>Enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.IndexOf(FarPoint.Win.Spread.IFpStatusBarElement)">
      <summary>Determines the index of the value in the collection.</summary>
      <param name="item">The value to locate in the collection.</param>
      <returns>Index of the string value if string value is found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.Insert(System.Int32,FarPoint.Win.Spread.IFpStatusBarElement)">
      <summary>Inserts a value into the collection at the specified index.</summary>
      <param name="index">Index at which item should be inserted.</param>
      <param name="item">value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.Remove(FarPoint.Win.Spread.IFpStatusBarElement)">
      <summary>Removes a value from the collection.</summary>
      <param name="item">String value.</param>
      <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarElementCollection.RemoveAt(System.Int32)">
      <summary>Removes a value from the collection at the specified index.</summary>
      <param name="index">Index of value.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarMaxElement">
      <summary>Represents the status bar element that displays the maximum value of the selected cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarMaxElement.#ctor">
      <summary>Instantiate a FpStatusBarMaxElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarMaxElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a FpStatusBarMaxElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarMaxElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarMinElement">
      <summary>Represents the status bar element that displays the minimum value of the selected cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarMinElement.#ctor">
      <summary>Instantiate a FpStatusBarMinElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarMinElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a FpStatusBarMinElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarMinElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarNumericalCountElement">
      <summary>Represents the status bar element that displays the number of numeric cells in the selection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarNumericalCountElement.#ctor">
      <summary>Instantiate a FpStatusBarNumericalCountElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarNumericalCountElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a FpStatusBarNumericalCountElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarNumericalCountElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarRangeStatusElement">
      <summary>Represents the element of status bar handling the change of selection ranges in activesheetview. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.#ctor">
      <summary>Instantiate a FpStatusBarRangeStatusElement object.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.value">
      <summary>object represents value of element</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.Visible">
      <summary>Gets or sets whether the element is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.CalculateValue">
      <summary>Calcualate value of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.Dopaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the element to the graphics object using the rectangle.</summary>
      <param name="g">Graphics</param>
      <param name="r">Clip rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.GetPreferedWidth">
      <summary>Gets the preferred width of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.OnAttachSpreadContext">
      <summary>Calls this function when attaching the spread context to the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusElement.OnDetachSpreadContext">
      <summary>Calls this function when detaching the spread context from the element.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarRangeStatusFormatElement">
      <summary>Represents the element of status bar handling the change of selection ranges in activesheetview and formating the displayed text. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusFormatElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FpStatusBarRangeStatusFormatElement" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.FpStatusBarRangeStatusFormatElement.ValueText">
      <summary>get the value in text format</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusFormatElement.CalculateValue">
      <summary>Calcualate value of the element</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarRangeStatusFormatElement.GetPreferedWidth">
      <summary>Gets the preferred width of the element.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarSumElement">
      <summary>Represents the status bar element that displays the sum of selected cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarSumElement.#ctor">
      <summary>Instantiate a FpStatusBarSumElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarSumElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a FpStatusBarSumElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarSumElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpStatusBarTextElement">
      <summary>Represents the text element of the status bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarTextElement.#ctor">
      <summary>Instantiate a FpStatusBarTextElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarTextElement.Dopaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the element.</summary>
      <param name="g">Graphics device interface for painting</param>
      <param name="r">Rectangle that contains the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarTextElement.GetPreferedWidth">
      <summary>Returns the preferred width for the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpStatusBarTextElement.GetTextTip(System.Drawing.Point)">
      <summary>Returns the text tip when the mouse moves over the element.</summary>
      <param name="pt" />
    </member>
    <member name="T:FarPoint.Win.Spread.FpVerticalScrollBar">
      <summary>Represents the Spread vertical scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpVerticalScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.FpVerticalScrollBar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpVerticalScrollBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Spread vertical scroll bar from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.FpVerticalScrollBar.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <value>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpVerticalScrollBar.DefaultSize">
      <summary>Gets the default size of the control.</summary>
      <value>The default <see cref="T:System.Drawing.Size" /> of the control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.FpVerticalScrollBar.RightToLeft">
      <summary>Gets or sets the right-to-left setting of the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.FpVerticalScrollBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="E:FarPoint.Win.Spread.FpVerticalScrollBar.RightToLeftChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GetCustomIconEventArgs">
      <summary>Represents the event arguments for the CustomIcon event handler.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GetCustomIconEventArgs.#ctor(FarPoint.Win.Spread.CustomImageInfo)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.GetCustomIconEventArgs" /> class.</summary>
      <param name="info">The icon value.</param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.GetCustomIconEventArgs.#ctor(FarPoint.Win.Spread.ConditionalFormattingIconSetIndex)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.GetCustomIconEventArgs" /> class.</summary>
      <param name="icon">The icon value.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.GetCustomIconEventArgs.IconSetIndex">
      <summary>Gets the index of the icon set.</summary>
      <value>The index of the icon set.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.GetCustomIconEventArgs.Info">
      <summary>Gets the icon information.</summary>
      <value>The icon value.</value>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.GradientInterfaceRenderer">
      <summary>Represents the painter of gradients in the interface.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.#ctor">
      <summary>Creates a new interface gradient renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Font)">
      <summary>Creates a new interface gradient renderer with the specified parameters.</summary>
      <param name="topColor">Top color of the gradient</param>
      <param name="bottomColor">Bottom color of the gradient</param>
      <param name="mouseTopColor">Top color of the gradient for mouse-overs</param>
      <param name="mouseBottomColor">Bottom color of the gradient for mouse-overs</param>
      <param name="activeTopColor">Top color of the gradient when in focus</param>
      <param name="activeBottomColor">Bottom color of the gradient when in focus</param>
      <param name="disabledTopColor">Top color of the gradient when disabled</param>
      <param name="disabledBottomColor">Bottom color of the gradient when disabled</param>
      <param name="foreColor">Text color</param>
      <param name="backgroundColor">Background color</param>
      <param name="borderColor">Border color</param>
      <param name="pressedTopColor">Top color of the gradient when pressed</param>
      <param name="pressedBottomColor">Bottom color of the gradient when pressed</param>
      <param name="font">Text font</param>
      <param name="activeFont">Text font when in focus</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
      <param name="disposing">Whether the object is disposed through the IDisposable interface (true) or finalized by the garbage collector (false)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.Dispose">
      <summary>Cleans up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.Finalize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripButton,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints a tab strip button.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="button">Button to render</param>
      <param name="mouseOver">Whether the mouse is over the button</param>
      <param name="pressed">Whether the button is pressed</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintGrayArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the gray area.</summary>
      <param name="g">Graphics device interface for painting the gray area</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintRangeGroupArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the outline (range group) area.</summary>
      <param name="g">Graphics device interface for painting the area</param>
      <param name="x">Near X-coordinate</param>
      <param name="y">Top Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintRangeGroupButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.GroupState,System.Boolean,System.Boolean)">
      <summary>Paints the outline (range group) button.</summary>
      <param name="g">Graphics device interface for painting the button</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="groupState">State of the outline (range group)</param>
      <param name="rowGroup">Whether this outline (range group) is of rows</param>
      <param name="isLeftToRight">Whether it is set to right-to-left</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintRangeGroupLevelBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Paints the outline (range group) level indicator box.</summary>
      <param name="g">Graphics device interface for painting the box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="groupLevel">Level of the outline (range group)</param>
      <param name="rowGroup">Whether this outline (range group) is of rows</param>
      <param name="isLeftToRight">Whether it is set to right-to-left</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintRangeGroupLine(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point)">
      <summary>Paints the outline (range group) line.</summary>
      <param name="g">Graphics device interface for painting the line</param>
      <param name="startPoint">Starting point of the line</param>
      <param name="endPoint">Ending point of the line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintRangeGroupPoint(System.Drawing.Graphics,System.Drawing.Point)">
      <summary>Paints the outline (range group) point.</summary>
      <param name="g">Graphics device interface for painting the point</param>
      <param name="point">Point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintScrollBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the scroll bar intersection.</summary>
      <param name="g">Graphics device interface for painting the scroll bar</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintSheetTab(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the sheet tab.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="sheet">Sheet index of sheet tab being rendered</param>
      <param name="text">Sheet tab text</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="focused">Whether the sheet tab has focus</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintSheetTabPartial(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints a sheet tab which is partially displayed.</summary>
      <param name="g">Graphics device interface for painting the sheet tab</param>
      <param name="sheet">Sheet index of sheet tab being rendered</param>
      <param name="text">Sheet tab text</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="focused">Whether the sheet tab has focus</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintSpecialSheetTab(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the special insert sheet tab.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="placement">Placement</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintSplitBar(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split bar.</summary>
      <param name="g">Graphics device interface for painting the split bar</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintSplitBarCrossover(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the crossing area between split bars.</summary>
      <param name="g">Graphics device interface for painting the split bars</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintSplitBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split box.</summary>
      <param name="g">Graphics device interface for painting the split box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientInterfaceRenderer.PaintTabStripBackground(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripPlacement)">
      <summary>Paints the background of the tab strip.</summary>
      <param name="g">Graphics device interface for painting the tab strip background</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="placement">Tab strip location</param>
    </member>
    <member name="T:FarPoint.Win.Spread.GradientSelectionRenderer">
      <summary>Represents a renderer for displaying a gradient for a selection in the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientSelectionRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Int32)">
      <summary>Creates a new gradient selection renderer.</summary>
      <param name="color1">Initial color in the gradient</param>
      <param name="color2">Second color at the other end of the gradient</param>
      <param name="mode">Gradient mode</param>
      <param name="opacity">Amount of opacity (opposite of transparency)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientSelectionRenderer.#ctor">
      <summary>Represents a renderer for selections with gradients.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GradientSelectionRenderer.Color1">
      <summary>Gets or sets the first color of a two-color gradient.</summary>
      <value>First color</value>
    </member>
    <member name="P:FarPoint.Win.Spread.GradientSelectionRenderer.Color2">
      <summary>Gets or sets the second color of a two-color gradient.</summary>
      <value>Second color</value>
    </member>
    <member name="P:FarPoint.Win.Spread.GradientSelectionRenderer.LinearGradientMode">
      <summary>Gets or sets the gradient mode.</summary>
      <value>Gradient mode</value>
    </member>
    <member name="P:FarPoint.Win.Spread.GradientSelectionRenderer.Opacity">
      <summary>Gets or sets the opacity.</summary>
      <value>Opacity amount</value>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientSelectionRenderer.PaintSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the selection.</summary>
      <param name="g">Graphics object used to paint the rectangle</param>
      <param name="x">X-coordinate of the upper-left corner of the rectangle to paint</param>
      <param name="y">Y-coordinate of the upper-left corner of the rectangle to paint</param>
      <param name="width">Width of rectangle to paint</param>
      <param name="height">Height of rectangle to paint</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GradientSelectionRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GridLine">
      <summary>Represents the grid lines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.#ctor">
      <summary>Creates a new grid line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType)">
      <summary>Creates a new grid line of the specified line type.</summary>
      <param name="type">Type of grid line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType,System.Drawing.Color)">
      <summary>Creates a new grid line of the specified line type and color.</summary>
      <param name="type">Type of grid line</param>
      <param name="color">Color of grid line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a new grid line of the specified line type and colors.</summary>
      <param name="type">Type of grid line</param>
      <param name="color">Color of grid line</param>
      <param name="highlightColor">Highlight color for the grid line</param>
      <param name="shadowColor">Shadow color for the grid line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.#ctor(FarPoint.Win.Spread.GridLineType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32)">
      <summary>Creates a new grid line of the specified line type, colors, and width.</summary>
      <param name="type">Type of grid line</param>
      <param name="color">Color of grid line</param>
      <param name="highlightColor">Highlight color for the grid line</param>
      <param name="shadowColor">Shadow color for the grid line</param>
      <param name="width">Width of grid line</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The type is not one of the BorderStyle values. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> The width is less that -1. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Represents the grid lines.</summary>
      <param name="info">SerializationInfo object that holds the serialized object data</param>
      <param name="context">StreamingContext object with contexual information about the source or destination of the serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.GridLine.Color">
      <summary>Gets the color of the grid lines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GridLine.HighlightColor">
      <summary>Gets the highlight color for the grid lines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GridLine.ShadowColor">
      <summary>Gets the shadow color for the grid lines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GridLine.Type">
      <summary>Gets whether to display the grid lines and the type of grid lines to display.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GridLine.Width">
      <summary>Gets the width of the grid lines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the grid line from XML.</summary>
      <param name="r">XmlNodeReader object from which to read the grid line object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the <see cref="T:FarPoint.Win.Spread.GridLine" /> object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the grid line to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the grid line object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GridLine.ShouldSerializeWidth">
      <summary>Gets whether the Width property should be serialized.</summary>
      <returns>True if Width should be serialized, false otherwise.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.GroupBarInfo">
      <summary>Represents information about the grouping bar in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.#ctor">
      <summary>Initializes a new instance of the GroupBarInfo class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the GroupBarInfo class from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.BackColor">
      <summary>Gets or sets the background color of the grouping bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.Font">
      <summary>Gets or sets the font of the grouping bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.ForeColor">
      <summary>Gets or sets the text color of the grouping bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.GroupVerticalIndent">
      <summary>Gets or sets the separation of grouping levels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.Height">
      <summary>Gets or sets the height of the grouping bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.Text">
      <summary>Gets or sets the text of the grouping bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupBarInfo.Visible">
      <summary>Gets or sets whether the grouping bar is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the group bar information from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException"> The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.GroupBarInfo.PropertyChanged" /> event.</summary>
      <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.Reset">
      <summary>Resets this instance to default.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.ResetBackColor">
      <summary>Resets the BackColor property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.ResetFont">
      <summary>Resets the Font property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.ResetForeColor">
      <summary>Resets the ForeColor property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.ResetGroupVerticalIndent">
      <summary>Resets the GroupVerticalIndent property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.ResetHeight">
      <summary>Resets the Height property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.ResetText">
      <summary>Resets the Text property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupBarInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the group bar information to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.GroupBarInfo.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GroupInfo">
      <summary>Represents the grouping information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.#ctor">
      <summary>Creates a set of grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.BackColor">
      <summary>Gets or sets the background color of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.Border">
      <summary>Gets or sets the border of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.CanSerializeXml">
      <summary>Gets whether the grouping information can be rendered with XML in its entirety without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.Font">
      <summary>Gets or sets the font settings of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.FooterBackColor">
      <summary>Gets or sets the background color of the grouping footer information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.FooterBorder">
      <summary>Gets or sets the border of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.FooterFont">
      <summary>Gets or sets the font settings of the footer grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.FooterForeColor">
      <summary>Gets or sets the text color of the group footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.FooterHorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.FooterVerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.ForeColor">
      <summary>Gets or sets the text color of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.Indent">
      <summary>Gets or sets the indent of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.IndentColor">
      <summary>Gets or sets the indent color of the grouping information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfo.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the grouping information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the grouping information from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetStyleModelEventType)">
      <summary>Creates a SheetStyleModelEventArgs with the specifies event data and calls OnChanged to raise the Changed event.</summary>
      <param name="row">Row index where the event occurred, or -1 if all rows affected</param>
      <param name="column">Column index where the event occurred, or -1 if all columns affected</param>
      <param name="rowCount">Number of rows, or -1 if all rows affected</param>
      <param name="columnCount">Number of columns, or -1 if all columns affected</param>
      <param name="type">Type of event that occurred</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.GetAppearance(FarPoint.Win.Spread.Appearance)">
      <summary>Copies the appearance settings.</summary>
      <param name="appearance">Appearance object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.GetFooterAppearance(FarPoint.Win.Spread.Appearance)">
      <summary>Copies the group footer appearance settings.</summary>
      <param name="appearance">Appearance object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.OnChanged(FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
      <summary>Raises the changed event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.Reset">
      <summary>Resets the grouping information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the grouping information to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="E:FarPoint.Win.Spread.GroupInfo.Changed">
      <summary>Occurs when the user makes a change to the model that affects the style of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GroupInfoCollection">
      <summary>Represents the read-only collection of GroupInfo objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.#ctor">
      <summary>Creates a GroupInfo collection (GroupInfoCollection object).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.CanSerializeXml">
      <summary>Gets whether the object can be rendered with XML in its entirety without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.Count">
      <summary>Gets the number of GroupInfo objects in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.IsFixedSize">
      <summary>Gets whether the collection has a fixed size. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.IsReadOnly">
      <summary>Gets whether the collection is read-only. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.IsSynchronized">
      <summary>Gets whether access to the collection is synchronized. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.Item(System.Int32)">
      <summary>Gets or sets the GroupInfo object at the specified index in the collection.</summary>
      <param name="index">Index of the group information in the collection</param>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is not valid</exception>
      <exception cref="T:System.ArgumentNullException">No value specified; cannot set a member to null</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupInfoCollection.SyncRoot">
      <summary>Gets a collection (GroupInfoCollection object) that can be used to synchronize access.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Add(FarPoint.Win.Spread.GroupInfo)">
      <summary>Adds a GroupInfo object to the collection.</summary>
      <param name="value">GroupInfo object to add</param>
      <exception cref="T:System.ArgumentNullException">No value specified; a GroupInfo object must be specified</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.AddRange(System.Collections.ICollection)">
      <summary>Adds an array of GroupInfo objects to the collection.</summary>
      <param name="c">GroupInfoCollection or array of GroupInfo objects to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.AddRange(FarPoint.Win.Spread.GroupInfo[])">
      <summary>Adds an array of GroupInfo objects to the collection.</summary>
      <param name="array">Array of GroupInfo objects to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Clear">
      <summary>Removes all GroupInfo objects from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Contains(FarPoint.Win.Spread.GroupInfo)">
      <summary>Determines whether the collection contains the specified GroupInfo object.</summary>
      <param name="value">GroupInfo object for which to check in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.CopyTo(FarPoint.Win.Spread.GroupInfo[],System.Int32)">
      <summary>Copies the GroupInfos in the collection to a specified array at a specified position.</summary>
      <param name="groupInfos">One-dimensional array into which the elements from ICollection are copied (The array must have zero-based indexing.)</param>
      <param name="index">Zero-based index in array at which to paste GroupInfos.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the GroupInfos in the collection to a specified array at a specified position.</summary>
      <param name="array">One-dimensional array into which the elements from ICollection are copied (The array must have zero-based indexing.)</param>
      <param name="index">Zero-based index in array at which to paste styles</param>
      <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
      <exception cref="T:System.ArgumentException">Specified array is not valid; must have a rank of one</exception>
      <exception cref="T:System.ArgumentException">Specified array is not valid; must have sufficient length</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the collection of grouping information objects from XML.</summary>
      <param name="r">XmlNodeReader from which to load the collection object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.GetEnumerator">
      <summary>Gets an IEnumerator object for enumerating through the GroupInfo objects in the collection.</summary>
      <returns>IEnumerator object for enumerating the GroupInfo objects in the collection</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.IndexOf(FarPoint.Win.Spread.GroupInfo)">
      <summary>Returns the index of the specified GroupInfo object in the collection.</summary>
      <param name="value">GroupInfo object for which to search</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Insert(System.Int32,FarPoint.Win.Spread.GroupInfo)">
      <summary>Inserts a GroupInfo into the collection at the specified index.</summary>
      <param name="index">Zero-based index at which to insert the GroupInfo object</param>
      <param name="value">GroupInfo object to insert into the collection</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number in the collection </exception>
      <exception cref="T:System.ArgumentNullException"> No style specified or specified style is null; must specify a style </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.OnChanged(FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
      <summary>Raises the Changed event.</summary>
      <param name="e">SheetStyleModelEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Remove(FarPoint.Win.Spread.GroupInfo)">
      <summary>Removes the specified GroupInfo object from the collection.</summary>
      <param name="value">GroupInfo object to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.RemoveAt(System.Int32)">
      <summary>Removes the GroupInfo object from the collection at the specified index.</summary>
      <param name="index">Zero-based index of the GroupInfo object to remove</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number in the collection </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupInfoCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the collection of grouping information objects to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the collection object</param>
    </member>
    <member name="E:FarPoint.Win.Spread.GroupInfoCollection.Changed">
      <summary>Occurs when the user makes a change to the model that affects the style of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GroupingEventArgs">
      <summary>Represents the event data for grouping events in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.GroupingEventArgs.#ctor(FarPoint.Win.Spread.SortInfo[])">
      <summary>Creates a new set of grouping event arguments.</summary>
      <param name="info">Sorting information</param>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupingEventArgs.Cancel">
      <summary>Determines whether to cancel the grouping.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupingEventArgs.GroupComparer">
      <summary>Gets or sets the group comparer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.GroupingEventArgs.SortInfo">
      <summary>Gets the sorting information.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HeaderHitTestInformation">
      <summary>Represents hit test information for the headers of the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HeaderHitTestInformation.#ctor">
      <summary>Creates a new set of header hit test information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.Column">
      <summary>Gets the column location referred to in the header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InColumnResize">
      <summary>Gets whether the location refers to a column resize area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InFilter">
      <summary>Gets whether the location refers to a filter button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InNote">
      <summary>Gets whether the location refers to a sticky note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InNoteIndicator">
      <summary>Gets whether the location refers to a note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InRowExpansion">
      <summary>Gets whether the location refers to the row expand button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InRowResize">
      <summary>Gets whether the location refers to a row resize area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.InSort">
      <summary>Gets whether the location refers to the sort button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.ResizingColumn">
      <summary>Gets the column being resized, if InColumnResize is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.ResizingRow">
      <summary>Gets the row being resized, if InRowResize is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HeaderHitTestInformation.Row">
      <summary>Gets the row location referred to in the header.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HideRowFilter">
      <summary>Represents the filter that hides rows based on certain criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HideRowFilter.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new row filter for the specified sheet that hides rows that match the criteria.</summary>
      <param name="sheetView">SheetView object that contains the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.HideRowFilter.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.HideRowFilter.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.HighlightConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that is used before starting to paint the background. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.HighlightConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.HighlightConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.BackColor">
      <summary>Gets or sets the background color of the cell style.</summary>
      <value>The color of the background.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.Border">
      <summary>Gets or sets the cell border for the style.</summary>
      <value>The border.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.FontStyle">
      <summary>Gets the font style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.ForeColor">
      <summary>Gets or sets the forecolor.</summary>
      <value>The forecolor.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.Formatter">
      <summary>Gets or sets the formatter.</summary>
      <value>The formatter.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.StopIfTrue">
      <summary>Gets or sets a value that indicates whether all following rules should be stopped.</summary>
      <value>
        <c>true</c> if all following rules should be stopped; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingRule.Style">
      <summary>Gets the style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingRule.Execute(System.Int32,System.Int32,System.Object)">
      <summary>Executes the conditional format rule to change the cell's style.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value to determine what the result style is.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingRule.GetAllRules">
      <summary>Gets all rules.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.HighlightConditionalFormattingStyle">
      <summary>Represents the highlight style which applies the conditional formatting rule using highlighting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.HighlightConditionalFormattingStyle" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.BackColor">
      <summary>Gets the backcolor.</summary>
      <value>The backcolor.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.Border">
      <summary>Gets the border.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.FontStyle">
      <summary>Gets the font style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.ForeColor">
      <summary>Gets the forecolor.</summary>
      <value>The forecolor.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.Formatter">
      <summary>Gets the formatter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.IsBackColorSet">
      <summary>Gets whether the background color of the style (BackColor property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.IsBorderSet">
      <summary>Gets whether the style border (Border property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.IsFontStyleSet">
      <summary>Gets whether the font style of the style (FontStyle property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.IsForeColorSet">
      <summary>Gets whether the text color of the style (ForeColor property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HighlightConditionalFormattingStyle.IsFormatterSet">
      <summary>Gets whether the formatter for the style (Formatter property) is set.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HitTestInformation">
      <summary>Represents hit test information for the data area of the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HitTestInformation.#ctor">
      <summary>Creates a new set of hit test information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.ColumnViewport">
      <summary>Gets the column viewport referred to in the spreadsheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.FilterBarInfo">
      <summary>Gets more detailed hit test information for the filter bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.HeaderInfo">
      <summary>Gets more detailed hit test information for the headers (column headers, row headers, and corner).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.RangeGroupInfo">
      <summary>Gets more detailed hit test information for the range group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.RowViewport">
      <summary>Gets the row viewport referred to in the spreadsheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.TabStripInfo">
      <summary>Gets more detailed hit test information for the tab strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.TitleBarInfo">
      <summary>Gets more detailed hit test information for the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.Type">
      <summary>Gets the general area referred to in the spreadsheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HitTestInformation.ViewportInfo">
      <summary>Gets more detailed hit test information for the viewport.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HyperLinkClickedEventArgs">
      <summary>Represents the event data for the HyperLinkClicked event for the component, which occurs when the hyperlink cell is clicked.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.HyperLinkClickedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Creates a new object with the ActiveSheetChanging event arguments.</summary>
      <param name="view">The view that contains the cell with the editor that raised the event.</param>
      <param name="editingControl">The Control object that raises the event.</param>
      <param name="row">The row index of the cell with the editor that raised the event.</param>
      <param name="column">The column index of the cell with the editor that raised the event.</param>
      <param name="linkIndex">The index of the clicked link.</param>
      <param name="link">The link.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.HyperLinkClickedEventArgs.Column">
      <summary>Gets the column index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HyperLinkClickedEventArgs.EditingControl">
      <summary>Gets the Control object that raises the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HyperLinkClickedEventArgs.Link">
      <summary>Gets or sets the link.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HyperLinkClickedEventArgs.LinkIndex">
      <summary>Gets or sets the index of the clicked link.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HyperLinkClickedEventArgs.Row">
      <summary>Gets the row index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.HyperLinkClickedEventArgs.View">
      <summary>Gets the view that contains the cell with the editor that raised the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IconFilterItem">
      <summary>Provides an IconFilter class to filter cells using an icon specified in the filter criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.#ctor(FarPoint.Win.Spread.ConditionalFormattingIconSetIndex)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconFilterItem" /> class.</summary>
      <param name="icon">The icon.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.#ctor(FarPoint.Win.Spread.ConditionalFormattingIcon)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconFilterItem" /> class.</summary>
      <param name="icon">The icon.</param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.Icon">
      <summary>Gets or sets the icon used to filter.</summary>
      <value>The icon.</value>
      <remarks>This property is deprecated</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Custom icon is not a valid value</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.IconSetIndex">
      <summary>Gets or sets the icon used to filter.</summary>
      <value>The icon.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">Custom icon is not a valid value</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.IsObjectValueEditable">
      <summary>Gets whether the icon can be edited in the editor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.Label">
      <summary>Gets the displayed text of the filter (filter name or operator).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.ObjectValue">
      <summary>Gets or sets the text value for the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IconFilterItem.SheetView">
      <summary>Sets the sheet to filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Model column index</param>
      <returns>An integer array of filters of filtered rows</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Model column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
      <returns>true if the name of the filter is displayed in the filter drop-down list; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IconNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.AppearanceActionBase" /> that displays an error icon for the validating cell when validation fails.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconNotify" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconNotify" /> class.</summary>
      <param name="iconTip">A <see cref="T:System.String" /> value that is displayed when hovering over the <see cref="P:FarPoint.Win.Spread.IconNotify.Icon" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.IconNotify.Icon">
      <summary>Gets or sets a <see cref="T:System.Drawing.Icon" /> that is displayed for the validating <see cref="T:FarPoint.Win.Spread.Cell" />.</summary>
      <value>A <see cref="T:System.Drawing.Icon" /> that is displayed on the validating <see cref="T:FarPoint.Win.Spread.Cell" />. The default is <see langword="null" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.IconNotify.IconTip">
      <summary>Gets or sets a string value that is shown when the pointer is hovering over the <see cref="P:FarPoint.Win.Spread.IconNotify.Icon" />.</summary>
      <value>A <see cref="T:System.String" /> value that is shown when the pointer is hovering over the <see cref="P:FarPoint.Win.Spread.IconNotify.Icon" />. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.IconNotify" /> value.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.IconNotify" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IconSetConditionalFormattingRule">
      <summary>Represents the rule that paints an icon in the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingIconSetStyle,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconSetConditionalFormattingRule" /> class.</summary>
      <param name="iconSetStyle">The icon set style.</param>
      <param name="suppressCustomName">
        <c>true</c> indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingIconSetStyle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconSetConditionalFormattingRule" /> class.</summary>
      <param name="iconSetStyle">The icon set style.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.IconSetConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.IconSetConditionalFormattingRule.IconRuleSet">
      <summary>Gets the icons.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IconSetConditionalFormattingRule.Reversed">
      <summary>Gets or sets a value that indicates whether <see cref="T:FarPoint.Win.Spread.IconSetConditionalFormattingRule" /> is reversed.</summary>
      <value>
        <c>true</c> if reversed; otherwise, <c>false</c>.</value>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.GetAllRules">
      <summary>Gets all rules.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.GetRuleEffectingInfo(FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Gets the information with the specified appearance settings if the conditional formatting rule is met.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings if the conditional format rule is satisfied.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IconSetConditionalFormattingRule.Reverse">
      <summary>Reverses the current order of the icons.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IconSetConditionalFormattingRule.GetCustomIcon">
      <summary>Occurs when getting a custom icon that is displayed in a cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ImageFocusIndicatorRenderer">
      <summary>Represents the renderer of the image focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer of the image focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.#ctor(System.Drawing.Image,System.Drawing.Color)">
      <summary>Creates a new renderer of the image focus indicator.</summary>
      <param name="img">Image to use for the focus indicator</param>
      <param name="transparencyColor">Color of the focus indicator that is treated as transparent</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.Image">
      <summary>Gets or sets the image to use for rendering the custom focus indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.TransparencyColor">
      <summary>Gets or sets the transparency color of the custom focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the image focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ImageFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IncludeListValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that validates whether the specified value exists in the given <see cref="P:FarPoint.Win.Spread.IncludeListValidator.Candidates" /> list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IncludeListValidator.Candidates">
      <summary>Gets or sets a <see cref="T:System.String" /> array that indicates the specified values included in the candidate strings.</summary>
      <value>A <see cref="T:System.String" /> array that indicates the candidate strings. The default is <see langword="null" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.IncludeListValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.IncludeListValidator" />.</returns>
      <remarks>Invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.IncludeListValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IncludeListValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value exists in the given <see cref="P:FarPoint.Win.Spread.IncludeListValidator.Candidates" /> list.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated and contains relative context information.</param>
      <returns>
        <see langword="true" /> if the specifed value exists in the given candidate string list; otherwise,<see langword="false" />.</returns>
      <remarks>If the cell value is <see langword="null" />, and <see cref="P:FarPoint.Win.Spread.IncludeListValidator.Candidates" /> has a <see langword="null" /> value, the validation is successful.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.InputMap">
      <summary>Represents the map between input by the user and the action that occurs.</summary>
      <remarks>The input map provides a map between an input event (currently only key strokes are supported) and an object. Input maps can have parents that are searched for mappings not defined in the input map.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.#ctor">
      <summary>Creates a new input map with no parent and no mappings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new input map with data from the specified serialization and stream objects.</summary>
      <param name="info">Data needed to serialize or deserialize an object</param>
      <param name="context">Source and destination of a given serialized stream</param>
    </member>
    <member name="P:FarPoint.Win.Spread.InputMap.Parent">
      <summary>Gets or sets the parent (<see cref="T:FarPoint.Win.Spread.InputMap" /> object) of this input map.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.InputMap.Size">
      <summary>Returns the number of mappings defined in this input map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.AllKeys">
      <summary>Returns the key strokes that are defined in this input map and its parent.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Clear">
      <summary>Removes all the mappings from this input map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Get(FarPoint.Win.Spread.Keystroke)">
      <summary>Returns the binding for the specified key stroke.</summary>
      <param name="keystroke">Key stroke for which to get input map</param>
      <remarks>This method queries the parent input map if the binding is not defined in the current input map.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the <see cref="T:FarPoint.Win.Spread.InputMap" /> object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Keys">
      <summary>Gets the key strokes that are defined in this input map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Put(FarPoint.Win.Spread.Keystroke,System.Object)">
      <summary>Creates a binding between the specified key stroke and an action.</summary>
      <param name="keystroke">Key stroke specified</param>
      <param name="actionMapKey">Action specified</param>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Remove(FarPoint.Win.Spread.Keystroke)">
      <summary>Removes the mapping for the specified key stroke.</summary>
      <param name="keystroke">Key stroke specified</param>
    </member>
    <member name="M:FarPoint.Win.Spread.InputMap.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.InvalidFileFormatException">
      <summary>Exception is thrown when fail to load input map file.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.InvalidFileFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.InvalidFileFormatException" /> class.</summary>
      <param name="message">The message.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ItemEventArgs">
      <summary>Provides data for an event in a collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ItemEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ItemEventArgs" /> class.</summary>
      <param name="item">An <c>object</c> value that indicates the item.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ItemEventArgs.Item">
      <summary>Gets the item.</summary>
      <value>An <c>object</c> value that indicates the item.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.ItemTrackedEventArgs">
      <summary>Represents the event data for the element in a collection that has been updated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ItemTrackedEventArgs.#ctor(System.Object,System.String,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ItemTrackedEventArgs" /> class.</summary>
      <param name="item">The item.</param>
      <param name="propertyName">Name of the property.</param>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ItemTrackedEventArgs.Newvalue">
      <summary>Gets the new value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ItemTrackedEventArgs.OldValue">
      <summary>Gets the old value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ItemTrackedEventArgs.PropertyName">
      <summary>Gets the name of the property.</summary>
      <value>The name of the property.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.KeystrokeFactory">
      <summary>Represents a means of creating <see cref="T:FarPoint.Win.Spread.Keystroke" /> objects in environments that do not support parameterized constructors.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.KeystrokeFactory.#ctor">
      <summary>Creates a new KeystrokeFactory object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.KeystrokeFactory.CreateKeystroke(System.Char)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.Keystroke" /> object from a character.</summary>
      <param name="keyChar">Character for the keystroke</param>
    </member>
    <member name="M:FarPoint.Win.Spread.KeystrokeFactory.CreateKeystroke(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.Keystroke" /> object from a key code and modifiers.</summary>
      <param name="keyCode">Key code for the keystroke</param>
      <param name="modifiers">Modifier keys for the keystroke</param>
    </member>
    <member name="M:FarPoint.Win.Spread.KeystrokeFactory.CreateKeystroke(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Boolean)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.Keystroke" /> object from a key code and modifiers.</summary>
      <param name="keyCode">Key code for the keystroke</param>
      <param name="modifiers">Modifier keys for the keystroke</param>
      <param name="onKeyRelease">Whether the keystroke is active on key release</param>
    </member>
    <member name="T:FarPoint.Win.Spread.LandscapeRule">
      <summary>Represents the rules that determine whether to print in landscape format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LandscapeRule.#ctor">
      <summary>Creates a new rule that determines whether to print in landscape format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LandscapeRule.#ctor(FarPoint.Win.Spread.ResetOption)">
      <summary>Creates a new rule that determines whether to print in landscape format, with the specified reset option.</summary>
      <param name="resetOption">Whether to reset the rules or a particular rule</param>
    </member>
    <member name="P:FarPoint.Win.Spread.LandscapeRule.ResetOption">
      <summary>Determines whether to reset the rules or a particular rule before testing the next SmartPrint rule.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.LeaveCellEventArgs">
      <summary>Represents the event data for the LeaveCell event for the Spread component, which occurs when the focus leaves a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LeaveCellEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new object with the LeaveCell event arguments.</summary>
      <param name="view">View with the cell being left</param>
      <param name="row">Row index of the cell being left</param>
      <param name="column">Column index of the cell being left</param>
      <param name="newRow">Row index of the cell being entered</param>
      <param name="newColumn">Column index of the cell being entered</param>
    </member>
    <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the cell navigation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.Column">
      <summary>Gets the column index of the cell being left.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.NewColumn">
      <summary>Gets the column index of the cell being entered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.NewRow">
      <summary>Gets the row index of the cell being entered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LeaveCellEventArgs.Row">
      <summary>Gets the row index index of the cell being left.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.LeftChangeEventArgs">
      <summary>Represents the event data for the LeftChange event for the Spread component, which occurs when the left column in the view changes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LeftChangeEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new object with the LeftChange event arguments.</summary>
      <param name="view">View in which the change occurred</param>
      <param name="oldLeft">Index of the previous left column</param>
      <param name="newLeft">Index of the new left column</param>
      <param name="columnViewportIndex">Index of the viewport column in which the change occurred</param>
    </member>
    <member name="P:FarPoint.Win.Spread.LeftChangeEventArgs.ColumnViewportIndex">
      <summary>Gets the index of the viewport column in which the change occurred.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LeftChangeEventArgs.NewLeft">
      <summary>Gets the index of the new left column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LeftChangeEventArgs.OldLeft">
      <summary>Gets the index of the previous left column.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.LineNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.AppearanceActionBase" /> that displays an underline in the validating cell when validation fails.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LineNotify.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LineNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.LineNotify.LineColor">
      <summary>Gets or sets the color of the underline.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> value that represents the underline color. The default is <see cref="P:System.Drawing.Color.Red" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.LineNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.IconNotify" /> value.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.IconNotify" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LineNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LineNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.LineNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.LineSparklineRenderer">
      <summary>Represents the line sparkline renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LineSparklineRenderer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.LineSparklineRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LineSparklineRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.LineSparklineRenderer" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.LineSparklineRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LineSparklineRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.LineSparklineRenderer.PaintSparkline(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Sparkline)">
      <summary>Paints the sparkline.</summary>
      <param name="g">The graphics object.</param>
      <param name="rectangle">The rectangle.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.LineSparklineRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ListBase`1">
      <summary>Represents a strongly typed list of objects that can be accessed by index. Provides methods to search, sort, and manipulate lists.</summary>
      <typeparam name="T">The type of elements in the list.</typeparam>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</summary>
      <param name="collection">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> class that is empty and has the specified initial capacity.</summary>
      <param name="capacity">The number of elements that the new list can initially store.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ListBase`1.Capacity">
      <summary>Gets or sets the total number of elements the internal data structure can hold without resizing.</summary>
      <value>The number of elements that the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> can contain before resizing is required.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ListBase`1.Count">
      <summary>Gets the number of elements actually contained in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <value>The number of elements actually contained in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ListBase`1.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <value>The element at the specified index.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Add(`0)">
      <summary>Adds an object to the end of the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Adds the elements of the specified collection to the end of the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="collection">The collection whose elements should be added to the end of the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.BinarySearch(`0)">
      <summary>Searches the entire sorted <see cref="T:FarPoint.Win.Spread.ListBase`1" /> for an element using the default comparer and returns the zero-based index of the element.</summary>
      <param name="item">The object to locate. The value can be null for reference types.</param>
      <returns>The zero-based index of item in the sorted <see cref="T:FarPoint.Win.Spread.ListBase`1" />, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of <see cref="T:FarPoint.Win.Spread.ListBase`1" nolink="true" />.Count.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
      <summary>Searches the entire sorted <see cref="T:FarPoint.Win.Spread.ListBase`1" /> for an element using the default comparer and returns the zero-based index of the element.</summary>
      <param name="item">The object to locate. The value can be null for reference types.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</param>
      <returns>The zero-based index of item in the sorted <see cref="T:FarPoint.Win.Spread.ListBase`1" />, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of <see cref="T:FarPoint.Win.Spread.ListBase`1" nolink="true" />.Count.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
      <summary>Searches the entire sorted <see cref="T:FarPoint.Win.Spread.ListBase`1" /> for an element using the default comparer and returns the zero-based index of the element.</summary>
      <param name="index">The zero-based starting index of the range to search.</param>
      <param name="count">The length of the range to search.</param>
      <param name="item">The object to locate. The value can be null for reference types.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</param>
      <returns>The zero-based index of item in the sorted <see cref="T:FarPoint.Win.Spread.ListBase`1" />, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of <see cref="T:FarPoint.Win.Spread.ListBase`1" nolink="true" />.Count.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Clear">
      <summary>Removes all elements from the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Contains(`0)">
      <summary>Determines whether the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.CopyTo(`0[])">
      <summary>Copies the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The <see cref="T:System.Array" nolink="true" /> must have zero-based indexing.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The <see cref="T:System.Array" nolink="true" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
      <summary>Copies the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</summary>
      <param name="index">The zero-based index in the source <see cref="T:FarPoint.Win.Spread.ListBase`1" /> at which copying begins.</param>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The <see cref="T:System.Array" nolink="true" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
      <param name="count">The count.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.IndexOf(`0)">
      <summary>Determines the index of a specific item in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.IndexOf(`0,System.Int32)">
      <summary>Determines the index of a specific item in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
      <param name="index">The zero-based starting index of the search. 0 (zero) is valid in an empty list.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.IndexOf(`0,System.Int32,System.Int32)">
      <summary>Determines the index of a specific item in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
      <param name="index">The zero-based starting index of the search. 0 (zero) is valid in an empty list.</param>
      <param name="count">The number of elements in the section to search.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Insert(System.Int32,`0)">
      <summary>Inserts an item to the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
      <summary>Inserts the elements of a collection into the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> at the specified index.</summary>
      <param name="index">The zero-based index at which the new elements should be inserted.</param>
      <param name="collection">The collection whose elements should be inserted into the <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.LastIndexOf(`0)">
      <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> that contains the specified number of elements and ends at the specified index.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The value can be null for reference types.</param>
      <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> that contains count number of elements and ends at index, if found; otherwise, –1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.LastIndexOf(`0,System.Int32)">
      <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> that contains the specified number of elements and ends at the specified index.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The value can be null for reference types.</param>
      <param name="index">The zero-based starting index of the backward search.</param>
      <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> that contains count number of elements and ends at index, if found; otherwise, –1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.LastIndexOf(`0,System.Int32,System.Int32)">
      <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> that contains the specified number of elements and ends at the specified index.</summary>
      <param name="item">The object to locate in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />. The value can be null for reference types.</param>
      <param name="index">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> that contains count number of elements and ends at index, if found; otherwise, –1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</param>
      <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:FarPoint.Win.Spread.ListBase`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:FarPoint.Win.Spread.ListBase`1" nolink="true" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of elements from the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
      <param name="index">The zero-based starting index of the range of elements to remove.</param>
      <param name="count">The number of elements to remove.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Reverse">
      <summary>Reverses the order of the elements in the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Reverse(System.Int32,System.Int32)">
      <summary>Reverses the order of the elements in the specified range.</summary>
      <param name="index">The zero-based starting index of the range to reverse.</param>
      <param name="count">The number of elements in the range to reverse.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Sort">
      <summary>Sorts the elements in the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" /> using the default comparer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Sort(System.Collections.Generic.IComparer{`0})">
      <summary>Sorts the elements in the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" /> using the specified comparer.</summary>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Sort(System.Comparison{`0})">
      <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</summary>
      <param name="comparison">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
      <summary>Sorts the elements in the entire <see cref="T:FarPoint.Win.Spread.ListBase`1" /> using the specified comparer.</summary>
      <param name="index">The zero-based starting index of the range to sort.</param>
      <param name="count">The length of the range to sort.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.ToArray">
      <summary>Copies the elements of the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> to a new array.</summary>
      <returns>An array containing copies of the elements of the <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.TrimExcess">
      <summary>Sets the capacity to the actual number of elements in the <see cref="T:FarPoint.Win.Spread.ListBase`1" />, if that number is less than a threshold value.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ListBase`1.ListChanged">
      <summary>Occurs when the list or an item in the list changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ListBase`1.ListChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.IBindingList.ListChanged" /> event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the ListChangedEventArgs class.</summary>
      <param name="type">A <see cref="T:System.ComponentModel.ListChangedType" /> value indicating the type of change.</param>
      <param name="index">The index of the item that was added, changed, or removed.</param>
      <param name="count">The count of the items that were added, changed or removed.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ListBase`1.ListChangedEventArgs.Count">
      <summary>Gets the count.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer">
      <summary>Represents the renderer of the marquee (or animated) focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer for the marquee (or animated) focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.#ctor(System.Drawing.Color,System.Int32)">
      <summary>Creates a new renderer for the marquee (or animated) focus indicator with the specified line thickness and color.</summary>
      <param name="color">Color object that specifies the color of the indicator line</param>
      <param name="thickness">Integer number of pixels in the thickness of the indicator line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a SpreadMonthCalendar from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Color">
      <summary>Gets or sets the color.</summary>
      <value>Color</value>
    </member>
    <member name="P:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Position">
      <summary>Gets or sets the current step in the multiple-step animation cycle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Thickness">
      <summary>Gets or sets the thickness.</summary>
      <value>Number of pixels in the thickness</value>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Dispose(System.Boolean)">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
      <param name="disposing" />
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Finalize">
      <summary>The destructor method.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">SerializationInfo to populate with data.</param>
      <param name="context">Destination for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the marquee (or animated) focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MarqueeFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.MessageBoxNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that can display a message when cell validating fails.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.MessageBoxNotify.Caption">
      <summary>Gets or sets the caption.</summary>
      <value>The caption. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.MessageBoxNotify.Icon">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.MessageBoxIcon">Icon</see>.</summary>
      <value>The message icon. The default is <see cref="F:System.Windows.Forms.MessageBoxIcon.None" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a valid <see cref="T:System.Windows.Forms.MessageBoxIcon" /> value. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.MessageBoxNotify.Message">
      <summary>Gets or sets the message.</summary>
      <value>The message. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
      <remarks>If this property is <see cref="F:System.String.Empty">String.Empty</see> or <see langword="null" />, the message will be the ValidateInfo value.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.MessageBoxNotify" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.MessageBoxNotify" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> using the <paramref name="context" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MessageBoxNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ModelessForm">
      <summary>Represents an abstract modeless form which allow user to select cell ranges from Spread.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ModelessForm" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Initializes a new instance of the ModelessForm class.</summary>
      <param name="spread">The spread.</param>
    </member>
    <member name="F:FarPoint.Win.Spread.ModelessForm.CompactPanel">
      <summary>Indicates the panel which contains control elements when the current form is in compact mode. It's used internal only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ModelessForm.SelectButtonBase">
      <summary>Indicates the button in compact mode. It's used internal only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.ActivatingTextBox">
      <summary>Gets or sets the activating text box. An activating text box will allow user to use keyboard for selecting cell ranges.</summary>
      <value>The activating text box.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.AlwaysInCompact">
      <summary>Gets or sets a value indicating whether the form will be always in compact mode.</summary>
      <value>
        <c>true</c> if the form will be always in compact mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.AutoCompact">
      <summary>Gets or sets a value indicating whether the form will transform to compact mode automatically (when user is selecting).</summary>
      <value>
        <c>true</c> if the form will transform to compact mode automatically; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.IgnoreUpdateSelection">
      <summary>Gets or sets a value indicating whether [ignore update selection].</summary>
      <value>
        <c>true</c> if [ignore update selection]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.IsInCompactMode">
      <summary>Gets a value indicating whether this instance is in compact mode.</summary>
      <value>
        <c>true</c> if this instance is in compact mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.NativeWindow">
      <summary>Gets the native window.</summary>
      <value>The native window.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.Owner">
      <summary>Gets or sets the form that owns this form.</summary>
      <value>A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</value>
      <exception cref="T:System.Exception">A top-level window cannot have an owner. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.RestoreCompactButton">
      <summary>Gets the restore compact button.</summary>
      <value>The restore compact button.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessForm.SuppendSelecting">
      <summary>Gets or sets a value indicating whether selecting is suppend. In the most case, it will be assigned if the form open a new modeless form.</summary>
      <value>
        <c>true</c> if selecting is suppend; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ActiveSheetView(System.String,FarPoint.Win.Spread.SheetView)">
      <summary>Actives the sheet view.</summary>
      <param name="formula">The formula.</param>
      <param name="defaultSheetView">The default sheet view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.AutoCorrectFormula(System.String)">
      <summary>Autoes the correct formula.</summary>
      <param name="formula">The formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.GetFormula(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Gets the formula string of a sheet cell range.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.GetFormula(FarPoint.Win.Spread.Chart.SheetCellRange[],System.Boolean)">
      <summary>Gets the formula string of multiple sheet cell ranges.</summary>
      <param name="cellRanges">The cell ranges.</param>
      <param name="useOpeningQuote">if set to <c>true</c> [use opening quote].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.GetSheetCellRangeArray(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Gets the sheet cell range array.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="allSelectedCellRanges">All selected cell ranges.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.HideCompactPanel">
      <summary>Hides the compact panel.</summary>
      <remarks>Because of a strange bug in handling ACTIVE, DEACTIVATE status of window, if we set Visible property of form or its child control, ModelessForm won't be able hanlde mouse event. Up to this time, I don't find a straight solution for that problem yet. So, I approach this problem by Location property. If we can not see a control, it looks like to be hidden.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnActivatingTextBoxEnter">
      <summary>Called when user put focus on activating text box.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnActivatingTextBoxLeave">
      <summary>Called when user leave focus from activating text box.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnAfterSelectionChanging(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Called when [after selection changing].</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnSelectionChanged(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Called when user finished selecting cell range.</summary>
      <param name="cellRange">The cell range.</param>
      <param name="allSelectedCellRanges">Array of selected cell ranges</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.OnSelectionChanging(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Called when user is selecting cell range.</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ParseCellRange(System.String)">
      <summary>Parses the cell range.</summary>
      <param name="formula">The formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ParseCellRanges(System.String,System.Boolean)">
      <summary>Parses the cell ranges.</summary>
      <param name="formula">The formula.</param>
      <param name="errorAsNull">if set to <c>true</c>, we will tread all invalid formula as null expression.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes a dialog box key.</summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
      <returns>true if the keystroke was processed and consumed by the control; otherwise, false to allow further processing.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ProcessMnemonic(System.Char)">
      <summary>Processes the mnemonic.</summary>
      <param name="charCode">The char code.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.RestoreFromCompactMode">
      <summary>Restores from compact mode.</summary>
      <returns>true if the validating of textbox should be fired.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.Show">
      <summary>Displays the control to the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.Show(System.Windows.Forms.IWin32Window)">
      <summary>Shows the form with the specified owner to the user.</summary>
      <param name="owner">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</param>
      <exception cref="T:System.ArgumentException"> The form specified in the <paramref name="owner" /> parameter is the same as the form being shown. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ShowCompactPanel">
      <summary>Shows the compact panel.</summary>
      <remarks>Because of a strange bug in handling ACTIVE, DEACTIVATE status of window, if we set Visible property of form or its child control, ModelessForm won't be able hanlde mouse event. Up to this time, I don't find a straight solution for that problem yet. So, I approach this problem by Location property. If we can not see a control, it looks like to be hidden.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.ShowSelectedCellRange(FarPoint.Win.Spread.Chart.SeriesDataField)">
      <summary>Shows the selected cell range.</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.TransformToCompactMode">
      <summary>Transforms to compact mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.UpdateSelectionCellRange(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Updates the selection cell range.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="allSelectedCellRanges">All selected cell ranges.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessForm.WndProc(System.Windows.Forms.Message@)">
      <summary>This function handles all messages which is dispatched to the window.</summary>
      <param name="m">The m.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ModelessTextBox">
      <summary>ModelessTextBox</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessTextBox.#ctor">
      <summary>Creates a ModelessTextBox (ModelessTextBox object).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessTextBox.DisableText">
      <summary>Text display when control is disabled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessTextBox.IsCompact">
      <summary>Gets or sets whether the form is compact</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessTextBox.LastText">
      <summary>Get or set the LastText.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessTextBox.Text">
      <summary>Get or set the Text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ModelessTextBox.TextBox">
      <summary>Get the textbox control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessTextBox.Dispose(System.Boolean)">
      <summary>Form overrides dispose to clean up the component list.</summary>
      <param name="disposing" />
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessTextBox.OnEnabledChanged(System.EventArgs)">
      <summary>Raises the System.Windows.Forms.Control.EnabledChanged event.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ModelessTextBox.OnParentChanged(System.EventArgs)">
      <summary>Handles when its parent has changed</summary>
      <param name="e">Argument object.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.ModelessTextBox.SelectButtonClick">
      <summary>Occurs when the select button click.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule">
      <summary>Represents the color scale conditional formatting rule with multiple middle values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="midValueCapacity">The initialized middle value capacity.</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minColor">Color of the minimum value.</param>
      <param name="maxColor">Color of the maximum value.</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="midValueCapacity">The initialized middle value capacity.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minColor">Color of the minimum value.</param>
      <param name="maxColor">Color of the maximum value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minValue">The minimum value.</param>
      <param name="maxValue">The maximum value.</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minValue">The minimum value.</param>
      <param name="maxValue">The maximum value.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.MidValues">
      <summary>Gets the middle values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiColorScaleConditionalFormattingRule.IsMidValueValid(FarPoint.Win.Spread.ConditionalFormattingColorValue)">
      <summary>Determines whether the value can be used for middle values.</summary>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the value can be used for middle values; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.MultiValuesFilterItem">
      <summary>Provides a Filters class to filter items using a criteria values list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.MultiValuesFilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.#ctor">
      <summary>Creates an instance of filters with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.#ctor(System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.FilterItemValue})">
      <summary>Creates an instance of filters with customized settings.</summary>
      <param name="valueItems" />
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.#ctor(FarPoint.Win.Spread.FilterItemValue[])">
      <summary>Creates an instance of filters with customized settings.</summary>
      <param name="valueItems">Array of ValueFilterItem objects</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.#ctor(FarPoint.Win.Spread.FilterItemValueCollection)">
      <summary>Creates an instance of filters with customized settings.</summary>
      <param name="valueItems">A ValueFilterItemCollection</param>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.FilterBlank">
      <summary>Gets or sets a boolean value that specifies whether blank items are counted when filtering.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.FilterItems">
      <summary>Gets or sets a collection of value items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.IsObjectValueEditable">
      <summary>Gets or sets whether the object value can be edited. In the filter bar UI, the text editor is displayed if value is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.Label">
      <summary>Gets the display text of the filter (filter name or operator).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.ObjectValue">
      <summary>Gets or sets the text value for the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.MultiValuesFilterItem.SheetView">
      <summary>Sets the SheetView object to the filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current MultiValuesFilter object.</summary>
      <param name="obj">The System.Object to compare with the current System.Object.</param>
      <returns>true if all settings are equal; otherwise, false. The sheetview setting is not included</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Model column index</param>
      <returns>An integer array of filters of filtered rows</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:FarPoint.Win.Spread.MultiValuesFilterItem" /> class.</summary>
      <returns>A hash code for the current <see cref="T:FarPoint.Win.Spread.MultiValuesFilterItem" /> object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.MultiValuesFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Model column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
      <returns>true if the name of the filter is displayed in the filter drop-down list; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.NameBox">
      <summary>Represents the custom name texbox.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NameBox.#ctor">
      <summary>construct</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NameBox.RightToLeft">
      <summary>Gets or sets a value indicating whether control's elements are aligned to supportlocales using right-to-left fonts.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NameBox.Spread">
      <summary>Gets or sets the Spread.</summary>
      <value>Spread</value>
    </member>
    <member name="P:FarPoint.Win.Spread.NameBox.TextAlign">
      <summary>Gets or sets the alignment of the text in the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NameBox.Attach(FarPoint.Win.Spread.FpSpread)">
      <summary>Attaches the specified Spread component to the name text box.</summary>
      <param name="spread">Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NameBox.Detach">
      <summary>Detaches the Spread component from the name text box.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NameBox.OnNameSelectedChanged(FarPoint.Win.Spread.SelectionChangedEventArgs)">
      <summary>Raises the selectionChanged event.</summary>
      <param name="e">SelectionChangedEventArgs that contain the event arguments</param>
    </member>
    <member name="E:FarPoint.Win.Spread.NameBox.NameSelectedChanged">
      <summary>Raises the selectionChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.BackColor">
      <summary>Gets the cell background color for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.Border">
      <summary>Gets the border of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.CellStyleName">
      <summary>Gets or sets the name of the <see cref="T:FarPoint.Win.Spread.NamedStyle" />.</summary>
      <value>A <see cref="T:System.String" /> value that represents the name of the <see cref="T:FarPoint.Win.Spread.NamedStyle" />.</value>
      <exception cref="T:System.ArgumentNullException"> The assigned value is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentException"> The assigned value is not a valid name. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.Font">
      <summary>Gets the font settings of the cell for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.ForeColor">
      <summary>Gets the text color of the cell for the notification style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.HorizontalAlignment">
      <summary>Gets the horizontal alignment of the contents of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.TextIndent">
      <summary>Gets the amount to indent the text for the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedAppearanceStyleInfo.VerticalAlignment">
      <summary>Gets the vertical alignment of contents of the cell style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.Clone">
      <summary>Creates a clone of the current object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.GetActualStyle(FarPoint.Win.Spread.DynamicStyleInfoContext)">
      <summary>Gets the actual CellStyle</summary>
      <param name="context" />
      <returns>The actual CellStyle</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedAppearanceStyleInfo.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the <see cref="T:FarPoint.Win.Spread.NamedAppearanceStyleInfo" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:FarPoint.Win.Spread.NamedAppearanceStyleInfo" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.NamedObjectCollection`1">
      <summary>Represents the strongly typed INamedObject object collection.</summary>
      <remarks>Provides methods and properties to search, and access to items using the Name property of the <see cref="T:FarPoint.Win.Spread.INamedObject" /> object.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedObjectCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.NamedObjectCollection`1" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedObjectCollection`1.Item(System.String)">
      <summary>Gets or sets the element with the specified name.</summary>
      <param name="name">The item's name.</param>
      <value>An <see cref="T:FarPoint.Win.Spread.INamedObject" /> value that indicates the specified item.</value>
      <exception cref="T:System.ArgumentNullException"> The assigned value is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentException"> The item associated with the <paramref name="name" /> cannot be found. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.NamedStyle">
      <summary>Represents a custom style, an object that can be used to set style information for other objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor">
      <summary>Creates a custom style (NamedStyle object) with no name and no parent.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.String)">
      <summary>Creates a custom style (NamedStyle object) with the specified name.</summary>
      <param name="name">Name of the new NamedStyle object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.String,System.String)">
      <summary>Creates a custom style (NamedStyle object) with the specified name and parent.</summary>
      <param name="name">Name of the new NamedStyle object</param>
      <param name="parentName">Parent of the new NamedStyle object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.String,System.String,FarPoint.Win.Spread.StyleInfo)">
      <summary>Creates a custom style (NamedStyle object) using the specified StyleInfo object, name, and parent name.</summary>
      <param name="style">StyleInfo object</param>
      <param name="name">Name of the new style (NamedStyle object)</param>
      <param name="parentName">Parent of the new style (NamedStyle object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a custom style (NamedStyle object) for sharing settings across models.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.BackColor">
      <summary>Gets or sets the background color for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Border">
      <summary>Gets or sets the border for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.CanFocus">
      <summary>Gets or sets whether the user can set focus to the cell using the keyboard or mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.CellPadding">
      <summary>Gets or sets the amount of spaces for cell padding in the cell in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.CellType">
      <summary>Gets or sets the cell type for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Editor">
      <summary>Gets or sets the editor for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Font">
      <summary>Gets or sets the font for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.ForeColor">
      <summary>Gets or sets the text color for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Formatter">
      <summary>Gets or sets the formatter for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment for the named style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.ImeMode">
      <summary>Gets or sets the IME mode for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.ImeSentenceMode">
      <summary>Gets or sets the IME sentence mode for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.InputScope">
      <summary>Gets or sets the input scope for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.LockBackColor">
      <summary>Gets or sets the background color of locked cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.LockFont">
      <summary>Gets or sets the font for locked cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.LockForeColor">
      <summary>Gets or sets the foreground color of locked cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Locked">
      <summary>Gets or sets whether this style permits a cell to be edited when the sheet is protected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Name">
      <summary>Gets or sets the name of the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.NoteIndicatorColor">
      <summary>Gets or sets the color of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.NoteIndicatorPosition">
      <summary>Gets or sets the position of the note indicator for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.NoteIndicatorSize">
      <summary>Gets or sets the size of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.NoteStyle">
      <summary>Gets or sets the style of cell notes for the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Parent">
      <summary>Gets or sets the name of the parent for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.Renderer">
      <summary>Gets or sets the renderer for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.TabStop">
      <summary>Gets or sets whether the user can set focus to the cell using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.TextIndent">
      <summary>Gets or sets the amount to indent the text in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.VerticalAlignment">
      <summary>Gets or sets the vertical alignment for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyle.VisualStyles">
      <summary>Gets or sets the visual style setting for the named style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.Clone">
      <summary>Creates and returns a copy of this object.</summary>
      <returns>Copy of this object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.CopyFrom(System.Object)">
      <summary>Copies the properties of the specified object to the current object.</summary>
      <param name="obj">Object from which to copy style settings</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.CopyTo(GrapeCity.Spreadsheet.Win.BaseStyleInfo)">
      <summary>Copy info to the target object.</summary>
      <param name="o">The target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the style object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.Equals(System.Object)">
      <summary>Determines whether another object is a reference to this object.</summary>
      <param name="o">Object to compare</param>
      <returns>True if the specified object is a reference to this object; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
      <returns>The hash code</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the style settings.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contextual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.OnChanged(System.EventArgs)">
      <summary>Raises the Changed event.</summary>
      <param name="e">Event arguments to pass to event handlers</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.Reset">
      <summary>Resets all the named style properties to their default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetBackColor">
      <summary>Resets the background color for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetBorder">
      <summary>Resets the border for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetCanFocus">
      <summary>Resets to its default value whether the user can set focus to the cell using the keyboard or mouse.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetCellType">
      <summary>Resets the cell type for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetEditor">
      <summary>Resets the editor for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetFont">
      <summary>Resets the font for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetForeColor">
      <summary>Resets the text color for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetFormatter">
      <summary>Resets the formatter for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetHorizontalAlignment">
      <summary>Resets the horizontal alignment for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetImeMode">
      <summary>Resets the IME mode for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetImeSentenceMode">
      <summary>Resets the IME sentence mode for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetInputScope">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.InputScope" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetLockBackColor">
      <summary>Resets the lock background color for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetLockFont">
      <summary>Resets the lock font for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetLockForeColor">
      <summary>Resets the lock fore color for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetLocked">
      <summary>Resets to the default setting for the style whether this style permits a cell to be edited when the sheet is protected (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetName">
      <summary>Resets the name of the style to the default (String.Empty).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetNoteIndicatorColor">
      <summary>Resets to its default value the color of the note indicator for the style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetNoteIndicatorPosition">
      <summary>Resets to its default value the position of the note indicator for the style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetNoteIndicatorSize">
      <summary>Resets to its default value the color of the note indicator for the style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetNoteStyle">
      <summary>Resets to the default setting the style of cell notes (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetParent">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Parent" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetProperty(FarPoint.Win.Spread.SheetStyleProperty)">
      <summary>Resets the specified property to the default setting (not set).</summary>
      <param name="styleProperty">Style property to reset</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetRenderer">
      <summary>Resets the renderer for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetTabStop">
      <summary>Resets to its default value whether the user can set focus to the cell using the Tab key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetTextIndent">
      <summary>Resets the text indent.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ResetVerticalAlignment">
      <summary>Resets the vertical alignment for the style to the default setting (not set).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the style object to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.ToString">
      <summary>Gets the value of the Name property.</summary>
      <returns>Value of the Name property</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.op_Equality(FarPoint.Win.Spread.NamedStyle,System.Object)">
      <summary>Determines whether two styles (a specified object and a NamedStyle object) are equal.</summary>
      <param name="style">NamedStyle object (one side of the inequality operator)</param>
      <param name="o">Object with which to compare the NamedStyle object (other side of the inequality operator)</param>
      <returns>True if the specified object is equivalent to the NamedStyle object; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyle.op_Inequality(FarPoint.Win.Spread.NamedStyle,System.Object)">
      <summary>Determines whether two styles (a specified object and a NamedStyle object) are not equal.</summary>
      <param name="style">NamedStyle object (one side of the inequality operator)</param>
      <param name="o">Object with which to compare the NamedStyle object (other side of the inequality operator)</param>
      <returns>True if the specified object is not equivalent to the NamedStyle object; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.NamedStyle.Changed">
      <summary>Occurs when the named style has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NamedStyleCollection">
      <summary>Represents a collection of custom styles (NamedStyle objects).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.NamedStyleCollection" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.#ctor">
      <summary>Creates a custom style collection (NamedStyleCollection object).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NamedStyleCollection.DefaultStyles">
      <summary>Represents the read-only collection of default styles. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.CanSerializeXml">
      <summary>Gets whether the object in its entirety can be rendered with XML without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.Count">
      <summary>Gets the number of styles (NamedStyle objects) in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.IsFixedSize">
      <summary>Gets whether the collection has a fixed size. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.IsReadOnly">
      <summary>Gets whether the collection is read-only. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.IsSynchronized">
      <summary>Gets whether access to the collection is synchronized. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.Item(System.Int32)">
      <summary>Gets or sets the style (NamedStyle object) at the specified index in the collection.</summary>
      <param name="index">Index of the style in the collection</param>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is not valid</exception>
      <exception cref="T:System.ArgumentNullException">No value specified; cannot set a member to null</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollection.SyncRoot">
      <summary>Gets a collection (NamedStyleCollection object) that can be used to synchronize access.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Add(FarPoint.Win.Spread.NamedStyle)">
      <summary>Adds a style (NamedStyle object) to the collection.</summary>
      <param name="style">Name of the style to add</param>
      <exception cref="T:System.ArgumentNullException"> No style specified or specified style is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Add(System.String,System.String)">
      <summary>Adds a style (NamedStyle object) to the collection as a child of the specified parent.</summary>
      <param name="name">Name of the style to add</param>
      <param name="parentName">Parent style of the style to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.AddRange(System.Collections.ICollection)">
      <summary>Adds an array of styles (NamedStyle objects) to the collection.</summary>
      <param name="c">NamedStyleCollection or array of NamedStyle objects to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.AddRange(FarPoint.Win.Spread.NamedStyle[])">
      <summary>Adds an array of NamedStyle objects to the collection.</summary>
      <param name="array">Array of styles (NamedStyle objects) to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Clear">
      <summary>Removes all named styles from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Compose(System.Object,FarPoint.Win.Spread.StyleInfo)">
      <summary>Composes a style, using the current style and a specified NamedStyle object.</summary>
      <param name="o">Style (NamedStyle object)</param>
      <param name="destInfo">Destination for the composed StyleInfo object or creates a new StyleInfo object if Null</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Contains(FarPoint.Win.Spread.NamedStyle)">
      <summary>Determines whether the collection contains the specified style (NamedStyle object).</summary>
      <param name="style">Style (NamedStyle object) for which to check in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.CopyTo(FarPoint.Win.Spread.NamedStyle[],System.Int32)">
      <summary>Copies the styles in the collection to a specified array at a specified position.</summary>
      <param name="namedStyles">One-dimensional array into which are copied the elements from ICollection (The array must have zero-based indexing.)</param>
      <param name="index">Zero-based index in array at which to paste styles.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the styles in the collection to a specified array at a specified position.</summary>
      <param name="array">One-dimensional array into which are copied the elements from ICollection (The array must have zero-based indexing.)</param>
      <param name="index">Zero-based index in array at which to paste styles</param>
      <exception cref="T:System.ArgumentNullException">No array specified, or specified array is null (Nothing)</exception>
      <exception cref="T:System.ArgumentException">Specified array is not valid; must have a rank of one</exception>
      <exception cref="T:System.ArgumentException">Specified array is not valid; must have sufficient length</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified index is out of range; must be greater than zero</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the collection of styles from XML.</summary>
      <param name="r">XmlNodeReader from which to load the collection object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Find(System.String)">
      <summary>Finds a style (NamedStyle object) in the collection with the specified name.</summary>
      <param name="name">Name of the style to find</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.GetEnumerator">
      <summary>Gets an IEnumerator object for enumerating through the NamedStyle objects in the collection.</summary>
      <returns>IEnumerator object for enumerating the NamedStyle objects in the collection</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.IndexOf(FarPoint.Win.Spread.NamedStyle)">
      <summary>Returns the index of the specified style in the collection.</summary>
      <param name="style">Style (NamedStyle object) for which to search</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Insert(System.Int32,FarPoint.Win.Spread.NamedStyle)">
      <summary>Inserts a style into the collection at the specified index.</summary>
      <param name="index">Zero-based index at which to insert the named style</param>
      <param name="style">Style to insert into the collection</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number in the collection </exception>
      <exception cref="T:System.ArgumentNullException"> No style specified or specified style is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.OnChanged(FarPoint.Win.Spread.NamedStyleCollectionEventArgs)">
      <summary>Raises the Changed event.</summary>
      <param name="e">NamedStyleCollectionEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Remove(FarPoint.Win.Spread.NamedStyle)">
      <summary>Removes the specified named style from the collection.</summary>
      <param name="style">Style (NamedStyle object) to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.RemoveAt(System.Int32)">
      <summary>Removes a named style (NamedStyle object) from the collection at the specified index.</summary>
      <param name="index">Zero-based index of the style to be removed</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number in the collection </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the collection of styles to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the collection object</param>
    </member>
    <member name="E:FarPoint.Win.Spread.NamedStyleCollection.Changed">
      <summary>Occurs when a style is added, removed, or changed in the collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NamedStyleCollectionEventArgs">
      <summary>Represents the event data for the NamedStyleCollection object's Changed event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.#ctor(FarPoint.Win.Spread.NamedStyleCollectionEventType,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
      <summary>Initializes a new NamedStyleCollectionEventArgs object with the specified type and styles.</summary>
      <param name="type">Type of event to occur</param>
      <param name="oldstyle">Old style, or null if not applicable</param>
      <param name="newstyle">New style, or null if not applicable</param>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.NewStyle">
      <summary>Gets the new style that was added, or null if no style was added.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.OldStyle">
      <summary>Gets the old style that was removed or changed, or null if no style was removed or changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NamedStyleCollectionEventArgs.Type">
      <summary>Gets the type of event that occurred.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NoPrinterPrintInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.NoPrinterPrintInfo" /> class.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NoteEventArgs">
      <summary>Represents the data for the note event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.NoteEventArgs.#ctor(FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo)">
      <summary>Creates a new event arguments object for the note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.NoteEventArgs.NoteStyleInfo">
      <summary>Gets or sets the style information of the note that has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.OwnerPrintInfo">
      <summary>Represents the printing information for OwnerPrintDraw.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.OwnerPrintInfo.PageCount">
      <summary>Gets the printing page count.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PageSetup">
      <summary>Internal use only. Represents the printing page setup dialog.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PageSetup.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new printing page setup.</summary>
      <param name="spread">FpSpread component</param>
      <param name="sheet">Sheet index</param>
      <param name="showPrintButton">Whether to show the print button</param>
      <param name="showPreviewButton">Whether to show the print preview button</param>
    </member>
    <member name="F:FarPoint.Win.Spread.PageSetup.printSheet">
      <summary>Internal use only. Sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PageSetup.spreadCtl">
      <summary>Internal use only. Spread control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PageSetup.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintGrayAreaEventArgs">
      <summary>Represents the event data for the PaintGrayArea event for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PaintGrayAreaEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Creates a new object with the PaintGrayArea event arguments.</summary>
      <param name="view">View that contains the sheet</param>
      <param name="g">Graphics device</param>
      <param name="drawRectangle">Rectangle area representing the background</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintGrayAreaEventArgs.DrawRectangle">
      <summary>Gets or sets the rectangle area representing the gray area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintGrayAreaEventArgs.Graphics">
      <summary>Gets or sets the graphics device that handles the gray area.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintGroupBarBackgroundEventArgs">
      <summary>Represents the event data for PaintGroupBarBackground events in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PaintGroupBarBackgroundEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Creates a new set of PaintGroupBarBackgroundEventArgs event arguments.</summary>
      <param name="g">Graphics object</param>
      <param name="bounds">Rectangular bounds</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintGroupBarBackgroundEventArgs.Bounds">
      <summary>The boundary of the group bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintGroupBarBackgroundEventArgs.Graphics">
      <summary>The Graphics object used to paint the background.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintGroupBarBackgroundEventArgs.Handled">
      <summary>Determines whether the event is handled.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintTabStripButtonEventArgs">
      <summary>Represents the event data for the PaintTabStripButton event for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PaintTabStripButtonEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.TabStripButton,System.Boolean)">
      <summary>Creates a new object with the PaintTabStrip event arguments.</summary>
      <param name="view">View that contains the sheet</param>
      <param name="g">Graphics device</param>
      <param name="buttonRectangle">Rectangle area representing the tab</param>
      <param name="tabButton">TabStripButton to paint</param>
      <param name="pressed">Specifies whether the button is pressed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripButtonEventArgs.ButtonRectangle">
      <summary>Gets the rectangular area that represents the tab button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripButtonEventArgs.Cancel">
      <summary>Gets or sets the cancel flag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripButtonEventArgs.Graphics">
      <summary>Gets the graphics device that handles the tab button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripButtonEventArgs.Pressed">
      <summary>Gets or sets whether the tab button is pressed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripButtonEventArgs.TabButton">
      <summary>Gets the tab button to paint.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintTabStripEventArgs">
      <summary>Represents the event data for the PaintTabStrip event for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PaintTabStripEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Creates a new object with the PaintTabStrip event arguments.</summary>
      <param name="view">View that contains the sheet</param>
      <param name="g">Graphics device</param>
      <param name="tabStripRectangle">Rectangle area representing the tab strip</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripEventArgs.Graphics">
      <summary>Gets the graphics device that handles the tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripEventArgs.TabStripRectangle">
      <summary>Gets the rectangle area that represents the tab.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintTabStripTabEventArgs">
      <summary>Represents the event data for the PaintTabStripTab event for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PaintTabStripTabEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Creates a new object with the PaintTabStripTab event arguments.</summary>
      <param name="view">View that contains the sheet</param>
      <param name="g">Graphics device</param>
      <param name="tabIndex">Index of the tab</param>
      <param name="tabRectangle">Rectangle area representing the tab</param>
      <param name="tabPath">Outline around the tab</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripTabEventArgs.Cancel">
      <summary>Gets or sets the cancel flag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripTabEventArgs.Graphics">
      <summary>Gets the graphics device that handles the tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripTabEventArgs.TabIndex">
      <summary>Gets the index of the tab to be painted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripTabEventArgs.TabPath">
      <summary>Gets the outline of the tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PaintTabStripTabEventArgs.TabRectangle">
      <summary>Gets the rectangle area that represents the tab.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PairChar">
      <summary>Represents a character pair.</summary>
      <remarks>The PairChar describes a character pair, for example, pair brackets "( )". This PairChar's <see cref="P:FarPoint.Win.Spread.PairChar.Left" /> is "(", and <see cref="P:FarPoint.Win.Spread.PairChar.Right" /> is ")".</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PairChar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.#ctor(System.Char,System.Char)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PairChar" /> class with specified left and right characters.</summary>
      <param name="left">The left character of the pair.</param>
      <param name="right">The right character of the pair.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PairChar.Left">
      <summary>Gets or sets the left character of the pair.</summary>
      <value>A <see cref="T:System.Char" /> value that represents the left character of the character pair. The default is <see langword="null" />.</value>
      <seealso cref="P:FarPoint.Win.Spread.PairChar.Right" />
    </member>
    <member name="P:FarPoint.Win.Spread.PairChar.Right">
      <summary>Gets or sets the right character of the pair.</summary>
      <value>A <see cref="T:System.Char" /> value that represents the right character of the character pair. The default is <see langword="null" />.</value>
      <seealso cref="P:FarPoint.Win.Spread.PairChar.Left" />
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.PairChar" />.</summary>
      <returns>A <see cref="T:System.Object" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.PairChar" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:FarPoint.Win.Spread.PairChar" />.</summary>
      <param name="obj">The target object.</param>
      <returns>
        <see langword="true" /> if the <paramref name="obj" /> parameter is equal to the current <see cref="T:FarPoint.Win.Spread.PairChar" />; otherwise,<see langword="false" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.GetHashCode">
      <summary>Returns a hash code of the current <see cref="T:FarPoint.Win.Spread.PairChar" />.</summary>
      <returns>A <see cref="T:System.Int32" /> value that represents the hash code of the current <see cref="T:FarPoint.Win.Spread.PairChar" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairChar.ToString">
      <summary>Returns a string representation of the <see cref="T:FarPoint.Win.Spread.PairChar" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the string representation of the <see cref="T:FarPoint.Win.Spread.PairChar" /> object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.PairCharValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that validates whether the specifed value matches the given <see cref="P:FarPoint.Win.Spread.PairCharValidator.PairChars" />.</summary>
      <remarks>This CellValidator validates whether the value's string representation matches one or more character pairs. You can add a <see cref="T:FarPoint.Win.Spread.PairChar" /> to <see cref="P:FarPoint.Win.Spread.PairCharValidator.PairChars" />. For example, the validated value's string representation is "10 * (5 + 2)". One of the <see cref="P:FarPoint.Win.Spread.PairCharValidator.PairChars" nolink="true" /> is "( )". Because the validated value has a "(" and another ")" that matches the "(", the result is successful. If the validated value's string representation is "10 * (5 + 2", the result is a failure.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PairCharValidator.PairChars">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.PairChar" /> list that is matched to the specified value.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.PairChar" /> list that is matched to the specified value.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.PairCharValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.PairCharValidator" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.PairCharValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PairCharValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specifed value matches the given <see cref="P:FarPoint.Win.Spread.PairCharValidator.PairChars" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated, and that contains some relative context information.</param>
      <returns>
        <see langword="true" /> if the specifed value matches the given <see cref="P:FarPoint.Win.Spread.PairCharValidator.PairChars" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ParentStyleNameConverter">
      <summary>Provides a drop-down list of parent style names for the ParentStyleName property in the Cell, Column, Row, and AlternatingRow classes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.#ctor">
      <summary>Initializes a new instance of the ParentStyleNameConverter class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether the specified type can be converted to a border object.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">Type</param>
      <returns>True if sourceType is String, false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a string to a new border object.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">object</param>
      <returns>A new border object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the border object to a string.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">object</param>
      <param name="destinationType">Type</param>
      <returns>String representation of a border object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the set of standard values for this type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ParentStyleNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines whether this object supports standard values.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrePaintConditionalFormattingRule">
      <summary>Represents a conditional format rule that is executed before painting the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PrePaintConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PrePaintConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintConditionalFormattingRule.Execute(System.Object)">
      <summary>Executes the conditional format rule for changing the cell's style.</summary>
      <param name="value">The value to determine what the result style is.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintConditionalFormattingRule.Execute(System.Int32,System.Int32,System.Object)">
      <summary>Executes the conditional format rule for changing the cell's style.</summary>
      <param name="row">The row of the cell</param>
      <param name="column">The column of the cell</param>
      <param name="value">The value to determine what the result style is.</param>
      <returns>The result after executing the rule.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintConditionalFormattingRule.GetAllRules">
      <summary>Gets all rules.</summary>
      <returns>All the <see cref="T:FarPoint.Win.Spread.IPrePaintConditionalFormattingRule" /> objects.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrePaintResult">
      <summary>Represents the executed result of a conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintResult.#ctor(FarPoint.Win.Spread.HighlightConditionalFormattingStyle,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PrePaintResult" /> class.</summary>
      <param name="style">The style.</param>
      <param name="success">if set to <c>true</c>, the rule is matched.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrePaintResult.Style">
      <summary>Gets the style to apply to the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrePaintResult.Success">
      <summary>Gets whether this <see cref="T:FarPoint.Win.Spread.PrePaintResult" /> action is successful.</summary>
      <value>
        <c>true</c> if successful; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that is used for painting before the text is painted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.ShowConditionalFormatOnly">
      <summary>Gets or sets whether the cell text should not be painted.</summary>
      <value>
        <c>true</c> if the cell text should not be painted; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.GetAllRules">
      <summary>Gets all rules.</summary>
      <returns>All the <see cref="T:FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule" /> objects</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single,System.Boolean)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred size of other content</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <param name="showCFOnly">Indicates whether the text will be painted.</param>
      <returns>The preferred (maximum required) size of the cell for the renderer control</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.GetRuleEffectingInfo(FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Gets the information with the specified appearance settings if the conditional formatting rule is met.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextConditionalFormattingRule.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings if the conditional format rule is satisfied.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.PrePaintTextResult">
      <summary>Represents the painting result of a conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrePaintTextResult.#ctor(System.Drawing.Rectangle,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> class.</summary>
      <param name="bounds">The rectangle boundary.</param>
      <param name="stopPainting">if set to <c>true</c> the cell painting should not be performed.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrePaintTextResult.Bounds">
      <summary>Gets the rectangle boundary for the next paint.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrePaintTextResult.StopPainting">
      <summary>Gets a value that indicates whether the cell painting should be performed.</summary>
      <value>
        <c>true</c> if the cell painting should not be performed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.PrePaintTextResult.Success">
      <summary>Gets or sets whether this <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object is successful.</summary>
      <value>
        <c>true</c> if successful; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.PreviewRowFetchEventArgs">
      <summary>Represents the event data for the PreviewRowFetch event for the Spread component, which occurs for formatting the preview row content.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PreviewRowFetchEventArgs" /> class.</summary>
      <param name="spreadView">The SpreadView.</param>
      <param name="row">The row index.</param>
      <param name="previewRowContent">The preview row content.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowFetchEventArgs.PreviewRowContent">
      <summary>Gets or sets the content of the preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowFetchEventArgs.Row">
      <summary>Gets the row index that the preview row belongs to.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowFetchEventArgs.View">
      <summary>Gets the view that contains the preview row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PreviewRowInfo">
      <summary>Represents information about preview row in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.#ctor">
      <summary>Initializes a new instance of the PreviewRowInfo class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the PreviewRowInfo class from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.BackColor">
      <summary>Gets or sets the background color for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.Border">
      <summary>Gets or sets the border for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.ColumnIndex">
      <summary>Gets or sets the column index of preview row bound to.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.Font">
      <summary>Gets or sets the font settings for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.ForeColor">
      <summary>Gets or sets the text color for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.Height">
      <summary>Gets or sets the height for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the content for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.Padding">
      <summary>Gets or sets the amount of spaces to preview row in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the content for preview row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PreviewRowInfo.Visible">
      <summary>Gets or sets a value indicating whether preview row is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads preview row information from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.Reset">
      <summary>Resets this instance to default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetBackColor">
      <summary>Resets the BackColor property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetBorder">
      <summary>Resets the Border property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetColumnIndex">
      <summary>Resets the ColumnIndex property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetFont">
      <summary>Resets the Font property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetForeColor">
      <summary>Resets the ForeColor property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetHeight">
      <summary>Resets the Height property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetHorizontalAlignment">
      <summary>Resets the HorizontalAlignment property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetPadding">
      <summary>Resets the Padding property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetVerticalAlignment">
      <summary>Resets the VerticalAlignment property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.ResetVisible">
      <summary>Resets the Visible property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PreviewRowInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves preview row information to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.PreviewRowInfo.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintAbortEventArgs">
      <summary>Represents the event data for the PrintAbort event for the Spread component, which allows the user to discontinue the printing at any time during a print job.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintAbortEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Boolean)">
      <summary>Creates a new object with the PrintAbort event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
      <param name="abort">Whether to discontinue the print job</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintAbortEventArgs.Abort">
      <summary>Gets or sets whether to discontinue the print job.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintBackgroundEventArgs">
      <summary>Represents the event data for the PrintBackground event for the Spread component, which occurs when the background is printing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintBackgroundEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
      <summary>Creates a new object with the PrintBackground event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
      <param name="g">Graphics device that handles printing</param>
      <param name="sheetRectangle">Rectangular area that represents the area of the sheet to be printed</param>
      <param name="pageNum">Number of the current page being printed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintBackgroundEventArgs.Graphics">
      <summary>Gets or sets the graphics device that does the printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintBackgroundEventArgs.PageNumber">
      <summary>Gets or sets the current page being printed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintBackgroundEventArgs.SheetRectangle">
      <summary>Gets or sets the rectangular area that represents the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintCancelledEventArgs">
      <summary>Represents the event data for the PrintCancelled event for the Spread component, which occurs when the printing is discontinued by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintCancelledEventArgs.#ctor(FarPoint.Win.Spread.SpreadView)">
      <summary>Creates a new object with the PrintCancelled event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintDocumentEventArgs">
      <summary>Represents the event data for the PrintDocument event for the Spread component, which occurs during the print process of the sheetview.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintDocumentEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the print process. Note: Cancelling the print process cannot be reversed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintDocumentEventArgs.CurrentPage">
      <summary>Gets the order number of the current printed page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintDocumentEventArgs.EventType">
      <summary>Gets the type of PrintDocument event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintDocumentEventArgs.PrintAction">
      <summary>Gets the PrintAction type of the PrintDocument event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintDocumentEventArgs.SheetIndex">
      <summary>Get sheet's index is printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintDocumentEventArgs.TotalPage">
      <summary>Gets the total number of printed pages.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs">
      <summary>Represents the event data for the PrintHeaderFooterArea event for the Spread component, which occurs when the background is printing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Int32,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Creates a new object with the PrintBackground event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
      <param name="g">Graphics device that handles printing</param>
      <param name="isHeader">Determines if the area being printed is in the header or footer</param>
      <param name="rectangle">Rectangular area representing the area of the sheet to be printed</param>
      <param name="pageNum">Number of the current page being printed</param>
      <param name="cells">Cell range</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.Cancel">
      <summary>Gets or sets the cancel flag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.Cells">
      <summary>Returns the range of cells being printed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.Graphics">
      <summary>Gets or sets the graphics device that does the printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.IsHeader">
      <summary>Gets whether the header or footer is being printed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.PageNumber">
      <summary>Gets or sets the current page being printed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintHeaderFooterAreaEventArgs.Rectangle">
      <summary>Gets or sets the rectangular area that represents the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintInfo">
      <summary>Represents the information to use when printing a sheet of the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor">
      <summary>Creates a new PrintInfo object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor(FarPoint.Win.Spread.PrintInfo)">
      <summary>Creates a new PrintInfo object based on the specified PrintInfo object.</summary>
      <param name="pi">PrintInfo object on which to base new object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor(System.String,System.String,System.String,FarPoint.Win.Spread.PrintMargin,FarPoint.Win.Spread.PrintOrientation,FarPoint.Win.Spread.PrintPageOrder,System.Boolean,FarPoint.Win.Spread.PrintHeader,System.Boolean,System.Boolean,FarPoint.Win.Spread.PrintHeader,System.Boolean,System.Boolean,FarPoint.Win.Spread.PrintType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.SmartPrintRulesCollection,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean,System.String,System.Single,System.Int32,FarPoint.Win.Spread.PrintNotes,System.Drawing.Printing.PaperSource,System.Drawing.Printing.PaperSize,System.Boolean,System.Drawing.Image[],System.Drawing.Color[],System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Centering,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.IO.Stream,FarPoint.Win.Spread.PdfWriteMode,FarPoint.Win.Spread.PdfWriteTo)">
      <summary>Creates a new PrintInfo object with the specified print settings.</summary>
      <param name="header">Header text</param>
      <param name="footer">Footer text</param>
      <param name="jobName">Print job name</param>
      <param name="margin">Print margins</param>
      <param name="orientation">Page orientation</param>
      <param name="pageOrder">Print page order</param>
      <param name="border">Whether to print the sheet border</param>
      <param name="colHeaders">Whether to print column headers</param>
      <param name="color">Whether to print in color</param>
      <param name="grid">Whether to print grid lines</param>
      <param name="rowHeaders">Whether to print row headers</param>
      <param name="showShadows">Whether to print the header shadows</param>
      <param name="useMax">Whether to print cells that do not have data</param>
      <param name="type">What to print</param>
      <param name="colStart">First column of cell range to print</param>
      <param name="colEnd">Last column of cell range to print</param>
      <param name="rowStart">First row of cell range to print</param>
      <param name="rowEnd">Last row of cell range to print</param>
      <param name="pageStart">First page of page range to print</param>
      <param name="pageEnd">Last page of page range to print</param>
      <param name="useSmartPrint">Whether to use SmartPrint</param>
      <param name="rules">SmartPrint rules</param>
      <param name="bestFitCols">Whether to adjust column widths for printing</param>
      <param name="bestFitRows">Whether to adjust row heights for printing</param>
      <param name="preview">Whether to preview the sheet rather than print it</param>
      <param name="printer">Printer to which to print</param>
      <param name="firstPageNum">Page number to print on first page</param>
      <param name="showDialog">Whether to show the print dialog</param>
      <param name="abortMessage">Message to display for canceling printing</param>
      <param name="zoomFactor">Factor to zoom sheet for printing</param>
      <param name="opacity">Alpha value used for sheet</param>
      <param name="notes">Whether cell notes are printed</param>
      <param name="paperSrc">Source location of paper</param>
      <param name="paperSz">Paper size</param>
      <param name="objects">Whether objects are printed</param>
      <param name="imgList">Images to use for headers and footers</param>
      <param name="colorList">Colors to use for headers and footers</param>
      <param name="repeatColStart">Index of beginning column of a repeating range</param>
      <param name="repeatColEnd">Index of ending column of a repeating range</param>
      <param name="repeatRowStart">Index of a beginning row of a repeating range</param>
      <param name="repeatRowEnd">Index of ending row of a repeating range</param>
      <param name="center">Type of centering to perform on print out</param>
      <param name="pagesTall">Number of pages tall to fit print out into when smart print is true</param>
      <param name="pagesWide">Number of pages wide to fit print out into when smart print is true</param>
      <param name="headerHeight">Sets the user defined height of the header area</param>
      <param name="footerHeight">Sets the user defined height of the footer area</param>
      <param name="printToPdf">Whether to print the sheet as PDF</param>
      <param name="pdfFileName">File name and path for PDF printing to a file</param>
      <param name="pdfStream">File stream for PDF printing to a stream</param>
      <param name="pdfWriteMode">How printing the sheet as PDF is handled</param>
      <param name="pdfWriteTo">Output for printing the sheet as PDF</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor(System.String,System.String,System.String,FarPoint.Win.Spread.PrintMargin,FarPoint.Win.Spread.PrintOrientation,FarPoint.Win.Spread.PrintPageOrder,System.Boolean,FarPoint.Win.Spread.PrintHeader,FarPoint.Win.Spread.PrintHeader,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Spread.PrintHeader,System.Boolean,System.Boolean,FarPoint.Win.Spread.PrintType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.SmartPrintRulesCollection,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean,System.String,System.Single,System.Int32,FarPoint.Win.Spread.PrintNotes,System.Drawing.Printing.PaperSource,System.Drawing.Printing.PaperSize,System.Boolean,System.Drawing.Image[],System.Drawing.Color[],System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Centering,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.IO.Stream,FarPoint.Win.Spread.PdfWriteMode,FarPoint.Win.Spread.PdfWriteTo)">
      <summary>Creates a new PrintInfo object with the specified printing settings.</summary>
      <param name="header">Header text</param>
      <param name="footer">Footer text</param>
      <param name="jobName">Print job name</param>
      <param name="margin">Print margins</param>
      <param name="orientation">Page orientation</param>
      <param name="pageOrder">Print page order</param>
      <param name="border">Whether to print the sheet border</param>
      <param name="colHeaders">Whether to print column headers</param>
      <param name="colFooters">Whether to print column footers</param>
      <param name="showColFooterEachPage">Whether to print column footers in each page</param>
      <param name="showTitle">Whether to print the title</param>
      <param name="showSubtitle">Whether to print the subtitle</param>
      <param name="color">Whether to print in color</param>
      <param name="grid">Whether to print grid lines</param>
      <param name="rowHeaders">Whether to print row headers</param>
      <param name="showShadows">Whether to print the header shadows</param>
      <param name="useMax">Whether to print cells that do not have data</param>
      <param name="type">What to print</param>
      <param name="colStart">First column of cell range to print</param>
      <param name="colEnd">Last column of cell range to print</param>
      <param name="rowStart">First row of cell range to print</param>
      <param name="rowEnd">Last row of cell range to print</param>
      <param name="pageStart">First page of page range to print</param>
      <param name="pageEnd">Last page of page range to print</param>
      <param name="useSmartPrint">Whether to use SmartPrint</param>
      <param name="rules">SmartPrint rules</param>
      <param name="bestFitCols">Whether to adjust column widths for printing</param>
      <param name="bestFitRows">Whether to adjust row heights for printing</param>
      <param name="preview">Whether to preview the sheet rather than print it</param>
      <param name="printer">Printer to which to print</param>
      <param name="firstPageNum">Page number to print on first page</param>
      <param name="showDialog">Whether to show the print dialog</param>
      <param name="abortMessage">Message to display for canceling printing</param>
      <param name="zoomFactor">Factor to zoom sheet for printing</param>
      <param name="opacity">Alpha value used for sheet</param>
      <param name="notes">Whether cell notes are printed</param>
      <param name="paperSrc">Source location of paper</param>
      <param name="paperSz">Paper size</param>
      <param name="objects">Whether objects are printed</param>
      <param name="imgList">Images to use for headers and footers</param>
      <param name="colorList">Colors to use for headers and footers</param>
      <param name="repeatColStart">Index of beginning column of a repeating range</param>
      <param name="repeatColEnd">Index of ending column of a repeating range</param>
      <param name="repeatRowStart">Index of a beginning row of a repeating range</param>
      <param name="repeatRowEnd">Index of ending row of a repeating range</param>
      <param name="center">Type of centering to perform on print out</param>
      <param name="pagesTall">Number of pages tall to fit print out into when smart print is true</param>
      <param name="pagesWide">Number of pages wide to fit print out into when smart print is true</param>
      <param name="headerHeight">Sets the user defined height of the header area</param>
      <param name="footerHeight">Sets the user defined height of the footer area</param>
      <param name="printToPdf">Whether to print the sheet as PDF</param>
      <param name="pdfFileName">File name and path for PDF printing to a file</param>
      <param name="pdfStream">File stream for PDF printing to a stream</param>
      <param name="pdfWriteMode">How printing the sheet as PDF is handled</param>
      <param name="pdfWriteTo">Output for printing the sheet as PDF</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Prints information from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.AbortMessage">
      <summary>Gets or sets the message to display for the abort dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.BestFitCols">
      <summary>Gets or sets whether column widths are adjusted to fit the longest string width for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.BestFitRows">
      <summary>Gets or sets whether row heights are adjusted to fit the tallest string height for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.BestFitWithSpan">
      <summary>Gets or sets whether to ignore spans when calculating best fit rows and columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Centering">
      <summary>Gets or sets how the printed page is centered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ColEnd">
      <summary>Gets or sets the last column to print when printing a cell range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ColStart">
      <summary>Gets or sets the first column to print when printing a cell range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Colors">
      <summary>Gets or sets the color list for the header and footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.EnhancePreview">
      <summary>Gets or sets the state to show enhanced print preview dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.FirstPageNumber">
      <summary>Gets or sets the page number to print on the first page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Footer">
      <summary>Gets or sets the text and format of footers on printed pages.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.FooterHeight">
      <summary>Gets or sets the height in pixels of the footer area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Header">
      <summary>Gets or sets the text and format of headers on printed pages.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.HeaderHeight">
      <summary>Gets or sets the height in pixels of the header area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Images">
      <summary>Gets or sets the image list for the header and footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.JobName">
      <summary>Gets or sets the name of the print job.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Margin">
      <summary>Gets or sets the margins for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Opacity">
      <summary>Gets or sets the opacity used when printing this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Orientation">
      <summary>Gets or sets the page orientation used for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PageEnd">
      <summary>Gets or sets the last page to print when printing a page range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PageOrder">
      <summary>Gets or sets the order in which pages print.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PageStart">
      <summary>Gets or sets the first page to print when printing a page range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PaperSize">
      <summary>Gets or sets the paper size for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PaperSource">
      <summary>Gets or sets the paper source for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PdfFileName">
      <summary>Gets or sets the path and filename for printing the sheet as PDF.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PdfQualityMode">
      <summary>Gets or sets quality mode when print.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PdfSecurity">
      <summary>Gets or sets the security for printing the sheet as PDF.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PdfStream">
      <summary>Gets or sets the stream for printing the sheet as PDF.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PdfWriteMode">
      <summary>Gets or sets how printing of the sheet as PDF is handled relative to other sheets.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PdfWriteTo">
      <summary>Gets or sets the output for printing the sheet as PDF.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Preview">
      <summary>Gets or sets whether to preview the sheet instead of printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PrintNotes">
      <summary>Gets or sets how cell notes are printed after the sheet(s).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PrintShapes">
      <summary>Gets or sets whether shapes are printed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PrintToPdf">
      <summary>Gets or sets whether to print the sheet as PDF.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.PrintType">
      <summary>Gets or sets what is to be printed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.Printer">
      <summary>Gets or sets the name of the printer to use for printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatColEnd">
      <summary>Gets or sets the last column for a range of columns to print at the left of each page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatColStart">
      <summary>Gets or sets the first column for a range of columns to print at the left of each page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatRowEnd">
      <summary>Gets or sets the last row for a range of rows to print at the top of each page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.RepeatRowStart">
      <summary>Gets or sets the first row for a range of rows to print at the top of each page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.RowEnd">
      <summary>Gets or sets the last row to print when printing a cell range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.RowStart">
      <summary>Gets or sets the first row to print when printing a cell range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowBorder">
      <summary>Gets or sets whether to print the outline border around the entire control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColor">
      <summary>Gets or sets whether to print the colors as they appear on the screen.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColumnFooter">
      <summary>Gets or sets whether to print the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColumnFooterEachPage">
      <summary>Gets or sets whether to print the column footer on every page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColumnHeader">
      <summary>Gets or sets whether to print the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowColumnHeaders">
      <summary>Gets or sets whether to print the column headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowGrid">
      <summary>Gets or sets whether to print the grid lines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowPageSetupButton">
      <summary>Gets or sets the state to show page settup button on toolbar of print preview dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowPrintDialog">
      <summary>Gets or sets whether to display a print dialog before printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowRowHeader">
      <summary>Gets or sets whether to print the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowRowHeaders">
      <summary>Gets or sets whether to print the row headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowShadows">
      <summary>Gets or sets whether to print the header shadows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowSubtitle">
      <summary>Gets or sets whether to print the subtitle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ShowTitle">
      <summary>Gets or sets whether to print the title.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.SmartPrintPagesTall">
      <summary>Gets or sets the number of vertical pages to check when optimizing printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.SmartPrintPagesWide">
      <summary>Gets or sets the number of horizontal pages to check when optimizing the printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.SmartPrintRules">
      <summary>Gets or sets the collection of rules to optimize the printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.UseMax">
      <summary>Gets or sets whether to print only rows that contain data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.UseSmartPrint">
      <summary>Gets or sets whether the control optimizes the printing using rules.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintInfo.ZoomFactor">
      <summary>Gets or sets the zoom factor used for printing this sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.Clone">
      <summary>Creates a new PrintInfo object that is a copy of the current instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.CopyFrom(System.Object)">
      <summary>Copies the properties of the specified PrintInfo object to the current PrintInfo object.</summary>
      <param name="o">PrintInfo object from which to copy properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.ShouldSerializeMargin">
      <summary>Determines whether to serialize the margin.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.ShouldSerializeSmartPrintRules">
      <summary>Determines whether to serialize printing optimization rules.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintInfo.ToString">
      <summary>Always returns null.</summary>
      <returns>Always returns null.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintMargin">
      <summary>Represents the margin for the printed page.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintMargin.#ctor">
      <summary>Creates a new PrintMargin object with margins set to zero.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintMargin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new PrintMargin object with the specified margins.</summary>
      <param name="left">Size of the left margin in 100th-of-an-inch units</param>
      <param name="top">Size of the top margin in 100th-of-an-inch units</param>
      <param name="right">Size of the right margin in 100th-of-an-inch units</param>
      <param name="bottom">Size of the bottom margin in pixels</param>
      <param name="header">Size of the header margin in 100th-of-an-inch units</param>
      <param name="footer">Size of the footer margin in 100th-of-an-inch units</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMargin.Bottom">
      <summary>Gets or sets the bottom margin for the printed page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMargin.Footer">
      <summary>Gets or sets the footer margin for the printed page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMargin.Header">
      <summary>Gets or sets the header margin for the printed page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMargin.Left">
      <summary>Gets or sets the left margin for the printed page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMargin.Right">
      <summary>Gets or sets the right margin for the printed page.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMargin.Top">
      <summary>Gets or sets the top margin for the printed page.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintMargin.ToString">
      <summary>Always returns null.</summary>
      <returns>Always returns null.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintMessageBoxEventArgs">
      <summary>Represents the event data for the PrintMessageBox event for the Spread component, which occurs when the print message box is to be displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintMessageBoxEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Boolean)">
      <summary>Creates a new object with the PrintMessageBox event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
      <param name="abortMessage">Value of the PrintInfo.AbortMessage property for this sheet</param>
      <param name="id">Print job identifier</param>
      <param name="beginPrinting">Whether the print job is beginning</param>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintMessageBoxEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the PrintMessageBox event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
      <param name="abortMessage">Value of the PrintInfo.AbortMessage property for this sheet</param>
      <param name="id">Print job identifier</param>
      <param name="beginPrinting">Whether the print job is beginning</param>
      <param name="isPreview">Flags event for PrintPreview</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.AbortMessage">
      <summary>Gets the message displayed if the print job is canceled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.BeginPrinting">
      <summary>Gets whether the print job is beginning or ending.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default abort message box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.Id">
      <summary>Gets the print job identifier.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintMessageBoxEventArgs.IsPreview">
      <summary>Gets whether this event is for the print preview.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintPreviewShowingEventArgs">
      <summary>Represents the event data for the PrintPreviewShowing event for the Spread component, which occurs before the print preview dialog appears.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.PrintPreviewDialog,System.Windows.Forms.PrintPreviewControl)">
      <summary>Creates a new object with the PrintPreviewShowing event arguments.</summary>
      <param name="view">View that contains the sheet being printed</param>
      <param name="ppd">Print preview dialog</param>
      <param name="ppc">Print preview dialog control</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the print preview.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.PreviewControl">
      <summary>Gets the control associated with the print preview dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PrintPreviewShowingEventArgs.PreviewDialog">
      <summary>Gets the print preview dialog to be displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PropertyComboBoxType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PropertyComboBoxType" /> class.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PropertyTrackChangedEventArgs">
      <summary>Represents raising an event when the property has changed and has infomation about the current value and the previous value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.PropertyTrackChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.PropertyTrackChangedEventArgs" /> class.</summary>
      <param name="propertyName">Name of the property.</param>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.PropertyTrackChangedEventArgs.Newvalue">
      <summary>Gets the new value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PropertyTrackChangedEventArgs.OldValue">
      <summary>Gets the old value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.PropertyTrackChangedEventArgs.PropertyName">
      <summary>Gets the name of the property.</summary>
      <value>The name of the property.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.QueryValueEventArgs">
      <summary>This is event argument which is used to contain the result when querying value from client</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.QueryValueEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.QueryValueEventArgs" /> class.</summary>
      <param name="customName">Custom name</param>
    </member>
    <member name="P:FarPoint.Win.Spread.QueryValueEventArgs.CustomName">
      <summary>Gets the custom name.</summary>
      <value>Custom name</value>
    </member>
    <member name="P:FarPoint.Win.Spread.QueryValueEventArgs.Result">
      <summary>Gets or sets the result.</summary>
      <value>Result</value>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeElement`1">
      <summary>Represents the information about which cell ranges contain the elements.</summary>
      <typeparam name="T">The type of elements.</typeparam>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeElement`1.#ctor(System.Collections.Generic.List{`0},System.Collections.Generic.List{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> class.</summary>
      <param name="objects">List of elements</param>
      <param name="cellRanges">List of cell ranges</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeElement`1.#ctor(`0,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> class.</summary>
      <param name="obj">Element</param>
      <param name="cellRange">Cell range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeElement`1.#ctor(System.Collections.Generic.List{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> class.</summary>
      <param name="cellRanges">List of cell ranges</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeElement`1.#ctor(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> class.</summary>
      <param name="cellRange">Cell range</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeElement`1.CellRanges">
      <summary>Gets the cell ranges.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeElement`1.Objects">
      <summary>Gets the list of elements.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeElement`1.IntersecWith(FarPoint.Win.Spread.RangeElement{`0})">
      <summary>Intersects with the <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> object.</summary>
      <param name="element">The <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> object to intersect with</param>
      <returns>A new <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> object that is the intersection of the cell ranges of two objects and also contains the elements of both objects, including the cell ranges.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeElement`1.JointList(System.Collections.Generic.List{FarPoint.Win.Spread.RangeElement{`0}},System.Collections.Generic.List{FarPoint.Win.Spread.RangeElement{`0}})">
      <summary>Joins the list of two <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> objects to form a new list of <see cref="T:FarPoint.Win.Spread.RangeElement`1" nolink="true" /> objects. The element of the new list is created by intersecting the element of the first list with the element of the second list.</summary>
      <param name="firstList">The first list</param>
      <param name="secondList">The second list</param>
      <returns>The new list of <see cref="T:FarPoint.Win.Spread.RangeElement`1" /> objects.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupHitTestInformation">
      <summary>Represents hit test information for the outline (range group) of the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupHitTestInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:RangeGroupHitTestInformation" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.ColumnIndex">
      <summary>Gets the column location referred to in an outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.ColumnLevel">
      <summary>Gets the column level location referred to in an outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.InColumnBar">
      <summary>Gets whether the location refers to an outline (range group) column bar area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.InColumnPanel">
      <summary>Gets whether the location refers to an outline (range group) column panel area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.InCorner">
      <summary>Gets whether the location refers to an outline (range group) corner area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.InRowBar">
      <summary>Gets whether the location refers to an outline (range group) row bar area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.InRowPanel">
      <summary>Gets whether the location refers to an outline (range group) row panel area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.RowIndex">
      <summary>Gets the row location referred to in an outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupHitTestInformation.RowLevel">
      <summary>Gets the row level location referred to in an outline (range group).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupInfo">
      <summary>Represents the relevant information of an outline (range group) of rows or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.#ctor">
      <summary>Initializes a new instance of the RangeGroupInfo class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.RangeGroupInfo)">
      <summary>Initializes a new instance of the RangeGroupInfo class with the start index, end index, and parent group.</summary>
      <param name="startIndex">Start index</param>
      <param name="endIndex">End index</param>
      <param name="parent">Parent group</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the RangeGroupInfo class with the start index and end index.</summary>
      <param name="startIndex" />
      <param name="endIndex" />
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfo.Children">
      <summary>Gets the child groups of this outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfo.End">
      <summary>Gets the end index of this outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfo.Length">
      <summary>Gets the length of this outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfo.Level">
      <summary>Gets or sets the level of this outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfo.Start">
      <summary>Gets the start index of this outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfo.State">
      <summary>Gets the state of this outline (range group).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.Clone">
      <summary>Clones the outline (range group).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.CompareTo(System.Object)">
      <summary>Compares this instance to a specified RangeGroupInfo object and returns an indication of their relative values.</summary>
      <param name="obj">RangeGroupInfo object to compare</param>
      <returns>Signed number that indicates the relative values of this instance and value: Less than zero, this instance is less than value; Zero, this instance is equal to value; Greater than zero, this instance is greater than value.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.Deserialize(System.Xml.XmlNodeReader,System.Boolean)">
      <summary>Loads the contents of an outline (range group) from XML.</summary>
      <param name="r">XmlNodeReader from which to load the contents</param>
      <param name="firstElementIsRead">Whether the first element has been read</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object of an outline (range group) from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize an outline (range group).</summary>
      <param name="info">A System.Runtime.Serialization.SerializationInfo that holds the serialized data associated with the RangeGroupInfo</param>
      <param name="context">A System.Runtime.Serialization.StreamingContext that contains the source and destination of the serialized stream associated with the RangeGroupInfo</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.GetParent">
      <summary>Gets the parent of this outline (range group).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves an outline (range group) to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the RangeGroupInfo object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfo.ToString">
      <summary>Converts the attributes of this outline (range group) to a human-readable string.</summary>
      <returns>String that contains an outline (range group) of this RangeGroupInfo structure</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupInfoEventArgs">
      <summary>Represents the event data for the Changed event of the outline (range group) model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupInfoEventArgs.#ctor(FarPoint.Win.Spread.RangeGroupInfo,FarPoint.Win.Spread.RangeGroupInfoEventType)">
      <summary>Creates an outline (range group) information event arguments object.</summary>
      <param name="group">Outline (range group)</param>
      <param name="type">Type of event</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfoEventArgs.Group">
      <summary>Gets the outline (range group) to expand or collapse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupInfoEventArgs.Type">
      <summary>Gets the event type.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupModelEventArgs">
      <summary>Represents the event data for the Changed event of the outline (range group) for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupModelEventArgs.#ctor(System.Boolean,FarPoint.Win.Spread.RangeGroupModelEventType)">
      <summary>Creates a new outline (range group) model event arguments object.</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or else columns)</param>
      <param name="type">Type of outline (range group) model event</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupModelEventArgs.#ctor(System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.RangeGroupModelEventType)">
      <summary>Creates a new outline (range group) model event arguments object.</summary>
      <param name="startIndex">Start index of row or column</param>
      <param name="count">Number of rows or columns</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or columns)</param>
      <param name="type">Type of outline (range group) model event</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupModelEventArgs.#ctor(System.Collections.ArrayList,System.Boolean,System.Boolean,System.Int32[],FarPoint.Win.Spread.RangeGroupModelEventType)">
      <summary>Creates a new outline (range group) model event arguments object.</summary>
      <param name="groupsToExpand">Outline (range group) to expand or collapse</param>
      <param name="expand">Whether to expand the outline (range group) (or collapse)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows (or columns)</param>
      <param name="changedIndexes">Array of changed indexes</param>
      <param name="type">Type of outline (range group) model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.ChangedIndexes">
      <summary>Gets the indexes of changed rows or columns of the outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.Count">
      <summary>Gets the number of rows or columns in the outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.Expand">
      <summary>Gets whether the outline (range group) is expanded (or else collapsed).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.GroupsToExpand">
      <summary>Gets the outline (range group) to expand (or collapse).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.IsRowGroup">
      <summary>Gets whether the outline (range group) is of rows (or else columns).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.StartIndex">
      <summary>Gets the starting index of rows or columns of the outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupModelEventArgs.Type">
      <summary>Gets the type of outline (range group) event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupStateChangedEventArgs">
      <summary>Represents the event data for the RangeGroupStateChanged event for an outline (range group) of rows and columns in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupStateChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.RangeGroupInfo,System.Boolean)">
      <summary>Creates a new set of event arguments for a change of state of the outline (range group).</summary>
      <param name="view">View (SpreadView object)</param>
      <param name="rangeGroupInfo">Range group (outline) information</param>
      <param name="isRowGroup">Whether the outline (range group) is a group of rows</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupStateChangedEventArgs.IsRowGroup">
      <summary>Gets whether the outline (range group) is a group of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupStateChangedEventArgs.RangeGroupInfo">
      <summary>Gets the infomation about the outline (range group) whose state has changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupStateChangedEventArgs.View">
      <summary>Gets the view that contains the outline (range group) whose state has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupStateChangingEventArgs">
      <summary>Represents the event data for the RangeGroupStateChanging event for an outline (range group) of rows and columns in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeGroupStateChangingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.RangeGroupInfo,System.Boolean)">
      <summary>Creates a new set of event arguments for the change of state of the outline (range group).</summary>
      <param name="view">View (SpreadView object)</param>
      <param name="rangeGroupInfo">Range group (outline) information</param>
      <param name="isRowGroup">Whether the outline (range group) is a group of rows</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupStateChangingEventArgs.IsRowGroup">
      <summary>Gets whether the outline (range group) is a group of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupStateChangingEventArgs.RangeGroupInfo">
      <summary>Gets the infomation about the outline (range group) whose state was changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeGroupStateChangingEventArgs.View">
      <summary>Gets the view that contains the outline (range group) whose state is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that validates whether the specified value is between the range specified by <see cref="P:FarPoint.Win.Spread.RangeValidator.MinValue" /> and <see cref="P:FarPoint.Win.Spread.RangeValidator.MaxValue" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeValidator.FormatProvider">
      <summary>Gets or sets the format provider.</summary>
      <value>The format provider. The default is <see langword="null" />.</value>
      <remarks>If this property is <see langword="null" />, the <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> is used.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeValidator.MaxValue">
      <summary>Gets or sets the upper limit of the specified value.</summary>
      <value>A <see cref="T:System.Object" /> value that represents the upper limit of the specified value.</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is greater than <see cref="P:FarPoint.Win.Spread.RangeValidator.MaxValue" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeValidator.MinValue">
      <summary>Gets or sets the lower limit of the specified value.</summary>
      <value>A <see cref="T:System.Object" /> value that represents the lower limit of the specified value.</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is less than <see cref="P:FarPoint.Win.Spread.RangeValidator.MinValue" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeValidator.NullIsValid">
      <summary>Gets or sets a value that indicates whether the validation always succeeds when the specified value is <see langword="null" />.</summary>
      <value>
        <see langword="true" /> if the validation always succeeds when the specified value is <see langword="null" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
      <remarks>If the cell value is <see langword="null" />, you can determine whether the validation always succeeds.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeValidator.ParsingEnabled">
      <summary>Gets or sets a value indicating whether to use the Parse method.</summary>
      <value>
        <see langword="true" /> if the validation uses the Parse method; otherwise, <see langword="false" />. The default is <see langword="false" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.RangeValidator.RequiredType">
      <summary>Gets or sets the specified value's required <see cref="T:System.Type" />.</summary>
      <value>A <see cref="T:System.Type" /> value that represents the specified value's required <see cref="T:System.Type" nolink="true" />. The default is <see langword="null" />.</value>
      <remarks>Once <see cref="P:FarPoint.Win.Spread.RangeValidator.RequiredType" /> is set to a new value, <see cref="P:FarPoint.Win.Spread.RangeValidator.MinValue" /> and <see cref="P:FarPoint.Win.Spread.RangeValidator.MaxValue" /> are set to <see langword="null" />.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.Clone">
      <summary>Create a clone of current object</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RangeValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>va</summary>
      <param name="context" />
    </member>
    <member name="T:FarPoint.Win.Spread.RegularExpressionValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that validates whether the specifed value matches the given regular expression.</summary>
      <remarks>This CellValidator validates whether the validated value's string representation matches a specified regular expression. This is an exact match.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RegularExpressionValidator.Expression">
      <summary>Gets or sets a regular expression that is matched by the specified value.</summary>
      <value>A <see cref="T:System.String" /> value that represents a regular expression that is matched by the specified value. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.RegularExpressionValidator.NullIsValid">
      <summary>Gets or sets whether the validation is always successful when the specified value is <see langword="null" />.</summary>
      <value>
        <see langword="true" /> if the validation is always successful when the specified value is <see langword="null" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
      <remarks>If the cell value is <see langword="null" />, you can determine whether the validation always succeeds.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.RegularExpressionValidator.RegexOptions">
      <summary>Gets or sets the regular expression options.</summary>
      <value>A bitwise combination of the <see cref="T:System.Text.RegularExpressions.RegexOptions" />. The default is <see cref="F:System.Text.RegularExpressions.RegexOptions.None" />.</value>
      <remarks>Enumeration combinations are validated when setting this property.</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" /> value. </exception>
      <exception cref="T:System.ArgumentException"> The assigned value is a conjunction with invalid enumeration values. </exception>
      <seealso cref="P:FarPoint.Win.Spread.RegularExpressionValidator.Expression" />
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.RegularExpressionValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.RegularExpressionValidator" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.RegularExpressionValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RegularExpressionValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specifed value matches the given regular expression.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value is validated, and that contains some relative context information.</param>
      <returns>
        <see langword="true" /> if the specifed value matches the given regular expression; otherwise, <see langword="false" />.</returns>
      <remarks>
        <para> If <see cref="P:FarPoint.Win.Spread.RegularExpressionValidator.Expression" /> is <see langword="null" />, the result is always successful. </para>
        <para> The result matches the <see cref="P:FarPoint.Win.Spread.RegularExpressionValidator.Expression" nolink="true" /> exactly and completely. </para>
      </remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.ReloadSheetCellRangeFormulaEventArgs">
      <summary>Represents the event data for the FormulaChanged event, which occurs when an object that contains the sheet cell ranges notifies that formulas have been changed and that the SheetCellRange needs to be updated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ReloadSheetCellRangeFormulaEventArgs.#ctor(FarPoint.Win.Spread.ISheetCellRangeSupport)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ReloadSheetCellRangeFormulaEventArgs" /> class.</summary>
      <param name="sheetCellRangeContainer">The sheet cell range container.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ReloadSheetCellRangeFormulaEventArgs.SheetCellRangeContainer">
      <summary>Gets the sheet cell range container.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RequiredFieldValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> class that can validate whether the specified value is not <see langword="null" />.</summary>
      <remarks>This CellValidator validates whether the value is not <see langword="null" />, <see cref="F:System.String.Empty">String.Empty</see>, or <see cref="F:System.DBNull.Value">DBNull.Value</see>.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredFieldValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredFieldValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredFieldValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredFieldValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredFieldValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredFieldValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value is not <see langword="null" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated, and contains relative context information.</param>
      <returns>
        <see langword="true" /> if the specified value is not <see langword="null" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.RequiredTypeValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> class that validates whether the specified value's <see cref="T:System.Type" /> is equal to the <see cref="P:FarPoint.Win.Spread.RequiredTypeValidator.RequiredType" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RequiredTypeValidator.FormatProvider">
      <summary>Gets or sets the format provider.</summary>
      <value>The format provider. The default is null.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.RequiredTypeValidator.NullIsValid">
      <summary>Gets or sets whether the validation is always successful when the specified value is null.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RequiredTypeValidator.ParsingEnabled">
      <summary>Gets or sets whether to use the Parse method.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RequiredTypeValidator.RequiredType">
      <summary>Gets or sets the specified value's required <see cref="T:System.Type" />.</summary>
      <value>A <see cref="T:System.Type" /> value that represents the specified value's required <see cref="T:System.Type" nolink="true" />. The default is <see langword="null" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.RequiredTypeValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.RequiredTypeValidator" />.</returns>
      <remarks>Invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.RequiredTypeValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RequiredTypeValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value's <see cref="T:System.Type" /> equals to the <see cref="P:FarPoint.Win.Spread.RequiredTypeValidator.RequiredType" /></summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated, and some relative context information.</param>
      <returns>
        <see langword="true" /> if the specified value's <see cref="T:System.Type" /> equals to the <see cref="P:FarPoint.Win.Spread.RequiredTypeValidator.RequiredType" />; otherwise, <see langword="false" />.</returns>
      <remarks>If the <see cref="P:FarPoint.Win.Spread.RequiredTypeValidator.RequiredType" /> is <see langword="null" />, the result is always successful.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Row">
      <summary>Represents a row in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.BackColor">
      <summary>Gets or sets the background color for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Border">
      <summary>Gets or sets the border for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.CanFocus">
      <summary>Gets or sets the default CanFocus setting for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.CellPadding">
      <summary>Gets or sets the amount of space, in pixels, to pad cells in the row(s).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.CellType">
      <summary>Gets or sets the default cell type for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Editor">
      <summary>Gets or sets the default editor for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.ErrorText">
      <summary>Gets or sets the error text value in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Font">
      <summary>Gets or sets the default font for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.ForeColor">
      <summary>Gets or sets the default text color for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Formatter">
      <summary>Gets or sets the default formatter for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Formula">
      <summary>Gets or sets the formula for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Height">
      <summary>Gets or sets the height of this row in pixels.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified height is out of range; must be between -1 and 9,999,999 pixels </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.HorizontalAlignment">
      <summary>Gets or sets the default horizontal alignment of text for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.ImeMode">
      <summary>Gets or sets the IME mode for a row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.ImeSentenceMode">
      <summary>Gets or sets the IME sentence mode for a row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Index">
      <summary>Gets the index of this row, or the starting index for this range of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Index2">
      <summary>Gets the ending index for this range of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.InputScope">
      <summary>Gets or sets the InputScope for a row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Label">
      <summary>Gets or sets the header text for this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.LockBackColor">
      <summary>Gets or sets the background color for locked cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.LockFont">
      <summary>Gets or sets the font for locked cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.LockForeColor">
      <summary>Gets or sets the forecolor for locked cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Locked">
      <summary>Gets or sets whether cells in this row are marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.MergePolicy">
      <summary>Gets or sets whether to automatically merge adjacent identical cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.NoteIndicatorColor">
      <summary>Gets or sets the default color for the cell note indicator for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.NoteIndicatorPosition">
      <summary>Gets or sets the position of the note indicator for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.NoteIndicatorSize">
      <summary>Gets or sets the default size for the note indicator for cells in this row.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified size is out of range; width and height must be between 0 and 9,999,999 pixels </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.PageBreak">
      <summary>Gets or sets whether a page break is inserted before this row when printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Parent">
      <summary>Gets the parent collection of rows (Rows object) that contains this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.ParentStyleName">
      <summary>Gets or sets the name of the parent style from which style properties are inherited.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Renderer">
      <summary>Gets or sets the default renderer for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Resizable">
      <summary>Gets or sets whether this row can be resized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.StyleName">
      <summary>Gets or sets the name of the custom style for the cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.TabStop">
      <summary>Gets or sets whether the user can set focus to cells in this row using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Tag">
      <summary>Gets or sets the application-defined tag value associated with the cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.TextIndent">
      <summary>Gets or sets the amount of spaces to indent text in cells of the row in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Validation">
      <summary>Gets an instance of IValidation which may be used to get and set validation properties of the rows represented by this <see cref="T:FarPoint.Win.Spread.Row" />.</summary>
      <value>The instance of IValidation which may be used to get and set validation properties of the rows.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.VerticalAlignment">
      <summary>Gets or sets the default vertical alignment for cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.Visible">
      <summary>Gets or sets whether this row is visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Row.VisualStyles">
      <summary>Gets or sets the setting of visual styles (XP themes) for the row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.Add">
      <summary>Adds a new row or range of rows before this row or range of rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.Equals(System.Object)">
      <summary>Determines whether the specified object is equivalent to this row.</summary>
      <param name="o">Object to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.GetHashCode">
      <summary>Gets the hash code for this row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.GetPreferredHeight">
      <summary>Gets the minimum height necessary to display the text in all cells in this row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.Invalidate">
      <summary>Invalidates the displayed cells and sends the message to repaint them.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.Remove">
      <summary>Removes this row or range of rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetBackColor">
      <summary>Resets the background color for the row and makes the row inherit the background color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetBorder">
      <summary>Resets the cell border for the row and makes the row inherit the cell border from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetCanFocus">
      <summary>Resets to its default value whether the cells in this row can receive focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetCellPadding">
      <summary>Resets the cell padding of the row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetCellType">
      <summary>Resets the cell type for the row and makes the row inherit the cell type from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetFont">
      <summary>Resets the font for the row and makes the row inherit the font from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetForeColor">
      <summary>Resets the foreground color for the row and makes the row inherit the foreground color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetHeight">
      <summary>Resets the height for the row and makes the row inherit the height from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetHorizontalAlignment">
      <summary>Resets the horizontal alignment for the row and makes the row inherit the horizontal alignment from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetImeMode">
      <summary>Resets the IME mode for the row and makes the row inherit the IME mode from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetImeSentenceMode">
      <summary>Resets the IME sentence mode for the row and makes the row inherit the IME sentence mode from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetLabel">
      <summary>Resets the label for the row and makes the row use the automatic text.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetLockBackColor">
      <summary>Resets the background color for the locked row and makes the row inherit the background color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetLockFont">
      <summary>Resets the font for the locked row and makes the row inherit the font from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetLockForeColor">
      <summary>Resets the fore color for the locked row and makes the row inherit the fore color from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetLocked">
      <summary>Resets the locked state for the row and makes the row inherit the locked state from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetMergePolicy">
      <summary>Resets the merge policy for the row and makes the row inherit the merge policy from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetNoteIndicatorColor">
      <summary>Resets the color of the note indicator for cells in this row to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetNoteIndicatorPosition">
      <summary>Resets the position of the note indicator for cells in this row to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetNoteIndicatorSize">
      <summary>Resets the size of the note indicator for cells in this row to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetParentStyleName">
      <summary>Resets the name of the parent style for cells in this row to an empty string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetResizable">
      <summary>Resets the resizability for the row and makes the row inherit the resizability from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetTabStop">
      <summary>Resets to its default value whether the user can set focus to cells in this row using the Tab key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetTextIndent">
      <summary>Resets the text indent for the row and makes the row inherit the text indent from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetVerticalAlignment">
      <summary>Resets the vertical alignment for the row and makes the row inherit the vertical alignment from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetVisible">
      <summary>Resets the visiblity for the row and makes the row inherit the visibility from the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ResetVisualStyles">
      <summary>Resets the setting of visual styles (XP themes) for the row to the default setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ToString">
      <summary>Gets a string that contains an absolute reference to this row in the current reference style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ToString(FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets a string that contains a reference to this row in the specified reference style.</summary>
      <param name="referenceStyle">Reference style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ToString(FarPoint.Win.Spread.Row)">
      <summary>Gets a string that contains a relative reference to this row in the current reference style.</summary>
      <param name="relativeTo">Row to use for computing the relative reference</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Row.ToString(FarPoint.Win.Spread.Row,FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets a string that contains a relative reference to this cell in the specified reference style.</summary>
      <param name="relativeTo">Row to use for computing the relative reference</param>
      <param name="referenceStyle">Reference style</param>
      <exception cref="T:System.ArgumentNullException"> Row is not specified or is not valid; must provide a valid Row object </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.RowClipInfo">
      <summary>Represents the information for a row (not including the value or style information).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowClipInfo.#ctor">
      <summary>Creates a new set of information for the row (RowClipInfo object).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.Collapsed">
      <summary>Gets or sets whether the row is collapsed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.ErrorText">
      <summary>Gets or sets the error text for the row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.Height">
      <summary>Gets or sets the height of cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.MergePolicy">
      <summary>Gets or sets the whether to automatically merge adjacent identical cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.PageBreak">
      <summary>Gets or sets whether a page break is inserted before this row when printing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.Resizable">
      <summary>Gets or sets whether this row can be resized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfo.Visible">
      <summary>Gets or sets whether the row is visible.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowClipInfoRange">
      <summary>Represents a one-dimensional collection of RowClipInfo objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowClipInfoRange.#ctor(System.Int32)">
      <summary>Creates a new RowClipInfoRange object with the specified number of rows.</summary>
      <param name="rowCount">Number of rows</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfoRange.Item(System.Int32)">
      <summary>Gets or sets a RowClipInfo object for the row specified.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowClipInfoRange.RowCount">
      <summary>Gets the number of rows in the one-dimensional collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowErrorTextChangedEventArgs">
      <summary>/// Provides data for the Cell event of a FpSpread control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowErrorTextChangedEventArgs.#ctor(System.Int32,FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.RowErrorTextChangedEventArgs" /> class.</summary>
      <param name="rowIndex">Row index</param>
      <param name="sheetview">
        <see cref="P:FarPoint.Win.Spread.RowErrorTextChangedEventArgs.SheetView" /> object</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RowErrorTextChangedEventArgs.RowIndex">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowErrorTextChangedEventArgs.SheetView">
      <summary>Gets <see cref="P:FarPoint.Win.Spread.RowErrorTextChangedEventArgs.SheetView" /> object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowHeader">
      <summary>Represents the row header portion of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.AlternatingRows">
      <summary>Gets the alternating rows information for the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.AutoText">
      <summary>Gets or sets whether the row header displays letters or numbers or is blank.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.AutoTextIndex">
      <summary>Gets or sets which row header column displays the automatic text when there are multiple row header columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.Cells">
      <summary>Gets a Cells object for the cells in the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.ColumnCount">
      <summary>Gets or sets the number of columns in the row header.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is less than 0 or greater than 256. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.Columns">
      <summary>Gets a Columns object for the columns in the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.DefaultStyle">
      <summary>Gets or sets the default style for the cells in the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.DefaultStyleName">
      <summary>Gets or sets the name of the default style for the row header.</summary>
      <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.HorizontalGridLine">
      <summary>Gets or sets the horizontal grid line in the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.Rows">
      <summary>Gets a Rows object for the rows in the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.SelectorIndex">
      <summary>Gets or sets which row header column displays row selector when there are multiple row header columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.VerticalGridLine">
      <summary>Gets or sets the vertical grid line in the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeader.Visible">
      <summary>Gets or sets whether the row header is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the formatted text in a range.</summary>
      <param name="row">Starting row index, or -1 for all rows</param>
      <param name="column">Starting row header column index, or -1 for all row header columns</param>
      <param name="rowCount">Number of rows, or -1 for all rows</param>
      <param name="columnCount">Number of row header columns, or -1 for all row header columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the unformatted text in a range.</summary>
      <param name="row">Starting row index, or -1 for all rows</param>
      <param name="column">Starting row header column index, or -1 for all row header columns</param>
      <param name="rowCount">Number of rows, or -1 for all rows</param>
      <param name="columnCount">Number of row header columns, or -1 for all row header columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string that contains the formatted text in a range.</summary>
      <param name="row">Starting row index, or -1 for all rows</param>
      <param name="column">Starting row header column index, or -1 for all row header columns</param>
      <param name="rowCount">Number of rows, or -1 for all rows</param>
      <param name="columnCount">Number of row header columns, or -1 for all row header columns (may create new row header columns as needed)</param>
      <param name="value">Tab-delimited string to set into the range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string that contains the unformatted text to a range.</summary>
      <param name="row">Starting row index, or -1 for all rows</param>
      <param name="column">Starting row header column index, or -1 for all row header columns</param>
      <param name="rowCount">Number of rows, or -1 for all rows</param>
      <param name="columnCount">Number of row header columns, or -1 for all row header columns (may create new row header columns as needed)</param>
      <param name="value">Tab-delimited string to set into the range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.ShouldSerializeDefaultStyle">
      <summary>Gets whether the DefaultStyle property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.ShouldSerializeHorizontalGridLine">
      <summary>Gets whether the HorizontalGridLine object should be serialized.</summary>
      <returns>True if HorizontalGridLine should be serialized, and false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.ShouldSerializeVerticalGridLine">
      <summary>Gets whether the VerticalGridLine object should be serialized.</summary>
      <returns>True if VerticalGridLine should be serialized, and false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeader.ToString">
      <summary>Gets a string that contains a reference to the row header (always returns null).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowHeightChangedEventArgs">
      <summary>Represents the event data for the RowHeightChanged event for the Spread component, which occurs when the height of a row is changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeightChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList,System.Boolean)">
      <summary>Creates a new object with the RowHeightChanged event arguments.</summary>
      <param name="view">View that contains the rows whose heights have changed</param>
      <param name="rowList">Array list of the rows whose heights have changed</param>
      <param name="header">True if row indexes are column header rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeightChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the RowHeightChanged event arguments.</summary>
      <param name="view">View that contains the rows whose heights have changed</param>
      <param name="rowList">Array list of the rows whose heights have changed</param>
      <param name="header">True if row indexes are column header rows</param>
      <param name="footer">True if row indexes are column footer rows</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangedEventArgs.Footer">
      <summary>Gets whether the row indexes are column footer rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangedEventArgs.Header">
      <summary>Gets whether the row indexes are column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangedEventArgs.RowList">
      <summary>Gets the list of rows whose heights have changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangedEventArgs.View">
      <summary>Gets the view that contains the rows whose heights have changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowHeightChangeExtents">
      <summary>Represents an object that contains first and last rows in contiguous selection whose heights are changing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeightChangeExtents.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new object with the RowHeightChange event arguments.</summary>
      <param name="firstRow">First row of the contiguous selection</param>
      <param name="lastRow">Last row of the contiguous selection</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangeExtents.FirstRow">
      <summary>Gets the index of the first row in the contiguous selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangeExtents.LastRow">
      <summary>Gets the index of the last row in the contiguous selection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowHeightChangingEventArgs">
      <summary>Represents the event data for the RowHeightChanging event for the Spread component, which occurs when the height of a row is changing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeightChangingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the RowHeightChanging event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the columns that have changed</param>
      <param name="rowList">Array list of the rows whose heights have changed</param>
      <param name="height">New height</param>
      <param name="header">Whether to include headers</param>
      <param name="footer">Whether to include footers</param>
    </member>
    <member name="M:FarPoint.Win.Spread.RowHeightChangingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Collections.ArrayList,System.Int32,System.Boolean)">
      <summary>Creates a new object with the RowHeightChanging event arguments.</summary>
      <param name="view">View (Spreadview object) that contains the columns that have changed</param>
      <param name="rowList">Array list of the rows whose heights have changed</param>
      <param name="height">New height</param>
      <param name="header">Whether to include headers</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the row height change.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangingEventArgs.Footer">
      <summary>Gets whether the column indexes are column footer rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangingEventArgs.Header">
      <summary>Gets whether the column indexes are column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangingEventArgs.Height">
      <summary>Gets the new height of the row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangingEventArgs.RowList">
      <summary>Gets the list of rows whose heights have changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowHeightChangingEventArgs.View">
      <summary>Gets the view that contains the rows whose heights have changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Rows">
      <summary>Represents a one-dimensional collection of Row objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.Count">
      <summary>Gets or sets the number of rows in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.Default">
      <summary>Gets a row for the default row (-1).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.Item(System.String)">
      <summary>Gets a new row for the specified tag.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.Item(System.Int32)">
      <summary>Gets a new row for the specified row.</summary>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is out of range. It must less than the row count or -1 for all. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.Item(System.Int32,System.Int32)">
      <summary>Gets a new row for the specified range of rows.</summary>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is out of range. It must less than the row count or -1 for all. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.Parent">
      <summary>Gets the parent object that contains this collection of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.RangeGroupLevels">
      <summary>Gets the number of levels of rows in the outline (range group).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.Add(System.Int32,System.Int32)">
      <summary>Adds a new row or range of rows.</summary>
      <param name="index">Row index at which to start</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.AddRange(System.Collections.ICollection)">
      <summary>Not supported (throws InvalidOperationException).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.AddRangeGroup(System.Int32,System.Int32)">
      <summary>Groups all the rows from the specified start index by the specified amount to an outline (range group).</summary>
      <param name="row">Starting row index</param>
      <param name="count">Number of rows to group</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.Clear">
      <summary>Not supported (throws InvalidOperationException).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.ExpandRangeGroup(FarPoint.Win.Spread.RangeGroupInfo,System.Boolean)">
      <summary>Expands or collapses a specified outline (range group) of rows.</summary>
      <param name="group">Outline (range group) to expand or collapse</param>
      <param name="expand">Whether the action is to expand the outline</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.Get(System.Int32)">
      <summary>Gets a specified row.</summary>
      <param name="row">Row index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is out of range. It must less than the row count or -1 for all. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.Get(System.Int32,System.Int32)">
      <summary>Gets a specified range of rows.</summary>
      <param name="row">Starting row index</param>
      <param name="row2">Ending row index</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is out of range. It must less than the row count or -1 for all. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.GetRangeGroupInfo(System.Int32)">
      <summary>Gets the outlines (range groups) by level.</summary>
      <param name="level">Level of the associated outline (range group)</param>
      <returns>The collection of groups with the specified level.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.Remove(System.Int32,System.Int32)">
      <summary>Removes a row or range of rows.</summary>
      <param name="index">Index of row at which to start</param>
      <param name="count">Number of rows to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.RemoveRangeGroup(System.Int32,System.Int32)">
      <summary>Removes rows from the outline (range group) from the specified index and count, and returns them to individual rows.</summary>
      <param name="row">Starting row index</param>
      <param name="count">Number of rows to ungroup</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Rows.DefaultRow">
      <summary>Represents the default row in the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.BackColor">
      <summary>Gets or sets the background color for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Border">
      <summary>Gets or sets the border for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.CellType">
      <summary>Gets or sets the default cell type for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Editor">
      <summary>Gets or sets the default editor for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.ErrorText">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Font">
      <summary>Gets or sets the default font for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.ForeColor">
      <summary>Gets or sets the default text color for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Formatter">
      <summary>Gets or sets the default formatter for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Formula">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.HorizontalAlignment">
      <summary>Gets or sets the default horizontal alignment of text for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Label">
      <summary>This property is not applicable. It cannot be set for a default column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.LockBackColor">
      <summary>Gets or sets the default background color for locked's cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.LockFont">
      <summary>Gets or sets the default font for locked's cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.LockForeColor">
      <summary>Gets or sets the default fore color for locked's cells in this row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Locked">
      <summary>Gets or sets whether cells in the default row are marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.ParentStyleName">
      <summary>Gets or sets the name of the parent style (NamedStyle object) from which style properties are inherited for this default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.Renderer">
      <summary>Gets or sets the default renderer for cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.StyleName">
      <summary>Gets or sets the custom style (NamedStyle object) for the cells in the default row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Rows.DefaultRow.VerticalAlignment">
      <summary>Gets or sets the default vertical alignment of text for cells in the default row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Rows.DefaultRow.ToString">
      <summary>Gets a string that contains a reference to the default row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowTouchStrip">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> that is displayed in the row area.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowTouchStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.RowTouchStrip" /> instance.</summary>
      <param name="spread">The spread.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs">
      <summary>Represents the event data for the RowViewportHeightChanged event for the Spread component, which occurs when the height of a viewport row has changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
      <summary>Creates a new object with the RowViewportHeightChanged event arguments.</summary>
      <param name="view">View that contains the viewport whose height has changed</param>
      <param name="viewportIndex">Index of the viewport row whose height has changed</param>
      <param name="viewportHeight">Height of the viewport row whose height has changed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.View">
      <summary>Gets the view that contains the viewport row whose height has changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.ViewportHeight">
      <summary>Gets the height of the viewport row whose height has changed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.RowViewportHeightChangedEventArgs.ViewportIndex">
      <summary>Gets the index of the viewport row whose height has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SaveNamedStyleCollection">
      <summary>Represents a saved named style collection object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SaveNamedStyleCollection.#ctor">
      <summary>Saves the collection of named styles.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SaveNamedStyleCollection.#ctor(FarPoint.Win.Spread.NamedStyleCollection)">
      <summary>Saves the collection of named styles.</summary>
      <param name="nsc">Named styles collection</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SaveNamedStyleCollection.NamedStyles">
      <summary>Gets or sets the collection of the named styles.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SaveNamedStyleCollection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the named style collection from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SaveNamedStyleCollection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the named style collection to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ScaleRule">
      <summary>Represents the rules that determine how to scale the printed sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScaleRule.#ctor">
      <summary>Creates a new rule that determines how to scale the printed sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScaleRule.#ctor(FarPoint.Win.Spread.ResetOption,System.Single,System.Single,System.Single)">
      <summary>Creates a new rule that determines how to scale the printed sheet, with the specified reset option, factors, and intervals.</summary>
      <param name="resetOption">Whether to reset the rules or a particular rule</param>
      <param name="startFactor">Zoom factor at which to begin testing</param>
      <param name="endFactor">Zoom factor at which to stop testing</param>
      <param name="interval">Amount by which to decrement the zoom factor between scale tests</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ScaleRule.EndFactor">
      <summary>Gets or sets the zoom factor at which to stop testing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScaleRule.Interval">
      <summary>Gets or sets the amount by which to decrement the zoom factor between scale tests.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScaleRule.ResetOption">
      <summary>Determines whether to reset the rules or a particular rule before testing the next SmartPrint rule.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScaleRule.StartFactor">
      <summary>Gets or sets the zoom factor at which to begin testing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollingContentInfo">
      <summary>Represents information about the scrolling grid content in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.#ctor">
      <summary>Initializes a new instance of the ScrollingContentInfo class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the ScrollingContentInfo class from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollingContentInfo.ColumnIndices">
      <summary>Gets or sets column indices for the vertical scrolling tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollingContentInfo.MaxHeight">
      <summary>Gets or sets the maximum height in pixels for the vertical scrolling tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollingContentInfo.RowNumberPolicy">
      <summary>Gets or sets the policy that controls how to display row numbers in the vertical scrolling tip when the ColumnIndices property is not empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the scrolling grid content information from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.Reset">
      <summary>Resets this instance to default.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.ResetColumnIndices">
      <summary>Resets the ColumnIndices property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.ResetMaxHeight">
      <summary>Resets the MaxHeight property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.ResetRowNumberPolicy">
      <summary>Resets the RowNumberPolicy property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollingContentInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the scrolling grid content information to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.ScrollingContentInfo.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollTipFetchEventArgs">
      <summary>Represents the event data for the ScrollTipFetch event for the Spread component, which occurs when the spread is scrolled.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ScrollTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a new object with the ScrollTipFetch event arguments.</summary>
      <param name="view">View that is scrolled</param>
      <param name="text">Text in the scroll tip</param>
      <param name="row">New top row</param>
      <param name="column">New left column</param>
      <param name="showTip">Whether to show the scroll tip</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.Column">
      <summary>Gets the new left column index. If the user changes the vertical scrollbar, this value is -1.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.Row">
      <summary>Gets the new top row index. If the user changes the horizontal scrollbar, this value is -1.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.ShowTip">
      <summary>Gets or sets whether to show the scroll tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.TipText">
      <summary>Gets or sets the text in the scroll tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ScrollTipFetchEventArgs.View">
      <summary>Gets the view that is scrolled.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SearchDialog">
      <summary>Represents a search dialog.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SearchDialog.searchText">
      <summary>Internal use only. Search text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.AlternateSearch">
      <summary>Gets or sets whether to search down rows first then across columns, which is the alternate way of searching.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.CaseSensitive">
      <summary>Gets or sets whether to consider upper case and lower case when performing the search.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.ExactMatch">
      <summary>Gets or sets whether to consider only strings that match exactly.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.FoundColumnIndex">
      <summary>Gets the column index of the matched string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.FoundRowIndex">
      <summary>Gets the row index of the matched string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.FoundSheetIndex">
      <summary>Gets the sheet index of the matched string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.FoundString">
      <summary>Gets the string that matches the one searched for.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.RepeatFromStart">
      <summary>Gets or sets whether to repeat the search from the start.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.SearchString">
      <summary>Gets or sets the string for which to search.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.SearchStrings">
      <summary>Gets the strings that were searched for in the search dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.SheetIndex">
      <summary>Gets or sets the index of the sheet to search.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.StartColumnIndex">
      <summary>Gets or sets the column at which to start the search.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.StartRowIndex">
      <summary>Gets or sets the row at which to start the search.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SearchDialog.UseWildcards">
      <summary>Gets or sets whether to use wildcard characters in the search.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.DoSearch(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>Internal use only.</summary>
      <param name="sheetIndex" />
      <param name="startRowIndex" />
      <param name="startColumnIndex" />
      <param name="foundRowIndex" />
      <param name="foundColumnIndex" />
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Occurs on closing.</summary>
      <param name="e">Close event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.OnStringNotFound(System.ComponentModel.CancelEventArgs)">
      <summary>Occurs when the search does not find the string.</summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.PaintSeparator(System.Windows.Forms.Label,System.Windows.Forms.PaintEventArgs)">
      <summary>Paints a highlighted line from the end of a label control text to the width of the control to make the label look more like a separator.</summary>
      <param name="sender">Label</param>
      <param name="e">Paint event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.SetCustomText(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Sets the custom text in the form to specified values.</summary>
      <param name="findTextLabel">Text string to match</param>
      <param name="matchCaseLabel">Case to match string</param>
      <param name="exactMatchLabel">Exact match string</param>
      <param name="alternateSearchLabel">Alternate search string</param>
      <param name="useWildcardsLabel">Wildcard usage string</param>
      <param name="findText">Find text string</param>
      <param name="findNextText">Find next text string</param>
      <param name="closeText">Close text string</param>
      <param name="notFoundText">Text not found string</param>
      <param name="repeatSearchText">Prompt to repeat search from beginning string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.SetCustomText(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Sets the custom text in the form to specified values.</summary>
      <param name="findTextLabel">Text string to match</param>
      <param name="matchCaseLabel">Case to match string</param>
      <param name="exactMatchLabel">Exact match string</param>
      <param name="alternateSearchLabel">Alternate search string</param>
      <param name="useWildcardsLabel">Wildcard usage string</param>
      <param name="findText">Find text string</param>
      <param name="findNextText">Find next text string</param>
      <param name="closeText">Close text string</param>
      <param name="notFoundText">Text not found string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.SetCustomTextToDefaults">
      <summary>Sets the custom text in the form to default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SearchDialog.findNext_Click(System.Object,System.EventArgs)">
      <summary>Internal use only. Occurs when the next click.</summary>
      <param name="sender">Object source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="E:FarPoint.Win.Spread.SearchDialog.StringNotFound">
      <summary>Occurs when the search is cancelled with the string not found.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SelectionChangedEventArgs">
      <summary>Represents the event data for the SelectionChanged event for the Spread component, which occurs when the user has changed the selection by selecting another range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SelectionChangedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Creates a new object with the SelectionChanged event arguments.</summary>
      <param name="view">View that contains the selection</param>
      <param name="cellRange">Range of cells encompassing the selection</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangedEventArgs.Range">
      <summary>Gets the range of cells encompassing the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangedEventArgs.View">
      <summary>Gets the view that contains the selection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SelectionChangingEventArgs">
      <summary>Represents the event data for the SelectionChanging event for the Spread component, which occurs when the user is selecting another range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SelectionChangingEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,FarPoint.Win.Spread.Model.CellRange,System.Int32,System.Int32)">
      <summary>Creates a new object with the SelectionChanging event arguments.</summary>
      <param name="view">View that contains the selection</param>
      <param name="cellRange">Range of cells encompassing the selection</param>
      <param name="currentRow">Row index of the cell that contains the pointer</param>
      <param name="currentColumn">Column index of the cell that contains the pointer</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.Cancel">
      <summary>Gets or sets whether the selection action should be cancelled.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.CurrentColumn">
      <summary>Gets the column index of the cell that contains the mouse pointer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.CurrentRow">
      <summary>Gets the row index of the cell that contains the mouse pointer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.Range">
      <summary>Gets the range of cells encompassing the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SelectionChangingEventArgs.View">
      <summary>Gets the view that contains the selection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ShapeClipboardObject">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ShapeClipboardObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ShapeClipboardObject" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ShapeClipboardObject.Height">
      <summary>Gets or sets the height.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ShapeClipboardObject.Left">
      <summary>Gets or sets the near (left) side.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ShapeClipboardObject.Shape">
      <summary>Gets or sets the shape.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ShapeClipboardObject.Top">
      <summary>Gets or sets the top.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ShapeClipboardObject.Width">
      <summary>Gets or sets the width.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ShapeTouchStrip">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> which includes some common items.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ShapeTouchStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.ShapeTouchStrip" /> instance.</summary>
      <param name="spread">The spread.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetCorner">
      <summary>Represents the corner of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.AlternatingRows">
      <summary>Gets the alternating rows information for the sheet corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.Cells">
      <summary>Gets a Cells object for the cells in the sheet corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.ColumnCount">
      <summary>Gets or sets the number of columns in the sheet corner.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is less than 0 or greater than 256. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.Columns">
      <summary>Gets a Columns object for the columns in the sheet corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.DefaultStyle">
      <summary>Gets or sets the default style information for the cells in the sheet corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.DefaultStyleName">
      <summary>Gets or sets the name of the default style for the sheet corner.</summary>
      <exception cref="T:System.ArgumentException">Specified style (NamedStyle object) could not be found in the collection</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.HorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for the sheet corner.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.RowCount">
      <summary>Gets or sets the number of rows in the sheet corner.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is less than 0 or greater than 256. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.Rows">
      <summary>Gets a Rows object for the rows in the sheet corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetCorner.VerticalGridLine">
      <summary>Gets or sets the vertical grid line for the sheet corner.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetCorner.ShouldSerializeDefaultStyle">
      <summary>Gets whether the DefaultStyle property should be serialized.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetDragMovedEventArgs">
      <summary>Represents the event data for the SheetDragMoved event for the Spread component, which occurs right after the user finishes moving the sheet to another index.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetDragMovedEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new object with the SheetDragMoved event arguments.</summary>
      <param name="oldSheetIndex">Index of the sheet before moving.</param>
      <param name="newSheetIndex">Index of the sheet after moving.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetDragMovedEventArgs.NewSheetIndex">
      <summary>Gets the index of the sheet after moving.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetDragMovedEventArgs.OldSheetIndex">
      <summary>Gets the index of the sheet before moving.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetDragMovingEventArgs">
      <summary>Represents the event data for the SheetDragMoving event for the Spread component, which occurs when the user drags the sheet tab to the destination sheet tab.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetDragMovingEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new object with the SheetDragMoving event arguments.</summary>
      <param name="sheetTabIndex">Index of the sheet that is being moved.</param>
      <param name="draggingToTabIndex">Index where the sheet is moved to.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetDragMovingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the sheet drag and move action.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetDragMovingEventArgs.Restrict">
      <summary>Gets or sets whether to allow the sheet to be moved to the ToSheetIndex location.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetDragMovingEventArgs.SheetIndex">
      <summary>Gets the index of the sheet that is being moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetDragMovingEventArgs.ToSheetIndex">
      <summary>Gets the index of the new position where the sheet is being moved.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetSkin">
      <summary>Represents a skin, which provides style settings for a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(FarPoint.Win.Spread.SheetSkin)">
      <summary>Creates a new skin and copies the property values from the source skin.</summary>
      <param name="source">SheetSkin from which to copy, or null to copy from DefaultSkins.Default</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a new skin with the property values of the active sheet of the specified Spread component.</summary>
      <param name="spread">Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new skin with the specified settings.</summary>
      <param name="name">Name of the skin</param>
      <param name="backColor">Background color for the sheet</param>
      <param name="cellBackColor">Background color of the cells</param>
      <param name="cellForeColor">Text color of the cells</param>
      <param name="gridLineColor">Grid line color</param>
      <param name="gridLines">Which grid lines are displayed</param>
      <param name="headerBackColor">Background color of the headers</param>
      <param name="headerForeColor">Text color of the headers</param>
      <param name="selectionBackColor">Background color of selected cells</param>
      <param name="selectionForeColor">Text color of selected cells</param>
      <param name="evenRowBackColor">Background color of even rows</param>
      <param name="oddRowBackColor">Background color of odd rows</param>
      <param name="flatColumnHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="flatRowHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="headerFontBold">Whether to show bold font in headers</param>
      <param name="showColumnHeader">Whether to display the column header</param>
      <param name="showRowHeader">Whether to display the row header</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new skin with the specified settings.</summary>
      <param name="name">Name of the skin</param>
      <param name="backColor">Background color for the sheet</param>
      <param name="cellBackColor">Background color of the cells</param>
      <param name="cellForeColor">Text color of the cells</param>
      <param name="gridLineColor">Grid line color</param>
      <param name="gridLines">Which grid lines are displayed</param>
      <param name="headerBackColor">Background color of the headers</param>
      <param name="footerBackColor">Background color of the footers</param>
      <param name="headerForeColor">Text color of the headers</param>
      <param name="footerForeColor">Text color of the footers</param>
      <param name="selectionBackColor">Background color of selected cells</param>
      <param name="selectionForeColor">Text color of selected cells</param>
      <param name="evenRowBackColor">Background color of even rows</param>
      <param name="oddRowBackColor">Background color of odd rows</param>
      <param name="flatColumnHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="flatColumnFooter">Whether flat footers are displayed (or default three-dimensional footers)</param>
      <param name="flatRowHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="headerFontBold">Whether to show bold font in headers</param>
      <param name="footerFontBold">Whether to show bold font in footers</param>
      <param name="showColumnHeader">Whether to display the column header</param>
      <param name="showColumnFooter">Whether to display the column footer</param>
      <param name="showRowHeader">Whether to display the row header</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>Creates a new skin with the specified settings.</summary>
      <param name="name">Name of the skin</param>
      <param name="backColor">Background color for the sheet</param>
      <param name="cellBackColor">Background color of the cells</param>
      <param name="cellForeColor">Text color of the cells</param>
      <param name="gridLineColor">Grid line color</param>
      <param name="gridLines">Which grid lines are displayed</param>
      <param name="headerBackColor">Background color of the headers</param>
      <param name="headerForeColor">Text color of the headers</param>
      <param name="selectionBackColor">Background color of selected cells</param>
      <param name="selectionForeColor">Text color of selected cells</param>
      <param name="evenRowBackColor">Background color of even rows</param>
      <param name="oddRowBackColor">Background color of odd rows</param>
      <param name="flatColumnHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="flatRowHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="headerFontBold">Whether to show bold font in headers</param>
      <param name="showColumnHeader">Whether to display the column header</param>
      <param name="showRowHeader">Whether to display the row header</param>
      <param name="columnHeaderParent">Parent column header</param>
      <param name="rowHeaderParent">Row header parent</param>
      <param name="dataAreaParent">Data area parent</param>
      <param name="cornerParent">Sheet corner parent</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.AutoFilterMode)">
      <summary>Creates a new skin with the specified settings.</summary>
      <param name="name">Name of the skin</param>
      <param name="backColor">Background color for the sheet</param>
      <param name="cellBackColor">Background color of the cells</param>
      <param name="cellForeColor">Text color of the cells</param>
      <param name="gridLineColor">Grid line color</param>
      <param name="gridLines">Which grid lines are displayed</param>
      <param name="headerBackColor">Background color of the headers</param>
      <param name="headerForeColor">Text color of the headers</param>
      <param name="selectionBackColor">Background color of selected cells</param>
      <param name="selectionForeColor">Text color of selected cells</param>
      <param name="evenRowBackColor">Background color of even rows</param>
      <param name="oddRowBackColor">Background color of odd rows</param>
      <param name="flatColumnHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="flatRowHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="headerFontBold">Whether to show bold font in headers</param>
      <param name="showColumnHeader">Whether to display the column header</param>
      <param name="showRowHeader">Whether to display the row header</param>
      <param name="columnHeaderParent">Parent column header</param>
      <param name="rowHeaderParent">Row header parent</param>
      <param name="dataAreaParent">Data area parent</param>
      <param name="cornerParent">Sheet corner parent</param>
      <param name="filterBarParent">Filter bar parent</param>
      <param name="filterBarHeaderParent">Filter bar header parent</param>
      <param name="filterBarBackColor">Backround color of the filter bar</param>
      <param name="filterBarForeColor">Text color of the filter bar</param>
      <param name="filterBarHeaderBackColor">Background color of the filter bar header</param>
      <param name="filterBarHeaderForeColor">Text color of the filter bar header</param>
      <param name="autoFilterMode">AutoFilterMode for the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a new skin with the specified settings.</summary>
      <param name="name">Name of the skin</param>
      <param name="backColor">Background color for the sheet</param>
      <param name="cellBackColor">Background color of the cells</param>
      <param name="cellForeColor">Text color of the cells</param>
      <param name="gridLineColor">Grid line color</param>
      <param name="gridLines">Which grid lines are displayed</param>
      <param name="headerBackColor">Background color of the headers</param>
      <param name="footerBackColor">Background color of the footers</param>
      <param name="headerForeColor">Text color of the headers</param>
      <param name="footerForeColor">Text color of the footers</param>
      <param name="selectionBackColor">Background color of selected cells</param>
      <param name="selectionForeColor">Text color of selected cells</param>
      <param name="evenRowBackColor">Background color of even rows</param>
      <param name="oddRowBackColor">Background color of odd rows</param>
      <param name="flatColumnHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="flatColumnFooter">Whether flat footers are displayed (or default three-dimensional footers)</param>
      <param name="flatRowHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="headerFontBold">Whether to display bold font in headers</param>
      <param name="footerFontBold">Whether to display bold font in footers</param>
      <param name="showColumnHeader">Whether to display the column header</param>
      <param name="showColumnFooter">Whether to display the column footer</param>
      <param name="showRowHeader">Whether to display the row header</param>
      <param name="columnHeaderParent">Parent column header</param>
      <param name="columnFooterParent">Parent column footer</param>
      <param name="rowHeaderParent">Row header parent</param>
      <param name="dataAreaParent">Data area parent</param>
      <param name="cornerParent">Sheet corner parent</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.GridLines,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.AutoFilterMode)">
      <summary>Creates a new skin with the specified settings.</summary>
      <param name="name">Name of the skin</param>
      <param name="backColor">Background color for the sheet</param>
      <param name="cellBackColor">Background color of the cells</param>
      <param name="cellForeColor">Text color of the cells</param>
      <param name="gridLineColor">Grid line color</param>
      <param name="gridLines">Which grid lines are displayed</param>
      <param name="headerBackColor">Background color of the headers</param>
      <param name="footerBackColor">Background color of the footers</param>
      <param name="headerForeColor">Text color of the headers</param>
      <param name="footerForeColor">Text color of the footers</param>
      <param name="selectionBackColor">Background color of selected cells</param>
      <param name="selectionForeColor">Text color of selected cells</param>
      <param name="evenRowBackColor">Background color of even rows</param>
      <param name="oddRowBackColor">Background color of odd rows</param>
      <param name="flatColumnHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="flatColumnFooter">Whether flat footers are displayed (or default three-dimensional footers)</param>
      <param name="flatRowHeader">Whether flat headers are displayed (or default three-dimensional headers)</param>
      <param name="headerFontBold">Whether to show bold font in headers</param>
      <param name="footerFontBold">Whether to show bold font in footers</param>
      <param name="showColumnHeader">Whether to display the column header</param>
      <param name="showColumnFooter">Whether to display the column footer</param>
      <param name="showRowHeader">Whether to display the row header</param>
      <param name="columnHeaderParent">Parent column header</param>
      <param name="columnFooterParent">Parent column footer</param>
      <param name="rowHeaderParent">Row header parent</param>
      <param name="dataAreaParent">Data area parent</param>
      <param name="cornerParent">Sheet corner parent</param>
      <param name="filterBarParent">Filter bar parent</param>
      <param name="filterBarHeaderParent">Filter bar header parent</param>
      <param name="filterBarBackColor">Backround color of the filter bar</param>
      <param name="filterBarForeColor">Text color of the filter bar</param>
      <param name="filterBarHeaderBackColor">Background color of the filter bar header</param>
      <param name="filterBarHeaderForeColor">Text color of the filter bar header</param>
      <param name="autoFilterMode">AutoFilterMode for the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new skin with the property settings of the specified sheet.</summary>
      <param name="sheetView">Sheet (SheetView object), or null to initialize using DefaultSkins.Default</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new skin from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.AutoFilterMode">
      <summary>Gets the UI filter mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.BackColor">
      <summary>Gets the background color of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.CellBackColor">
      <summary>Gets the background color of cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.CellForeColor">
      <summary>Gets the text color of cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.ColumnFooterParent">
      <summary>Gets the parent style name to use for initializing the column footer default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.ColumnHeaderParent">
      <summary>Gets the parent style name to use for initializing the column header default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.CornerParent">
      <summary>Gets the parent style name to use for initializing the corner default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.DataAreaParent">
      <summary>Gets the parent style name to use for initializing the data area default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.EvenRowBackColor">
      <summary>Gets the background color of even numbererd rows in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FilterBarBackColor">
      <summary>Gets the background color of filter bar items in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FilterBarForeColor">
      <summary>Gets the text color of filter bar items in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FilterBarHeaderBackColor">
      <summary>Gets the background color of the filter bar header in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FilterBarHeaderForeColor">
      <summary>Gets the text color of the filter bar header in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FilterBarHeaderParent">
      <summary>Gets the parent style name to use for initializing the filter header bar default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FilterBarParent">
      <summary>Gets the parent style name to use for initializing the filter bar default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FlatColumnFooter">
      <summary>Gets whether column footers are displayed in the sheet with a flat appearance.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FlatColumnHeader">
      <summary>Gets whether column headers are displayed in the sheet with a flat appearance.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FlatRowHeader">
      <summary>Gets whether row headers are displayed in the sheet with a flat appearance.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FooterBackColor">
      <summary>Gets the background color of footer cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FooterFontBold">
      <summary>Gets whether the font is bold for text in footers in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.FooterForeColor">
      <summary>Gets the text color of footer cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.GridLineColor">
      <summary>Gets the color of the grid lines on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.GridLines">
      <summary>Gets which grid lines are displayed on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.HeaderBackColor">
      <summary>Gets the background color of header cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.HeaderFontBold">
      <summary>Gets whether the font is bold for text in headers in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.HeaderForeColor">
      <summary>Gets the text color of header cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.Name">
      <summary>Gets the name of the skin for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.OddRowBackColor">
      <summary>Gets the background color of odd numbered rows in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.RowHeaderParent">
      <summary>Gets the parent style name to use for initializing the row header default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.SelectionBackColor">
      <summary>Gets the background color of selected cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.SelectionForeColor">
      <summary>Gets the text color of selected cells in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.ShowColumnFooter">
      <summary>Gets whether the sheet displays the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.ShowColumnHeader">
      <summary>Gets whether the sheet displays the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkin.ShowRowHeader">
      <summary>Gets whether the sheet displays the row header.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Apply(FarPoint.Win.Spread.FpSpread)">
      <summary>Applies the skin to the active sheet in the specified Spread component.</summary>
      <param name="spread">Spread component to which to apply the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Apply(FarPoint.Win.Spread.SheetView)">
      <summary>Applies the skin to the specified sheet.</summary>
      <param name="sheet">Sheet to which to apply the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Apply(System.Collections.ICollection)">
      <summary>Applies the skin to the specified collection of sheets.</summary>
      <param name="sheets">Array of sheets to which to apply the skin</param>
      <exception cref="T:System.ArgumentNullException">No sheet collection specified or specified collection is null</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the skin from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is equivalent to this skin.</summary>
      <param name="o">Object to compare to</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.GetHashCode">
      <summary>Returns the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the skin to serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Load(System.String)">
      <summary>Loads a skin from a file.</summary>
      <param name="fileName">Path and file name from which to load the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Load(System.IO.Stream)">
      <summary>Loads a skin from a stream.</summary>
      <param name="stream">Stream from which to load the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Save(FarPoint.Win.Spread.SheetSkin,System.String)">
      <summary>Saves a skin to a file.</summary>
      <param name="skin">Name of the skin</param>
      <param name="fileName">Path and file name to which to save the skin overwriting the file if it already exists</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Save(FarPoint.Win.Spread.SheetSkin,System.IO.Stream)">
      <summary>Saves a skin to a stream.</summary>
      <param name="skin">Name of the skin</param>
      <param name="stream">Stream to which to save the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkin.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the skin to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetSkinsForm">
      <summary>Represents a sheet skin form.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkinsForm.#ctor">
      <summary>Creates a new sheet skin form with defaul values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkinsForm.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a sheet skin form for the specified Spread component.</summary>
      <param name="target">Target Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkinsForm.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new sheet skin form for the specified sheet.</summary>
      <param name="target">Target sheet</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkinsForm.CustomDirty">
      <summary>Gets a value that indicates whether the user has changed settings.</summary>
      <value>
        <c>true</c> if the user has changed settings; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetSkinsForm.HelpBtn">
      <summary>Internal use only. Gets the help button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkinsForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkinsForm.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyUp event.</summary>
      <param name="e">An event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetSkinsForm.OnLoad(System.EventArgs)">
      <summary>Occurs when the skin is loaded.</summary>
      <param name="e">EventArgs object with event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetStyleProperty">
      <summary>Represents a style property in the <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetStyleProperty.#ctor(System.String)">
      <summary>Creates a new SheetStyleProperty object for the specified property name.</summary>
      <param name="text">Name of the style property</param>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.BackColor">
      <summary>Represents the background color of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Border">
      <summary>Represents the border setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.CanFocus">
      <summary>Represents the can focus setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.CellPadding">
      <summary>Represents the cell padding of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.CellType">
      <summary>Represents the cell type of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Editor">
      <summary>Represents the editor of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Font">
      <summary>Represents the font of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.ForeColor">
      <summary>Represents the text color of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Formatter">
      <summary>Represents the formatter of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.HorizontalAlignment">
      <summary>Represents the horizontal alignment of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.ImeMode">
      <summary>Represents the IME Mode of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.ImeSentenceMode">
      <summary>Represents the IME sentence mode of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.InputScope">
      <summary>Represents the Input scope of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.LockBackColor">
      <summary>Represents the Lock BackColor of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.LockFont">
      <summary>Represents the Lock Font of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.LockForeColor">
      <summary>Represents the Lock ForeColor of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Locked">
      <summary>Represents the lock setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.NoteIndicatorColor">
      <summary>Represents the cell note indicator color setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.NoteIndicatorPosition">
      <summary>Represents the cell note indicator position of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.NoteIndicatorSize">
      <summary>Represents the cell note indicator size of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.NoteStyle">
      <summary>Represents the note style setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Parent">
      <summary>Represents the parent of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.Renderer">
      <summary>Represents the renderer of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.TabStop">
      <summary>Represents the tab stop setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.TextIndent">
      <summary>Represents the text indent of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.VerticalAlignment">
      <summary>Represents the vertical alignment of the sheet style. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetStyleProperty.VisualStyles">
      <summary>Represents the visual style setting of the sheet style. This field is read-only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetStyleProperty.ToString">
      <summary>Returns the name of the property.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetTab">
      <summary>Represents an individual sheet name tab.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetTab.#ctor">
      <summary>Creates a new sheet name tab.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetTab.#ctor(System.Windows.Forms.Control)">
      <summary>Creates a new sheet name tab for the specified control.</summary>
      <param name="owner">Control that owns the new sheet tab (SheetTab object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetTab.#ctor(System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
      <summary>Creates a new sheet name tab for the specified control with the specified appearance settings.</summary>
      <param name="owner">Control that owns the new sheet tab (SheetTab object)</param>
      <param name="backColor">Background color of the sheet tab</param>
      <param name="foreColor">Text color of the sheet tab</param>
      <param name="font">Text font of the sheet tab</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetTab.#ctor(System.Windows.Forms.Control,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Int32)">
      <summary>Creates a new sheet name tab for the specified control with the specified appearance and size settings.</summary>
      <param name="owner">Control that owns the new sheet tab (SheetTab object)</param>
      <param name="backColor">Background color of the sheet tab</param>
      <param name="foreColor">Text color of the sheet tab</param>
      <param name="font">Text font of the sheet tab</param>
      <param name="size">Integer width of the tab in pixels</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTab.BackColor">
      <summary>Gets or sets the background color for the sheet name tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTab.Font">
      <summary>Gets or sets the font for the sheet name in the sheet name tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTab.ForeColor">
      <summary>Gets or sets the foreground color (text color) for the sheet name tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTab.Size">
      <summary>Gets or sets the size for the sheet name tab.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetTabClickEventArgs">
      <summary>Represents the event data for the SheetTabClick event for the Spread component, which occurs when the user clicks the mouse button with the pointer on the sheet name tab.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetTabClickEventArgs.#ctor(System.Int32)">
      <summary>Creates a new object with the SheetTabClick event arguments.</summary>
      <param name="sheetTabIndex">Index of the sheet tab that was clicked</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTabClickEventArgs.SheetTabIndex">
      <summary>Gets the index of the sheet tab that is clicked.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs">
      <summary>Represents the event data for the SheetTabDoubleClick event for the Spread component, which occurs when the user double-clicks on a sheet name tab.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs.#ctor(System.Int32)">
      <summary>Creates a new object with the SheetTabDoubleClick event arguments.</summary>
      <param name="sheetTabIndex">Index of the sheet tab that was clicked</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default action (in-place editing).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetTabDoubleClickEventArgs.SheetTabIndex">
      <summary>Gets the index of the sheet tab that is clicked.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetView">
      <summary>Represents an individual sheet in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor(FarPoint.Win.Spread.ISheetViewInitializer)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SheetView" /> class. Internal use only.</summary>
      <param name="initializer">The SheetView initializer.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor">
      <summary>Creates a sheet (SheetView object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor(System.String)">
      <summary>Creates a sheet (SheetView object) with a specified name.</summary>
      <param name="name">Name of sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Creates a sheet (SheetView object) according to a specified data model.</summary>
      <param name="dataModel">Data model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel,FarPoint.Win.Spread.NamedStyleCollection)">
      <summary>Creates a sheet (SheetView object) according to a specified data model and named style.</summary>
      <param name="dataModel">Data model</param>
      <param name="namedStyles">Named style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>Instantiate a SheetView instance with a Worksheet. Internal use only.</summary>
      <param name="worksheet" />
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a sheet (SheetView object) from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ActiveCell">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.Cell" /> object for the active cell on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ActiveColumn">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.Column" /> object for the active column on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ActiveColumnIndex">
      <summary>Gets or sets the column index of the active cell on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ActiveRow">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.Row" /> object for the active row on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ActiveRowIndex">
      <summary>Gets or sets the row index of the active cell on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ActiveSkin">
      <summary>Gets or sets the skin for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AllowGroup">
      <summary>Gets or sets whether to allow the user to group rows on the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AllowNoteEdit">
      <summary>Gets or sets whether notes on this sheet are editable.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AllowTableCorner">
      <summary>Gets or sets whether the sheet corner can have a grid structure (table).</summary>
      <value>Boolean: <c>true</c> to allow a sheet corner with a table; otherwise, <c>false</c></value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AlternatingRows">
      <summary>Gets an <see cref="T:FarPoint.Win.Spread.AlternatingRows" /> object for the alternating rows in the data area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoCalculation">
      <summary>Gets or sets whether the control recalculates each formula when the contents of dependent cells change for a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoFilter">
      <summary>Gets or sets whether the filter will automatically update for any changes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoFilterMode">
      <summary>Gets or sets the <see cref="T:FarPoint.Win.Spread.AutoFilterMode" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoGenerateColumns">
      <summary>Gets or sets whether to automatically generate the columns for a sheet based on the data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoSortColumns">
      <summary>Gets or sets whether to allow automatic sorting for a sheet and whether to show the sort indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoSortEnhancedContextMenu">
      <summary>Gets or sets whether to use the Spread's enhanced filter menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoSortEnhancedMode">
      <summary>Gets or sets whether to use the Spread's sorting behavior in enhanced filter context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoSortFrozenRows">
      <summary>Gets or sets a value that indicates whether frozen rows are sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoSortTrailingFrozenRows">
      <summary>Gets or sets a value that indicates whether trailing frozen rows are sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.AutoUpdateNotes">
      <summary>Gets or sets whether cell notes are automatically updated when changes are made to the note style or to the text, or notes are added, removed, or moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.BackgroundImage">
      <summary>Gets or sets sheetview background image.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.BackgroundImageLayout">
      <summary>Gets or sets sheetview background image layout.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Cells">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.Cells" /> object for the cells in the data area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Charts">
      <summary>Gets the charts.</summary>
      <value>The charts.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ChildRelationCount">
      <summary>Gets the number of child relations (data relation count) for a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ChildViews">
      <summary>Returns the child sheets.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.CodeDomDeserializing">
      <summary>Internal use only</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnAutoSorted">
      <summary>Gets the index of the last column that was automatically sorted for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnCount">
      <summary>Gets or sets the number of columns in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooter">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.ColumnFooter" /> object for the column footer area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line in the column footer for the sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterRowCount">
      <summary>Gets or sets the number of rows in the column footers for the sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is out of range; must be between 0 and 256 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterSheetCornerHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for the column footer sheet corner.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterSheetCornerStyle">
      <summary>Gets or sets the style information for the sheet corner for the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterSheetCornerStyleName">
      <summary>Gets or sets the name of the style for the sheet corner of the column footer.</summary>
      <exception cref="T:System.ArgumentException"> Specified NamedStyle object could not be found in the collection </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterSheetCornerVerticalGridLine">
      <summary>Gets or sets the vertical grid line for the column footer sheet corner.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterVerticalGridLine">
      <summary>Gets or sets the vertical grid line in the column footer for the sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnFooterVisible">
      <summary>Gets or sets whether the column footers for this sheet are visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeader">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.ColumnHeader" /> object for the column header area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoFilterIndex">
      <summary>Gets or sets which column header row in the sheet displays the filter indicator when there are multiple column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoSortIndex">
      <summary>Gets or sets which column header row in the sheet displays the sort indicator when there are multiple column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoText">
      <summary>Gets or sets whether column headers for the sheet display letters or numbers or are blank.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified header setting is not valid; must be one of the HeaderAutoText enumeration settings </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderAutoTextIndex">
      <summary>Gets or sets which column header row for the sheet displays the automatic text when there are multiple column header rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for the sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderRowCount">
      <summary>Gets or sets the number of rows in the column headers for the sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is out of range; must be between 0 and 256 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderVerticalGridLine">
      <summary>Gets or sets the vertical grid line in the column header for the sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ColumnHeaderVisible">
      <summary>Gets or sets whether the column headers for this sheet are visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Columns">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.Columns" /> object for the columns in the data area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ContainingViews">
      <summary>Gets the containing views.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DataAllowAddNew">
      <summary>Gets or sets whether to allow the user to add a new row when the sheet is bound.</summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DataAutoCellTypes">
      <summary>Gets or sets whether a bound sheet automatically sets the cell type for the cells in a column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DataAutoHeadings">
      <summary>Gets or sets whether a bound sheet automatically assigns the data field names to be the text in the column headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DataAutoSizeColumns">
      <summary>Gets or sets whether a bound sheet automatically sizes its columns based on the data in the associated database fields.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DataMember">
      <summary>Gets or sets the name of the data member that populates the sheet.</summary>
      <exception cref="T:System.InvalidOperationException"> Data model does not support IDataSourceSupport interface </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DataSource">
      <summary>Gets or sets the name of the data source that populates the sheet.</summary>
      <exception cref="T:System.InvalidOperationException"> Data model does not support IDataSourceSupport interface </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DefaultGroupFooter">
      <summary>Default setting for group footers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DefaultStyle">
      <summary>Gets or sets a <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object for the default style of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DefaultStyleName">
      <summary>Gets or sets the name of the default style for the sheet.</summary>
      <exception cref="T:System.ArgumentException"> Specified NamedStyle object could not be found in the collection </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DisplayZero">
      <summary>Gets or sets whether zero values are displayed in cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DrawingContainer">
      <summary>Gets or sets a drawing container for the sheet for a drawing object in the drawing space.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.EnableDiagonalLine">
      <summary>Sets or gets whether cell diagonal line is enable.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.EnhancedFilterSortingMode">
      <summary>Gets or sets whether the enhanced filter shows items in the tree by default or alphabetic order.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Expandable">
      <summary>Gets or sets whether the rows are expandable.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBar">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.FilterBar" /> object of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBarHeaderHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for the filter bar header.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBarHeaderStyle">
      <summary>Gets or sets the style information for the filter bar header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBarHeaderStyleName">
      <summary>Gets or sets the name of the style for the filter bar header.</summary>
      <exception cref="T:System.ArgumentException"> Specified NamedStyle object could not be found in the collection </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBarHeaderVerticalGridLine">
      <summary>Gets or sets the vertical grid line for the filter bar.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBarHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for the filter bar.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FilterBarVerticalGridLine">
      <summary>Gets or sets the vertical grid line for the filter bar.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FpSpread">
      <summary>Gets Fpspread from sheet view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FrozenColumnCount">
      <summary>Gets or sets the number of non-scrolling columns on the leading edge of this sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range; must be greater than or equal to zero </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FrozenRowCount">
      <summary>Gets or sets the number of non-scrolling rows on the leading edge of this sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range; must be greater than or equal to zero </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FrozenTrailingColumnCount">
      <summary>Gets or sets the number of non-scrolling columns on the trailing edge of this sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range; must be greater than or equal to zero </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.FrozenTrailingRowCount">
      <summary>Gets or sets the number of non-scrolling rows on the trailing edge of this sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range; must be greater than or equal to zero </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GrayAreaBackColor">
      <summary>Gets or sets the color in the area between the sheet and the edge of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupBarBackColor">
      <summary>Obsolete. Use GroupBarInfo.BackColor instead. Gets or sets the background color for the grouping bar of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupBarHeight">
      <summary>Obsolete. Use GroupBarInfo.Height instead. Gets or sets the height of the grouping bar for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupBarInfo">
      <summary>Gets or sets the information of the grouping bar for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupBarVisible">
      <summary>Obsolete. Use GroupBarInfo.Visible instead. Gets or sets whether the grouping bar for the sheet is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupFooterVisible">
      <summary>Gets or sets whether the group footer is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupInfos">
      <summary>Gets or sets the collection of grouping information objects for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupMaximumLevel">
      <summary>Gets or sets the maximum number of levels of grouping for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupVerticalIndent">
      <summary>Obsolete. Use GroupBarInfo.GroupVerticalIndent instead. Gets or sets the separation of grouping levels for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.GroupingPolicy">
      <summary>Gets or sets grouping policy to collapse or expand rows when grouping occurs.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.HorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for this sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.IgnoreApplySpreadSkin">
      <summary>Gets or sets a value that indicates whether to ignore applying Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.IsBlockSelected">
      <summary>Gets whether a block of cells on this sheet is currently selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.IsColumnVisibleAvailable">
      <summary>Gets a value indicating whether this instance is column visible available.</summary>
      <value>
        <c>true</c> if this instance is row visible available; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.IsInitializing">
      <summary>Gets a value that indicates whether <see cref="T:FarPoint.Win.Spread.SheetView" /> is initialized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.IsRowVisibleAvailable">
      <summary>Gets a value indicating whether this instance is row visible available.</summary>
      <value>
        <c>true</c> if this instance is row visible available; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Iteration">
      <summary>Gets or sets whether circular references are evaluated on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.LockBackColor">
      <summary>Gets or sets the background color of locked cells on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.LockFont">
      <summary>Gets or sets the default font for locked items on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.LockForeColor">
      <summary>Gets or sets the foreground color of locked cells on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.MaximumChange">
      <summary>Gets or sets the maximum amount of change below which iterations stop when circular references are evaluated on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.MaximumIterations">
      <summary>Gets or sets the maximum number of iterations for calculating circular references on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.MinZoomFactor">
      <summary>Gets or sets a value that indicates the minimum zoom factor for this sheet.</summary>
      <value>A <see cref="T:System.Single" /> value that represents the <see cref="T:FarPoint.Win.Spread.SheetView" /> minimum zoom factor. The default is <b>0.1f</b>.</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is greater than 4 or less than 0.1. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Models">
      <summary>Gets or sets a <see cref="T:FarPoint.Win.Spread.SheetView.DocumentModels" /> object that contains all the models for the sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> Model object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.ColumnAxis object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.ColumnHeaderData object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.ColumnHeaderRowAxis object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Models.ColumnHeaderSpan object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.ColumnHeaderStyle object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.Data object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.RowAxis object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.RowHeaderColumnAxis object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.RowHeaderData object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.RowHeaderSpan object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.RowHeaderStyle object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.Selection object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.Span object is not specified (or specified object is null) </exception>
      <exception cref="T:System.ArgumentNullException"> Model.Style object is not specified (or specified object is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NamedStyles">
      <summary>Gets or sets a <see cref="T:FarPoint.Win.Spread.NamedStyleCollection" /> of NamedStyle objects for this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NonEmptyColumnCount">
      <summary>Gets a value that is one more than the index of the last column on this sheet containing data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NonEmptyRowCount">
      <summary>Gets a value that is one more than the index of the last row on this sheet containing data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NotesContainer">
      <summary>Internal use only. Gets or sets the drawing container for cell notes in the drawing space.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NullBackColor">
      <summary>Gets or sets the background color of null items on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NullFont">
      <summary>Gets or sets the default font for null items on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.NullForeColor">
      <summary>Gets or sets the foreground color of null items on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.OperationMode">
      <summary>Gets or sets the mode that determines mouse, keyboard, and selection behavior for this sheet.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified operation mode is not valid </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Parent">
      <summary>Gets or sets the name of the parent sheet (<see cref="T:FarPoint.Win.Spread.SheetView" /> object) of this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ParentRelationName">
      <summary>Gets the data relation name for this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ParentRowIndex">
      <summary>Gets the index of the parent row on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.PreviewRowInfo">
      <summary>Gets or sets preview row information for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.PrintInfo">
      <summary>Gets or sets a <see cref="T:FarPoint.Win.Spread.PrintInfo" /> object that determines printing behavior for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Protect">
      <summary>Gets or sets whether cells on this sheet that are marked as locked are not editable.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RangeGroupBackgroundColor">
      <summary>Gets or sets the background color of the outline (range group) region.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RangeGroupButtonStyle">
      <summary>Gets or sets the style of the outline (range group) button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RangeGroupSummaryColumnRight">
      <summary>Gets or sets whether the direction of the summary column is to the right of the detail.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RangeGroupSummaryRowBelow">
      <summary>Gets or sets whether the direction of the summary row is below the detail.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ReferenceStyle">
      <summary>Gets or sets the style for cell and range references in formulas in cells on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RestrictColumns">
      <summary>Gets or sets whether users are restricted from typing data in a column on this sheet that is more than one column beyond the last column that contains data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RestrictRows">
      <summary>Gets or sets whether users are restricted from typing data in a row on this sheet that is more than one row beyond the last row that contains data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowCount">
      <summary>Gets or sets the number of rows on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowFilter">
      <summary>Gets or sets the row filter for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeader">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.RowHeader" /> object for the row header area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderAutoText">
      <summary>Gets or sets whether row headers on this sheet display letters or numbers or are blank.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified header setting is not valid; must be one of the HeaderAutoText enumeration settings </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderAutoTextIndex">
      <summary>Gets or sets which row header column on this sheet displays the automatic text when there are multiple row header columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderColumnCount">
      <summary>Gets or sets the number of columns in the row header on this sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is out of range; must be between 0 and 256 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line in the row header on this sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderSelectorIndex">
      <summary>Gets or sets which row header column in the sheet displays the row selector when there are multiple row header columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderVerticalGridLine">
      <summary>Gets or sets the vertical grid line in the row header on this sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.RowHeaderVisible">
      <summary>Gets or sets whether the row headers for this sheet are visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Rows">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.Rows" /> object for the rows in the data area of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SaveNamedStyles">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ScrollingContentInfo">
      <summary>Gets or sets the information of the vertical scrolling tip for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionBackColor">
      <summary>Gets or sets the background color of selections on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionCount">
      <summary>Gets the number of selections on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionFont">
      <summary>Gets or sets the default font for selected items on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionForeColor">
      <summary>Gets or sets the foreground color of selections on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionPolicy">
      <summary>Gets the selection policy for the sheet for normal operation mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionStyle">
      <summary>Gets or sets how selections on this sheet are drawn.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SelectionUnit">
      <summary>Gets or sets the smallest unit users or the application can select on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SerializeModels">
      <summary>Gets or sets whether the DocumentModels for this sheet should be serialized to the form resources, rather than generating code that initializes the Cells, Columns, Rows, and AlternatingRows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SheetCorner">
      <summary>Gets the sheet corner of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerHorizontalGridLine">
      <summary>Gets or sets the horizontal grid line for the sheet corner.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerStyle">
      <summary>Gets or sets the style information for the sheet corner.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerStyleName">
      <summary>Gets or sets the name of the style for the sheet corner.</summary>
      <exception cref="T:System.ArgumentException"> Specified NamedStyle object could not be found in the collection </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SheetCornerVerticalGridLine">
      <summary>Gets or sets the vertical grid line for the sheet corner.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
      <exception cref="T:System.ArgumentException">A sheet name must be 31 or fewer characters, not blanks and cannot contain the characters []*?/\</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ShowEditingRowSelector">
      <summary>Gets or sets a value that indicates whether to display a row selector in the editing row header of the selected row for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ShowRowSelector">
      <summary>Gets or sets a value that indicates whether to display a row selector in the row header of the selected row for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Site">
      <summary>Gets or sets the site.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SparklineContainer">
      <summary>Gets or sets a sparkline container for the sheet for maintaining sparklines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.StartingColumnNumber">
      <summary>Gets or sets the number or letter displayed in the first column header on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.StartingRowNumber">
      <summary>Gets or sets the number or letter displayed in the first row header on this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Tag">
      <summary>Gets or sets an application-defined tag value associated with the cells in this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.TitleInfo">
      <summary>Sheet title</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Validations">
      <summary>Gets the object which manages all DataValidtions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.VerticalGridLine">
      <summary>Gets or sets the vertical grid line on this sheet.</summary>
      <exception cref="T:System.ArgumentNullException"> No value is specified (specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.View">
      <summary>Get or set the view type of a SheetView.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.Visible">
      <summary>Gets or sets whether to display the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.VisualStyles">
      <summary>Gets or sets whether to use visual styles when rendering objects in the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.ZoomFactor">
      <summary>Gets or sets the scaling factor for displaying this sheet.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified scaling amount is out of range; must be betwen 0.1 (10%) and 4.0 (400%) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddChart(System.Int32,System.Int32,System.Type,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Chart.ChartViewType,System.Boolean)">
      <summary>Adds the chart control.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="width">Width of the chart.</param>
      <param name="height">Height of the chart.</param>
      <param name="x">The x-position.</param>
      <param name="y">The y-position.</param>
      <param name="viewType">Type of the view.</param>
      <param name="showLegend">If set to <c>true</c>, the new chart will have a default legend area; otherwise, there is no legend area.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddChart(System.Int32,System.Int32,System.Type,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds the chart control.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="width">Width of the chart.</param>
      <param name="height">Height of the chart.</param>
      <param name="x">The x-position.</param>
      <param name="y">The y-position.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddChart(FarPoint.Win.Spread.Model.CellRange[],System.Type,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Chart.ChartViewType,System.Boolean)">
      <summary>Adds a chart to the SheetView. The chart will be aligned in the center of the SheetView.</summary>
      <param name="cellRanges">Multiple cell ranges that are used to create data for the chart.</param>
      <param name="seriesType">Indicates which chart type will be added.</param>
      <param name="width">Width of the chart.</param>
      <param name="height">Height of the chart.</param>
      <param name="x">The x-position.</param>
      <param name="y">The y-position.</param>
      <param name="viewType">Type of the view.</param>
      <param name="showLegend">If set to <c>true</c>, the new chart will have a default legend area; otherwise, there is no legend area.</param>
      <returns>The new created instance of the chart.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddChart(FarPoint.Win.Spread.Model.CellRange[],System.Type,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a chart to the SheetView. The chart will be aligned in the center of the SheetView.</summary>
      <param name="cellRanges">Multiple cell ranges that are used to create data for the chart.</param>
      <param name="seriesType">Indicates which chart type will be added.</param>
      <param name="width">Width of the chart.</param>
      <param name="height">Height of the chart.</param>
      <param name="x">The x-position.</param>
      <param name="y">The y-position.</param>
      <returns>The new created instance of the chart.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddChart(FarPoint.Win.Spread.Model.CellRange,System.Type,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Chart.ChartViewType,System.Boolean)">
      <summary>Adds the chart control.</summary>
      <param name="cellRange">The range of data used in the chart.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="width">Width of the chart.</param>
      <param name="height">Height of the chart.</param>
      <param name="x">The x-position.</param>
      <param name="y">The y-position.</param>
      <param name="viewType">Type of the view.</param>
      <param name="showLegend">If set to <c>true</c>, the new chart will have a default legend area; otherwise, there is no legend area.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddChart(FarPoint.Win.Spread.Model.CellRange,System.Type,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds the chart control.</summary>
      <param name="cellRange">The range of data used in the chart.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="width">Width of the chart.</param>
      <param name="height">Height of the chart.</param>
      <param name="x">The x-position.</param>
      <param name="y">The y-position.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddColumnFooterSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a span of cells to a column footer for a sheet.</summary>
      <param name="row">Row index of cell to start span</param>
      <param name="column">Column index of cell to start span</param>
      <param name="rowCount">Number of rows to span</param>
      <param name="columnCount">Number of columns to span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddColumnHeaderSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a span of cells to a column header for a sheet.</summary>
      <param name="row">Row index of cell to start span</param>
      <param name="column">Column index of cell to start span</param>
      <param name="rowCount">Number of rows to span</param>
      <param name="columnCount">Number of columns to span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddColumns(System.Int32,System.Int32)">
      <summary>Adds the column or columns to the data model at the specified index.</summary>
      <param name="column">Position at which to add the new column(s)</param>
      <param name="count">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddControl(System.Windows.Forms.Control)">
      <summary>Adds a child control to the control container for the sheet.</summary>
      <param name="control">Child control to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddControl(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Adds a child control to the control container for the sheet at the specified row and column.</summary>
      <param name="control">Child control to add</param>
      <param name="row">Row index at which to add child control</param>
      <param name="column">Column index at which to add child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddControl(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a child control to the control container for the sheet at the specified row and column, with specified pixel offsets.</summary>
      <param name="control">Child control to add</param>
      <param name="row">Row index at which to add child control</param>
      <param name="column">Column index at which to add child control</param>
      <param name="offsetX">Number of horizontal pixels to offset from the specified column index</param>
      <param name="offsetY">Number of vertical pixels to offset from the specified row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
      <summary>Adds a user-defined custom function (FunctionInfo object) to the model for use in formulas.</summary>
      <param name="functionInfo">FunctionInfo object of the custom function to add</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddCustomName(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>Adds a custom name to the model using the specified string value.</summary>
      <param name="name">Custom name to add</param>
      <param name="value">String value for the custom name</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
      <param name="comment">Comment for the custom name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddCustomName(System.String,FarPoint.CalcEngine.Expression,System.Boolean,System.String)">
      <summary>Adds a custom name to the model using the specified expression value.</summary>
      <param name="name">Custom name to add</param>
      <param name="value">Expression value for the custom name</param>
      <param name="comment">Comment for the custom name</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
      <summary>Adds a custom name to the model using the specified string value.</summary>
      <param name="name">Custom name to add</param>
      <param name="value">String value for the custom name</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
      <summary>Adds a custom name to the model using the specified expression value.</summary>
      <param name="name">Custom name to add</param>
      <param name="value">Expression value for the custom name</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddRangeGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Groups all the rows or columns from the specified start index by the specified amount to an outline (range group).</summary>
      <param name="startIndex">Start index</param>
      <param name="count">Number of rows or columns to group into an outline (range group)</param>
      <param name="isRowGroup">Whether the outline is a group of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddRowHeaderSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a span of cells to a row header for a sheet.</summary>
      <param name="row">Row index of cell to start span</param>
      <param name="column">Column index of cell to start span</param>
      <param name="rowCount">Number of rows to span</param>
      <param name="columnCount">Number of columns to span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>Adds the unbound row to the data source for a sheet.</summary>
      <param name="row">Row index at which to add row</param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddRows(System.Int32,System.Int32)">
      <summary>Adds a row or rows to the data model for a sheet.</summary>
      <param name="row">Row index where the new rows are to be added</param>
      <param name="count">Number of rows to be added</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a selection on this sheet.</summary>
      <param name="row">Starting row index of selection</param>
      <param name="column">Starting column index of selection</param>
      <param name="rowCount">Number of rows in selection</param>
      <param name="columnCount">Number of columns in selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape)">
      <summary>Adds a shape to the drawing container for the sheet.</summary>
      <param name="shape">Shape to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape,System.Int32,System.Int32)">
      <summary>Adds a shape to the drawing container for the sheet at the specified row and column.</summary>
      <param name="shape">Shape to add</param>
      <param name="row">Row index at which to add shape</param>
      <param name="column">Column index at which to add shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Adds a shape to the drawing container for the sheet at the specified row and column with the offset from the top-left of the cell.</summary>
      <param name="shape">Shape to add</param>
      <param name="row">Row index at which to add the shape. The row parameter must be greater than or equal to 0 and less than the sheetview's row count.</param>
      <param name="column">Column index at which to add the shape. The column parameter must be greater than or equal to 0 and less than the sheetview's column count.</param>
      <param name="rowPixelOffset">The distance between the top boundary of the shape and the top of the specified row. The rowPixelOffset parameter must be greater than or equal to 0.</param>
      <param name="columnPixelOffset">The distance between the left boundary of the shape and the left edge of the specified column. The columnPixelOffset parameter must be greater than or equal to 0.</param>
      <param name="attachedToCell">Indicates whether the top-left edge of the shape stays within the cell specified by the parameters. If attachedToCell is false, when the specified rowPixelOffset or columnPixelOffset is greater than or equal to the specified row or column's height or width, the top-left vertex of the shape's boundary moves to the next visible row or column so that the distance between the top-left vertex and the top-left of the specified row or column is equal to rowPixelOffset or columnPixelOffset.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Adds a shape to the drawing container for the sheet at the specified row and column with the top-left offset with the top-left and bottom-right cell.</summary>
      <param name="shape">Shape to add</param>
      <param name="fromRow">Row index at which to add the shape. The fromRow parameter must be greater than or equal to 0 and less than the sheetview's row count.</param>
      <param name="fromColumn">Column index at which to add the shape. The fromColumn parameter must be greater than or equal to 0 and less than the sheetview's column count.</param>
      <param name="fromRowPixelOffset">The distance between the top boundary of the shape and the top of the specified row. The fromRowPixelOffset parameter must be greater than or equal to 0.</param>
      <param name="fromColumnPixelOffset">The distance between the left boundary of the shape and the left of the specified column. The fromColumnPixelOffset parameter must be greater than or equal to 0.</param>
      <param name="toRow">Row index that specifies the bottom boundary of the shape. The toRow parameter must be greater than or equal to fromRow and less than the sheetview's row count.</param>
      <param name="toColumn">Column index that specifies the right boundary of the shape. The toColumn parameter must be greater than or equal to fromColumn and less than the sheetview's column count.</param>
      <param name="toRowPixelOffset">The distance between the bottom boundary of the shape and the top of toRow. The toRowPixelOffset parameter must be greater than or equal to 0. If toRow is equal to fromRow, toRowPixelOffset must be greater than fromRowPixelOffset.</param>
      <param name="toColumnPixelOffset">The distance between the right boundary of the shape and the left of toColumn. The toColumnPixelOffset parameter must be greater than or equal to 0. If toColumn is equal to fromColumn, toColumnPixelOffset must be greater than fromColumnPixelOffset.</param>
      <param name="attachedToCell">Indicates whether the top-left edge of the shape must stay within the cell specified by the fromRow and fromColumn parameters and whether the bottom-right edge of the shape must stay within the cell specified by the toRow and toColumn parameters. If attachedToCell is false, when fromRowPixelOffset, fromColumnPixelOffset, toRowPixelOffset, or toColumnPixelOffset is greater than or equal to the toRow, toColumn, fromRow, or fromColumn's height or width, the top-left or bottom-right vertex of the shape boundary moves to the next row or column. This ensures that the distance between the top-left or bottom-right vertex and the top, left, bottom, or right of the specified row or column is equal to fromRowPixelOffset, fromColumnPixelOffset, toRowPixelOffset, or toColumnPixelOffset.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddSpanCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a span of cells on this sheet.</summary>
      <param name="row">Row index of cell at which to start span</param>
      <param name="column">Column index of cell at which to start span</param>
      <param name="rowCount">Number of rows to span</param>
      <param name="columnCount">Number of columns to span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddSparkline(FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.SparklineType,FarPoint.Win.Spread.ExcelSparklineSetting)">
      <summary>Adds the sparkline.</summary>
      <param name="data">Data</param>
      <param name="location">Location for the sparkline</param>
      <param name="type">Type of sparkline</param>
      <param name="setting">Setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddSparkline(FarPoint.Win.Spread.Chart.SheetCellRange[],FarPoint.Win.Spread.Model.CellRange[],FarPoint.Win.Spread.SparklineType,FarPoint.Win.Spread.ExcelSparklineSetting)">
      <summary>Adds the sparkline.</summary>
      <param name="data">Data</param>
      <param name="location">Location of sparkline</param>
      <param name="type">Type of sparkline</param>
      <param name="setting">Setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddSparkline(System.String,System.String,FarPoint.Win.Spread.SparklineType,FarPoint.Win.Spread.ExcelSparklineSetting)">
      <summary>Adds the sparkline.</summary>
      <param name="dataRef">Data reference</param>
      <param name="locationRef">Location reference</param>
      <param name="type">Type of sparkline</param>
      <param name="setting">Setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddSquareSparkline(FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.SparklineType,FarPoint.Win.Spread.ExcelSparklineSetting,System.Boolean)">
      <summary>Adds the sparkline.</summary>
      <param name="data">Data</param>
      <param name="location">Location of sparkline</param>
      <param name="type">Type of sparkline</param>
      <param name="setting">Setting</param>
      <param name="isColumn">If set to <c>true</c> [is column]</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a table with the specified name to the specified cell range of the sheet view with the default table style.</summary>
      <param name="tableName">Name of table.</param>
      <param name="row">Row index of specified cell range.</param>
      <param name="column">Column index of specified cell range.</param>
      <param name="rowCount">Row count of specified cell range.</param>
      <param name="columnCount">Column count of specified cell range.</param>
      <returns>The newly added <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Adds a table to the specified cell range of the sheet view with the specified style.</summary>
      <param name="row">Row index of specified cell range.</param>
      <param name="column">Column index of specified cell range.</param>
      <param name="rowCount">Row count of specified cell range.</param>
      <param name="columnCount">Column count of specified cell range.</param>
      <param name="tableStyleName">Name of table style applied to the table.</param>
      <returns>The newly added <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
      <summary>Adds a table to the specified cell range of the sheet view with the specified style.</summary>
      <param name="row">Row index of specified cell range.</param>
      <param name="column">Column index of specified cell range.</param>
      <param name="rowCount">Row count of specified cell range.</param>
      <param name="columnCount">Column count of specified cell range.</param>
      <param name="tableStyleName">Name of table style applied to the table.</param>
      <param name="visibleHeaderRow">Indicates if the table has a visible header row.</param>
      <param name="visibleTotalRow">Indicates if the table has a visible total row.</param>
      <returns>The newly added <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a table to the specified cell range of the sheet view with the default style.</summary>
      <param name="row">Row index of specified cell range.</param>
      <param name="column">Column index of specified cell range.</param>
      <param name="rowCount">Row count of specified cell range.</param>
      <param name="columnCount">Column count of specified cell range.</param>
      <returns>The newly added <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(FarPoint.Win.Spread.TableView)">
      <summary>Adds a <see cref="T:FarPoint.Win.Spread.TableView" />.</summary>
      <param name="table">The <see cref="T:FarPoint.Win.Spread.TableView" /> object.</param>
      <returns>TRUE if success. Otherwise, FALSE.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Adds a table with the specified name to the specified cell range of the sheet view with the specified style.</summary>
      <param name="tableName">Name of table to add.</param>
      <param name="row">Row index of specified cell range.</param>
      <param name="column">Column index of specified cell range.</param>
      <param name="rowCount">Row count of specified cell range.</param>
      <param name="columnCount">Column count of specified cell range.</param>
      <param name="tableStyleName">Name of table style applied to the new table.</param>
      <param name="visibleHeaderRow">Indicates if the newly added table has a visible header row.</param>
      <param name="visibleTotalRow">Indicates if the newly added table has a visible total row.</param>
      <returns>The newly added <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddTable(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
      <summary>Adds a table with a specified name to the specified cell range of the sheet view with the specified style.</summary>
      <param name="tableName">Name of new table.</param>
      <param name="row">Row index of specified cell range.</param>
      <param name="column">Column index of specified cell range.</param>
      <param name="rowCount">Row count of specified cell range.</param>
      <param name="columnCount">Column count of specified cell range.</param>
      <param name="tableStyleName">Name of table style applied to the table.</param>
      <param name="visibleHeaderRow">Indicates if the table has a visible header row.</param>
      <param name="visibleTotalRow">Indicates if the table has a visible total row.</param>
      <returns>The newly added <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddUnboundRows(System.Int32,System.Int32)">
      <summary>Adds unbound rows to the data model for a sheet.</summary>
      <param name="row">Row index at which to start adding rows</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddValidators(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.BaseDataValidator[])">
      <summary>Adds validators to a cell range.</summary>
      <param name="cellRange" />
      <param name="validators" />
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AddValidators(FarPoint.Win.Spread.Model.CellRange[],FarPoint.Win.Spread.BaseDataValidator[])">
      <summary>Adds validators to multiple cell ranges.</summary>
      <param name="cellRanges" />
      <param name="validators" />
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AsWorksheet">
      <summary>Gets the coressponding <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object that allows accessing to new object model and API set.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object represents the coressponding worksheet.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AutoFilterColumn(System.Int32,System.String,System.Int32)">
      <summary>Automatically filters the rows in the specified column according to the specified filter.</summary>
      <param name="column">Column index</param>
      <param name="filterString">Filter string</param>
      <param name="filterItemIndex">Filter item index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AutoFilterReset(System.Int32)">
      <summary>Resets the filters on the rows in the specified column.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AutoSortColumn(System.Int32)">
      <summary>Automatically sorts the rows of a sheet according to the specified column.</summary>
      <param name="column">Index of column to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AutoSortColumn(System.Int32,System.Boolean)">
      <summary>Automatically sorts the rows of a sheet according to the specified column in the specified order and shows the sort indicator (unless disabled).</summary>
      <param name="column">Index of column to set</param>
      <param name="ascending">Whether sort is ascending (or else descending)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.AutoSortColumn(System.Int32,System.Boolean,System.Boolean)">
      <summary>Automatically sorts the rows of a sheet according to the specified column in the specified order and uses the sort indicator as specified.</summary>
      <param name="column">Column index</param>
      <param name="ascending">Whether sort is ascending (or else descending)</param>
      <param name="showIndicator">Whether to display the sort indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.BindDataColumn(System.Int32,System.String)">
      <summary>Binds the column to the data source column for a sheet.</summary>
      <param name="column">Column index</param>
      <param name="columnName">Name of the data source column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearColumnFooterSpanCells">
      <summary>Removes all spans from the column footers.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearColumnHeaderSpanCells">
      <summary>Removes all spans from the column headers.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearConditionalFormating(System.Int32,System.Int32)">
      <summary>Removes all the conditional formatting from the specified cell.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearConditionalFormating(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all the conditional formatting from the specified cell range.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearConditionalFormatings">
      <summary>Removes all the conditional formatting from the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearConditionalFormats(System.Int32,System.Int32)">
      <summary>Removes all of the conditional formats from the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearControls">
      <summary>Removes all child controls from the control container for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearCustomFunctions">
      <summary>Removes all user-defined custom functions (FunctionInfo object) on this sheet from the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearCustomNames(System.Boolean)">
      <summary>Removes all custom names on this sheet from the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearCustomNames">
      <summary>Removes all custom names on this sheet from the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Removes all of the data, formatting, formulas, and notes from a range of cells on this sheet.</summary>
      <param name="row">Row index of first cell in range</param>
      <param name="column">Column index of first cell in range</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="dataOnly">Whether to remove only data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Removes all of the data, formatting, formulas, and notes from a range of cells on this sheet.</summary>
      <param name="row">Row index of first cell in range</param>
      <param name="column">Column index of first cell in range</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="dataOnly">Whether to remove only data</param>
      <param name="copyOptions">ClipboardCopyOptions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearRangeGroup(System.Boolean)">
      <summary>Removes all the outlines (range grouping) from all rows or columns.</summary>
      <param name="isRowGroup">Whether the outline is a group of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearRowFilter">
      <summary>Removes all of the row filters from this sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearRowFilter(System.Int32,System.Int32)">
      <summary>Removes all of the row filters from a specified column range for this sheet.</summary>
      <param name="column">Column index of starting column</param>
      <param name="columnCount">Number of columns in the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearRowHeaderSpanCells">
      <summary>Removes all spans from the row headers.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearSelection">
      <summary>Removes all selections from this sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearShapes">
      <summary>Removes all shapes from the drawing container for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearSpanCells">
      <summary>Removes all spans from this sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearSparklineGroupsInRange(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Clears all sparkline groups.</summary>
      <param name="cellRange">Removed range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearSparklines(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Clears all sparklines.</summary>
      <param name="cellRange">Clear cell range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClearValidators(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Clears validators.</summary>
      <param name="row" />
      <param name="column" />
      <param name="rowCount" />
      <param name="columnCount" />
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy">
      <summary>Copies the contents from the sheet to the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy(FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Copies the contents from the sheet to the Clipboard using the specified ClipboardCopyOptions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Copies the contents from the specified CellRange in the sheet to the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopy(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Copies the contents from the specified CellRange in the sheet to the Clipboard using the specified ClipboardCopyOptions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCopyShape">
      <summary>Copies the active shape to the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCut">
      <summary>Cuts the contents from the sheet to the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCut(FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Cuts the contents from specified range in the sheet to the Clipboard using the specified copy options.</summary>
      <param name="copyOptions">ClipboardCopyOptions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardCutShape">
      <summary>Cuts the active shape to the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPaste">
      <summary>Pastes the contents from the Clipboard to the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPaste(FarPoint.Win.Spread.ClipboardPasteOptions)">
      <summary>Pastes the contents from the Clipboard to the sheet according to the specified paste option.</summary>
      <param name="pasteOption">Clipboard paste option (a setting of the <see cref="T:FarPoint.Win.Spread.ClipboardPasteOptions" /> enumeration)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPaste(FarPoint.Win.Spread.ClipboardPasteOptions,System.Windows.Forms.IDataObject)">
      <summary>Pastes the contents from the Clipboard to the sheet according to the specified paste option.</summary>
      <param name="pasteOption">Clipboard paste option (a setting of the <see cref="T:FarPoint.Win.Spread.ClipboardPasteOptions" /> enumeration)</param>
      <param name="data">IDataObject</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPaste(FarPoint.Win.Spread.ClipboardPasteOptions,System.Windows.Forms.IDataObject,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Pastes the contents from the Clipboard to the sheet according to the specified paste option.</summary>
      <param name="pasteOption">Clipboard paste option (a setting of the <see cref="T:FarPoint.Win.Spread.ClipboardPasteOptions" /> enumeration)</param>
      <param name="data">IDataObject</param>
      <param name="cellRange">Range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPasteShape">
      <summary>Pastes the shape from the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ClipboardPasteShape(FarPoint.Win.Spread.ShapeClipboardObject)">
      <summary>Pastes the shape from the Clipboard with the specified shape information.</summary>
      <param name="shapeInfo">Shape with placement information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Clone">
      <summary>Creates a copy of the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ContainMultiCellsArrayFormula(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Checks whether a specified range contains multi-cells array formula</summary>
      <param name="row">An integer indicates the index of row</param>
      <param name="column">An integer indicates the index of column</param>
      <param name="rowCount">An integer indicates the row count</param>
      <param name="columnCount">An integer indicates the column count</param>
      <returns>
        <c>true</c> if multi-cells array formula intersects with range, <c>false</c> otherwise</returns>
      <remarks>Internal use only</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ConvertTableToRange(System.String)">
      <summary>Converts the specified table to a range.</summary>
      <param name="tableName">Name of table to convert.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.CopyRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Copies the data, formatting, formulas, and notes from a block of cells on the sheet to a new location.</summary>
      <param name="fromRow">Row index of top-left cell in block to copy</param>
      <param name="fromColumn">Column index of top-left cell in block to copy</param>
      <param name="toRow">Row index of top-left cell in destination</param>
      <param name="toColumn">Column index of top-left cell in destination</param>
      <param name="rowCount">Number of rows in the block</param>
      <param name="columnCount">Number of columns in the block</param>
      <param name="dataOnly">Whether only the data is copied, or the data and formatting</param>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot copy entire sheet of cells </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot copy entire columns over partial columns </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot copy entire rows over partial rows </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot copy a range of cells over part of a spanned cell </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.CopyScTableStyleTo(FarPoint.Win.Spread.SheetView)">
      <summary>Copy SC's tablestyle of this SheetView to target SheetView. Intended to be use when creata a new SheetView from another SheetView in designer only Internal use only.</summary>
      <param name="targetSheetView" />
      <remarks>Internal use only</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
      <param name="disposing">Whether disposing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.EvaluateExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression,GrapeCity.CalcEngine.IValue@)">
      <summary>Evaluates the expression and returns the resulting object for the cell at the specified row and column.</summary>
      <param name="row">Row index of the base cell</param>
      <param name="column">Column index of the base cell</param>
      <param name="expression">Expression to be evaluated</param>
      <param name="evaluatedValue">The original evaluated result from calculation engine.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.EvaluateExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Evaluates the expression and returns the resulting object for the cell at the specified row and column.</summary>
      <param name="row">Row index of the base cell</param>
      <param name="column">Column index of the base cell</param>
      <param name="expression">Expression to be evaluated</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ExpandRangeGroup(FarPoint.Win.Spread.RangeGroupInfo,System.Boolean,System.Boolean)">
      <summary>Expands or collapses a specified outline (range group) of rows or columns.</summary>
      <param name="group">Outline (range group) to expand or collapse</param>
      <param name="isRowGroup">Whether the outline is a group of rows</param>
      <param name="expand">Whether the action is to expand the outline</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ExpandRangeGroup(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Expands or collapses an outline (range group) of rows or columns, specified by level and index.</summary>
      <param name="level">Level of the outline (range group) to expand or collapse</param>
      <param name="endIndex">End index of the outline (range group) to expand or collapse</param>
      <param name="isRowGroup">Whether the outline is a group of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ExpandRow(System.Int32,System.Boolean)">
      <summary>Expands or collapses the specified parent row, which shows or hides the child view in a hierarchical display.</summary>
      <param name="row">Index of parent row to expand or collapse</param>
      <param name="expand">Whether to expand and show the child sheet (or collapse and hide it)</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified parent row index is out of range; must be between 0 and the total number of rows </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.FillRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection)">
      <summary>Fills a range of cells on this sheet by copying a specified range in the specified direction.</summary>
      <param name="row">Row index of the starting cell in the range to copy</param>
      <param name="column">Column index of the starting cell in the range to copy</param>
      <param name="rowCount">Number of rows in the range to copy</param>
      <param name="columnCount">Number of columns in the range to copy</param>
      <param name="fillCount">Number of rows or columns into which to copy the specified range</param>
      <param name="fillDirection">Direction of fill (to copy the specified range)</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is not valid; must be -1 or between 0 and the total number of rows minus the current row index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is not valid; must be -1 or between 0 and the total number of columns minus the current column index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of rows or columns (fill count) is not valid; must be -1 or between 0 and the total number of rows or columns </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified direction of the fill is not valid; must be one of the allowed enumeration settings </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.FillRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean)">
      <summary>Fills a range of cells on this sheet by copying a specified range in the specified direction.</summary>
      <param name="row">Row index of the starting cell in the range to copy</param>
      <param name="column">Column index of the starting cell in the range to copy</param>
      <param name="rowCount">Number of rows in the range to copy</param>
      <param name="columnCount">Number of columns in the range to copy</param>
      <param name="fillCount">Number of rows or columns into which to copy the specified range</param>
      <param name="fillDirection">Direction of fill (to copy the specified range)</param>
      <param name="dataOnly">Whether to fill data only (or also styles and spans)</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is not valid; must be -1 or between 0 and the total number of rows minus the current row index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is not valid; must be -1 or between 0 and the total number of columns minus the current column index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of rows or columns (fill count) is not valid; must be -1 or between 0 and the total number of rows or columns </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified direction of the fill is not valid; must be one of the allowed enumeration settings </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.FillRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean,System.Boolean)">
      <summary>Fills a range of cells on this sheet by copying a specified range in the specified direction.</summary>
      <param name="row">Row index of the starting cell in the range to copy</param>
      <param name="column">Column index of the starting cell in the range to copy</param>
      <param name="rowCount">Number of rows in the range to copy</param>
      <param name="columnCount">Number of columns in the range to copy</param>
      <param name="fillCount">Number of rows or columns into which to copy the specified range</param>
      <param name="fillDirection">Direction of fill (to copy the specified range)</param>
      <param name="dataOnly">Whether to fill data only (or also styles and spans)</param>
      <param name="valuesOnly">Whether to fill in values only (or also formulas, notes, and tags)</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is not valid; must be -1 or between 0 and the total number of rows minus the current row index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is not valid; must be -1 or between 0 and the total number of columns minus the current column index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of rows or columns (fill count) is not valid; must be -1 or between 0 and the total number of rows or columns </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified direction of the fill is not valid; must be one of the allowed enumeration settings </exception>
      <exception cref="T:System.InvalidOperationException"> Specified target range contains one or more cell spans so the operation cannot be completed. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.FillRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Spread.CustomFillSeriesList)">
      <summary>Fills a range of cells on this sheet by copying a specified range in the specified direction.</summary>
      <param name="row">Row index of the starting cell in the range to copy</param>
      <param name="column">Column index of the starting cell in the range to copy</param>
      <param name="rowCount">Number of rows in the range to copy</param>
      <param name="columnCount">Number of columns in the range to copy</param>
      <param name="fillCount">Number of rows or columns into which to copy the specified range</param>
      <param name="fillDirection">Direction of fill (to copy the specified range)</param>
      <param name="dataOnly">Whether to fill data only (or also styles and spans)</param>
      <param name="valuesOnly">Whether to fill in values only (or also formulas, notes, and tags)</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row count is not valid; must be -1 or between 0 and the total number of rows minus the current row index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column count is not valid; must be -1 or between 0 and the total number of columns minus the current column index </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of rows or columns (fill count) is not valid; must be -1 or between 0 and the total number of rows or columns </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified direction of the fill is not valid; must be one of the allowed enumeration settings </exception>
      <exception cref="T:System.InvalidOperationException"> Specified target range contains one or more cell spans so the operation cannot be completed. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Finalize">
      <summary>The destructor method</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.FindChildView(System.Int32,System.Int32)">
      <summary>Gets the child view for this sheet with the specified name.</summary>
      <param name="row">Row index of the related sheet</param>
      <param name="relationIndex">Relation index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetAllFormulaArray(System.Int32@)">
      <summary>Gets all formula array. Internal use only.</summary>
      <param name="length">The length.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a two-dimensional array of objects that contain the data for the specified range of cells on the sheet.</summary>
      <param name="row">Row index of first cell in range</param>
      <param name="column">Column index of first cell in range</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCellErrorText(System.Int32,System.Int32)">
      <summary>Gets the error text of a specified cell.</summary>
      <param name="rowIndex">Row index of cell</param>
      <param name="columnIndex">Column index of cell</param>
      <returns>Error text of cell (string.Empty if there is no error text)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCellFromTag(FarPoint.Win.Spread.Cell,System.Object)">
      <summary>Gets a cell with a specific tag on the sheet.</summary>
      <param name="cellToStart">Cell object in Cells collection from which to start (pass null to start from beginning)</param>
      <param name="tagToFind">Tag object to identify the cell you are looking for</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCellNoteInternal(System.Int32,System.Int32)">
      <summary>Internal use only. Gets the cell note object of a specified cell on this sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCellType(System.Int32,System.Int32)">
      <summary>Gets the CellType.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetChart(System.Int32)">
      <summary>Get chart at index.</summary>
      <param name="index" />
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetChildRelation(System.Int32)">
      <summary>Gets the name of the child data relation at the specified index on the sheet.</summary>
      <param name="index">Index of relation (child view)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetChildSheets">
      <summary>Gets a list of child sheet views that have been created.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetChildView(System.Int32,System.Int32)">
      <summary>Creates the sheet (SheetView object) for the specified row and the specified relation index.</summary>
      <param name="row">Row whose child sheet is to be created</param>
      <param name="relationIndex">Index to the data relation collection</param>
      <exception cref="T:System.Exception"> Specified sheet does not support a child sheet </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified relation index is out of range; must be between 0 and the number of relations </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetChildVisible(FarPoint.Win.Spread.SheetView)">
      <summary>Gets whether to show the child view on this sheet when the parent row is expanded.</summary>
      <param name="child">Child view to show</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the formatted data in a specified range of cells on this sheet.</summary>
      <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
      <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
      <param name="rowCount">Number of rows in the range (or -1 for all rows)</param>
      <param name="columnCount">Number of columns in the range (or -1 for all columns)</param>
      <returns>Tab-delimited string that contains the formatted data in the range</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetClipDataObject(System.Boolean,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Gets a data object with the necessary formats for Clipboard usage: CellInfoRange, ColumnInfoRange, and RowInfoRange.</summary>
      <param name="fromCutting">Whether from cutting</param>
      <param name="cellRange">Cell range</param>
      <param name="copyOptions">ClipboardCopyOptions</param>
      <returns>DataObject</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetClipValue(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a tab-delimited string that contains the unformatted data in a range of cells on this sheet.</summary>
      <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
      <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
      <param name="rowCount">Number of rows in the range (or -1 for all rows)</param>
      <param name="columnCount">Number of columns in the range (or -1 for all columns)</param>
      <returns>Tab-delimited string that contains the unformatted data in the range of cells</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAllowAutoSort(System.Int32)">
      <summary>Gets whether the specified column on this sheet allows automatic sorting.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAllowFilter(System.Int32)">
      <summary>Gets whether this column contains a column filter definition.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAutoFilterIndex(System.Int32)">
      <summary>Gets the automatic filter index for the specified column.</summary>
      <param name="column">Column index</param>
      <returns>Automatic filter index</returns>
      <remarks>The automatic filter index is the row index in the column header where the auto filter indicator is drawn.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAutoSortIndex(System.Int32)">
      <summary>Gets the automatic sort index for the specified column.</summary>
      <param name="column">Column index</param>
      <returns>Auto sort index</returns>
      <remarks>The auto sort index is the row index in the column header where the auto sort indicator is drawn.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnAutoText(System.Int32)">
      <summary>Gets the automatic text displayed in the column header for the specified column on this sheet.</summary>
      <param name="column">Column index of column header</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be at least zero </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnFooterText(System.Int32,System.Int32)">
      <summary>Gets the text in the specified column footer cell on this sheet.</summary>
      <param name="row">Column header row footer index</param>
      <param name="column">Column footer index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnFromTag(FarPoint.Win.Spread.Column,System.Object)">
      <summary>Gets a column on this sheet with a specific tag.</summary>
      <param name="columnToStart">Column object in Columns collection from which to start (pass null to start from beginning)</param>
      <param name="tagToFind">Tag object to identify the Column you are looking for</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnHeaderSpanCell(System.Int32,System.Int32)">
      <summary>Gets the range of cells that are spanned at a specified cell on the column header of this sheet.</summary>
      <param name="row">Row index of the specified cell</param>
      <param name="column">Column index of the specified cell</param>
      <returns>CellRange object that contains the span information, or null if no span exists</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnLabel(System.Int32,System.Int32)">
      <summary>Gets the text in the specified column header cell on this sheet.</summary>
      <param name="row">Column header row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnMerge(System.Int32)">
      <summary>Gets whether or how cells in a column on this sheet that have the same content are joined into a single cell across multiple rows.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnPageBreak(System.Int32)">
      <summary>Gets whether a forced page break is inserted before the specified column on this sheet when printing.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnShowSortIndicator(System.Int32)">
      <summary>Gets whether the specified column on this sheet should display a sort indicator when automatically sorted.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnSizeable(System.Int32)">
      <summary>Gets whether the user can resize a specified column on this sheet.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnSortIndicator(System.Int32)">
      <summary>Gets the sort indicator for the specified column on this sheet.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnVisible(System.Int32)">
      <summary>Gets whether a column on this sheet is displayed.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnVisibleCount">
      <summary>Gets the number of the visible columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetColumnWidth(System.Int32)">
      <summary>Gets the width in pixels for the specified column on this sheet.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCompositedStyleProperties(System.Int32,System.Int32,FarPoint.Win.Spread.CellType.ICellType@,FarPoint.Win.Spread.CellType.IFormatter@,FarPoint.Win.Spread.CellType.IRenderer@,FarPoint.Win.IBorder@,FarPoint.Win.Spread.CellPadding@,GrapeCity.Spreadsheet.Workbook@)">
      <summary>Gets composited style and return its properties. Support feature exporting to html</summary>
      <param name="viewRowIndex" />
      <param name="viewColumnIndex" />
      <param name="cellType" />
      <param name="formatter" />
      <param name="renderer" />
      <param name="border" />
      <param name="cellPadding" />
      <param name="workbook" />
      <remarks>Internal use only</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetConditionalFormats(System.Int32,System.Int32)">
      <summary>Gets the conditional formats for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
      <summary>Gets the conditional formats for the cells starting at the specified row and column.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="findNext">Whether to continue to find cells with conditional formats</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetConditionalFormatting(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets all conditional formatting in the specified cell range.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetConditionalFormatting(System.Int32,System.Int32)">
      <summary>Gets all conditional formatting in the specified cell.</summary>
      <param name="row">The row index</param>
      <param name="column">The column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetControl(System.String)">
      <summary>Gets a child control.</summary>
      <param name="name">Name of child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetControlContainer">
      <summary>Gets the control container for a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomFunction(System.String)">
      <summary>Gets a user-defined custom function (FunctionInfo object) from the model for this sheet.</summary>
      <param name="name">Name of custom function to get</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomFunctionEnumerator">
      <summary>Gets an IEnumerator for this sheet that enumerates through the names of the user-defined custom functions (FunctionInfo objects) in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomName(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Gets the string value for a custom name on this sheet from the model.</summary>
      <param name="name">Custom name to get</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomName(System.String,System.Boolean)">
      <summary>Gets the expression value for a custom name on this sheet from the model.</summary>
      <param name="name">Custom name to get</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomName(System.String,System.Int32,System.Int32)">
      <summary>Gets the string value for a custom name on this sheet from the model.</summary>
      <param name="name">Custom name to get</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomName(System.String)">
      <summary>Gets the expression value for a custom name on this sheet from the model.</summary>
      <param name="name">Custom name to get</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomNameComment(System.String,System.Boolean)">
      <summary>Gets the comment of the custom name.</summary>
      <param name="name" />
      <param name="SheetviewSCope">If [true] get from sheet scope, otherwise [false] get from spread scope</param>
      <returns>The comment of the custom name</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomNameEnumerator(System.Boolean)">
      <summary>Gets an IEnumerator on this sheet that enumerates through the custom names defined in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetCustomNameEnumerator">
      <summary>Gets an IEnumerator on this sheet that enumerates through the custom names defined in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetDataView(System.Boolean)">
      <summary>Gets the DataView object on this sheet.</summary>
      <param name="create">Whether to re-create the DataView</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetDropDownFilterItems(System.Int32)">
      <summary>Gets the filter items to be displayed in the drop-down list for the specified column.</summary>
      <param name="viewColumn">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetEditor(System.Int32,System.Int32)">
      <summary>Gets the editor used to edit a specified cell on this sheet.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetExpression(System.Int32,System.Int32)">
      <summary>Gets the formula, as an expression value, for the cell of the specified row and column of this sheet.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetFilterBarCellType(System.Int32)">
      <summary>Gets the composited (inherited) cell type for a specified cell on the filter bar.</summary>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetFormula(System.Int32,System.Int32)">
      <summary>Gets the formula of the specified cell on this sheet.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetFormulaArray(System.Int32,System.Int32,GrapeCity.CalcEngine.RangeReference@)">
      <summary>Gets the formula array at the specified row and column index. Internal use only.</summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <param name="rangeApply" />
      <returns>empty string if the cell does not contain an array formula</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetLastNonEmptyColumn(FarPoint.Win.Spread.NonEmptyItemFlag)">
      <summary>Gets the index of the last column that contains data or formatting on this sheet.</summary>
      <param name="dataFlag">Whether to look for data or formatting (NonEmptyItemFlag setting)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetLastNonEmptyRow(FarPoint.Win.Spread.NonEmptyItemFlag)">
      <summary>Gets the row index of the last row that contains data or formatting on this sheet.</summary>
      <param name="dataFlag">Whether to look for data or formatting (NonEmptyItemFlag setting)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetModelColumnFromViewColumn(System.Int32)">
      <summary>Gets the column index in the data model that corresponds to the specified column index in the sheet.</summary>
      <param name="column">Column index in the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetModelRowFromViewRow(System.Int32)">
      <summary>Gets the row index in the data model that corresponds to the specified row index in the sheet.</summary>
      <param name="row">Row index in the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetNote(System.Int32,System.Int32)">
      <summary>Gets the note of a specified cell on this sheet.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetNoteBounds(System.Int32,System.Int32)">
      <summary>Gets the rectangle for the cell note for the specified cell if its NoteStyle is StickyNote.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetNoteStyle(System.Int32,System.Int32)">
      <summary>Gets the composited style of notes of a specified cell on this sheet.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the object to the SerializationInfo object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredCellSize(System.Int32,System.Int32)">
      <summary>Gets the desired size of the given cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="col">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32,System.Boolean)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="ignoreHeaders">Whether to ignore column header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32,System.Boolean,System.Boolean)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="ignoreHeaders">Whether to ignore column header cells</param>
      <param name="ignoreSpans">Whether to ignore spans</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="ignoreHeaders">Whether to ignore column header cells</param>
      <param name="ignoreSpans">Whether to ignore spans</param>
      <param name="excludeWordWrap">Whether to exclude cells with wrapped contents</param>
      <remarks>A cell has wrapped contents (text that wraps to multiple lines) when the renderer in the composite style for the cell implements IWordWrapSupport interface and its WordWrap property returns true.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="ignoreHeaders">Whether to ignore column header cells</param>
      <param name="ignoreSpans">Whether to ignore spans</param>
      <param name="excludeWordWrap">Whether to exclude cells with wrapped contents</param>
      <param name="ignoreTable">Whether to ignore measure cells in table can have special object likes table header filter button</param>
      <remarks>A cell has wrapped contents (text that wraps to multiple lines) when the renderer in the composite style for the cell implements IWordWrapSupport interface and its WordWrap property returns true.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredColumnWidth(System.Int32,FarPoint.Win.Spread.PreferredSizeColumnOptions)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="flags">Options when getting the preferred width</param>
      <remarks>A cell has wrapped contents (text that wraps to multiple lines) when the renderer in the composite style for the cell implements IWordWrapSupport interface and its WordWrap property returns true.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredPrintColumnWidth(System.Drawing.Graphics,System.Int32)">
      <summary>Gets the width of the widest cell (based on text content) in the specified column on this sheet for printing to the specified graphics device.</summary>
      <param name="g">Graphics device interface</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredPrintRowHeight(System.Drawing.Graphics,System.Int32)">
      <summary>Gets the height in pixels of the tallest cell (based on text content) in the specified row on this sheet.</summary>
      <param name="g">Graphics device</param>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredRowHeight(System.Int32)">
      <summary>Gets the height in pixels of the tallest cell (based on text content) in the specified row on this sheet.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredRowHeight(System.Int32,System.Boolean)">
      <summary>Gets the height in pixels of the tallest cell (based on text content) in the specified row on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="ignoreHeaders">Whether to ignore the row header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredRowHeight(System.Int32,System.Boolean,System.Boolean)">
      <summary>Gets the height in pixels of the tallest cell (based on text content) in the specified row on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="ignoreHeaders">Whether to ignore the row header cells</param>
      <param name="ignoreSpans">Whether to ignore spans</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetPreferredRowHeight(System.Int32,FarPoint.Win.Spread.PreferredSizeRowOptions)">
      <summary>Gets the height in pixels of the tallest cell (based on text content) in the specified row on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="flags">Options when getting the preferred height</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRangeGroupInfo(System.Int32,System.Boolean)">
      <summary>Gets range groups of rows or columns by level.</summary>
      <param name="level">Level for the associated range group</param>
      <param name="isRowGroup">Whether the outline is a group of rows</param>
      <returns>The collection of range groups with the specified level.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRangeGroupLevels(System.Boolean)">
      <summary>Gets the number of levels of rows or columns in the outline (range group).</summary>
      <param name="isRowGroup">Whether the outline is a group of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRenderer(System.Int32,System.Int32)">
      <summary>Gets the renderer used to render a specified cell on this sheet.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRootSheet">
      <summary>Gets the top <see cref="T:FarPoint.Win.Spread.SheetView" /> object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowAutoText(System.Int32)">
      <summary>Gets the automatic text displayed in the row header for the specified row on this sheet.</summary>
      <param name="row">Row index of the row header</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowErrorText(System.Int32)">
      <summary>Gets the row error text.</summary>
      <param name="rowIndex">Row index</param>
      <returns>Error text of row (string.Empty if there is no error text)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowExpandable(System.Int32)">
      <summary>Gets whether the row on this sheet can be expanded to show a child view in a hierarchical display.</summary>
      <param name="row">Row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowFromTag(FarPoint.Win.Spread.Row,System.Object)">
      <summary>Gets a row on this sheet with a specific tag.</summary>
      <param name="rowToStart">Row object in Rows collection from which to start (use null to start from beginning)</param>
      <param name="tagToFind">Tag object to identify the Row you are looking for</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowHeaderSpanCell(System.Int32,System.Int32)">
      <summary>Gets the range of cells that are spanned at a specified cell on the row header of this sheet.</summary>
      <param name="row">Row index of the specified cell</param>
      <param name="column">Column index of the specified cell</param>
      <returns>CellRange object that contains the span information, or null if no span exists</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowHeight(System.Int32)">
      <summary>Gets the height in pixels for the specified row on this sheet.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowLabel(System.Int32,System.Int32)">
      <summary>Gets the text in the specified row header cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Row header column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowMerge(System.Int32)">
      <summary>Gets whether or how cells in a row on this sheet that have the same content are joined into a single cell across multiple columns.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowPageBreak(System.Int32)">
      <summary>Gets whether a forced page break is inserted before the specified row on this sheet when printing.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowSizeable(System.Int32)">
      <summary>Gets whether users can resize the specified row on this sheet.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowVisible(System.Int32)">
      <summary>Gets whether a row on this sheet is displayed.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetRowVisibleCount">
      <summary>Gets the number of the visible rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetSelection(System.Int32)">
      <summary>Gets the selection on this sheet with the specified index.</summary>
      <param name="index">Index into the list of selections</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetSelections">
      <summary>Gets an ordered array of <see cref="T:FarPoint.Win.Spread.Model.CellRange" /> objects, from largest to smallest, that contain the selected cells on the sheet with minimal overlap between the ranges.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetShape(System.String)">
      <summary>Gets a shape.</summary>
      <param name="name">Name of shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetSpanCell(System.Int32,System.Int32)">
      <summary>Gets the range of cells that are spanned at a specified cell on this sheet.</summary>
      <param name="row">Row index of the specified cell</param>
      <param name="column">Column index of the specified cell</param>
      <returns>CellRange object that contains the span information, or null if no span exists</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetSparkline(System.Int32,System.Int32)">
      <summary>Gets the sparkline information.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetStickyNoteStyleInfo(System.Int32,System.Int32)">
      <summary>Gets the style information for the cell notes on this sheet that stay visible.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetStyleInfo(System.Int32,System.Int32)">
      <summary>Gets the style information for a specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetStyleInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the style information for a specified cell on this sheet using the specified StyleInfo object.</summary>
      <param name="row">Row index of specified cell</param>
      <param name="column">Column index of specified cell</param>
      <param name="info">
        <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object in which to return the style information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetTable(System.Int32,System.Int32)">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.TableView" /> from a specific position.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetTable(System.String)">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.TableView" /> by name.</summary>
      <param name="tableName">Table name</param>
      <returns>An <see cref="T:FarPoint.Win.Spread.TableView" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetTableEnumerator(System.Boolean)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> enumerator.</summary>
      <param name="crossSheet">Gets the enumerator from the cross-sheet if it is true; otherwise, only from current SheetView object</param>
      <returns>An <see cref="T:System.Collections.IEnumerator" /></returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetTag(System.Int32,System.Int32)">
      <summary>Gets the application-defined tag value for the specified cell, column, row, or entire sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetText(System.Int32,System.Int32)">
      <summary>Gets the formatted text in the cell on this sheet using the <see cref="T:FarPoint.Win.Spread.CellType.IFormatter" /> object for the cell.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetUnboundValue(System.Int32,System.Int32)">
      <summary>Gets the unbound value for the cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetValidConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.IPrePaintConditionalFormattingRule[]@,FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule[]@)">
      <summary>Gets the valid conditional format.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="prePaintCFRules">Prepaint conditional format rules</param>
      <param name="prePaintTextCFRules">Prepaint text conditional format rules</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetValue(System.Int32,System.Int32)">
      <summary>Gets unformatted data from the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetViewColumnFromModelColumn(System.Int32)">
      <summary>Gets the column on the sheet that corresponds to the specified column index in the model.</summary>
      <param name="modelcolumn">Column index in model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GetViewRowFromModelRow(System.Int32)">
      <summary>Gets the row on the sheet that corresponds to the specified row index in the model.</summary>
      <param name="modelrow">Row index in model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GroupSparkline(FarPoint.Win.Spread.Model.CellRange[],FarPoint.Win.Spread.SparklineType)">
      <summary>Groups the sparkline and sets the type of new group.</summary>
      <param name="location">Location</param>
      <param name="type">Type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.GroupSparkline(FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Groups the sparkline to the active sparkline.</summary>
      <param name="location">Location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.InitPropArray">
      <summary>Property names.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.InvalidateRowFilter(System.Boolean,System.Boolean)">
      <summary>Resets all the temporary filter settings and filters the rows again based on the filter settings of each column. (Internal use only.)</summary>
      <param name="clear">Whether to clear</param>
      <param name="forceInvalidate">Whether to force the invalidate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.IsAnyCellInColumnSelected(System.Int32)">
      <summary>Gets whether any cells in the specified column on this sheet are selected.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.IsAnyCellInRowSelected(System.Int32)">
      <summary>Gets whether any cells in the specified row on this sheet are selected.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.IsColumnBound(System.Int32)">
      <summary>Gets whether the specified column on this sheet is bound to a data source.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.IsRowBound(System.Int32)">
      <summary>Gets whether the specified row on this sheet is bound to a data source.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.IsRowExpanded(System.Int32)">
      <summary>Gets whether the row on this sheet displays a child view in a hierarchical display.</summary>
      <param name="row">Row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.IsSelected(System.Int32,System.Int32)">
      <summary>Gets whether the specified cell on this sheet is selected.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.JoinShapes(System.String,System.String)">
      <summary>Joins two shapes in the drawing container for the sheet.</summary>
      <param name="destinationShapeName">Name of destination shape for merge</param>
      <param name="sourceShapeName">Name of source shape for merge</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadFormulas(System.Boolean)">
      <summary>Loads formulas that are deserialized but not parsed yet, to be used after all sheets have been created and deserialized.</summary>
      <param name="recalculate">Whether to recalculate all the formulas in cells on the sheet that have changed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="stream">Stream to which to load the text</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="stream">Stream to which to load the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,System.Boolean)">
      <summary>Loads text from a specified file into the sheet.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,System.Boolean)">
      <summary>Loads text from a specified stream into the sheet.</summary>
      <param name="stream">Stream to which to save</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Loads delimited text from a specified file into the sheet with or without headers.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Loads delimited text from a specified stream into the sheet with or without headers.</summary>
      <param name="stream">Stream to which to save</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers and formulas, with the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="loadFormulas">Whether to load formulas</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads delimited text from a specified stream into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="stream">Stream to which to save</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Loads delimited text from a specified stream into the sheet, with or without headers and formulas, with the specified encoding.</summary>
      <param name="stream">Stream to which to save</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="loadFormulas">Whether to load formulas</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFileRange(System.String,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads delimited text from a specified file into the sheet.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="cellRange">Specifies range process the data when loading from a text file</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFileRange(System.String,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.TextFileFlags,System.String,System.String,System.String)">
      <summary>Loads delimited text from a specified file into the sheet, with or without headers, with the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="cellRange">Specifies range process the data when loading from a text file</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFileRange(System.String,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.TextFileFlags,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads delimited text from a specified file into the sheetwith the specified encoding.</summary>
      <param name="fileName">Path and name of the file to load</param>
      <param name="cellRange">Specifies range process the data when loading from a text file</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFileRange(System.IO.Stream,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads delimited text from a specified file into the sheet.</summary>
      <param name="stream">Stream to which to load the text of the sheet</param>
      <param name="cellRange">Specifies range process the data when loading from a text file</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFileRange(System.IO.Stream,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.TextFileFlags,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads delimited text from a specified file into the sheet, with the specified encoding.</summary>
      <param name="stream">Stream to which to load the text of the sheet</param>
      <param name="cellRange">Specifies range process the data when loading from a text file</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.LoadTextFileRange(System.IO.Stream,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.TextFileFlags,System.String,System.String,System.String)">
      <summary>Loads delimited text from a specified file into the sheet.</summary>
      <param name="stream">Stream to which to load the text of the sheet</param>
      <param name="cellRange">Specifies range process the data when loading from a text file</param>
      <param name="textFileFlags">Specifies how to process the data when loading from a text file</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ModifyCustomName(System.String,System.String,System.Boolean)">
      <summary>Modifies the name of a custom name.</summary>
      <param name="name">Name of custom name to modify</param>
      <param name="newName">New name of custom name</param>
      <returns>True if name is modified; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MoveColumn(System.Int32,System.Int32,System.Boolean)">
      <summary>Moves the specified column from its current index to the specified index, and shifts each column in between and the destination column one column in the direction of the specified column.</summary>
      <param name="fromIndex">Current index of the column to move</param>
      <param name="toIndex">New index of the column after the move</param>
      <param name="moveContent">Whether to move the content</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MoveColumn(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Moves the specified column from its current index to the specified index, and shifts each column in between and the destination column one column in the direction of the specified column.</summary>
      <param name="fromIndex">Current index of the column to move</param>
      <param name="toIndex">New index of the column after the move</param>
      <param name="columnCount">Column count</param>
      <param name="moveContent">Whether to move the content</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MoveRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Moves the data, formatting, formulas, and notes from a block of cells on this sheet to a new location.</summary>
      <param name="fromRow">Row index of top-left cell in block to move</param>
      <param name="fromColumn">Column index of top-left cell in block to move</param>
      <param name="toRow">Row index for destination of upper-left cell in block</param>
      <param name="toColumn">Column index for destination of upper-left cell in block</param>
      <param name="rowCount">Number of rows in the block</param>
      <param name="columnCount">Number of columns in the block</param>
      <param name="dataOnly">Whether data only or data with formatting are swapped</param>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot move entire sheet of cells </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot move entire columns over partial columns </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot move entire rows over partial rows </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot move a range of cells over part of a spanned cell </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MoveRow(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Moves the specified row from its current index to the specified index, and shifts each row in between and the destination row one row in the direction of the specified row.</summary>
      <param name="fromIndex">Current index of the row to move</param>
      <param name="toIndex">New index of the row after the move</param>
      <param name="rowCount">Row count</param>
      <param name="moveContent">Whether to move the content</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MoveRow(System.Int32,System.Int32,System.Boolean)">
      <summary>Moves the specified row from its current index to the specified index, and shifts each row in between and the destination row one row in the direction of the specified row.</summary>
      <param name="fromIndex">Current index of the row to move</param>
      <param name="toIndex">New index of the row after the move</param>
      <param name="moveContent">Whether to move content</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnAddColumnFooterRows(System.Int32,System.Int32)">
      <summary>Occurs when footer rows are added.</summary>
      <param name="row">Determines add position</param>
      <param name="count">Determines number of added rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnAddColumnHeaderRows(System.Int32,System.Int32)">
      <summary>Occurs when column header rows are added.</summary>
      <param name="row">Row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnAddColumns(System.Int32,System.Int32)">
      <summary>Occurs when columns are added.</summary>
      <param name="column">Column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnAddRowHeaderColumns(System.Int32,System.Int32)">
      <summary>Occurs when row header columns are added.</summary>
      <param name="column">Column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnAddRows(System.Int32,System.Int32)">
      <summary>Occurs when rows are added.</summary>
      <param name="row">Row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnCellChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when the cell is changed.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnCopyCells(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when the cells are copied.</summary>
      <param name="fromRow">Start row index</param>
      <param name="fromColumn">Start column index</param>
      <param name="toRow">End row index</param>
      <param name="toColumn">End column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnCopyColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when the columns are copied.</summary>
      <param name="fromColumn">Start column index</param>
      <param name="toColumn">End column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnCopyRows(System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when rows are copied.</summary>
      <param name="fromRow">Start row index</param>
      <param name="toRow">End row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnDataModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
      <summary>Changes the data model for this sheet in synchronization with the data source.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">
        <see cref="T:FarPoint.Win.Spread.Model.SheetDataModelEventArgs" /> object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnDisposing(System.EventArgs)">
      <summary>Raises the Disposing event</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnMoveCells(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when the cells are moved.</summary>
      <param name="fromRow">Start row index</param>
      <param name="fromColumn">Start column index</param>
      <param name="toRow">End row index</param>
      <param name="toColumn">End column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnMoveColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when columns are moved.</summary>
      <param name="fromColumn">Start column index</param>
      <param name="toColumn">End column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnMoveRows(System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when rows are moved.</summary>
      <param name="fromRow">Start row index</param>
      <param name="toRow">End row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnNoteCreated(System.Object,System.EventArgs)">
      <summary>Occurs when a note for the viewport area is created in the sheet's notes container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnNoteMoved(System.Object,System.EventArgs)">
      <summary>Occurs when a note for the viewport area is moved in the sheet's notes container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnNoteSized(System.Object,System.EventArgs)">
      <summary>Occurs when a note for the viewport area is sized in the sheet's notes container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnRemoveColumnFooterRows(System.Int32,System.Int32)">
      <summary>Occurs when column footer rows are removed.</summary>
      <param name="row">Row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnRemoveColumnHeaderRows(System.Int32,System.Int32)">
      <summary>Occurs when column header rows are removed.</summary>
      <param name="row">Row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnRemoveColumns(System.Int32,System.Int32)">
      <summary>Occurs when columns are removed.</summary>
      <param name="column">Column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnRemoveRowHeaderColumns(System.Int32,System.Int32)">
      <summary>Occurs when row header columns are removed.</summary>
      <param name="column">Column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnRemoveRows(System.Int32,System.Int32)">
      <summary>Occurs when rows are removed.</summary>
      <param name="row">Row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSheetColumnAxisModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetAxisModelEventArgs)">
      <summary>Changes the sheet column axis model in synchronization with the data source.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">
        <see cref="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs" /> object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSheetRangeGroupModelChanged(System.Object,FarPoint.Win.Spread.RangeGroupModelEventArgs)">
      <summary>Changes the sheet row axis model in synchronization with the data source.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">
        <see cref="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs" /> object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSheetRowAxisModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetAxisModelEventArgs)">
      <summary>Changes the sheet row axis model in synchronization with the data source.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">
        <see cref="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs" /> object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSpanModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetSpanModelEventArgs)">
      <summary>Changes the span model in sync with the data source for this sheet.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">
        <see cref="T:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs" /> object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnStickyNoteCreated(System.Object,System.EventArgs)">
      <summary>Obsolete. Use OnNoteCreated(object sender, EventArgs e) instead. Occurs when a note is created in the sheet's notes container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnStickyNoteMoved(System.Object,System.EventArgs)">
      <summary>Obsolete. Use OnNoteMoved(object sender, EventArgs e) instead. Occurs when a note is moved in the sheet's notes container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnStickyNoteSized(System.Object,System.EventArgs)">
      <summary>Obsolete. Use OnNoteSized(object sender, EventArgs e) instead. Occurs when a note is sized in the sheet's notes container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnStyleModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
      <summary>Occurs when the style model is changed.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">SheetStyleModelEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSwapCells(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when the cells are swapped.</summary>
      <param name="fromRow">Start row index</param>
      <param name="fromColumn">Start column index</param>
      <param name="toRow">End row index</param>
      <param name="toColumn">End column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSwapColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when columns are swapped.</summary>
      <param name="fromColumn">Start column index</param>
      <param name="toColumn">End column index</param>
      <param name="count">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OnSwapRows(System.Int32,System.Int32,System.Int32)">
      <summary>Occurs when rows are swapped.</summary>
      <param name="fromRow">Start row index</param>
      <param name="toRow">End row index</param>
      <param name="count">Number of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Open(System.String)">
      <summary>Opens a saved XML file into a sheet view.</summary>
      <param name="fileName">Path and name of file from which to load the data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Open(System.IO.Stream)">
      <summary>Opens saved XML from a stream.</summary>
      <param name="stream">Stream from which to load the data</param>
      <exception cref="T:System.ArgumentNullException"> No stream specified or specified stream is null </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.IO.Stream,System.String)">
      <summary>Opens an Excel stream and loads the specified sheet (by name) from that file into this sheet.</summary>
      <param name="stream">stream</param>
      <param name="excelSheetName">Name of the sheet to load from the file</param>
      <returns>TRUE if success. Otherwise, FALSE</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.IO.Stream,System.String,System.String)">
      <summary>Opens an Excel stream and loads the specified sheet (by name) from that file into this sheet.</summary>
      <param name="stream">stream</param>
      <param name="excelSheetName">Name of the sheet to load from the file</param>
      <param name="password">Password</param>
      <returns>TRUE if success. Otherwise, FALSE</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.IO.Stream,System.Int32)">
      <summary>Opens an Excel stream and loads the specified sheet (by number) from that file into this sheet.</summary>
      <param name="stream">stream</param>
      <param name="excelSheetIndex">Index of the sheet to load from the file</param>
      <returns>TRUE if success. Otherwise, FALSE</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.IO.Stream,System.Int32,System.String)">
      <summary>Opens an Excel stream and loads the specified sheet (by number) from that file into this sheet.</summary>
      <param name="stream">stream</param>
      <param name="excelSheetIndex">Index of the sheet to load from the file</param>
      <param name="password">Password</param>
      <returns>TRUE if success. Otherwise, FALSE</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.String,System.String)">
      <summary>Opens an Excel file and loads the specified sheet (by name) from that file into this sheet.</summary>
      <param name="fileName">Path and name of the file to open</param>
      <param name="excelSheetName">Name of the sheet to load from the file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.String,System.String,System.String)">
      <summary>Opens an Excel file and loads the specified sheet (by name) from that file into this sheet.</summary>
      <param name="fileName">Path and name of the file to open</param>
      <param name="excelSheetName">Name of the sheet to load from the file</param>
      <param name="password">Password</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.String,System.Int32)">
      <summary>Opens an Excel file and loads the specified sheet (by number) from that file into this sheet.</summary>
      <param name="fileName">Path and name of the file to open</param>
      <param name="excelSheetIndex">Index of the sheet to load from the file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenExcel(System.String,System.Int32,System.String)">
      <summary>Opens an Excel file and loads the specified sheet (by number) from that file into this sheet.</summary>
      <param name="fileName">Path and name of the file to open</param>
      <param name="excelSheetIndex">Index of the sheet to load from the file</param>
      <param name="password">Password</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.OpenSpreadFile(System.String)">
      <summary>Opens a saved Spread file into this sheet.</summary>
      <param name="fileName">Path and name of the file to open</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RaiseCellChanged(System.Int32,System.Int32)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.SheetView.CellChanged" /> event (that a change has been made to a cell on this sheet).</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RaiseCellChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.SheetView.CellChanged" /> event (that a change has been made to a cell on this sheet).</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in range of cells</param>
      <param name="columnCount">Number of columns in range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RaisePropertyChanged(System.String)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.SheetView.PropertyChanged" /> event for this sheet.</summary>
      <param name="propertyName">Name of property to pass in <see cref="T:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Recalculate">
      <summary>Evaluates all the formulas in cells on the sheet that have changed since the last calculation cycle.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RecalculateAll">
      <summary>Evaluates all the formulas in cells on the sheet (including those that have not changed since the last calculation cycle).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveColumnFooterSpanCell(System.Int32,System.Int32)">
      <summary>Removes the span that contains a specified anchor cell from a range of cells in the column footers.</summary>
      <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
      <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveColumnHeaderSpanCell(System.Int32,System.Int32)">
      <summary>Removes the span that contains a specified anchor cell from a range of cells in the column headers.</summary>
      <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
      <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes the column or columns on this sheet at the specified index.</summary>
      <param name="column">Index of first column to remove</param>
      <param name="count">Number of columns to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveControl(System.Windows.Forms.Control)">
      <summary>Removes the child control from the control container for the sheet.</summary>
      <param name="child">Child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveControl(System.String)">
      <summary>Removes the child control, by name, from the control container for the sheet.</summary>
      <param name="name">Name of child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveCustomFunction(System.String)">
      <summary>Removes a user-defined custom function (FunctionInfo object) on this sheet from the model.</summary>
      <param name="name">Name of custom function to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveCustomName(System.String,System.Boolean)">
      <summary>Removes a custom name on this sheet from the model.</summary>
      <param name="name">Custom name to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveCustomName(System.String)">
      <summary>Removes a custom name on this sheet from the model.</summary>
      <param name="name">Custom name to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveRangeGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Removes rows or columns from an outline (range group) from a specified start index by a specified amount, and returns them to individual rows or columns.</summary>
      <param name="startIndex">Starting index</param>
      <param name="count">Number of the rows or columns to remove from being grouped together in the outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveRowHeaderSpanCell(System.Int32,System.Int32)">
      <summary>Removes the span that contains a specified anchor cell from a range of cells in the row headers.</summary>
      <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
      <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes the row or rows on this sheet at the specified index.</summary>
      <param name="row">Index of first row to be removed</param>
      <param name="count">Number of rows to be removed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes the specified selection from this sheet.</summary>
      <param name="row">Starting row index of selection to remove</param>
      <param name="column">Starting column index of selection to remove</param>
      <param name="rowCount">Number of rows in selection to remove</param>
      <param name="columnCount">Number of columns in selection to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveShape(System.String)">
      <summary>Removes the shape from the drawing container for the sheet.</summary>
      <param name="name">Name of shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveSpanCell(System.Int32,System.Int32)">
      <summary>Removes the span that contains a specified anchor cell from a range of cells on this sheet.</summary>
      <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
      <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.RemoveTable(System.String)">
      <summary>Removes a <see cref="T:FarPoint.Win.Spread.TableView" />.</summary>
      <param name="tableName">Table Name.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Reset">
      <summary>Resets the view on this sheet to its original state.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ResetFilteredColumn(System.Int32)">
      <summary>Internal Use: Resets the display of rows based on the "(All)" filter item in the drop-down list. (Internal use only.)</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ResumeAutoUpdateChartData">
      <summary>Resumes updates of values to the chart immediately.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ResumeFormulaParsing">
      <summary>Resumes parsing of formulas and parses all formulas set while parsing was suspended.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Save(System.String,System.Boolean)">
      <summary>Saves the contents of the sheet view to the specified file.</summary>
      <param name="fileName">Path and name of file to which to save</param>
      <param name="dataOnly">Whether to save data only</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Save(System.String,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves the contents of the sheet view to the specified file.</summary>
      <param name="fileName">Path and name of file to which to save</param>
      <param name="saveOption">Save xml option</param>
      <returns>True if successfull; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Save(System.IO.Stream,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves the contents of the sheet view to the specified stream.</summary>
      <param name="stream">The stream to save sheet view as XML</param>
      <param name="saveOption">Whether to save option</param>
      <returns>TRUE if success. Otherwise, FALSE</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Save(System.IO.Stream,System.Boolean)">
      <summary>Saves the contents of the sheet view to the specified stream.</summary>
      <param name="stream">The stream to save sheet view as XML</param>
      <param name="dataOnly">Whether to save data only</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveHtml(System.String)">
      <summary>Saves the sheet to the specified file in HTML.</summary>
      <param name="filename">Path and file name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveHtml(System.IO.Stream)">
      <summary>Saves the sheet to the specified stream in HTML.</summary>
      <param name="stream">Stream</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveHtmlRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
      <summary>Saves the specified range in the sheet to the specified file in HTML.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="filename">Path and file name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveHtmlRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>Saves the specified range in the sheet to the specified file in HTML.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="columnFooter">True to include column footer</param>
      <param name="filename">Path and file name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveHtmlRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.IO.Stream)">
      <summary>Saves the specified range in the sheet to the specified stream in HTML.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="stream">Stream to which to save the text of the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveHtmlRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IO.Stream)">
      <summary>Saves the specified range in the sheet to the specified stream in HTML.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="columnFooter">True to include column footers</param>
      <param name="stream">Stream to which to save the text of the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the sheet as delimited text to a file with specific delimiters.</summary>
      <param name="fileName">Path and name of file to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the sheet as delimited text to a stream with specific delimiters.</summary>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,System.Boolean)">
      <summary>Saves the sheet to a text file.</summary>
      <param name="fileName">Path and name of file to which to save the text of the sheet</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,System.Boolean)">
      <summary>Saves the sheet as text to a stream.</summary>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="fileName">Path and name of file to which to save the text of the sheet</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Boolean)">
      <summary>Saves the sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="fileName">Path and name of file to which to save the text of the sheet</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="filterRows">Whether to filter the rows with RowFilter</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the sheet as delimited text to a stream with specific delimiters.</summary>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Boolean)">
      <summary>Saves the sheet as delimited text to a stream with specific delimiters.</summary>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="filterRows">Whether to filter the rows with RowFilter</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.String,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Saves the sheet as delimited text to a file with specific delimiters.</summary>
      <param name="fileName">Path and name of file to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFile(System.IO.Stream,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Saves the sheet as delimited text to a stream with specific delimiters.</summary>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="fileName">Path and name of file to which to save the text of the range</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="fileName">Path and name of file to which to save the text of the range</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,FarPoint.Win.Spread.TextFileFlags,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="stream">Stream to which to save the text of the sheet</param>
      <param name="textFileFlags">Specifies how to process the data when saving to a text file</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="fileName">Path and name of file to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Saves the range of cells in the sheet as delimited text to a stream with specified delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="stream">Stream to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="fileName">Path and name of file to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="fileName">Path and name of file to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="saveFormulas">Whether to save formulas</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="fileName">Path and name of file to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="saveFormulas">Whether to save formulas</param>
      <param name="filterRows">Whether to filter the rows with RowFilter</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Saves the range of cells in a sheet to a text file with the specified name, formatting settings, and delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="stream">Stream to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="saveFormulas">Whether to save formulas</param>
      <param name="filterRows">Whether to filter the rows with RowFilter</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Saves the range of cells in the sheet as delimited text to a stream with specified delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="stream">Stream to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveTextFileRange(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Saves the range of cells in the sheet as delimited text to a stream with specified delimiters.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="stream">Stream to which to save the text of the range</param>
      <param name="unformatted">Whether to bypass the IFormatter in the StyleInfo for the cell so data is unformatted</param>
      <param name="includeHeaders">Whether to export headers as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="saveFormulas">Whether to save formulas</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentException"> Cell delimiter cannot be contained in a row or column delimiter </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveXml(System.IO.Stream,System.IO.Stream)">
      <summary>Saves the data on the sheet to the specified XML stream and the schema to the specified schema stream.</summary>
      <param name="xmlStream">XML stream</param>
      <param name="schemaStream">Schema stream</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveXml(System.String,System.String)">
      <summary>Saves the data on the sheet to the specified XML file and the schema to the specified schema file.</summary>
      <param name="xmlFileName">Path and name of XML file</param>
      <param name="schemaFileName">Path and name of schema file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveXml(System.IO.Stream)">
      <summary>Saves the data on the sheet to the specified XML stream.</summary>
      <param name="xmlStream">XML stream</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveXml(System.String)">
      <summary>Saves the data on the sheet to the specified XML file.</summary>
      <param name="xmlFileName">Path and name of the XML file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetActiveCell(System.Int32,System.Int32)">
      <summary>Sets the active cell on this sheet.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetActiveCell(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the active cell on this sheet.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="clearSelection">Whether to clear selections</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>Sets the values in the specified two-dimensional array of objects into the specified range of cells on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Array from which to set values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetCellErrorText(System.Int32,System.Int32,System.String)">
      <summary>Sets the error text for a specified cell.</summary>
      <param name="rowIndex">Row index of cell</param>
      <param name="columnIndex">Column index of cell</param>
      <param name="errorText">Error text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetChildVisible(FarPoint.Win.Spread.SheetView,System.Boolean)">
      <summary>Sets whether to make the child view on this sheet visible when the parent row is expanded.</summary>
      <param name="child">Child view to show</param>
      <param name="visible">Whether to make it visible when parent row is expanded</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetClip(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string of formatted text in a specified range of cells on this sheet.</summary>
      <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
      <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
      <param name="rowCount">Number of rows in the range of cells (or -1 for all rows)</param>
      <param name="columnCount">Number of columns in the range of cells (or -1 for all columns)</param>
      <param name="value">Tab-delimited string (formatted data) to set into the cells of the specified range</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetClipSpecial(System.Int32,System.Int32,System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.ClipboardPasteOptions)">
      <summary>Sets the information to paste from the Clipboard for a specified range of cells on this sheet based on the paste option.</summary>
      <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
      <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
      <param name="rowCount">Number of rows in the range of cells (or -1 for all rows)</param>
      <param name="columnCount">Number of columns in the range of cells (or -1 for all columns)</param>
      <param name="value">CellInfo object to set into the cells of the specified range</param>
      <param name="pasteOption">Clipboard paste option that determines what to paste</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetClipSpecial(System.Int32,System.Int32,System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.ClipboardPasteOptions,System.Boolean,System.Boolean)">
      <summary>Sets the information to paste from the Clipboard for a specified range of cells on this sheet based on the paste option.</summary>
      <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
      <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
      <param name="rowCount">Number of rows in the range of cells (or -1 for all rows)</param>
      <param name="columnCount">Number of columns in the range of cells (or -1 for all columns)</param>
      <param name="value">CellInfo object to set into the cells of the specified range</param>
      <param name="pasteOption">Clipboard paste option that determines what to paste</param>
      <param name="rowHeader">Whether to include row headers</param>
      <param name="columnHeader">Whether to include column headers</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetClipSpecial(System.Int32,System.Int32,System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.ClipboardPasteOptions,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Sets the information to paste from the Clipboard for a specified range of cells on this sheet based on the paste option.</summary>
      <param name="row">Starting row index of the range of cells (or -1 for all rows)</param>
      <param name="column">Starting column index of the range of cells (or -1 for all columns)</param>
      <param name="rowCount">Number of rows in the range of cells (or -1 for all rows)</param>
      <param name="columnCount">Number of columns in the range of cells (or -1 for all columns)</param>
      <param name="value">CellInfo object to set into the cells of the specified range</param>
      <param name="pasteOption">Clipboard paste option that determines what to paste</param>
      <param name="rowHeader">Whether to include row headers</param>
      <param name="columnHeader">Whether to include column headers</param>
      <param name="filterBar">Whether to include filter bars</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetClipValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets a tab-delimited string of unformatted data in a specified range of cells on this sheet.</summary>
      <param name="row">Starting row index or -1 for all rows</param>
      <param name="column">Starting column index or -1 for all columns</param>
      <param name="rowCount">Number of rows or -1 for all rows</param>
      <param name="columnCount">Number of columns or -1 for all columns</param>
      <param name="value">Tab-delimited string (data only) to set into the specified range of cells</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowAutoSort(System.Int32,System.Boolean)">
      <summary>Sets whether the specified column on this sheet allows automatic sorting.</summary>
      <param name="column">Column index</param>
      <param name="allowAutoSort">Whether to allow automatic sorting for the specified column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowAutoSort(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets whether the specified columns on this sheet allow automatic sorting.</summary>
      <param name="column">Column index of first column to set</param>
      <param name="count">Number of columns to set</param>
      <param name="allowAutoSort">Whether to allow automatic sorting for the specified columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowFilter(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets whether the specified columns on this sheet allow filtering.</summary>
      <param name="column">Column index of first column to set</param>
      <param name="count">Number of columns to set</param>
      <param name="allowFilter">Whether to allow filtering for the specified columns</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAllowFilter(System.Int32,System.Boolean)">
      <summary>Sets whether the specified column on this sheet allows filtering.</summary>
      <param name="column">Column index</param>
      <param name="allowFilter">Whether to allow filtering for the specified column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAutoFilterIndex(System.Int32,System.Int32)">
      <summary>Sets the automatic filter index for the specified column.</summary>
      <param name="column">Column index</param>
      <param name="value">Auto filter index</param>
      <remarks>The auto filter index is the row index in the column header where the auto filter indicator is drawn.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnAutoSortIndex(System.Int32,System.Int32)">
      <summary>Sets the automatic sort index for the specified column.</summary>
      <param name="column">Column index</param>
      <param name="value">Auto sort index</param>
      <remarks>The auto sort index is the row index in the column header where the auto sort indicator is drawn.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnLabel(System.Int32,System.Int32,System.String)">
      <summary>Sets the value for a specified cell in a column header on this sheet.</summary>
      <param name="row">Column header row index</param>
      <param name="column">Column index</param>
      <param name="value">Text for the label</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnMerge(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
      <summary>Sets whether or how cells in a column on this sheet that have the same content are joined into a single cell across multiple rows.</summary>
      <param name="column">Column index (use -1 for all columns)</param>
      <param name="value">MergePolicy enumeration setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnPageBreak(System.Int32,System.Boolean)">
      <summary>Sets whether a forced page break is inserted before the specified column on this sheet when printing.</summary>
      <param name="column">Column index</param>
      <param name="value">Whether to force a page break before the specified column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnShowSortIndicator(System.Int32,System.Boolean)">
      <summary>Sets whether the specified column on this sheet should display a sort indicator when automatically sorted.</summary>
      <param name="column">Column index</param>
      <param name="showIndicator">Whether to display the sort indicator in the column header</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnShowSortIndicator(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets whether the specified columns on this sheet should display a sort indicator when automatically sorted.</summary>
      <param name="column">Column index of the first column</param>
      <param name="count">Number of columns to set</param>
      <param name="showIndicator">Whether to display the sort indicators in the column headers</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnSizeable(System.Int32,System.Boolean)">
      <summary>Sets whether the user can resize a specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="sizeable">Whether to allow users to resize the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
      <summary>Sets the sort indicator for the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="order">SortIndicator enumeration setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnVisible(System.Int32,System.Boolean)">
      <summary>Sets whether a column on this sheet is displayed.</summary>
      <param name="column">Column index</param>
      <param name="visible">Whether to display the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetColumnWidth(System.Int32,System.Int32)">
      <summary>Sets the width in pixels for the specified column on this sheet.</summary>
      <param name="column">Column index</param>
      <param name="value">Width in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator)">
      <summary>Sets conditional formatting for a specified cell on the sheet based on a specified comparison.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the specified value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
      <summary>Sets conditional formatting for a specified cell on the sheet based on a specified comparison.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the specified value</param>
      <param name="value">String with the specified value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
      <summary>Sets conditional formatting for a specified cell on a sheet based on a specified comparison (and conditions).</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">First condition value</param>
      <param name="lastCondition">Last condition value</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentNullException">No condition is specified or specified condition is empty</exception>
      <exception cref="T:System.ArgumentException">Specified condition is not valid; must be a string</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
      <summary>Sets conditional formatting for a specified cell on the sheet based on a specified expression.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the specified value</param>
      <param name="firstCondition">First condition expression</param>
      <param name="lastCondition">Last condition expression</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentNullException"> No condition is specified or specified condition is empty </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression)">
      <summary>Sets conditional formatting for a specified cell on the sheet based on a specified expression.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the specified value</param>
      <param name="condition">Single condition expression</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentNullException"> No condition is specified or specified condition is empty </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator)">
      <summary>Sets conditional formatting for a specified range of cells on the sheet based on a specified comparison.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
      <summary>Sets conditional formatting for a specified range of cells on the sheet based on a specified comparison (and parameter).</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter value</param>
      <param name="value">Parameter value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
      <summary>Sets conditional formatting for a specified range of cells on the sheet on a specified comparison (with conditions).</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">First parameter value</param>
      <param name="lastCondition">Last parameter value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression)">
      <summary>Sets conditional formatting for a specified range of cells on the sheet based on a specified comparison (and expression).</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">Single condition expression</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
      <summary>Sets conditional formatting for a specified range of cells on the sheet based on a specified comparison (with parameters).</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">First parameter value</param>
      <param name="lastCondition">Last parameter value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[])">
      <summary>Sets conditional format for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="conditionalFormats">Conditional format</param>
      <returns>Whether the conditional format was set.</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(FarPoint.Win.Spread.ConditionalFormatting[])">
      <summary>Sets conditional formatting for the sheet.</summary>
      <param name="cfs">Conditional formatting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(System.Int32,System.Int32,FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Sets conditional formatting for a specified cell on the sheet based on specified rules.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rules">Rules to apply for the specified cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Sets conditional formatting for a specified cell on the sheet based on specified rules.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="isCombinable">Indicates that rule(s) can be merged into an existing conditional format if they affect the same cell range(s).</param>
      <param name="rules">Rules to apply for the specified cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Sets conditional formatting for a specified range of cells on the sheet based on specified rules.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="rules">Rules to apply for the specified range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Sets conditional formatting for a specified range of cells on the sheet based on specified rules.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="isCombinable">Indicates that rule(s) can be merged into an existing conditional format if they affect the same cell range(s).</param>
      <param name="rules">Rules to apply for the specified range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(FarPoint.Win.Spread.Model.CellRange[],FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Sets conditional formatting for a specified ranges of cells on the sheet based on specified rules.</summary>
      <param name="cellRanges">Cell ranges</param>
      <param name="rules">Rules to apply for the specified range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetConditionalFormatting(FarPoint.Win.Spread.Model.CellRange[],System.Boolean,FarPoint.Win.Spread.IConditionalFormattingRule[])">
      <summary>Sets conditional formatting for a specified ranges of cells on the sheet based on specified rules.</summary>
      <param name="cellRanges">Cell ranges</param>
      <param name="isCombinable">Indicates that rule(s) can be merged into existing conditional formatting if they affect the same cell range(s).</param>
      <param name="rules">Rules to apply for the specified range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetCustomNameComment(System.String,System.String,System.Boolean)">
      <summary>Adds a comment to the specified custom name.</summary>
      <param name="name">Name of custom name to which to add a comment</param>
      <param name="comment">Comment to add</param>
      <param name="sheetViewScope">If true, add to model scope; if false, add to custom name to share</param>
      <returns>If true, comment is set; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetErrorValue(System.Int32,System.Int32,FarPoint.CalcEngine.CalcError)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Sets the formula, as an expression, in the cell at the specified row and column of this sheet.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to place in the cell</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetFilteredColumn(System.Int32,System.String)">
      <summary>Internal Use: Applies the row filtering to the specified column when the specified filter item is selected from the drop-down list. (Internal use only.)</summary>
      <param name="column">Column index</param>
      <param name="filterBy">String by which to filter the rows in this column; item in the filter drop-down list</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetFormula(System.Int32,System.Int32,System.String)">
      <summary>Sets a formula in a specified cell on this sheet.</summary>
      <param name="row">Row index of the specified cell</param>
      <param name="column">Column index of the specified cell</param>
      <param name="value">Formula to place in the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetFormulaConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
      <summary>Sets conditional formatting for a specified cell on the sheet based on a specified formula.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
      <param name="formula">Formula to evaluate for the condition</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetFormulaConditionalFormat(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
      <summary>Sets conditional formatting on a specified range of cells on the sheet based on a specified formula.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
      <param name="formula">Formula for the condition</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetInsideBorder(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.IBorder)">
      <summary>Sets borders on the inside of a range of cells.</summary>
      <param name="cr">Cell range to which to apply borders</param>
      <param name="border">Border to put around cells in the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetModelColumnForViewColumn(System.Int32,System.Int32)">
      <summary>Sets the column index in the data model that corresponds to the specified column index in the sheet.</summary>
      <param name="viewColumn">Column index in the sheet</param>
      <param name="modelColumn">Column index in the data model</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column in the sheet is out of range; must be between -1 and the total number of columns in the sheet </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column in the model is out of range; must be between -1 and the total number of columns in the model </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetModelRowForViewRow(System.Int32,System.Int32)">
      <summary>Sets the row index in the data model that corresponds to the specified row index in the sheet.</summary>
      <param name="viewRow">Row index in the sheet</param>
      <param name="modelRow">Row index in the data model</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row in the sheet is out of range; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row in the model is out of range; must be between -1 and the total number of rows </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetMultipleColumnWidths(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the width in pixels for the specified columns on this sheet.</summary>
      <param name="column">Column index of first column</param>
      <param name="count">Number of columns for which to set the width</param>
      <param name="value">Width in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetMultipleRowHeights(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the height in pixels for the specified rows on this sheet.</summary>
      <param name="row">Row index of first row</param>
      <param name="count">Number of rows for which to set the height</param>
      <param name="value">Height in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetNote(System.Int32,System.Int32,System.String)">
      <summary>Sets a note in a specified cell on this sheet.</summary>
      <param name="row">Row index of specified cell</param>
      <param name="column">Column index of specified cell</param>
      <param name="value">Note text to associate with the cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetNoteBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the location and dimensions for a cell note when the style sets the note to always be shown.</summary>
      <param name="row">Row index of cell with note</param>
      <param name="column">Column index of cell with note</param>
      <param name="x">X-coordinate of beginning of note</param>
      <param name="y">Y-coordinate of beginning of note</param>
      <param name="width">Number of pixels in width of note</param>
      <param name="height">Number of pixels in height of note</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetOutlineBorder(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.IBorder)">
      <summary>Sets border outlines for a range of cells.</summary>
      <param name="cr">Cell range around which to put outline border</param>
      <param name="border">Border to place around the outside of the range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowErrorText(System.Int32,System.String)">
      <summary>Sets error text for row.</summary>
      <param name="rowIndex">Row index</param>
      <param name="errorText">Error text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowExpandable(System.Int32,System.Boolean)">
      <summary>Sets whether the row on this sheet can be expanded to show a child view in a hierarchical display.</summary>
      <param name="row">Row index</param>
      <param name="expandable">Whether the row can be expanded to show a child view</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowHeight(System.Int32,System.Int32)">
      <summary>Sets the height in pixels for the specified row on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="value">Height in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowLabel(System.Int32,System.Int32,System.String)">
      <summary>Sets the value for a specified cell in the row header on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Row header column index</param>
      <param name="value">Text for the label</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowMerge(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
      <summary>Sets whether or how cells in a row on this sheet that have the same content are joined into a single cell across multiple columns.</summary>
      <param name="row">Row index (use -1 for all rows)</param>
      <param name="value">MergePolicy enumeration setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowPageBreak(System.Int32,System.Boolean)">
      <summary>Sets whether a forced page break is inserted before the specified row on this sheet when printing.</summary>
      <param name="row">Row index</param>
      <param name="value">Whether to force a page break before the specified row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowSizeable(System.Int32,System.Boolean)">
      <summary>Sets whether users can resize the specified row on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="sizeable">Whether to allow users to resize the row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetRowVisible(System.Int32,System.Boolean)">
      <summary>Sets whether a row on this sheet is displayed.</summary>
      <param name="row">Row index</param>
      <param name="visible">Whether to display the row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetStickyNoteStyleInfo(System.Int32,System.Int32,FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo)">
      <summary>Sets the style information for the cell notes on this sheet that stay visible.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="info">Style information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetStyleInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the style for a cell, a column, a row, or an entire sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="info">
        <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetTag(System.Int32,System.Int32,System.Object)">
      <summary>Sets the application-defined tag value for the specified cell, column, row, or entire sheet.</summary>
      <param name="row">Row index (Set to -1 for all rows)</param>
      <param name="column">Column index (Set to -1 for all columns)</param>
      <param name="value">Tag value for the specified cell, column, row, or sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetText(System.Int32,System.Int32,System.String)">
      <summary>Sets the formatted text in the cell on this sheet using the <see cref="T:FarPoint.Win.Spread.CellType.IFormatter" /> object for the cell.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Text for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.SByte)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Byte)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Int16)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.UInt16)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.UInt32)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Int64)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.UInt64)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Single)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Decimal)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.String)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Object,System.Boolean)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <param name="validate">Perform value validation</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.DateTime)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SetValue(System.Int32,System.Int32,System.Char)">
      <summary>Sets the value for the specified cell on this sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set for the specified cell</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row index is out of range; must be between 0 and the total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeAlternatingRows">
      <summary>Determines whether the alternating rows should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeBackgroundImage">
      <summary>Gets whether the background image should be serialized.</summary>
      <returns>true if backgroundImage should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeCells">
      <summary>Determines whether the cells should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeColumnFooterSheetCornerHorizontalGridLine">
      <summary>Gets whether the horizontal grid line for the footer corner should be serialized.</summary>
      <returns>true if the horizontal grid line for the footer corner should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeColumnFooterSheetCornerStyle">
      <summary>Gets whether the style for the sheet corner should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeColumnFooterSheetCornerVerticalGridLine">
      <summary>Gets whether the vertical grid line for the footer corner should be serialized.</summary>
      <returns>true if the vertical grid line for the footer corner should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeColumns">
      <summary>Determines whether the columns should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeDefaultStyle">
      <summary>Gets whether the DefaultStyle property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeFilterBarHeaderStyle">
      <summary>Gets whether the style for the filter bar header should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeGrayAreaBackColor">
      <summary>Gets whether the GrayAreaBackColor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeHorizontalGridLine">
      <summary>Gets whether the horizontal grid line for the data area should be serialized.</summary>
      <returns>true if HorizontalGridLine should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeIsBackgroundImageTiled">
      <summary>Gets whether the tiled background image should be serialized.</summary>
      <returns>true if IsBackgroundImageTiled should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeLockFont">
      <summary>Determines whether lock font should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeModels">
      <summary>Gets whether the document models for the sheet should be persisted.</summary>
      <returns>True if the SheetView.Models property should be saved; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeNamedStyles">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeNullBackColor">
      <summary>Determines whether null background color should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeNullFont">
      <summary>Determines whether null font should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeNullForeColor">
      <summary>Determines whether null text color should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializePrintInfo">
      <summary>Determines whether print information should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeRows">
      <summary>Determines whether the rows should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSaveNamedStyles">
      <summary>Determines whether the named styles should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSelectionBackColor">
      <summary>Determines whether selection background color should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSelectionFont">
      <summary>Determines whether selection font should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSelectionForeColor">
      <summary>Determines whether selection text color should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSheetCornerHorizontalGridLine">
      <summary>Gets whether the horizontal grid line for the corner should be serialized.</summary>
      <returns>true if the horizontal grid line for the corner should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSheetCornerStyle">
      <summary>Gets whether the style for the sheet corner should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeSheetCornerVerticalGridLine">
      <summary>Gets whether the vertical grid line for the corner should be serialized.</summary>
      <returns>true if the vertical grid line for the corner should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeVerticalGridLine">
      <summary>Gets whether the vertical grid line for the data area should be serialized.</summary>
      <returns>true if VerticalGridLine should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShouldSerializeZoomFactor">
      <summary>Gets whether the zoom factor should be serialized.</summary>
      <returns>true if ZoomFactor should be serialized; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.ShowNotes(System.Boolean)">
      <summary>Shows or hides all cell notes on the sheet.</summary>
      <param name="show">Whether to show the cell notes</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortColumns(System.Int32,System.Boolean)">
      <summary>Sorts all the columns on the sheet by the specified row.</summary>
      <param name="keyRow">Index of the row to use as a key to sorting</param>
      <param name="ascending">Whether to sort in ascending order</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortColumns(System.Int32,System.Boolean,System.Collections.IComparer)">
      <summary>Sorts all the columns on the sheet by the specified row using the specified comparison.</summary>
      <param name="keyRow">Index of the row to use as a key to sorting</param>
      <param name="ascending">Whether to sort in ascending order</param>
      <param name="comparer">IComparer object used to compare the values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortColumns(System.Int32,System.Int32,FarPoint.Win.Spread.SortInfo[])">
      <summary>Sorts a specified range of columns on the sheet by the specified sort information.</summary>
      <param name="column">Index of first column to start sorting</param>
      <param name="columnCount">Number of columns in range to sort</param>
      <param name="sortInfo">Array of SortInfo objects with the row indexes and sort order</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.SortInfo[])">
      <summary>Sorts a range of cells on this sheet in the data model.</summary>
      <param name="row">Index of the starting row of the block of cells to sort</param>
      <param name="column">Index of the starting column of the block of cells to sort</param>
      <param name="rowCount">Number of rows in the block of cells</param>
      <param name="columnCount">Number of columns in the block of cells</param>
      <param name="byRows">Whether to sort by rows (or by columns)</param>
      <param name="sortInfo">SortInfo object with sort criteria and how to perform sort</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Boolean,System.Boolean)">
      <summary>Sorts all the rows on this sheet by the specified column.</summary>
      <param name="keyColumn">Column index whose values are compared during sorting</param>
      <param name="ascending">Whether to sort in ascending order</param>
      <param name="showIndicator">Whether the sort indicator should be displayed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Boolean,System.Boolean,System.Collections.IComparer)">
      <summary>Sorts all the rows on this sheet by the specified column using the specified comparison.</summary>
      <param name="keyColumn">Column index whose values are compared during sorting</param>
      <param name="ascending">Whether to sort in ascending order</param>
      <param name="showIndicator">Whether the sort indicator should be displayed</param>
      <param name="comparer">IComparer object used to compare the values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Boolean,System.Boolean,System.Collections.IComparer,System.Boolean,System.Boolean)">
      <summary>Sorts all the rows on this sheet by the specified column using the specified comparison.</summary>
      <param name="keyColumn">Column index whose values are compared during sorting</param>
      <param name="ascending">Whether to sort in ascending order</param>
      <param name="showIndicator">Whether the sort indicator should be displayed</param>
      <param name="comparer">IComparer object used to compare the values</param>
      <param name="sortFrozenRows">Whether frozen rows are sorted</param>
      <param name="sortTrailingFrozenRows">Whether trailing frozen rows are sorted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SortRows(System.Int32,System.Int32,FarPoint.Win.Spread.SortInfo[])">
      <summary>Sorts a range of rows on this sheet according to the specified sort information.</summary>
      <param name="row">Index of first row in range to sort</param>
      <param name="rowCount">Number of rows in range to sort</param>
      <param name="sortInfo">Array of SortInfo objects with the column indexes and sort order</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SuspendAutoUpdateChartData">
      <summary>Suspends updates of values to the chart immediately.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SuspendFormulaParsing">
      <summary>Suspends parsing of formulas.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SwapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Swaps the data and formatting in a block of cells on this sheet with another block of cells on this sheet.</summary>
      <param name="fromRow">Row index of the top-left cell in the block from which to swap</param>
      <param name="fromColumn">Column index of the top-left cell in the block from which to swap</param>
      <param name="toRow">Row index of the top-left cell in the destination block</param>
      <param name="toColumn">Column index of the top-left cell in the destination block</param>
      <param name="rowCount">Number of rows in the block of cells</param>
      <param name="columnCount">Number of columns in the block of cells</param>
      <param name="dataOnly">Whether only the data is copied, or the data and formatting</param>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot swap entire sheet of cells </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot swap entire columns over partial columns </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot swap entire rows over partial rows </exception>
      <exception cref="T:System.InvalidOperationException"> Operation is not valid; cannot swap a range of cells over part of a spanned cell </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.UngroupSparkline(System.String)">
      <summary>Ungroups the sparkline.</summary>
      <param name="locationRef">Location reference</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.UngroupSparkline(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Ungroups the sparkline.</summary>
      <param name="location">Location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.UngroupSparkline(FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Ungroups the sparkline.</summary>
      <param name="location">Location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.UpdateNotes(System.Int32,System.Int32)">
      <summary>Updates cell note appearances based on style being set or on changes to note text.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.UpdatePropArray(System.String,System.Object)">
      <summary>Internal use only. Update the property array.</summary>
      <param name="propertyName">Property name</param>
      <param name="propertyToUpdate">Property to update</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.Validate(System.Int32,System.Int32,System.Boolean)">
      <summary>Validates a cell.</summary>
      <param name="row">row index</param>
      <param name="column">column index</param>
      <param name="doAction">if set to <c>true</c> the corresponding validate action is executed when necessary.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.CellChanged">
      <summary>Occurs when a change is made to a cell or range of cells on this sheet that may require the cell or range of cells be repainted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.Changed">
      <summary>Occurs when a change is made to the sheet that may require the entire sheet to be repainted (as with DefaultStyle or AlternatingRows).</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.ColumnChanged">
      <summary>Occurs when a change is made to a column or range of columns that may require the column or range of columns be repainted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.Disposing">
      <summary>Fires when the SheetView is being disposed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.NoteCreated">
      <summary>Occurs when a note for the viewport area is created on the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.NoteMoved">
      <summary>Occurs when a note for the viewport area is moved on the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.NoteSized">
      <summary>Occurs when a note for the viewport area is sized on the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.PropertyChanged">
      <summary>Occurs when the user changes a property of the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.ReferenceStyleChanged">
      <summary>Occurs when the reference style changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.RowChanged">
      <summary>Occurs when a change is made to a row or range of rows on this sheet that may require the row or range of rows be repainted.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.StickyNoteCreated">
      <summary>Obsolete. Use NoteCreated instead. Occurs when a sticky note is created on the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.StickyNoteMoved">
      <summary>Obsolete. Use NoteMoved instead. Occurs when a sticky note is moved on the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetView.StickyNoteSized">
      <summary>Obsolete. Use NoteSized instead. Occurs when a sticky note is sized on the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetView.DocumentModels">
      <summary>Represents a container of the models that make up the sheet document. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.#ctor">
      <summary>Creates a new, empty container of the models that make up the sheet document.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnAxis">
      <summary>Gets or sets the column axis model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnFooterData">
      <summary>Gets or sets the column footer data model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnFooterRowAxis">
      <summary>Gets or sets the column footer row axis model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnFooterSpan">
      <summary>Gets or sets the column footer span model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnFooterStyle">
      <summary>Gets or sets a style model for the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderData">
      <summary>Gets or sets the column header data model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderRowAxis">
      <summary>Gets or sets the column header row axis model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderSpan">
      <summary>Gets or sets the column header span model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ColumnHeaderStyle">
      <summary>Gets or sets the column header style model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.ConditionalFormatting">
      <summary>Gets or sets the conditional formatting model.</summary>
      <value>The conditional formatting model.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Data">
      <summary>Gets or sets the data model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RangeGroupModel">
      <summary>Gets or sets the data model for the outline (range group).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowAxis">
      <summary>Gets or sets the row axis model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderColumnAxis">
      <summary>Gets or sets the row header column axis model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderData">
      <summary>Gets or sets the row header data model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderSpan">
      <summary>Gets or sets the row header span model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.RowHeaderStyle">
      <summary>Gets or sets the row header style model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Selection">
      <summary>Gets or sets the selection model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.SheetCornerData">
      <summary>Gets or sets the sheet corner data model</summary>
      <value>The sheet corner data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.SheetCornerSpan">
      <summary>Gets or sets the sheet corner span model.</summary>
      <value>The sheet corner span.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.SheetCornerStyle">
      <summary>Gets or sets the sheet corner style model.</summary>
      <value>The sheet corner style.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Span">
      <summary>Gets or sets the span model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.DocumentModels.Style">
      <summary>Gets or sets the style model.</summary>
      <exception cref="T:System.ArgumentNullException"> Model is not specified (or specified value is null) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the DocumentModel object to the SerializationInfo.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.IsAnyColumnViewIndexSet">
      <summary>Determines whether any columns have been mapped to different column indexes in the sheet.</summary>
      <returns>True if there is a mapping; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.IsAnyRowViewIndexSet">
      <summary>Determines whether any rows have been mapped to different row indexes in the sheet.</summary>
      <returns>True if there is a mapping; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.ResetViewColumnIndexes">
      <summary>Resets all column indexes in the sheet to be the same as the column indexes in the corresponding data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.ResetViewRowIndexes">
      <summary>Resets all row indexes in the sheet to be the same as the row indexes in the corresponding data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.SetViewColumnIndex(System.Int32,System.Int32)">
      <summary>Sets the column index in the sheet for the specified column index in the data model.</summary>
      <param name="modelColumnIndex">Column index in the model</param>
      <param name="value">Column index in the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.DocumentModels.SetViewRowIndex(System.Int32,System.Int32)">
      <summary>Sets the row index in the sheet for the specified row index in the data model.</summary>
      <param name="modelRowIndex">Row index in the data model</param>
      <param name="value">Row index in the sheet</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetView.MultipleColumnMovingException">
      <summary>Exception thrown when moving multiple columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MultipleColumnMovingException.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SheetView.MultipleColumnMovingException" /> class.</summary>
      <param name="actualMovedColumnCount">Number of columns moved successfully before exception</param>
      <param name="innerException">Inner exception</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.MultipleColumnMovingException.ActualMovedColumnCount">
      <summary>Indicates the number of columns moved successfully before exception.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetView.MultipleRowMovingException">
      <summary>Exception thrown when moving multiple rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.MultipleRowMovingException.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see ref="MultipleRowMovingException" /> class.</summary>
      <param name="actualMovedRowCount">Number of rows moved successfully before the exception</param>
      <param name="innerException">Inner exception</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.MultipleRowMovingException.ActualMovedRowCount">
      <summary>Indicates the number of rows moved successfully before the exception.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns">
      <summary>Saves the sorting settings for all columns in a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.#ctor(System.Collections.BitArray,System.Collections.BitArray)">
      <summary>Creates a new set of sorting settings.</summary>
      <param name="allowAutoSort">Values of AllowAutoSort for the columns</param>
      <param name="showIndicator">Values of ShowSortIndicator for the columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new set of sorting settings from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.AllowAutoSort">
      <summary>Gets the values of AllowAutoSort (whether to allow automatic sorting) for the columns in this sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.ShowIndicator">
      <summary>Gets the values of ShowSortIndicator (whether to show a sort indicator when automatically sorted) for the columns in the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the automatic sorting settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetView.SaveAutoSortColumns.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetViewCollection">
      <summary>Represents a collection of sheets (SheetView objects).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewCollection.Count">
      <summary>Gets or sets the number of sheets (SheetView objects) in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewCollection.IsFixedSize">
      <summary>Gets whether the collection has a fixed size. (This implementation always returns false.)</summary>
      <value>Always returns false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewCollection.IsReadOnly">
      <summary>Gets whether the collection is read-only. (This implementation always returns false.)</summary>
      <value>Always returns false</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewCollection.Item(System.Int32)">
      <summary>Gets or sets the sheet (SheetView object) at the specified position in the collection.</summary>
      <exception cref="T:System.Exception"> Specified sheet index is invalid; must be between 0 and total number of sheets in the collection </exception>
      <exception cref="T:System.ArgumentNullException"> Sheet index is not specified (that is, specified index is null) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewCollection.Item(System.String)">
      <summary>Gets or sets the sheet (SheetView object) at the specified position in the collection.</summary>
      <exception cref="T:System.Exception"> Specified sheet name is not found in the sheet collection. </exception>
      <exception cref="T:System.ArgumentNullException"> Sheet name is not specified (that is, specified index is null or empty) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Add(System.Object)">
      <summary>Adds a sheet to the collection.</summary>
      <param name="obj">Sheet (SheetView object) to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.AddRange(System.Collections.ICollection)">
      <summary>Adds a range of sheets to the collection.</summary>
      <param name="c">Collection of sheets to add to the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.AddRange(FarPoint.Win.Spread.SheetView[])">
      <summary>Adds an array of SheetView objects to the collection.</summary>
      <param name="sheets">Array of SheetView objects</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Clear">
      <summary>Removes all the sheets from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Contains(FarPoint.Win.Spread.SheetView)">
      <summary>Specifies whether the collection contains the specified sheet.</summary>
      <param name="sheetView">Sheet (SheetView object) for which to check the collection</param>
      <returns>True if the sheet is found in the collection; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the sheets in the collection to an array.</summary>
      <param name="array">Array to which to copy the sheets</param>
      <param name="arrayIndex">Array index at which to start pasting the sheets</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Find(System.String)">
      <summary>Searches the collection for a sheet with the specified name.</summary>
      <param name="name">Name of sheet (SheetView object) to find</param>
      <returns>Sheet in the collection with the specified name, or null if no sheet is found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.IndexOf(FarPoint.Win.Spread.SheetView)">
      <summary>Returns the index of the specified sheet in the collection.</summary>
      <param name="sheetView">Sheet (SheetView object) for which to return the index</param>
      <returns>Zero-based index of the sheet in the collection, or -1 if the sheet was not found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Insert(System.Int32,FarPoint.Win.Spread.SheetView)">
      <summary>Inserts a sheet into the collection at the specified index.</summary>
      <param name="index">Zero-based index at which to insert the sheet</param>
      <param name="sheetView">Sheet (SheetView object) to insert into the collection</param>
      <exception cref="T:System.ArgumentNullException"> Sheet is not specified (that is, specified sheet is null) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Move(System.Int32,System.Int32)">
      <summary>Moves the specified SheetView to a different index in the collection.</summary>
      <param name="from">Current index of SheetView</param>
      <param name="to">New index for SheetView</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Remove(FarPoint.Win.Spread.SheetView)">
      <summary>Removes the specified sheet from the collection.</summary>
      <param name="sheetView">Sheet (SheetView object) to remove from the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.Remove(FarPoint.Win.Spread.SheetView,System.Boolean)">
      <summary>Removes the specified sheet from the collection and the Sheet is unreusable. Internal use only.</summary>
      <param name="sheetView">Sheet (SheetView object) to remove from the collection</param>
      <param name="reset">Indicates if we also reset the removing sheet.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewCollection.RemoveAt(System.Int32)">
      <summary>Removes a sheet (SheetView object) from the collection at the specified index.</summary>
      <param name="index">Zero-based index of the sheet to remove from the collection</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified sheet index is not valid; must be between 0 and the total number of sheets in the collection </exception>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetViewCollection.Changed">
      <summary>Occurs when a sheet is added, removed, or changed in the collection.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.SheetViewCollection.Changing">
      <summary>Occurs when a sheet is about to be added, removed, or changed in the collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetViewEventArgs">
      <summary>Represents the event data for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewEventArgs.#ctor">
      <summary>Creates a new event arguments object for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new event arguments object for the sheet, specifying the row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new event arguments object for the sheet, specifying the row, column, and number of rows and columns.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.Column">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.Row">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewEventArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs">
      <summary>Represents the data for changes to the sheet properties.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs.#ctor(System.String)">
      <summary>Creates a new event arguments object for sheet property changes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs.PropertyName">
      <summary>Gets the name of the property that has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SmartPaperRule">
      <summary>Represents the rules that determine the paper size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPaperRule.#ctor">
      <summary>Creates a smart paper rule with no reset option.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPaperRule.#ctor(FarPoint.Win.Spread.ResetOption)">
      <summary>Creates a smart paper rule with the specified reset option.</summary>
      <param name="resetOption">Whether to reset the rules or a particular rule</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPaperRule.ResetOption">
      <summary>Specifies whether to reset the rules or a particular rule before testing the next SmartPrint rule.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SmartPrintRule">
      <summary>Represents the rules that determine how best to print. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SmartPrintRule" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRule.ResetOption">
      <summary>Determines whether to reset the rules that determine how best to print.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SmartPrintRulesCollection">
      <summary>Represents the set of rules that determine how best to print.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.#ctor">
      <summary>Creates a new SmartPrintRulesCollection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.Count">
      <summary>Gets the number of rules (SmartPrintRule objects) in the collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.IsFixedSize">
      <summary>Gets whether the collection has a fixed size. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.IsReadOnly">
      <summary>Gets whether the collection is read-only. (This implementation always returns false.)</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.IsSynchronized">
      <summary>Gets whether access to the collection is synchronized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.Item(System.Int32)">
      <summary>Gets or sets the rule (SmartPrintRule object) at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SmartPrintRulesCollection.SyncRoot">
      <summary>Gets a rule (SmartPrintRule object) to synchronize access to the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Add(System.Object)">
      <summary>Adds a rule (SmartPrintRule object) to the collection.</summary>
      <param name="value">Rule (SmartPrintRule object) to add</param>
      <exception cref="T:System.ArgumentException">Specified object is not valid; must be a SmartPrintRule object</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Add(FarPoint.Win.Spread.SmartPrintRule)">
      <summary>Adds a rule (SmartPrintRule object) to the collection.</summary>
      <param name="value">Rule (SmartPrintRule object) to add</param>
      <exception cref="T:System.ArgumentException">Specified object is not valid; must be a SmartPrintRule object</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Clear">
      <summary>Removes all rules (SmartPrintRule objects) from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Contains(System.Object)">
      <summary>Determines whether the collection contains the specified rule (SmartPrintRule object).</summary>
      <param name="value">Object for which to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Contains(FarPoint.Win.Spread.SmartPrintRule)">
      <summary>Determines whether the collection contains the specified rule (SmartPrintRule object).</summary>
      <param name="value">Rule (SmartPrintRule object) for which to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.CopyTo(System.Collections.ArrayList,System.Int32)">
      <summary>Copies the rules (SmartPrintRule objects) in the collection to the specified array list.</summary>
      <param name="array">Array list to which to paste the rules (SmartPrintRule objects)</param>
      <param name="index">Index in the array at which to paste the rules</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the rules (SmartPrintRule objects) in the collection to the specified array.</summary>
      <param name="array">Array to which to paste the rules (SmartPrintRule objects)</param>
      <param name="index">Index in the array at which to paste the rules</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.GetEnumerator">
      <summary>Gets an IEnumerator object for enumerating through the rules (SmartPrintRule objects) in the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.IndexOf(FarPoint.Win.Spread.SmartPrintRule)">
      <summary>Returns the index of the specified rule (SmartPrintRule object).</summary>
      <param name="value">Rule (SmartPrintRule object) for which to return the index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.IndexOf(System.Object)">
      <summary>Returns the index of the specified rule (SmartPrintRule object).</summary>
      <param name="value">Object for which to return the index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a rule (SmartPrintRule object) into the collection at the specified index.</summary>
      <param name="index">Index at which to insert the rule (SmartPrintRule object)</param>
      <param name="value">Object to insert</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Insert(System.Int32,FarPoint.Win.Spread.SmartPrintRule)">
      <summary>Inserts a rule (SmartPrintRule object) into the collection at the specified index.</summary>
      <param name="index">Index at which to insert the rule (SmartPrintRule object)</param>
      <param name="value">Rule (SmartPrintRule object) to insert</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Remove(FarPoint.Win.Spread.SmartPrintRule)">
      <summary>Removes the specified rule (SmartPrintRule object) from the collection.</summary>
      <param name="value">Rule (SmartPrintRule object) to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.Remove(System.Object)">
      <summary>Removes the specified rule (SmartPrintRule object) from the collection.</summary>
      <param name="value">The rule (SmartPrintRule object) to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SmartPrintRulesCollection.RemoveAt(System.Int32)">
      <summary>Removes a rule (SmartPrintRule object) from the collection at the specified index.</summary>
      <param name="index">Zero-based index of the rule (SmartPrintRule object) to remove</param>
      <exception cref="T:System.ArgumentException"> Specified object is not valid; must be a SmartPrintRule object </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.SolidFocusIndicatorRenderer">
      <summary>Represents the renderer of the solid focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.#ctor">
      <summary>Creates a new renderer of the solid focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.#ctor(System.Drawing.Color,System.Int32)">
      <summary>Creates a new renderer of the solid focus indicator with the specified color and thickness.</summary>
      <param name="clr">Color of the focus indicator</param>
      <param name="thick">Integer number of pixels in the thickness of the focus indicator</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Color">
      <summary>Gets or sets the color of the solid focus indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Thickness">
      <summary>Gets or sets the thickness of the solid focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
      <param name="disposing">Whether the object is disposed through the IDisposable interface (true) or finalized by the garbage collector (false)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Finalize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the solid focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SolidFocusIndicatorRenderer.ToString">
      <summary>Returns the name of the renderer as a string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortArgs">
      <summary>Represents the event data for the Sorting event for the Spread component, which occurs when Spread is being sorted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SortArgs.#ctor(System.Int32,FarPoint.Win.Spread.SortBy,System.Boolean,FarPoint.Win.Spread.ConditionalFormattingIcon,System.Drawing.Color)">
      <summary>Creates a new object with the SortArgs.</summary>
      <param name="index">The index of the column or row on which to sort</param>
      <param name="sortBy">The type that is sorted.</param>
      <param name="ascending">The sort order is ascending</param>
      <param name="icon">The base icon to compare</param>
      <param name="color">The base color to compare</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SortArgs.Ascending">
      <summary>Gets whether the sort order is ascending.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortArgs.Color">
      <summary>Gets the base color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortArgs.Icon">
      <summary>Gets the base icon.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortArgs.Index">
      <summary>Gets the index of the column or row on which to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortArgs.SortBy">
      <summary>Gets the type that is sorted.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortedEventArgs">
      <summary>Represents the event data for the Sorted event for the Spread component, which occurs when spread sorted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SortedEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.SortArgs[],FarPoint.Win.Spread.SortingMode,System.Boolean)">
      <summary>Creates a new object with the Sorted event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) to be sorted</param>
      <param name="row">Index of the starting row of the block of cells to sort</param>
      <param name="column">Index of the starting column of the block of cells to sort</param>
      <param name="rowCount">Number of rows in the block of cells</param>
      <param name="columnCount">Number of columns in the block of cells</param>
      <param name="sortInfo">Array of SortArgs objects that contain sort criteria and information about how to perform the sort.</param>
      <param name="sortingMode">The SortingMode setting that specifies sorting behavior</param>
      <param name="byRows">Whether to sort by rows (or columns)</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.ByRows">
      <summary>Gets whether to sort by rows (or columns).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.Column">
      <summary>Gets the index of the starting column of the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.ColumnCount">
      <summary>Gets the number of columns in the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.Row">
      <summary>Gets the index of the starting row of the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.RowCount">
      <summary>Gets the number of rows in the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.SheetView">
      <summary>Gets the SheetView object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.SortInfo">
      <summary>Gets the SortArgs object that contains sort criteria and information about how to perform the sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortedEventArgs.SortingMode">
      <summary>Gets the SortingMode setting.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortInfo">
      <summary>Represents the information related to sorting columns, rows, or a range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SortInfo.#ctor(System.Int32,System.Boolean)">
      <summary>Creates a SortInfo object with the order specified and the comparison done using the system default comparer.</summary>
      <param name="index">Index of the column or row on which to sort</param>
      <param name="ascending">Whether the sort order is ascending</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SortInfo.#ctor(System.Int32,System.Boolean,System.Collections.IComparer)">
      <summary>Creates a SortInfo object with the order specified and the comparison done according to the specified comparer.</summary>
      <param name="index">Index of the column or row on which to sort</param>
      <param name="ascending">Whether the sort order is ascending</param>
      <param name="comparer">IComparer object for method of comparison</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SortInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SortInfo" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SortInfo.Ascending">
      <summary>Gets or sets whether the sort order is ascending.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortInfo.Comparer">
      <summary>Gets or sets the IComparer object for the method of comparison.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortInfo.Index">
      <summary>Gets or sets the index of the column or row on which to sort.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SortInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SortingEventArgs">
      <summary>Represents the event data for the Sorting event for the Spread component, which occurs when spread is sorting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SortingEventArgs.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.SortArgs[],FarPoint.Win.Spread.SortingMode,System.Boolean)">
      <summary>Creates a new object with the Sorting event arguments.</summary>
      <param name="sheetView">Sheet (SheetView object) to be sorted</param>
      <param name="row">Index of the starting row of the block of cells to sort</param>
      <param name="column">Index of the starting column of the block of cells to sort</param>
      <param name="rowCount">Number of rows in the block of cells</param>
      <param name="columnCount">Number of columns in the block of cells</param>
      <param name="sortInfo">Array of SortArgs objects that contain the indexes, the sort order, and the sorting type.</param>
      <param name="sortingMode">The SortingMode setting that specifies the sorting behavior</param>
      <param name="byRows">Whether to sort by rows (or columns)</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.ByRows">
      <summary>Gets whether to sort by rows (or columns).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default processing of sorting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.Column">
      <summary>Gets the index of the starting column of the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.ColumnCount">
      <summary>Gets the number of columns in the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.Row">
      <summary>Gets the index of the starting row of the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.RowCount">
      <summary>Gets the number of rows in the block of cells to sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.SheetView">
      <summary>Gets the Sheet (SheetView object) to be sorted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.SortInfo">
      <summary>Gets the SortArgs objects that contain sort criteria and information about how to perform the sort.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SortingEventArgs.SortingMode">
      <summary>Gets the SortingMode setting that specifies the sorting behavior.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SortingForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SoundNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that plays a specified system sound when validation fails.</summary>
      <seealso cref="T:FarPoint.Win.Spread.ValidateActionBase" />
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SoundNotify" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.#ctor(FarPoint.Win.Spread.SystemSoundType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SoundNotify" /> class.</summary>
      <param name="soundType">One of the <see cref="T:FarPoint.Win.Spread.SystemSoundType" /> values.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SoundNotify.SoundLocation">
      <summary>Gets or sets the sound file location.</summary>
      <value>The sound location. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
      <remarks>If this property is set, the <see cref="P:FarPoint.Win.Spread.SoundNotify.SoundType" /> property will not have an effect, even if this sound file location is invalid. Only .wav files are supported.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.SoundNotify.SoundType">
      <summary>Gets or sets a value that indicates which system sound is played.</summary>
      <value>A <see cref="T:FarPoint.Win.Spread.SystemSoundType" /> value. The default is <see cref="F:FarPoint.Win.Spread.SystemSoundType.Asterisk" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.SoundNotify" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.SoundNotify" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current <see cref="T:FarPoint.Win.Spread.SoundNotify" /> using the <paramref name="context" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates whether the validation failed and that includes relative context information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SoundNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Sparkline">
      <summary>Represents a sparkline in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Sparkline.#ctor(FarPoint.Win.Spread.ISparklineGroup,FarPoint.Win.Spread.ISparkline)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Sparkline" /> class.</summary>
      <param name="sparklineGroup">The sparkline group.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Sparkline.Data">
      <summary>Get the sparkline data in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Sparkline.DataInfo">
      <summary>Gets the infomation about sparkline data in a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Sparkline.Setting">
      <summary>Gets the sparkline setting in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Sparkline.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.SparklineInfo">
      <summary>Represents sparkline information in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SparklineInfo.#ctor(FarPoint.Win.Spread.ISparklineGroup,FarPoint.Win.Spread.ISparkline)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SparklineInfo" /> class.</summary>
      <param name="sparklineGroup">The sparkline group.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SparklineInfo.CopyMode">
      <summary>Gets or sets a value that indicates the copy state.</summary>
      <value>
        <c>true</c> if copying; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SparklineInfo.GroupID">
      <summary>Gets or sets the group ID.</summary>
      <value>The group ID.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.SparklineModelUpdateEventArgs">
      <summary>Represents the event data for the UpdatedCellRanges event, which occurs when a list of cell ranges are updated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SparklineModelUpdateEventArgs.#ctor(System.Collections.Generic.List{FarPoint.Win.Spread.Model.CellRange})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SparklineModelUpdateEventArgs" /> class.</summary>
      <param name="updatedCellRanges">The updated cell ranges.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SparklineModelUpdateEventArgs.UpdatedCellRanges">
      <summary>Gets the updated cell ranges.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadActions">
      <summary>Represents the actions available for input maps.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadActions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadActions" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ActivateNextChild">
      <summary>Activates the next object in the draw order. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ActivateNextShape">
      <summary>Activates the next shape in the draw order. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ActivatePreviousChild">
      <summary>Activates the previous object in the draw order. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ActivatePreviousShape">
      <summary>Activates the previous shape in the draw order. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.AutoSum">
      <summary>Enters a formula (that uses the SUM function) to sum the numbers automatically. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.CSEStopEditing">
      <summary>Turns off edit mode. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.CancelEditing">
      <summary>Turns off edit mode and removes the changes. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClearCell">
      <summary>Removes all of the contents of the active cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClearSelectedCells">
      <summary>Removes all of the contents of the selected cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClearSelectedCellsData">
      <summary>Clears the selected cells which have data or formulas. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopy">
      <summary>Copies the selected items to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyActiveSheet">
      <summary>Copies the active sheet to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyAsString">
      <summary>Copies the selected items to the Clipboard as a string. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyAsStringSkipHidden">
      <summary>Copies the selected items to the Clipboard as a string skipping hidden rows and columns. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyFormatting">
      <summary>Copies only the selected items' formatting to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyFormulas">
      <summary>Copies only the selected items' formulas to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyShape">
      <summary>Copies the active shape to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCopyValues">
      <summary>Copies only the selected items' values to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCut">
      <summary>Cuts the selected items to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutActiveSheet">
      <summary>Cuts the active sheet to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutAsString">
      <summary>Cuts the selected items to the Clipboard as a string. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutAsStringSkipHidden">
      <summary>Cuts the selected items to the Clipboard as a string skipping hidden cells. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutDataOnly">
      <summary>Cuts only the data of selected items to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutFormatting">
      <summary>Cuts the selected items formatting to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutFormulas">
      <summary>Cuts the selected items formulas to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutShape">
      <summary>Cuts the active shape to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardCutValues">
      <summary>Cuts the selected items values to the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPaste">
      <summary>Pastes the selected items from the Clipboard to the current sheet based on the setting of ClipboardPasteOptions. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAll">
      <summary>Pastes everything from the Clipboard (data and formatting) to the current sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAsLink">
      <summary>Pastes only the link references from the Clipboard to the current sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAsString">
      <summary>Pastes only the text from the Clipboard to the current cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteAsStringSkipHidden">
      <summary>Pastes only the text from the Clipboard to the current cell, skipping hidden rows and columns. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteFormatting">
      <summary>Pastes only the formatting from the Clipboard to the current sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteFormulas">
      <summary>Pastes only the formulas from the Clipboard to the current sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteShape">
      <summary>Pastes the shape from the Clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteSheet">
      <summary>Pastes a sheet from the clipboard. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ClipboardPasteValues">
      <summary>Pastes only the values from the Clipboard to the current sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ComboShowList">
      <summary>Displays the combo box list of the current cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DateTimeNow">
      <summary>Sets the cell's value to the date-time value of Now. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DeactivateChild">
      <summary>Deactivates the currently selected object. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DeactivateShape">
      <summary>Deactivates the currently selected shape. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DecreaseChildHeight">
      <summary>Decreases the height of the active object. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DecreaseChildWidth">
      <summary>Decreases the width of the active object. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DecreaseShapeHeight">
      <summary>Decreases the height of the active shape. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DecreaseShapeWidth">
      <summary>Decreases the width of the active shape. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DeleteChild">
      <summary>Deletes the active object. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.DeleteShape">
      <summary>Deletes the active shape. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstCell">
      <summary>Extends the selection to include the first cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstColumn">
      <summary>Extends the selection to the first column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstItem">
      <summary>Extends the selection to include the first item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToFirstRow">
      <summary>Extends the selection to the first row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastCell">
      <summary>Extends the selection to include the last cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastCellWithData">
      <summary>Extends the selection to include the last cell that contains data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastColumn">
      <summary>Extends the selection to the last column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastColumnWithData">
      <summary>Extends the selection to the last column that contains data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastItem">
      <summary>Extends the selection to include the last item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastItemWithData">
      <summary>Extends the selection to include the last item with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastRow">
      <summary>Extends the selection to the last row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToLastRowWithData">
      <summary>Extends the selection to the last row that contains data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextColumn">
      <summary>Extends the selection one column to the right. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextColumnVisual">
      <summary>Extends the selection one column to the right. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextColumnWithData">
      <summary>Extends the selection right to next column with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextItem">
      <summary>Extends the selection to include the next item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextPageOfColumns">
      <summary>Extends the selection to include the columns one page to the right. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextPageOfItems">
      <summary>Extends the selection to include the next page of items. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextPageOfRows">
      <summary>Extends the selection down to include one page of rows. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextRow">
      <summary>Extends the selection down one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToNextRowWithData">
      <summary>Extends the selection down to next row with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousColumn">
      <summary>Extends the selection one column to the left. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousColumnVisual">
      <summary>Extends the selection one column to the left. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousColumnWithData">
      <summary>Extends the selection left to previous column with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousItem">
      <summary>Extends the selection to include the previous item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousPageOfColumns">
      <summary>Extends the selection to include the columns one page to the left. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousPageOfItems">
      <summary>Extends the selection to include the previous page of items. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousPageOfRows">
      <summary>Extends the selection up to include one page of rows. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousRow">
      <summary>Extends the selection up one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ExtendToPreviousRowWithData">
      <summary>Extends the selection up to previous row with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.IncreaseChildHeight">
      <summary>Increases the height of the active object. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.IncreaseChildWidth">
      <summary>Increases the width of the active object. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.IncreaseShapeHeight">
      <summary>Increases the height of the active shape. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.IncreaseShapeWidth">
      <summary>Increases the width of the active shape. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveChildDown">
      <summary>Moves the active object down. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveChildLeft">
      <summary>Moves the active object left. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveChildRight">
      <summary>Moves the active object right. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveChildUp">
      <summary>Moves the active object up. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeDown">
      <summary>Moves the active shape down. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeLeft">
      <summary>Moves the active shape left. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeRight">
      <summary>Moves the active shape right. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveShapeUp">
      <summary>Moves the active shape up. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstCell">
      <summary>Moves the active cell to the first cell in the sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstColumn">
      <summary>Moves the active cell to the first column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstItem">
      <summary>Moves to the first item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToFirstRow">
      <summary>Moves the active cell to the first row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastCell">
      <summary>Moves the active cell to the last cell in the sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastCellWithData">
      <summary>Moves the active cell to the last cell that contains data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastColumn">
      <summary>Moves the active cell to the last column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastColumnWithData">
      <summary>Moves the active cell to the last column that contains data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastItem">
      <summary>Moves to the last item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastItemWithData">
      <summary>Moves to the last item with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastRow">
      <summary>Moves the active cell to the last row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToLastRowWithData">
      <summary>Moves the active cell to the last row that contains data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextCellThenControl">
      <summary>Moves the active cell to next cell then the next control. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumn">
      <summary>Moves the active cell to the right one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumnFirstRow">
      <summary>Moves the active cell to the first row of the next column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumnVisual">
      <summary>Moves the active cell to the right one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumnWithData">
      <summary>Moves the active cell to next column with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextColumnWrap">
      <summary>Moves the active cell to the right one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextItem">
      <summary>Moves down one item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextPageOfColumns">
      <summary>Moves the active cell right one page of columns. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextPageOfItems">
      <summary>Moves down one page of items. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextPageOfRows">
      <summary>Moves the active cell down one page of rows. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRow">
      <summary>Moves the active cell down one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRowFirstColumn">
      <summary>Moves the active cell to the first column of the next row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRowWithData">
      <summary>Moves the active cell to next row with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextRowWrap">
      <summary>Moves the active cell down one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToNextSheet">
      <summary>Moves the active cell to the next sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousCellThenControl">
      <summary>Moves the active cell to previous cell then the previous control. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumn">
      <summary>Moves the active cell to the left one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumnFirstRow">
      <summary>Moves the active cell to the first row of the previous column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumnVisual">
      <summary>Moves the active cell to the left one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumnWithData">
      <summary>Moves the active cell to previous column with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousColumnWrap">
      <summary>Moves the active cell to the left one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousItem">
      <summary>Moves up one item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousPageOfColumns">
      <summary>Moves the active cell left one page of columns. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousPageOfItems">
      <summary>Moves up one page of items. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousPageOfRows">
      <summary>Moves the active cell up one page of rows. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRow">
      <summary>Moves the active cell up one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRowFirstColumn">
      <summary>Moves the active cell to the first column of the previous row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRowWithData">
      <summary>Moves the active cell to previous row with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousRowWrap">
      <summary>Moves the active cell up one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.MoveToPreviousSheet">
      <summary>Moves the active cell to the previous sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.None">
      <summary>Does not perform an action. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.Redo">
      <summary>Performs a redo of the most recently undone edit or action. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.RotateReference">
      <summary>Rotate the editing reference in editing mode. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.RotateShapeClockwise">
      <summary>Rotates the active shape one degree clockwise. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.RotateShapeCounterClockwise">
      <summary>Rotates the active shape one degree counter-clockwise. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToFirstCell">
      <summary>Scrolls to display the first cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToFirstColumn">
      <summary>Scrolls to display the first column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToFirstRow">
      <summary>Scrolls to display the first row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastCell">
      <summary>Scrolls to display the last cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastCellWithData">
      <summary>Scrolls to display the last cell with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastColumn">
      <summary>Scrolls to display the last column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastColumnWithData">
      <summary>Scrolls to display the last column with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastRow">
      <summary>Scrolls to display the last row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToLastRowWithData">
      <summary>Scrolls to display the last row with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextColumn">
      <summary>Scrolls right one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextColumnVisual">
      <summary>Scrolls right one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextPageOfColumns">
      <summary>Scrolls right one page of columns. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextPageOfRows">
      <summary>Scrolls down one page of rows. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToNextRow">
      <summary>Scrolls down one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousColumn">
      <summary>Scrolls left one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousColumnVisual">
      <summary>Scrolls left one column. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousPageOfColumns">
      <summary>Scrolls left one page of columns. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousPageOfRows">
      <summary>Scrolls up one page of rows. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ScrollToPreviousRow">
      <summary>Scrolls up one row. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectColumn">
      <summary>Selects the column that contains the active cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectFirstItem">
      <summary>Selects the first item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectLastItem">
      <summary>Selects the last item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectLastItemWithData">
      <summary>Selects the last item with data. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectNextItem">
      <summary>Selects the next item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectNextPageOfItems">
      <summary>Selects the next page of items. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectPreviousItem">
      <summary>Selects the previous item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectPreviousPageOfItems">
      <summary>Selects the previous page of items. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectRow">
      <summary>Selects the row that contains the active cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.SelectSheet">
      <summary>Selects the entire sheet. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ShowSubEditor">
      <summary>Shows the subeditor control of the current cell. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.StartEditing">
      <summary>Turns on edit mode. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.StartEditingFormula">
      <summary>Allows the user to start entering a formula. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.StopEditing">
      <summary>Turns off edit mode. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.ToggleItem">
      <summary>Toggles the selection for the item. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadActions.Undo">
      <summary>Performs an undo of the most recent edit or action. This field is read-only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadDesigntimeLicense">
      <summary>Represents a designtime license.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadDesigntimeLicense.#ctor(System.Type)">
      <summary>Creates a new designtime license.</summary>
      <param name="type">Type</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadDesigntimeLicense.LicenseKey">
      <summary>Gets a license key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadDesigntimeLicense.Dispose">
      <summary>Frees up resources.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadFontStyle">
      <summary>Specifies the font style information applied to the text. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadFontStyle.#ctor(FarPoint.Win.Spread.RegularBoldItalicFontStyle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadFontStyle" /> class.</summary>
      <param name="regularBoldItalic">The RegularBoldItalic style.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadFontStyle.#ctor(FarPoint.Win.Spread.StrikeoutFontStyle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadFontStyle" /> class.</summary>
      <param name="strikeout">The Strikeout style.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadFontStyle.#ctor(FarPoint.Win.Spread.UnderlineFontStyle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadFontStyle" /> class.</summary>
      <param name="underline">The Underline style.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadFontStyle.#ctor(FarPoint.Win.Spread.RegularBoldItalicFontStyle,FarPoint.Win.Spread.StrikeoutFontStyle,FarPoint.Win.Spread.UnderlineFontStyle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadFontStyle" /> class.</summary>
      <param name="regularBoldItalic">The RegularBoldItalic style.</param>
      <param name="strikeout">The Strikeout style.</param>
      <param name="underline">The Underline style.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadFontStyle.RegularBoldItalic">
      <summary>Gets the regular, bold, or italic font style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadFontStyle.Strikeout">
      <summary>Gets the strikeout font style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadFontStyle.Underline">
      <summary>Gets the underline font style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadFontStyle.GetWindowFontSyle">
      <summary>Gets the font style.</summary>
      <returns>A <see cref="T:System.Drawing.FontStyle" /> object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadFontStyle.IsFontStyleSet">
      <summary>Gets whether the font style is set.</summary>
      <returns>true if it is set; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadHScrollBar">
      <summary>Represents the horizontal scroll bar for the view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadHScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadHScrollBar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadHScrollBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new FarPoint horizontal scroll bar for the view from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadHScrollBar.#ctor(FarPoint.Win.Spread.FpScrollBarButtonCollection)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadHScrollBar" /> class.</summary>
      <param name="buttons">A collection of buttons of the FarPoint horizontal scroll bar</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadHScrollBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">Serialization information.</param>
      <param name="context">Streaming context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadHScrollBar.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
      <param name="m">Message</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadRuntimeLicense">
      <summary>Represents a GrapeCity Spread runtime license.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadRuntimeLicense.#ctor(System.Type)">
      <summary>Creates a new runtime license of the specified type.</summary>
      <param name="type">Type</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadRuntimeLicense.LicenseKey">
      <summary>Gets the license key.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadRuntimeLicense.Dispose">
      <summary>Frees up resources.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadSkin">
      <summary>Represents the skin of the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor">
      <summary>Creates a new Spread skin with default values (internal use only).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(FarPoint.Win.Spread.SpreadSkin)">
      <summary>Creates a new Spread skin from the specified source.</summary>
      <param name="source">Source skin for the Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(System.String,FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a new Spread skin from the specified Spread component.</summary>
      <param name="name">Name of the skin</param>
      <param name="spread">Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(System.String,FarPoint.Win.Spread.IInterfaceRenderer,FarPoint.Win.Spread.IScrollBarRenderer,FarPoint.Win.Spread.IFocusIndicatorRenderer,FarPoint.Win.Spread.ISelectionRenderer,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
      <summary>Creates a new Spread skin from the specified values.</summary>
      <param name="name">Name of the skin</param>
      <param name="interfaceRenderer">Interface renderer</param>
      <param name="scrollBarRenderer">Scroll bar renderer</param>
      <param name="focusIndicatorRenderer">Focus indicator renderer</param>
      <param name="selectionRenderer">Selection renderer</param>
      <param name="defaultStyle">Default style</param>
      <param name="columnHeaderDefaultStyle">Column header default style</param>
      <param name="rowHeaderDefaultStyle">Row header default style</param>
      <param name="cornerDefaultStyle">Corner default style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(System.String,FarPoint.Win.Spread.IInterfaceRenderer,FarPoint.Win.Spread.IScrollBarRenderer,FarPoint.Win.Spread.IFocusIndicatorRenderer,FarPoint.Win.Spread.ISelectionRenderer,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
      <summary>Creates a new Spread skin from the specified values.</summary>
      <param name="name">Name of the skin</param>
      <param name="interfaceRenderer">Interface renderer</param>
      <param name="scrollBarRenderer">Scroll bar renderer</param>
      <param name="focusIndicatorRenderer">Focus indicator renderer</param>
      <param name="selectionRenderer">Selection renderer</param>
      <param name="defaultStyle">Default style</param>
      <param name="columnHeaderDefaultStyle">Column header default style</param>
      <param name="columnFooterDefaultStyle">Column footer default style</param>
      <param name="rowHeaderDefaultStyle">Row header default style</param>
      <param name="cornerDefaultStyle">Corner default style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(System.String,FarPoint.Win.Spread.IInterfaceRenderer,FarPoint.Win.Spread.IScrollBarRenderer,FarPoint.Win.Spread.IFocusIndicatorRenderer,FarPoint.Win.Spread.ISelectionRenderer,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
      <summary>Creates a new Spread skin from the specified values.</summary>
      <param name="name">Name of the skin</param>
      <param name="interfaceRenderer">Interface renderer</param>
      <param name="scrollBarRenderer">Scroll bar renderer</param>
      <param name="focusIndicatorRenderer">Focus indicator renderer</param>
      <param name="selectionRenderer">Selection renderer</param>
      <param name="defaultStyle">Default style</param>
      <param name="columnHeaderDefaultStyle">Column header default style</param>
      <param name="columnFooterDefaultStyle">Column footer default style</param>
      <param name="rowHeaderDefaultStyle">Row header default style</param>
      <param name="cornerDefaultStyle">Corner header default style</param>
      <param name="filterBarDefaultStyle">Filter bar default style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(System.String,FarPoint.Win.Spread.IInterfaceRenderer,FarPoint.Win.Spread.IScrollBarRenderer,FarPoint.Win.Spread.IFocusIndicatorRenderer,FarPoint.Win.Spread.ISelectionRenderer,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
      <summary>Creates a new Spread skin from the specified values.</summary>
      <param name="name">Name of the skin</param>
      <param name="interfaceRenderer">Interface renderer</param>
      <param name="scrollBarRenderer">Scroll bar renderer</param>
      <param name="focusIndicatorRenderer">Focus indicator renderer</param>
      <param name="selectionRenderer">Selection renderer</param>
      <param name="defaultStyle">Default style</param>
      <param name="columnHeaderDefaultStyle">Column header default style</param>
      <param name="columnFooterDefaultStyle">Column footer default style</param>
      <param name="rowHeaderDefaultStyle">Row header default style</param>
      <param name="cornerDefaultStyle">Corner header default style</param>
      <param name="cornerFooterDefaultStyle">Corner footer default style</param>
      <param name="filterBarDefaultStyle">Filter bar default style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.#ctor(System.String,FarPoint.Win.Spread.IInterfaceRenderer,FarPoint.Win.Spread.IScrollBarRenderer,FarPoint.Win.Spread.IFocusIndicatorRenderer,FarPoint.Win.Spread.ISelectionRenderer,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.StatusBarSkin)">
      <summary>Creates a new Spread skin from the specified values.</summary>
      <param name="name">Name of the skin</param>
      <param name="interfaceRenderer">Interface renderer</param>
      <param name="scrollBarRenderer">Scroll bar renderer</param>
      <param name="focusIndicatorRenderer">Focus indicator renderer</param>
      <param name="selectionRenderer">Selection renderer</param>
      <param name="defaultStyle">Default style</param>
      <param name="columnHeaderDefaultStyle">Column header default style</param>
      <param name="columnFooterDefaultStyle">Column footer default style</param>
      <param name="rowHeaderDefaultStyle">Row header default style</param>
      <param name="cornerDefaultStyle">Corner header default style</param>
      <param name="cornerFooterDefaultStyle">Corner footer default style</param>
      <param name="filterBarDefaultStyle">Filter bar default style</param>
      <param name="statusBarSkin">Status bar skin</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.Applying">
      <summary>Returns true if the skin is being applied to an FpSpread or SheetView object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.ColumnFooterDefaultStyle">
      <summary>Gets or sets the column footer default renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.ColumnFooterRenderer">
      <summary>Default Renderer for paint cells in ColumnFooter area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.ColumnHeaderDefaultStyle">
      <summary>Gets or sets the column header default renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.ColumnHeaderRenderer">
      <summary>Default Renderer for paint cells in ColumnHeader area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.CornerDefaultStyle">
      <summary>Gets or sets the corner default renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.CornerFooterDefaultStyle">
      <summary>Gets or sets the corner footer default renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.CornerRenderer">
      <summary>Default Renderer for paint cells in Corner area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.DefaultColumnFooterRowHeight">
      <summary>Gets default height of columnFooter row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.DefaultColumnHeaderRowHeight">
      <summary>Gets default height of columnHeader row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.DefaultRowHeaderColumnWidth">
      <summary>Gets default width of rowHeader column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.DefaultStyle">
      <summary>Gets or sets the cells default renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.FilterBarDefaultStyle">
      <summary>Gets or sets the filter bar default style of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.FilterBarHeaderDefaultStyle">
      <summary>Gets or sets the filter bar header default style of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.FocusRenderer">
      <summary>Gets or sets the focus indicator renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.FooterCornerRenderer">
      <summary>Default Renderer for paint cells in ColumnFooterCorner area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.InterfaceRenderer">
      <summary>Gets or sets the interface renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.Name">
      <summary>Gets or sets the name of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.Renderer">
      <summary>Default Renderer for paint cells in viewport area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.RowHeaderDefaultStyle">
      <summary>Gets or sets the row header default renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.RowHeaderRenderer">
      <summary>Default Renderer for paint cells in RowHeader area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.ScrollBarRenderer">
      <summary>Gets or sets the scroll bar renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.SelectionRenderer">
      <summary>Gets or sets the selection renderer of the Spread skin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkin.StatusBarSkin">
      <summary>Gets or sets the filter bar default style of the Spread skin.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Apply(FarPoint.Win.Spread.FpSpread)">
      <summary>Applies the settings to the Spread component.</summary>
      <param name="spread">Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Apply(FarPoint.Win.Spread.SheetView)">
      <summary>Applies the settings to the sheet (SheetView object).</summary>
      <param name="sheet">Sheet (SheetView object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.CopyFrom(FarPoint.Win.Spread.SpreadSkin)">
      <summary>Copies settings from another Spread skin instance.</summary>
      <param name="skin">Spread skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the skin from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Equals(System.Object)">
      <summary>Returns whether the specified object is equivalent to this skin.</summary>
      <param name="o">Object to compare to</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.GetBackColor">
      <summary>Returns backColor of Cells on viewport</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.GetForeColor">
      <summary>Returns foreColor of cells on viewport</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.GetHashCode">
      <summary>Returns the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.GetHeaderBackColor">
      <summary>Returns BackColor of cells on headers</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.GetHeaderForeColor">
      <summary>Returns foreColor of cells on headers</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Load(System.String)">
      <summary>Loads a Spread skin from a file.</summary>
      <param name="fileName">Path and file name from which to load the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Load(System.IO.Stream)">
      <summary>Loads a Spread skin from a stream.</summary>
      <param name="stream">Stream from which to load the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.OnChanged(System.EventArgs)">
      <summary>Raises the changed event.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> instance that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Save(FarPoint.Win.Spread.SpreadSkin,System.String)">
      <summary>Saves a Spread skin to a file.</summary>
      <param name="skin">Skin to save</param>
      <param name="fileName">Path and file name to which to save the skin, overwriting the file if it already exists</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Save(FarPoint.Win.Spread.SpreadSkin,System.IO.Stream)">
      <summary>Saves a Spread skin to a stream.</summary>
      <param name="skin">Name of the skin</param>
      <param name="stream">Stream to which to save the skin</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkin.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the skin to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="E:FarPoint.Win.Spread.SpreadSkin.Changed">
      <summary>Raised when the skin is changed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadSkinsForm">
      <summary>Represents a Spread component skins form.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkinsForm.#ctor">
      <summary>Creates a Spread component skins form with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkinsForm.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a Spread skins form with the specified Spread component.</summary>
      <param name="target">Target Spread component</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSkinsForm.HelpBtn">
      <summary>Internal use only. Gets the help button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkinsForm.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkinsForm.Finalize">
      <summary>The destructor method.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkinsForm.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyUp event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.KeyEventArgs" /> contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSkinsForm.OnLoad(System.EventArgs)">
      <summary>Occurs when the skin is loaded.</summary>
      <param name="e">EventArgs object with event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadSoftwareSecureLicenseProvider">
      <summary>Represents the license provider for Software Secure.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSoftwareSecureLicenseProvider.#ctor">
      <summary>Creates a new license provider for Software Secure.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSoftwareSecureLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <summary>Gets the licence.</summary>
      <param name="context">License context</param>
      <param name="type">Type</param>
      <param name="instance">Instance</param>
      <param name="allowExceptions">Whether to allow exceptions</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadSparklineRenderes">
      <summary>Read-only collection of default (built-in) sparkline renderers. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadSparklineRenderes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadSparklineRenderes" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSparklineRenderes.ColumnSparklineRenderer">
      <summary>Represents the built-in sparkline renderer for the column sparkline.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSparklineRenderes.LineSparklineRenderer">
      <summary>Represents the built-in sparkline renderer for the line sparkline.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadSparklineRenderes.WinLossSparklineRenderer">
      <summary>Represents the built-in sparkline renderer for the win/loss sparkline.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadTouchStrip">
      <summary>Represents the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> for <see cref="T:FarPoint.Win.Spread.FpSpread" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> instance.</summary>
      <param name="spread">The FpSpread in which you try to show the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.OnOpened(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opened">ToolStripDropDown.Opened</see> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.Show(System.Drawing.Point)">
      <summary>Positions the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> relative to the Spread location.</summary>
      <param name="tapPosition">The horizontal and vertical location of the screen's upper-left corner, in pixels.</param>
      <remarks>The position is adjusted to avoid the finger to cover the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> by default.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.Show(System.Int32,System.Int32)">
      <summary>Positions the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> relative to the Spread coordinates.</summary>
      <param name="x">The horizontal screen coordinate, in pixels.</param>
      <param name="y">The vertical screen coordinate, in pixels.</param>
      <remarks>The position is adjusted to avoid the finger to cover the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> by default.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Positions the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> relative to the specified control location.</summary>
      <param name="control">The control that is the reference point for the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> position.</param>
      <param name="x">The horizontal screen coordinate, in pixels.</param>
      <param name="y">The vertical screen coordinate, in pixels.</param>
      <remarks>The position is adjusted to avoid the finger to cover the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> by default.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
      <summary>Positions the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> relative to the specified control at the specified location and with the specified direction relative to the parent control.</summary>
      <param name="control">The control that is the reference point for the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> position.</param>
      <param name="tapPosition">The horizontal and vertical location of the reference control's upper-left corner, in pixels.</param>
      <param name="direction">One of the System.Windows.Forms.ToolStripDropDownDirection values.</param>
      <remarks>The position is adjusted to avoid the finger to cover the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> by default.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.Show(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>Positions the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> relative to the specified control location.</summary>
      <param name="control">The control that is the reference point for the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> position.</param>
      <param name="tapPosition">The horizontal and vertical location of the reference control's upper-left corner, in pixels.</param>
      <remarks>The position is adjusted to avoid the finger to cover the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> by default.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadTouchStrip.Show(System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
      <summary>Positions the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> relative to the specified control location and with the specified direction relative to the parent control.</summary>
      <param name="tapPosition">The horizontal and vertical location of the reference control's upper-left corner, in pixels.</param>
      <param name="direction">One of the System.Windows.Forms.ToolStripDropDownDirection values.</param>
      <remarks>The position is adjusted to avoid the finger to cover the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" /> by default.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadView">
      <summary>Represents a view of the spreadsheet display.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.#ctor">
      <summary>Creates a new view for the spreadsheet display.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a new view for the spreadsheet display in the specified control.</summary>
      <param name="owner">FpSpread component that owns the view</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a view of the spreadsheet display from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.CollapseImage">
      <summary>Specifies the index, 2, for the image for the collapse icon in a hiearchical display. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.CollapseImageDisabled">
      <summary>Specifies the index, 3, for the image for the disabled collapse icon in a hiearchical display. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EditingRowSelector">
      <summary>Specifies the index, 19, for the image for the row editing indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterActive">
      <summary>Specifies the index, 28, for the image for the enhanced active filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterActiveDisabled">
      <summary>Specifies the index, 29, for the image for the enhanced disabled active filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterInactive">
      <summary>Specifies the index, 30, for the image for the enhanced inactive filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterInactiveDisabled">
      <summary>Specifies the index, 31, for the image for the enhanced disabled inactive filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterSortAscending">
      <summary>Specifies the index, 20, for the image for the enhanced ascending filter sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterSortAscendingDisabled">
      <summary>Specifies the index, 21, for the image for the enhanced disabled ascending filter sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterSortDescending">
      <summary>Specifies the index, 24, for the image for the enhanced descending filter sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedFilterSortDescendingDisabled">
      <summary>Specifies the index, 25, for the image for the enhanced disabled descending filter sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedSortAscending">
      <summary>Specifies the index, 22, for the image for the enhanced ascending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedSortAscendingDisabled">
      <summary>Specifies the index, 23, for the image for the enhanced disabled ascending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedSortDescending">
      <summary>Specifies the index, 26, for the image for the enhanced descending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.EnhancedSortDescendingDisabled">
      <summary>Specifies the index, 27, for the image for the enhanced disabled descending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.ExpandImage">
      <summary>Specifies the index, 0, for the image for the expand icon in a hiearchical display. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.ExpandImageDisabled">
      <summary>Specifies the index, 1, for the image for the disabled expand icon in a hiearchical display. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterActive">
      <summary>Specifies the index, 10, for the image for the active filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterActiveDisabled">
      <summary>Specifies the index, 11, for the image for the disabled active filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterBarFilterActive">
      <summary>Specifies the index, 16, for the image for the active filterbar indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterBarFilterDateTime">
      <summary>Specifies the index, 18, for the image for the filterbar calendar indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterBarFilterInactive">
      <summary>Specifies the index, 17, for the image for the inactive filterbar indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterInactive">
      <summary>Specifies the index, 8, for the image for the inactive filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.FilterInactiveDisabled">
      <summary>Specifies the index, 9, for the image for the disabled inactive filter indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.RowSelectorImage">
      <summary>Specifies the index, 14, for the image for the row selector. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.RowSelectorImageDisabled">
      <summary>Specifies the index, 15, for the image for the disabled row selector. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.SortAscendingImage">
      <summary>Specifies the index, 4, for the image for the ascending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.SortAscendingImageDisabled">
      <summary>Specifies the index, 5, for the image for the disabled ascending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.SortDescendingImage">
      <summary>Specifies the index, 6, for the image for the descending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.SortDescendingImageDisabled">
      <summary>Specifies the index, 7, for the image for the disabled descending sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.SortUnsortedImage">
      <summary>Specifies the index, 12, for the image for the unsorted sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.SortUnsortedImageDisabled">
      <summary>Specifies the index, 13, for the image for the disabled unsorted sort indicator. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.tabButtonTheme">
      <summary>Internal use only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadView.tabTheme">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ActiveSheetIndex">
      <summary>Gets or sets the active sheet in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowCellContentFloat">
      <summary>Gets or sets whether to allow the cell content to float.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowCellOverflow">
      <summary>Gets or sets whether data can overflow into adjacent empty cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowColumnMove">
      <summary>Gets or sets whether to allow the user to move columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowColumnMoveMultiple">
      <summary>Gets or sets whether to allow the user to move multiple columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowDragDrop">
      <summary>Gets or sets whether to allow the user to drag and drop a range of cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowDragFill">
      <summary>Gets or sets whether to allow the user to drag and fill cells with the contents of a cell or cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowEditOverflow">
      <summary>Gets or sets whether data can overflow into adjacent empty cells while edit mode is on in a cell in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowEditorReservedLocations">
      <summary>Gets or sets whether cell editor reserved mouse locations are allowed.</summary>
      <remarks>Setting this property to true will prevent cell editors from showing custom cursors for reserved locations inside the cell, and prevent cell editors from entering edit mode on a single click in a reserved location (the user will always have to double-click to enter edit mode in a cell).</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowRowMove">
      <summary>Gets or sets whether to allow the user to move rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowRowMoveDataAllowAddNew">
      <summary>Gets or sets a value that indicates whether to allow moving the add new row or asterisk row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowRowMoveMultiple">
      <summary>Gets or sets whether to allow the user to move multiple rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowSheetMove">
      <summary>Gets or sets whether sheets can be moved by dragging and dropping the sheet tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowUndo">
      <summary>Gets or sets whether to allow the user to undo edit operations.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowUserFormulas">
      <summary>Gets or sets whether to allow the user to enter formulas in a cell in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AllowUserZoom">
      <summary>Gets or sets whether to allow the user to scale the view using the Ctrl key and the mouse wheel.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AutoClipboard">
      <summary>Gets or sets whether to allow shortcut keys for Clipboard actions in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AutoFitColumnOptions">
      <summary>Gets or sets the behavior of automatic fit when double-clicking the right edge of the column header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AutoFitRowOptions">
      <summary>Gets or sets the behavior of automatic fit when double-clicking the bottom edge of the row header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.AutoImeMode">
      <summary>Gets or sets whether to use the CharacterSet property on non-edit mode cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.BorderCollapse">
      <summary>Gets or sets whether adjacent cell borders are collapsed into a single line in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.Bounds">
      <summary>Gets the size and location of the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ButtonDrawMode">
      <summary>Gets or sets whether to display buttons in button and combo box cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.CellNoteIndicatorRenderer">
      <summary>Gets or sets the cell note indicator renderer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.CellNoteIndicatorVisible">
      <summary>Gets or sets whether the cell note indicator appears in cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.CellSpanSelectionPolicy">
      <summary>Gets or sets the selection model to use when working with a span.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ClipboardOptions">
      <summary>Gets or sets whether headers and the filter bar are included with data in Clipboard actions in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ClipboardPasteToFill">
      <summary>Gets or sets whether a single cell copied to the Clipboard fills the range when pasted from the Clipboard to the component.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ColumnSplitBoxAlignment">
      <summary>Gets or sets the alignment of the column split box relative to the horizontal scroll bar in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ColumnSplitBoxPolicy">
      <summary>Gets or sets when to display the column split box in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.CustomFillSeriesList">
      <summary>Gets the custom list for drag fill in series mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.DragFillDataOnly">
      <summary>Gets or sets a value that indicates whether the drag fill action copies data only.</summary>
      <value>
        <c>true</c> if the drag fill action copies data only; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.EditMode">
      <summary>Gets or sets whether the active cell in the view is in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.EditModePermanent">
      <summary>Gets or sets whether edit mode remains on for any cell in the view when that cell becomes active.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.EditModeReplace">
      <summary>Gets or sets whether the existing text in a cell in the view is selected when the cell enters edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.EditingControl">
      <summary>Gets the contol editing the active cell, or null if the control is not in edit mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.EnableDragFillMenu">
      <summary>Gets or sets a value to show drag fill button and drag fill context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ErrorIconRenderer">
      <summary>Gets or sets the renderer for the error icon.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.FocusRenderer">
      <summary>Gets or sets a renderer for drawing the focus rectangle in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.GroupBarText">
      <summary>Gets or sets the group bar text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.HorizontalScrollBar">
      <summary>Gets the horizontal scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.HorizontalScrollBarHeight">
      <summary>Gets or sets the height of horizontal scroll bars in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.HorizontalScrollBarPolicy">
      <summary>Gets or sets when to display the horizontal scroll bars in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.HorizontalScrollBarSmallChange">
      <summary>Gets or sets the small increment for the horizontal scrollbar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.InterfaceRenderer">
      <summary>Gets or sets the interface renderer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.IsFormulaChanging">
      <summary>Gets a value that indicates whether this instance is due to a formula changing.</summary>
      <value>
        <c>true</c> if this instance is due to a formula changing; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.LeftTab">
      <summary>Gets or sets the left most sheet tab in the tab strip in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.MoveActiveOnFocus">
      <summary>Gets or sets whether the location of the active cell in the view moves when the user moves the focus to the view using the mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.Owner">
      <summary>Gets the Spread component that owns this view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.Parent">
      <summary>Gets the parent (<see cref="T:FarPoint.Win.Spread.SpreadView" /> object) of the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.RangeDragFillMode">
      <summary>Gets or sets the mode the user can use to drag and fill cells in the component using the contents of a cell or cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.RetainSelectionBlock">
      <summary>Gets or sets whether the selected range of cells in the view remains highlighted when the view loses the focus.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.RowSplitBoxAlignment">
      <summary>Gets or set the alignment of the row split box relative to the vertical scroll bar in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.RowSplitBoxPolicy">
      <summary>Gets or sets when to display the row split box in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ScrollBarMaxAlign">
      <summary>Gets or sets the scroll bar alignment with the last row and column of the spreadsheet in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ScrollBarShowMax">
      <summary>Gets or sets whether the user can use the scroll box to scroll through all the columns and rows in the view, or just a limited number of them.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ScrollBarTrackPolicy">
      <summary>Gets or sets how the control scrolls the sheet when the user moves the scroll box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ScrollTipPolicy">
      <summary>Gets or sets whether scroll tips appear when the user moves the scroll box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.SelectionBlockOptions">
      <summary>Gets or sets which types of selections the user can make in the view.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> Specified value is not a valid selection option </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.SelectionRenderer">
      <summary>Gets or sets a renderer for drawing selections in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.Sheets">
      <summary>Gets the sheets in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ShowCellErrors">
      <summary>Gets or sets whether to allow the user to display a cell error using an icon or sticky note for cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ShowDragBandOnMoving">
      <summary>Gets or sets whether the drag band is displayed when moving a row or column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.ShowRowErrors">
      <summary>Gets or sets whether to allow the user to display a row error using an icon or sticky note for cells in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.Skin">
      <summary>Gets or sets the skin for the spread.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.SpreadScaleMode">
      <summary>Gets or sets whether Spread controls automatic scaling with a different system dpi; Spread only supports one dimension so the application should use AutoScaleMode.Dpi for correct scaling, or else scale using the application width.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.SuspendAnimations">
      <summary>Gets or sets whether animations, such as an animated focus renderer, in the view are suspended.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TabStripInsertTab">
      <summary>Gets or sets whether the special insert tab is present on the tab strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TabStripInsertTabImage">
      <summary>Gets or sets the tabstrip insert-tab image.</summary>
      <value>The tabstrip insert-tab image.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TabStripPlacement">
      <summary>Gets or sets the location of the tab strip in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TabStripPolicy">
      <summary>Gets or sets the display policy for the tab strip in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TabStripRatio">
      <summary>Gets or sets the width of the tab strip in the view expressed as a percentage of the overall horizontal width of the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TextTipAppearance">
      <summary>Gets or sets the appearance of text tips in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TextTipDelay">
      <summary>Gets or sets the time (in milliseconds) the control waits before displaying the text tip for the cell or header under the pointer in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.TextTipPolicy">
      <summary>Gets or sets whether to display text tips and the location of the tips in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.UndoManager">
      <summary>Gets or sets the undo manager for the SpreadView.</summary>
      <remarks>Child SpreadView objects use the top-level parent's UndoManager. You can set this property to null to recreate the UndoManager and clear the undo/redo state.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.VerticalScrollBar">
      <summary>Gets the vertical scroll bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.VerticalScrollBarPolicy">
      <summary>Gets or sets when to display the vertical scroll bars in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.VerticalScrollBarSmallChange">
      <summary>Gets or sets the small increment for the vertical scrollbar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.VerticalScrollBarWidth">
      <summary>Gets or sets the width of vertical scroll bars in the view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SpreadView.VisualStyles">
      <summary>Gets or sets whether to use visual styles when rendering objects in the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.AddViewport(System.Int32,System.Int32)">
      <summary>Adds a row or column of viewports.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.AddViewport(System.Int32,System.Int32,System.Int32)">
      <summary>Adds a row or column of viewports.</summary>
      <param name="sheetIndex">Index of sheet to which to add viewports</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.CancelCellEditing">
      <summary>Cancels cell editing in the view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.CancelColumnResizing">
      <summary>Cancels column resizing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.CancelFilterBarEditing">
      <summary>Cancels cell editing in the filter bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.CancelRowResizing">
      <summary>Cancels row resizing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueCellSelecting(System.Int32,System.Int32)">
      <summary>Continues selecting cells to the point of the specified coordinates.</summary>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueColumnResizing(System.Int32)">
      <summary>Continues resizing the column to the specified x-coordinate.</summary>
      <param name="x">X-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueColumnSelecting(System.Int32,System.Int32)">
      <summary>Continues selecting columns to the point at the specified coordinates.</summary>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueDragDropping(System.Int32,System.Int32)">
      <summary>Continues drag and drop to the point of the specified coordinates.</summary>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueDragFilling(System.Int32,System.Int32)">
      <summary>Continues drag and fill to the point of the specified coordinates.</summary>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueFormulaCellRangeMoving(System.Int32,System.Int32)">
      <summary>Continues moving the formula cell range.</summary>
      <param name="x">The x value.</param>
      <param name="y">The y value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueFormulaCellRangeResizing(System.Int32,System.Int32)">
      <summary>Continues the formula cell range resizing.</summary>
      <param name="x">The x value.</param>
      <param name="y">The y value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ContinueTableResizing(System.Int32,System.Int32)">
      <summary>Continues resizing the active <see cref="T:FarPoint.Win.Spread.TableView" />.</summary>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.Dispose">
      <summary>Internal use only. Frees system resources consumed by the SpreadView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.Dispose(System.Boolean)">
      <summary>Internal use only. Frees system resources consumed by the SpreadView.</summary>
      <param name="disposing">Whether disposing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ExpandRow(System.Int32,System.Boolean)">
      <summary>Expands or collapses the specified parent row, which shows or hides the child view in a hierarchical display.</summary>
      <param name="row">Index of parent row to expand or collapse</param>
      <param name="expand">True to expand and show the child sheet; false to collapse and hide the child sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.Finalize">
      <summary>Internal use only. Creates a new view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetActionMap">
      <summary>Gets the action map.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveColumnViewportIndex">
      <summary>Gets the index of the active viewport column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveColumnViewportIndex(System.Int32)">
      <summary>Gets the index of the active viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveRowViewportIndex">
      <summary>Gets the index of the active viewport row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveRowViewportIndex(System.Int32)">
      <summary>Gets the index of the active viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetActiveWorkbook">
      <summary>Gets the active view (<see cref="T:FarPoint.Win.Spread.SpreadView" /> object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetCellFromPixel(System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the cell at the specified pointer location.</summary>
      <param name="x">X-coordinate (in pixels) of the pointer location</param>
      <param name="y">Y-coordinate (in pixels) of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetCellFromPixel(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the cell at the specified pointer location in the view.</summary>
      <param name="rowViewportIndex">Row index in the viewport</param>
      <param name="columnViewportIndex">Column index in the viewport</param>
      <param name="x">X-coordinate (in pixels) of the pointer location</param>
      <param name="y">Y-coordinate (in pixels) of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetCellRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the rectangle of the cell.</summary>
      <param name="rowViewportIndex">Index of the row of the viewport</param>
      <param name="columnViewportIndex">Index of the column of the viewport</param>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetChildWorkbooks">
      <summary>Gets all child views (<see cref="T:FarPoint.Win.Spread.SpreadView" /> objects) that have been created.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnFooterCellRectangle(System.Int32,System.Int32,System.Int32)">
      <summary>Gets the rectangle of the cell in the column footer.</summary>
      <param name="columnViewportIndex">Index of the column of the viewport</param>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellFromPixel(System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the column header cell at the specified pointer location.</summary>
      <param name="x">X-coordinate (in pixels) of the pointer location</param>
      <param name="y">Y-coordinate (in pixels) of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellFromPixel(System.Int32,System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the column header cell at the specified pointer location.</summary>
      <param name="columnViewportIndex">Column index in the viewport</param>
      <param name="x">X-coordinate (in pixels) of the pointer location</param>
      <param name="y">Y-coordinate (in pixels) of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderCellRectangle(System.Int32,System.Int32,System.Int32)">
      <summary>Gets the rectangle of the cell in the column header.</summary>
      <param name="columnViewportIndex">Index of the column of the viewport</param>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnHeaderRectangle(System.Int32)">
      <summary>Gets the rectangle of the column header.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the column header.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnRangeGroupHeight">
      <summary>Gets the height of the column range group.</summary>
      <returns>Height of the column range group.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnSplitBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the column split bar.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the column split bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnSplitBoxRectangle(System.Int32)">
      <summary>Gets the rectangle of the column split box.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the column split box.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnViewportCount">
      <summary>Gets the number of viewport columns in the active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnViewportCount(System.Int32)">
      <summary>Gets the number of viewport columns in the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetColumnViewportIndexFromX(System.Int32)">
      <summary>Gets the index of the viewport column for the specified coordinate for the active sheet.</summary>
      <param name="x">X coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetCursor(FarPoint.Win.Spread.CursorType)">
      <summary>Gets the pointer displayed over a specific area in the view.</summary>
      <param name="index">Index of the pointer type (for which part of the control)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetFilterBarHeaderRectangle">
      <summary>Gets the rectangle of the column header.</summary>
      <returns>Rectangle of the filter bar header.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetFilterBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the filter bar.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the filter bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetFloatCell(System.Int32,System.Int32)">
      <summary>Returns the floating cell range for the specified cell.</summary>
      <param name="row">The row index of the cell</param>
      <param name="column">The column index of the cell</param>
      <returns>A CellRange object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetFloatCells">
      <summary>Returns all floating cell ranges for the view.</summary>
      <returns>An array list of CellRange objects</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetHorizontalScrollBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the horizontal scroll bar.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <returns>Rectangle of the horizontal scroll bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetImage(System.Int32)">
      <summary>Gets the graphic image used in the specified part of the user interface.</summary>
      <param name="id">Unique identifier that specifies which part of the interface in which the image is used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMap(FarPoint.Win.Spread.InputMapMode)">
      <summary>Gets the input map defined for the specified focus mode for the view.</summary>
      <param name="inputMapMode">Focus mode (control or child of the control)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Gets the input map defined for the specified focus mode and operation mode for the view.</summary>
      <param name="inputMapMode">Focus mode (control or child of the control)</param>
      <param name="operationMode">Operation mode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMapBuildIn(FarPoint.Win.Spread.SpreadView.SetInputMapOption,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Gets the built-in input map (internal use only).</summary>
      <param name="option">The option.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMapBuildInWhenChildHasFocus">
      <summary>Gets the input map build when child has focus (internal use only).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMapBuildInWhenShapeHasFocus">
      <summary>Gets the input map build when shape has focus (internal use only).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMapWhenChildHasFocus">
      <summary>Gets the input map for the view for when a child object has focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetInputMapWhenShapeHasFocus">
      <summary>Gets the input map for the view for when a shape has focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetMaximumCellOverflowWidth">
      <summary>Gets the maximum cell overflow width in pixels for cells in the view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetMergeCell(System.Int32,System.Int32)">
      <summary>Returns the merged cell range for the specified cell.</summary>
      <param name="row">The row index of the cell</param>
      <param name="column">The column index of the cell</param>
      <returns>A CellRange object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetMergeCells">
      <summary>Returns all merged cell ranges for the view.</summary>
      <returns>An array list of CellRange objects</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the view to the SerializationInfo object.</summary>
      <param name="info">SerializationInfo object</param>
      <param name="context">StreamingContext object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRootWorkbook">
      <summary>Gets the top view (<see cref="T:FarPoint.Win.Spread.SpreadView" /> object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellFromPixel(System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the row header cell at the specified pointer location.</summary>
      <param name="x">X-coordinate (in pixels) of the pointer location</param>
      <param name="y">Y-coordinate (in pixels) of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellFromPixel(System.Int32,System.Int32,System.Int32)">
      <summary>Gets the row and column indexes of the row header cell at the specified pointer location.</summary>
      <param name="rowViewportIndex">Row index in the viewport</param>
      <param name="x">X-coordinate (in pixels) of the pointer location</param>
      <param name="y">Y-coordinate (in pixels) of the pointer location</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderCellRectangle(System.Int32,System.Int32,System.Int32)">
      <summary>Gets the rectangle of the cell in the row header.</summary>
      <param name="rowViewportIndex">Index of the row of the viewport</param>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowHeaderRectangle(System.Int32)">
      <summary>Gets the rectangle of the row header.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the row header.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowRangeGroupWidth">
      <summary>Gets the width of the row range group.</summary>
      <returns>Width of the row range group.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowSplitBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the row split bar.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the row split bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowSplitBoxRectangle(System.Int32)">
      <summary>Gets the rectangle of the row split box.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the row split box.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowViewportCount">
      <summary>Gets the number of viewport rows in the active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowViewportCount(System.Int32)">
      <summary>Gets the number of viewport rows in the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetRowViewportIndexFromY(System.Int32)">
      <summary>Gets the index of the viewport row for the specified coordinate for the active sheet.</summary>
      <param name="y">Y coordinate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetSheetTabRectangle(System.Int32)">
      <summary>Gets the rectangle of the tab associated with a sheet for the view.</summary>
      <param name="sheetIndex">Sheet index for which to retrieve a tab rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetSheetView">
      <summary>Gets the active sheet view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetSpreadView(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32)">
      <summary>Gets the view at the specified sheet and viewport.</summary>
      <param name="sheetView">Sheet (SheetView object)</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetTabSplitBoxRectangle">
      <summary>Gets the rectangle of the split box on the tab strip.</summary>
      <returns>Rectangle of the split box on the tab strip.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetTabStripRectangle">
      <summary>Gets the rectangle of the tab strip.</summary>
      <returns>Rectangle of the tab strip.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetVerticalScrollBarRectangle(System.Int32)">
      <summary>Gets the rectangle of the vertical scroll bar.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <returns>Rectangle of the vertical scroll bar.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportBottomRow(System.Int32)">
      <summary>Gets the index of the bottom row of the specified viewport row.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportBottomRow(System.Int32,System.Int32)">
      <summary>Gets the index of the bottom row of the specified viewport row.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportHeight(System.Int32)">
      <summary>Gets the height of the specified viewport row for the active sheet.</summary>
      <param name="rowViewportIndex">Index of the viewport row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportHeight(System.Int32,System.Int32)">
      <summary>Gets the height of the specified viewport row of the specified sheet.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="rowViewportIndex">Index of the viewport row</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportLeftColumn(System.Int32)">
      <summary>Gets the index of the left most column of the specified viewport column.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportLeftColumn(System.Int32,System.Int32)">
      <summary>Gets the index of the left most column of the specified viewport column.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportLeftOffset(System.Int32)">
      <summary>Gets the offset of the view port from a particular column to the left.</summary>
      <param name="columnViewportIndex">Column index</param>
      <returns>An <see cref="T:System.Int32" /> value that represents the offset</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredHeight(System.Int32)">
      <summary>Gets the maximum height for the viewport row.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredHeight(System.Int32,System.Int32)">
      <summary>Gets the maximum height for the viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredWidth(System.Int32)">
      <summary>Gets the maximum width for the viewport column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportPreferredWidth(System.Int32,System.Int32)">
      <summary>Gets the maximum width for the viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRectangle(System.Int32,System.Int32)">
      <summary>Gets the rectangle of the viewport.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex" />
      <returns>Rectangle of the viewport.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRightColumn(System.Int32)">
      <summary>Gets the index of the right most column of the specified viewport column.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportRightColumn(System.Int32,System.Int32)">
      <summary>Gets the index of the right most column of the specified viewport column.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportTopOffset(System.Int32)">
      <summary>Get offset of the view port from a particular row to the top.</summary>
      <param name="rowViewportIndex">Row index</param>
      <returns>An <see cref="T:System.Int32" /> value that represents the offset</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportTopRow(System.Int32)">
      <summary>Gets the index of the top row of the specified viewport row.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportTopRow(System.Int32,System.Int32)">
      <summary>Gets the index of the top row of the specified viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportWidth(System.Int32)">
      <summary>Gets the width of the specified viewport column for the active sheet.</summary>
      <param name="columnViewportIndex">Index of the viewport column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportWidth(System.Int32,System.Int32)">
      <summary>Gets the width of the specified viewport column of the specified sheet.</summary>
      <param name="sheetIndex">Index of the sheet</param>
      <param name="columnViewportIndex">Index of the viewport column</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportX(System.Int32)">
      <summary>Gets the left coordinate of the specified viewport column for the active sheet.</summary>
      <param name="columnViewportIndex">Index of the viewport column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GetViewportY(System.Int32)">
      <summary>Gets the top coordinate of the specified viewport row for the active sheet.</summary>
      <param name="rowViewportIndex">Index of the viewport row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.GoalSeek(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Attempts to find a value for one cell that will produce the desired formula result in another cell.</summary>
      <param name="variableSheet">Sheet index of cell that contains value to adjust</param>
      <param name="variableRow">Row index of cell that contains value to adjust</param>
      <param name="variableColumn">Column index of cell that contains value to adjust</param>
      <param name="formulaSheet">Sheet index of cell that contains formula</param>
      <param name="formulaRow">Row index of cell that contains formula</param>
      <param name="formulaColumn">Column index of cell that contains formula</param>
      <param name="desiredResult">Formula result you wish to achieve</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.HideChartIndicator">
      <summary>Hides the chart indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.HideDependents(System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only. Hides the dependents.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.HideDependents(System.Int32)">
      <summary>Internal use only. Hides all dependents.</summary>
      <param name="sheetIndex">Sheet index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.HidePrecedents(System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only. Hides the precedents.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.HidePrecedents(System.Int32)">
      <summary>Internal use only. Hides the precedents.</summary>
      <param name="sheetIndex">Sheet index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.HitTest(System.Int32,System.Int32)">
      <summary>Returns information about the given location.</summary>
      <param name="x">The x value</param>
      <param name="y">The y value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.Invalidate">
      <summary>Invalidates the SpreadView and causes it to repaint.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified rectangle.</summary>
      <param name="r" />
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateCells(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateColumnFooterCells(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateColumnHeaderCells(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateCorner">
      <summary>Invalidates the sheet corner.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateFilterBar">
      <summary>Invalidates filter bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateFilterBar(System.Int32)">
      <summary>Invalidates the filter bar in the specific column viewport.</summary>
      <param name="columnViewPortIndex">Index of column viewport</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateFilterBar(System.Int32,System.Int32)">
      <summary>Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateFilterBarHeader">
      <summary>Invalidates filter bar header.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateFooterCorner">
      <summary>Invalidates the column footer corner.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.InvalidateRowHeaderCells(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Invalidates row header cells.</summary>
      <param name="row">Starting row index</param>
      <param name="column">Starting column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.IsListSelection">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFile(System.String,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified operation mode.</summary>
      <param name="fileName">Name of the file.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFile(System.IO.Stream,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified operation mode.</summary>
      <param name="stream">The file stream.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFile(System.String,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified input map mode and operation mode.</summary>
      <param name="fileName">Name of the file.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFile(System.IO.Stream,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Loads the XML input map file using the specified input map mode and operation mode.</summary>
      <param name="stream">The file stream.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFile(System.String)">
      <summary>Loads the XML input map file.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFile(System.IO.Stream)">
      <summary>Loads the XML input map file.</summary>
      <param name="stream">The stream of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFileWhenChildHasFocus(System.String)">
      <summary>Loads the XML input map file when the child has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFileWhenChildHasFocus(System.IO.Stream)">
      <summary>Loads the XML input map file when the child has focus.</summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFileWhenShapeHasFocus(System.String)">
      <summary>Loads the XML input map file when the shape has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.LoadXmlInputMapFileWhenShapeHasFocus(System.IO.Stream)">
      <summary>Loads the XML input map file when the shape has focus.</summary>
      <param name="stream">The stream of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.OnInkNotationExit(System.Object,System.EventArgs)">
      <summary>Occurs when exiting ink notation.</summary>
      <param name="o">Source object</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.OnInkNotationSave(System.Object,System.EventArgs)">
      <summary>Occurs when saving from ink notation.</summary>
      <param name="o">Source object</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.RemoveViewport(System.Int32,System.Int32)">
      <summary>Removes a row or column of viewports.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.RemoveViewport(System.Int32,System.Int32,System.Int32)">
      <summary>Removes a row or column of viewports.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.Reset">
      <summary>Resets the active view to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFile(System.String,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Saves the XML input map file.</summary>
      <param name="fileName">Name of the file.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFile(System.IO.Stream,FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode)">
      <summary>Saves the XML input map file.</summary>
      <param name="stream">The file stream.</param>
      <param name="inputMapMode">The input map mode.</param>
      <param name="operationMode">The operation mode.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFile(System.String)">
      <summary>Saves the XML input map file.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFile(System.IO.Stream)">
      <summary>Saves the XML input map file.</summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFileWhenChildHasFocus(System.String)">
      <summary>Saves the XML input map file when the child has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFileWhenChildHasFocus(System.IO.Stream)">
      <summary>Saves the XML input map file when the child has focus.</summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFileWhenShapeHasFocus(System.String)">
      <summary>Saves the XML input map file when the shape has focus.</summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SaveXmlInputMapFileWhenShapeHasFocus(System.IO.Stream)">
      <summary>Saves the XML input map file when the shape has focus.</summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetActionMap(FarPoint.Win.Spread.ActionMap)">
      <summary>Sets the action map.</summary>
      <param name="value">New action map</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetActiveViewport(System.Int32,System.Int32)">
      <summary>Sets the active viewport.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetActiveViewport(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the active viewport for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetActiveWorkbook(FarPoint.Win.Spread.SpreadView)">
      <summary>Sets the active SpreadView to the specified object. If the workbook passed in is null, sets this object to be the active SpreadView.</summary>
      <param name="workbook">SpreadView object workbook</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetCursor(FarPoint.Win.Spread.CursorType,System.Windows.Forms.Cursor)">
      <summary>Sets the pointer displayed over a specific area at a specific time.</summary>
      <param name="index">Index of the pointer type (for which part of the control)</param>
      <param name="cursor">Image (Cursor object) to paint the pointer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetImage(System.Int32,System.Drawing.Image)">
      <summary>Sets the specified graphic for a specified part of the user interface.</summary>
      <param name="id">Unique identifier of the part of the user interface</param>
      <param name="url">Image object that contains the graphic image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetImageDPISupport(System.Int32,FarPoint.Win.DPISupporting.MultiScalingBitmapManager)">
      <summary>Sets the multiscaling versions of specified graphic for a specified part of the user interface.</summary>
      <param name="id">Unique identifier of the part of the user interface</param>
      <param name="imageManager">The MultiScalingImageManager object that help retrieve multiscaling versio of the graphic image.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map for the view for the specified focus mode.</summary>
      <param name="inputMapMode">Focus mode (control or child of the control)</param>
      <param name="value">
        <see cref="T:FarPoint.Win.Spread.InputMap" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMap(FarPoint.Win.Spread.InputMapMode,FarPoint.Win.Spread.OperationMode,FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map for the view for the specified focus mode and operation mode.</summary>
      <param name="inputMapMode">Focus mode (control or child of the control)</param>
      <param name="operationMode">Operation mode</param>
      <param name="value">
        <see cref="T:FarPoint.Win.Spread.InputMap" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMapToOtherSpreadView(FarPoint.Win.Spread.SpreadView)">
      <summary>Sets the input maps of this spreadview to another spread view.</summary>
      <param name="otherSpreadView">The other spread view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMapWhenChildHasFocus(FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map for the view for when a child object has focus.</summary>
      <param name="value">
        <see cref="T:FarPoint.Win.Spread.InputMap" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetInputMapWhenShapeHasFocus(FarPoint.Win.Spread.InputMap)">
      <summary>Sets the input map for the view for when a shape has focus.</summary>
      <param name="value">
        <see cref="T:FarPoint.Win.Spread.InputMap" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetMaximumCellOverflowWidth(System.Int32)">
      <summary>Sets the maximum cell overflow width in pixels for cells in the view.</summary>
      <param name="width">Width of cell overflow in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportLeftColumn(System.Int32,System.Int32)">
      <summary>Sets the index of the left most column of the specified viewport column.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <param name="value">Index of the column to set as the left most of that viewport</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportLeftColumn(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the index of the left most column of the specified viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <param name="value">Index of the column to set as the left most of that viewport</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified viewport column index is not valid; must be between zero and the number of viewport columns. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is not valid; must be between zero and the number of columns in the sheet. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredHeight(System.Int32,System.Int32)">
      <summary>Sets the maximum height for the viewport row.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="value">Height in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredHeight(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the maximum height for the viewport row for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="value">Height in pixels</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified viewport row index is not valid; must be between 0 and total number of viewport rows. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredWidth(System.Int32,System.Int32)">
      <summary>Sets the maximum width for the viewport column.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <param name="value">Width in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportPreferredWidth(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the maximum width for the viewport column for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <param name="value">Width in pixels</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between 0 and total number of sheets. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportTopRow(System.Int32,System.Int32)">
      <summary>Sets the index of the top row of the specified viewport row.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="value">Index of the row to set as the top of that viewport</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.SetViewportTopRow(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the index of the top most row of the specified viewport for the specified sheet.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="value">Index of the column to set as the left most of that viewport</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified sheet index is not valid; must be between zero and the number of sheets. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified viewport row index is not valid; must be between zero and the number of viewport rows. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is not valid; must be between zero and the number of rows in the sheet. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowActiveCell(FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
      <summary>Moves the currently selected cell in the specified viewport to the specified position.</summary>
      <param name="verticalPosition">New vertical position of cell</param>
      <param name="horizontalPosition">New horizontal position of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowAutoFillIndicator">
      <summary>Shows the AutoFill indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowCell(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition,FarPoint.Win.Spread.HorizontalPosition)">
      <summary>Moves the specified cell in the specified viewport to the specified position.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="columnViewportIndex">Viewport column index</param>
      <param name="row">Row index in that viewport</param>
      <param name="column">Column index in that viewport</param>
      <param name="verticalPosition">New vertical position of cell</param>
      <param name="horizontalPosition">New horizontal position of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowChartIndicator(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Shows the chart indicator.</summary>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowColumn(System.Int32,System.Int32,FarPoint.Win.Spread.HorizontalPosition)">
      <summary>Moves a column in the specified viewport to the specified position.</summary>
      <param name="columnViewportIndex">Viewport column index</param>
      <param name="column">Column index in that viewport</param>
      <param name="horizontalPosition">New horizontal position of column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowDependents(System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only. Shows the dependents.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowPrecedents(System.Int32,System.Int32,System.Int32)">
      <summary>Internal use only. Shows the precedents.</summary>
      <param name="sheetIndex">Sheet index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ShowRow(System.Int32,System.Int32,FarPoint.Win.Spread.VerticalPosition)">
      <summary>Moves a row in the specified viewport to the specified position.</summary>
      <param name="rowViewportIndex">Viewport row index</param>
      <param name="row">Row index in that viewport</param>
      <param name="verticalPosition">New vertical position of row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartCellEditing(System.EventArgs,System.Boolean)">
      <summary>Starts cell editing in the view.</summary>
      <param name="e">Event</param>
      <param name="formula">Whether there is a formula</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartCellSelecting(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Starts selecting cells.</summary>
      <param name="rowPane">Viewport row index</param>
      <param name="columnPane">Viewport column index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartColumnResizing(System.Int32,System.Int32,System.Int32)">
      <summary>Starts resizing a column.</summary>
      <param name="columnPane">Viewport column index</param>
      <param name="column">Column index</param>
      <remarks>For columnPane: -2 indicates header viewport, -1 indicates frozen viewport, &gt;= 0 indicates scrollable viewport</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartColumnSelecting(System.Int32,System.Int32)">
      <summary>Starts selecting columns.</summary>
      <param name="columnPane">Viewport column index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartDragDropping(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Starts drag and drop.</summary>
      <param name="rowPane">Viewport row index</param>
      <param name="columnPane">Viewport column index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartDragFilling(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Starts drag and fill.</summary>
      <param name="rowPane">Viewport row index</param>
      <param name="columnPane">Viewport column index</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartPaintTimer">
      <summary>Starts the timer for painting animation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartScrollTimer">
      <summary>Starts the scroll timer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartTableResizing(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Start resizing the active <see cref="T:FarPoint.Win.Spread.TableView" />.</summary>
      <param name="rowPane">Row pane index.</param>
      <param name="columnPane">Column pane index.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StartTipTimer">
      <summary>Starts the tip timer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopCellEditing">
      <summary>Stops cell editing in the view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopCellSelecting">
      <summary>Stops selecting cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopColumnResizing">
      <summary>Stops resizing the column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopColumnSelecting">
      <summary>Stops selecting the column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopDragDropping">
      <summary>Stops drag and drop.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopDragFilling">
      <summary>Stops drag and fill.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopFilterBarEditing">
      <summary>Stops cell editing in the filter bar.</summary>
      <returns>True if stopped successfully; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopFormulaCellRangeMoving">
      <summary>Stops the formula cell range from moving.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopFormulaCellRangeResizing">
      <summary>Stops the formula cell range from resizing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopPaintTimer">
      <summary>Stops the scroll timer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopScrollTimer">
      <summary>Stops the scroll timer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.StopTableResizing">
      <summary>Stops resizing table.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment setting to the corresponding FarPoint.Win.HorizontalAlignment setting.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
      <returns>Corresponding FarPoint.Win.HorizontalAlignment value</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadView.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment setting to the corresponding FarPoint.Win.VerticalAlignment setting.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment value</param>
      <returns>Corresponding FarPoint.Win.VerticalAlignment value</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadViewportInfo">
      <summary>Represents the information about a viewport.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadViewportInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadViewportInfo" /> class.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadVScrollBar">
      <summary>Represents the vertical scroll bar for the view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadVScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadVScrollBar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadVScrollBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new FarPoint vertical scroll bar for the view from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadVScrollBar.#ctor(FarPoint.Win.Spread.FpScrollBarButtonCollection)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.SpreadVScrollBar" /> class.</summary>
      <param name="buttons">A collection of buttons of the FarPoint horizontal scroll bar</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadVScrollBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">Serialization information.</param>
      <param name="context">Streaming context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SpreadVScrollBar.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
      <param name="m">Message</param>
    </member>
    <member name="T:FarPoint.Win.Spread.StatusBarDefaultSkin">
      <summary>Read-only collection of default (built-in) skins. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarDefaultSkin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.StatusBarDefaultSkin" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.ArcticSeaStatusBarSkin">
      <summary>Represents the arctic sea skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.ClassicStatusBarSkin">
      <summary>Represents the classic skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.DefaultStatusBarSkin">
      <summary>Represents the default skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.GraysaleStatusBarSkin">
      <summary>Represents the gray sale skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.MetallicStatusBarSkin">
      <summary>Represents the metallic skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.MidnightStatusBarSkin">
      <summary>Represents the midnight skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.NewspaperStatusBarSkin">
      <summary>Represents the news paper skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.Office2007StatusBarSkin">
      <summary>Represents the office 2007 skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.Office2013StatusBarSkin">
      <summary>Represents the office 2013 skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.Office2016ColorfulStatusBarSkin">
      <summary>Represents the office 2016 colorful skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.Office2016DarkGreyStatusBarSkin">
      <summary>Represents the office 2016 dark grey skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.Office2016WhiteStatusBarSkin">
      <summary>Represents the office 2016 white skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.PastelStatusBarSkin">
      <summary>Represents the pastel skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.RoseStatusBarSkin">
      <summary>Represents the rose skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.SandStormStatusBarSkin">
      <summary>Represents the sand storm skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.SeashellStatusBarSkin">
      <summary>Represents the seahell skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.ShamrockStatusBarSkin">
      <summary>Represents the shamrock skin for status bar. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StatusBarDefaultSkin.SunburstStatusBarSkin">
      <summary>Represents the sunburst skin for status bar. This field is read-only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StatusBarElementChangeArgs">
      <summary>Represents the event data for element changes in the status bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarElementChangeArgs.#ctor(System.String)">
      <param name="propertyName">name of property Changed</param>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarElementChangeArgs.PropertyName">
      <summary>Gets the property name that changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StatusBarSkin">
      <summary>Skin of status bar</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarSkin.#ctor">
      <summary>Instantiate a StatusBarSkin object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarSkin.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
      <summary>Instantiate a StatusBarSkin object.</summary>
      <param name="name" />
      <param name="backColor" />
      <param name="foreColor" />
      <param name="zoomButtonHoverColor" />
      <param name="zoomSliderColor" />
      <param name="zoomSliderHoverColor" />
      <param name="zoomSliderTrackColor" />
      <param name="font" />
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarSkin.#ctor(FarPoint.Win.Spread.StatusBarSkin)">
      <summary>Instantiate a StatusBarSkin object from a source object.</summary>
      <param name="skin" />
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.BackColor">
      <summary>Gets or sets back color of status bar</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.Font">
      <summary>Gets or sets font of text in status bar</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.ForeColor">
      <summary>Gets or sets fore color of status bar</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.Name">
      <summary>Gets or sets name of skin</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.ZoomButtonHoverColor">
      <summary>Gets or sets zoom level button color when hovering</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.ZoomSliderColor">
      <summary>Gets or sets color of zoom level button</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.ZoomSliderHoverColor">
      <summary>Gets or sets Color of zoom slider button when hovering</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StatusBarSkin.ZoomSliderTrackColor">
      <summary>Gets or sets Color of track of zoom slider color in status bar</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarSkin.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Deserialize the object from XML.</summary>
      <param name="r" />
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarSkin.Dispose">
      <summary>Dispose skin</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StatusBarSkin.Serialize(System.Xml.XmlTextWriter)">
      <summary>Serialize the object to XML.</summary>
      <param name="w" />
    </member>
    <member name="E:FarPoint.Win.Spread.StatusBarSkin.OnStatusBarSkinChanged">
      <summary>Occurs when status bar skin is changed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StickyNoteEventArgs">
      <summary>Obsolete. Use NoteEventArgs class instead. Represents the data for the sticky note event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StickyNoteEventArgs.#ctor(FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo)">
      <summary>Creates a new event arguments object for the sticky note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StickyNoteEventArgs.StickyNoteStyleInfo">
      <summary>Gets or sets the style information of the sticky note that has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StyleContainerEventArgs">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleContainerEventArgs.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.StyleContainerEventType)">
      <summary>Creates new Changed event argument objects for the style container.</summary>
      <param name="index">Index specifies where the event occurred, or -1 if the entire container was affected</param>
      <param name="itemCount">Number of items, or -1 if the entire container was affected</param>
      <param name="type">Type of change that occurred in the style container</param>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleContainerEventArgs.Index">
      <summary>Gets the index where the event occurred, or -1 if the entire container was affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleContainerEventArgs.ItemCount">
      <summary>Get the number of the items, or -1 if the entire container was affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleContainerEventArgs.Type">
      <summary>Gets the type of change that occurred.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StyleInfo">
      <summary>Represents the set of cell-level style settings for objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor">
      <summary>Creates a set of cell-level style settings (StyleInfo object).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(System.String)">
      <summary>Creates a set of cell-level style settings (StyleInfo object) with the specified parent style.</summary>
      <param name="parentName">Name of the parent <see cref="T:FarPoint.Win.Spread.NamedStyle" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(FarPoint.Win.Spread.StyleInfo)">
      <summary>Creates a set of cell-level style settings (StyleInfo object) equivalent to the specified set of style settings.</summary>
      <param name="info">StyleInfo object from which to copy style settings</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(System.String,FarPoint.Win.Spread.StyleInfo)">
      <summary>Creates a set of cell-level style settings (StyleInfo object) with the specified parent style and specified set of style settings.</summary>
      <param name="parentName">Name of the parent</param>
      <param name="style">StyleInfo object to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a set of cell-level style settings (StyleInfo object) from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.Border">
      <summary>Gets or sets the border of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.CanFocus">
      <summary>Gets or sets whether the user can set focus to the cell using the keyboard or mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.CanSerializeXml">
      <summary>Gets whether the object in its entirety can be rendered with XML without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.CellPadding">
      <summary>Gets or sets the number of spaces to add to the cell(s) in pixels.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.CellType">
      <summary>Gets or sets the type of cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.Editor">
      <summary>Gets or sets the editor of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.FontStyle">
      <summary>Gets the font style applied to the cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.Formatter">
      <summary>Gets or sets the formatter of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of the contents of the cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.ImeMode">
      <summary>Gets or sets the IME mode of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.ImeSentenceMode">
      <summary>Gets or sets the ImeSentenceMode of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.InputScope">
      <summary>Gets or sets the input scope of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.LockBackColor">
      <summary>Gets or sets the background color of locked cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.LockFont">
      <summary>Gets or sets the font for locked cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.LockForeColor">
      <summary>Gets or sets the foreground color of locked cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.NoteIndicatorColor">
      <summary>Gets or sets the color of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.NoteIndicatorPosition">
      <summary>Gets or sets the position of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.NoteIndicatorSize">
      <summary>Gets or sets the size of the cell note indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.NoteStyle">
      <summary>Gets or sets the note style of the cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.Parent">
      <summary>Gets or sets the name of the parent (<see cref="T:FarPoint.Win.Spread.NamedStyle" /> object) of the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.Renderer">
      <summary>Gets or sets the renderer of the cell style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.TabStop">
      <summary>Gets or sets whether the user can set focus to the cell using the Tab key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.TextIndent">
      <summary>Gets or sets the amount to indent the text in a cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of contents of the cell for the style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleInfo.VisualStyles">
      <summary>Gets or sets whether visual styles are on or off for the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Clone">
      <summary>Creates a new object that is a copy of the current instance (with the same style settings).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.CompareTo(FarPoint.Win.Spread.StyleInfo)">
      <summary>Compares the current object with another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter. Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Compose(FarPoint.Win.Spread.StyleInfo)">
      <summary>Composes style settings using the current style settings and those of a specified object.</summary>
      <param name="source">Source object from which to get style settings</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Compose(FarPoint.Win.Spread.StyleInfo,System.Boolean)">
      <summary>Composes style settings using the current style settings and those of a specified object with an option to overwrite the current style settings.</summary>
      <param name="source">Source object from which to get style settings</param>
      <param name="merge">Whether to overwrite the current settings with the settings from the source object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.CopyFrom(System.Object)">
      <summary>Copies the specified style settings of the specified object to the current object.</summary>
      <param name="o">Object from which to copy style settings</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.CopyTo(GrapeCity.Spreadsheet.Win.BaseStyleInfo)">
      <summary>Copy info to the target object.</summary>
      <param name="o">The target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the style information from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Equals(System.Object)">
      <summary>Determines whether the style settings of this object are equivalent to the object specified.</summary>
      <param name="o">Object with which to compare the style settings of the current object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.GetAppearance(FarPoint.Win.Spread.Appearance)">
      <summary>Gets the appearance settings for the specified object.</summary>
      <param name="appearance">
        <see cref="T:FarPoint.Win.Spread.Appearance" /> object to receive the appearance settings, or null to create and return a new Appearance object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets information about the style settings from serialization.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsBorderSet">
      <summary>Gets whether the cell border (Border property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsCanFocusSet">
      <summary>Gets whether the focusable setting of the cell (CanFocus property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsCellPaddingSet">
      <summary>Gets whether the cell padding of the cell is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsCellTypeSet">
      <summary>Gets whether the type of cell (CellType property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsEditorSet">
      <summary>Gets whether the editor for the cell (Editor property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsFormatterSet">
      <summary>Gets whether the formatter for the cell (Formatter property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsHorizontalAlignmentSet">
      <summary>Gets whether the horizontal alignment of the cell contents (HorizontalAlignment property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsImeModeSet">
      <summary>Gets whether IME mode is on (ImeMode property set) for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsImeSentenceModeSet">
      <summary>Gets whether IME mode is on (ImeMode property set) for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsInputScopeSet">
      <summary>Gets whether input scope is on (InputScope property set) for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsLockBackColorSet">
      <summary>Gets whether the lockedBackColor setting of the cell (LockBackColor property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsLockFontSet">
      <summary>Gets whether the lockedFont setting of the cell (LockFont property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsLockForeColorSet">
      <summary>Gets whether the lockedForeColor setting of the cell (LockForeColor property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsNoteIndicatorColorSet">
      <summary>Gets whether the cell note indicator color of the cell is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsNoteIndicatorPositionSet">
      <summary>Determines whether the cell note indicator position is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsNoteIndicatorSizeSet">
      <summary>Determines whether the cell note indicator size is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsNoteStyleSet">
      <summary>Gets whether the note style setting of the cell (NoteStyle property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsParentSet">
      <summary>Gets whether the parent of the cell (Parent property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsPropertySet(FarPoint.Win.Spread.SheetStyleProperty)">
      <summary>Gets whether the specified cell style setting (property) is set.</summary>
      <param name="styleProperty">
        <see cref="T:FarPoint.Win.Spread.SheetStyleProperty" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsRendererSet">
      <summary>Gets whether the renderer for the cell (Renderer property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsTabStopSet">
      <summary>Gets whether the tab stop setting of the cell (TabStop property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsTextIndentSet">
      <summary>Determines whether the text indent is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsVerticalAlignmentSet">
      <summary>Gets whether the vertical alignment of the cell contents (VerticalAlignment property) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.IsVisualStyleSet">
      <summary>Gets whether visual styles are on (VisualStyles property set) for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Merge(FarPoint.Win.Spread.StyleInfo)">
      <summary>Merges the style settings with the current object.</summary>
      <param name="source">Object whose style settings are merged with the current object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Merge(FarPoint.Win.Spread.StyleInfo,System.Boolean)">
      <summary>Merges the style settings with the current object with the option to overwrite settings in the current object.</summary>
      <param name="source">Object whose style settings are merged with the current object</param>
      <param name="force">Whether to overwrite the current settings with the settings from the merge object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Reset">
      <summary>Resets all the style settings in the <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object to the default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetBorder">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Border" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetCanFocus">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.CanFocus" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetCellPadding">
      <summary>Resets the cell padding.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetCellType">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.CellType" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetEditor">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Editor" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetFormatter">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Formatter" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetHorizontalAlignment">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.HorizontalAlignment" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetImeMode">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.ImeMode" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetImeSentenceMode">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.ImeSentenceMode" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetInputScope">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.InputScope" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetLockBackColor">
      <summary>Resets the LockBackColor of the style to the default</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetLockFont">
      <summary>Resets the LockFont of the style to the default</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetLockForeColor">
      <summary>Resets the LockForeColor of the style to the default</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetNoteIndicatorColor">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.NoteIndicatorColor" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetNoteIndicatorPosition">
      <summary>Resets the cell note indicator position.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetNoteIndicatorSize">
      <summary>Resets the cell note indicator size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetNoteStyle">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.NoteStyle" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetParent">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Parent" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetProperty(FarPoint.Win.Spread.SheetStyleProperty)">
      <summary>Resets a style setting (property) to its default setting.</summary>
      <param name="styleProperty">
        <see cref="T:FarPoint.Win.Spread.SheetStyleProperty" /> object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetRenderer">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.Renderer" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetTabStop">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.TabStop" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetTextIndent">
      <summary>Resets the text indent.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetVerticalAlignment">
      <summary>Resets the <see cref="P:FarPoint.Win.Spread.StyleInfo.VerticalAlignment" /> property to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.ResetVisualStyles">
      <summary>Resets the visual styles (XP themes) for the style to the default.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the style information to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleInfo.SetAppearance(FarPoint.Win.Spread.Appearance)">
      <summary>Sets the appearance settings of an <see cref="T:FarPoint.Win.Spread.Appearance" /> object into this object.</summary>
      <param name="appearance">
        <see cref="T:FarPoint.Win.Spread.Appearance" /> object from which to set appearance settings</param>
    </member>
    <member name="T:FarPoint.Win.Spread.StyleNameConverter">
      <summary>Provides a drop-down list of style names for the StyleName property in the Cell, Column, Row, and AlternatingRow classes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleNameConverter.#ctor">
      <summary>Initializes a new instance of the StyleNameConverter class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether the specified type can be converted to a border object.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">Type</param>
      <returns>True if sourceType is String, false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a string to a new border object.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">object</param>
      <returns>A new border object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the border object to a string.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">object</param>
      <param name="destinationType">Type</param>
      <returns>String representation of a border object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the set of standard values for this type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines whether this object supports standard values.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StyleRowFilter">
      <summary>Represents the filter that sets the styles of rows based on certain criteria.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.StyleRowFilter" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new style row filter for the specified sheet.</summary>
      <param name="sheetView">SheetView object that contains the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.NamedStyle)">
      <summary>Creates a new style row filter for the specified sheet with specified styles.</summary>
      <param name="sheetView">SheetView object that contains the sheet</param>
      <param name="inStyle">Style for items filtered in</param>
      <param name="outStyle">Style for items filtered out</param>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleRowFilter.InStyle">
      <summary>Gets the style that is applied to rows that satisfy the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.StyleRowFilter.OutStyle">
      <summary>Gets the style that is applied to rows that do not satisfy the filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.Init">
      <summary>Internal use only. Initializes the style row filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.OnNamedStyleChanged(System.Object,System.EventArgs)">
      <summary>Occurs when the style has changed.</summary>
      <param name="o">Object that raises the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.StyleRowFilter.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.SubEditorClosedEventArgs">
      <summary>Represents the event data for the SubEditorClosed event for the Spread component, which occurs when the subeditor in a cell has closed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SubEditorClosedEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Creates a new object with the SubEditorClosed event arguments.</summary>
      <param name="view">View that contains the cell with the editor that raised the event</param>
      <param name="editingControl">Parent of the control that raised the event</param>
      <param name="subEditor">Control that raised the event</param>
      <param name="row">Row index of the cell with the editor that raised the event</param>
      <param name="column">Column index of the cell with the editor that raised the event</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.Column">
      <summary>Gets the column index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.EditingControl">
      <summary>Gets the parent of the control that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.Row">
      <summary>Gets the row index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.SubEditor">
      <summary>Gets the Control object that raises the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorClosedEventArgs.View">
      <summary>Gets the view that contains the cell with the editor that raised the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SubEditorOpeningEventArgs">
      <summary>Represents the event data for the SubEditorOpening event in the Spread component, which occurs when the subeditor in a cell is opening.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SubEditorOpeningEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Creates a new object with the SubEditorOpening event arguments.</summary>
      <param name="view">View that contains the cell with the editor that raised the event</param>
      <param name="editingControl">Parent of the control that raised the event</param>
      <param name="subEditor">Control that raised the event</param>
      <param name="row">Row index of the cell with the editor that raised the event</param>
      <param name="column">Column index of the cell with the editor that raised the event</param>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default processing of opening a subeditor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.Column">
      <summary>Gets the column index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.EditingControl">
      <summary>Gets the parent of the control that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.Row">
      <summary>Gets the row index of the cell with the editor that raised the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.SubEditor">
      <summary>Gets the Control object that raises the event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.SubEditorOpeningEventArgs.View">
      <summary>Gets the view that contains the cell with the editor that raised the event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SurrogateCharValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that validates whether the specified value exists in surrogate characters.</summary>
      <remarks>You can validate whether the value exists in the surrogate chararcters.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.SurrogateCharValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SurrogateCharValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.SurrogateCharValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SurrogateCharValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.SurrogateCharValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.SurrogateCharValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value exists in surrogate characters.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates which value should be validated, and contains relative context information.</param>
      <returns>
        <see langword="true" /> if the specified value has surrogate characters; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TableBorder">
      <summary>Represents Table border. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableBorder.#ctor(FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide)">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.TableBorder" /></summary>
      <param name="left">Complex border left.</param>
      <param name="top">Complex border top.</param>
      <param name="right">Complex border right.</param>
      <param name="bottom">Complex border bottom.</param>
      <param name="vertical">Complex border vertical.</param>
      <param name="horizontal">Complex border horizontal.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableBorder.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.TableBorder" /></summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableBorder.#ctor(FarPoint.Win.ComplexBorderSide)">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.TableBorder" /></summary>
      <param name="borderSide">Border side</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TableBorder.Bottom">
      <summary>Gets complex border bottom.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableBorder.Horizontal">
      <summary>Gets complex border horizontal.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableBorder.Left">
      <summary>Gets complex border left.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableBorder.Right">
      <summary>Gets complex border right.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableBorder.Top">
      <summary>Gets complex border top.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableBorder.Vertical">
      <summary>Gets complex border vertical.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableBorder.Clone">
      <summary>Clone the <see cref="T:FarPoint.Win.Spread.TableBorder" /> object.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableBorder" /> object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TableElementStyle">
      <summary>Represents a style for each element of the table. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableElementStyle.#ctor(FarPoint.Win.Spread.TableBorder,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.RegularBoldItalicFontStyle)">
      <summary>Creates a style with the information.</summary>
      <param name="border">Border of the element</param>
      <param name="backColor">Backcolor of the element</param>
      <param name="foreColor">Forecolor of the element</param>
      <param name="fontStyle">Font style of the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableElementStyle.#ctor(FarPoint.Win.Spread.TableBorder,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Spread.RegularBoldItalicFontStyle,FarPoint.Win.Spread.StrikeoutFontStyle,FarPoint.Win.Spread.UnderlineFontStyle)">
      <summary>Creates a style with the information.</summary>
      <param name="border">Border of the element</param>
      <param name="backColor">Backcolor of the element</param>
      <param name="foreColor">Forecolor of the element</param>
      <param name="fontStyle">Font style of the element</param>
      <param name="strikethrough">Font style strikeout</param>
      <param name="underline">Font style underline</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.BackColor">
      <summary>Gets the backcolor of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.Border">
      <summary>Gets the element border.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.FontStyle">
      <summary>Gets the font style of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.ForeColor">
      <summary>Gets the forecolor of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.IsEmpty">
      <summary>Gets whether style is empty.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.StrikeOut">
      <summary>Gets the strikethrough font style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableElementStyle.Underline">
      <summary>Gets the underline font style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableElementStyle.Clone">
      <summary>Clone this <see cref="T:FarPoint.Win.Spread.TableElementStyle" /> object.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableElementStyle" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableElementStyle.CompareTo(FarPoint.Win.Spread.TableElementStyle)">
      <summary>Compares this instance to a specified object and returns an indication of their relative values.</summary>
      <param name="other">An object to compare, or null.</param>
      <returns>A signed number indicating the relative values of this instance and target. Return value Description Less than zero The value of this instance is less than the value of target. Zero The value of this instance is equal to the value of target. Greater than zero The value of this instance is greater than the value of target.-or- target is null.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableElementStyle.Compose(FarPoint.Win.Spread.TableElementStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Compose a style into this style</summary>
      <param name="elementStyle">A <see cref="T:FarPoint.Win.Spread.TableElementStyle" /> object.</param>
      <param name="isTop">Specifies the top location for inner border merging</param>
      <param name="isBottom">Specifies the bottom location for inner border merging</param>
      <param name="isLeft">Specifies the left location for inner border merging</param>
      <param name="isRight">Specifies the right location for inner border merging</param>
      <returns>True if style is merged, false if there is no style able to merge in (mean full style set for parent).</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TablePropertyChangedEventArgs">
      <summary>Represents table property changed event arguments.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TablePropertyChangedEventArgs.#ctor(System.String)">
      <summary>Create a <see cref="T:FarPoint.Win.Spread.TablePropertyChangedEventArgs" /> object.</summary>
      <param name="propertyName">Property name.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TablePropertyChangedEventArgs.PropertyName">
      <summary>Gets property name.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TablePropertyChangingEventArgs">
      <summary>Class represents table property changing event arguments.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TablePropertyChangingEventArgs.#ctor(System.String,System.Object)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.TablePropertyChangingEventArgs" /> object.</summary>
      <param name="propertyName">Property name.</param>
      <param name="newValue">New value.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TablePropertyChangingEventArgs.NewValue">
      <summary>Gets new name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TablePropertyChangingEventArgs.PropertyName">
      <summary>Gets property name.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableStyle">
      <summary>Represents a style for the table.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.#ctor(System.String)">
      <summary>Creates a table style.</summary>
      <param name="name">The name of the table style</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.#ctor(System.String,FarPoint.Win.Spread.TableStyle)">
      <summary>Creates a clone of the table style.</summary>
      <param name="name">The name of the table style</param>
      <param name="source">The table style that should be cloned</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.TableStyle" /> object from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> context</param>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.None">
      <summary>Name of built-in None. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark1">
      <summary>Name of built-in TableStyleDark1. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark10">
      <summary>Name of built-in TableStyleDark10. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark11">
      <summary>Name of built-in TableStyleDark11. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark2">
      <summary>Name of built-in TableStyleDark2. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark3">
      <summary>Name of built-in TableStyleDark3. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark4">
      <summary>Name of built-in TableStyleDark4.f This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark5">
      <summary>Name of built-in TableStyleDark5. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark6">
      <summary>Name of built-in TableStyleDark6. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark7">
      <summary>Name of built-in TableStyleDark7. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark8">
      <summary>Name of built-in TableStyleDark8. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleDark9">
      <summary>Name of built-in TableStyleDark9. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight1">
      <summary>Name of built-in TableStyleLight1. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight10">
      <summary>Name of built-in TableStyleLight10. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight11">
      <summary>Name of built-in TableStyleLight11. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight12">
      <summary>Name of built-in TableStyleLight12. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight13">
      <summary>Name of built-in TableStyleLight13. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight14">
      <summary>Name of built-in TableStyleLight14. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight15">
      <summary>Name of built-in TableStyleLight15. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight16">
      <summary>Name of built-in TableStyleLight16. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight17">
      <summary>Name of built-in TableStyleLight17. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight18">
      <summary>Name of built-in TableStyleLight18. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight19">
      <summary>Name of built-in TableStyleLight19. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight2">
      <summary>Name of built-in TableStyleLight2. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight20">
      <summary>Name of built-in TableStyleLight20. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight21">
      <summary>Name of built-in TableStyleLight21. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight3">
      <summary>Name of built-in TableStyleLight3. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight4">
      <summary>Name of built-in TableStyleLight4. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight5">
      <summary>Name of built-in TableStyleLight5. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight6">
      <summary>Name of built-in TableStyleLight6. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight7">
      <summary>Name of built-in TableStyleLight7. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight8">
      <summary>Name of built-in TableStyleLight8. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleLight9">
      <summary>Name of built-in TableStyleLight9. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium1">
      <summary>Name of built-in TableStyleMedium1. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium10">
      <summary>Name of built-in TableStyleMedium10. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium11">
      <summary>Name of built-in TableStyleMedium11. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium12">
      <summary>Name of built-in TableStyleMedium12. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium13">
      <summary>Name of built-in TableStyleMedium13. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium14">
      <summary>Name of built-in TableStyleMedium14. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium15">
      <summary>Name of built-in TableStyleMedium15. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium16">
      <summary>Name of built-in TableStyleMedium16. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium17">
      <summary>Name of built-in TableStyleMedium17. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium18">
      <summary>Name of built-in TableStyleMedium18. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium19">
      <summary>Name of built-in TableStyleMedium19. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium2">
      <summary>Name of built-in TableStyleMedium2. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium20">
      <summary>Name of built-in TableStyleMedium20. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium21">
      <summary>Name of built-in TableStyleMedium21. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium22">
      <summary>Name of built-in TableStyleMedium22. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium23">
      <summary>Name of built-in TableStyleMedium23. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium24">
      <summary>Name of built-in TableStyleMedium24. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium25">
      <summary>Name of built-in TableStyleMedium25. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium26">
      <summary>Name of built-in TableStyleMedium26. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium27">
      <summary>Name of built-in TableStyleMedium27. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium28">
      <summary>Name of built-in TableStyleMedium28. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium3">
      <summary>Name of built-in TableStyleMedium3. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium4">
      <summary>Name of built-in TableStyleMedium4. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium5">
      <summary>Name of built-in TableStyleMedium5. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium6">
      <summary>Name of built-in TableStyleMedium6. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium7">
      <summary>Name of built-in TableStyleMedium7. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium8">
      <summary>Name of built-in TableStyleMedium8. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyle.TableStyleMedium9">
      <summary>Name of built-in TableStyleMedium9. This field is constant and read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstColumn">
      <summary>Gets or sets the first column table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstColumnStripSize">
      <summary>Gets or sets the size for the first column strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstColumnStripe">
      <summary>Gets or sets the first column stripe of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstHeaderCell">
      <summary>Gets or sets the header cell of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstRowStripSize">
      <summary>Gets or sets the size for the first row strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstRowStripe">
      <summary>Gets or sets the first row stripe of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.FirstTotalCell">
      <summary>Gets or sets the first total cell of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.HeaderRow">
      <summary>Gets or sets the header row table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.LastColumn">
      <summary>Gets or sets the last column table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.LastHeaderCell">
      <summary>Gets or sets the last header cell of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.LastTotalCell">
      <summary>Gets or sets the last total cell of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.Name">
      <summary>Gets or sets the table style name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.SecondColumnStripSize">
      <summary>Gets or sets the size for the second column strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.SecondColumnStripe">
      <summary>Gets or sets the second column stripe of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.SecondRowStripSize">
      <summary>Gets or sets the size for the second row strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.SecondRowStripe">
      <summary>Gets or sets the second row stripe of the table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.TotalRow">
      <summary>Gets or sets the total row table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyle.WholeTable">
      <summary>Gets or sets the table style of the data area.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.DeserializeEntry(System.Runtime.Serialization.SerializationEntry)">
      <summary>Deserialize for each binary entry</summary>
      <param name="entry" />
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.Equals(System.Object)">
      <summary>Determines whether this instance of <see cref="T:FarPoint.Win.Spread.TableStyle" /> and a specified object, which must also be a <see cref="T:FarPoint.Win.Spread.TableStyle" nolink="true" /> object, have the same value.</summary>
      <param name="obj">An object</param>
      <returns>true if obj is a <see cref="T:FarPoint.Win.Spread.TableStyle" /> and its value is the same as this instance otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyle.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:FarPoint.Win.Spread.TableStyle" />.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.TableStyle.PropertyChanged">
      <summary>Occurs when a property changed.</summary>
      <remarks>This event is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.TableStyleCollection">
      <summary>Represents a table style manager.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.TableStyleCollection" /> from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollection.BuiltInTableStyleName">
      <summary>Gets list of names of built-in table style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollection.Count">
      <summary>Gets number of table style in collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollection.DefaultStyle">
      <summary>Gets or sets default style.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollection.Item(System.String)">
      <summary>Gets a table style by name.</summary>
      <param name="styleName">Style name.</param>
      <value>A <see cref="T:FarPoint.Win.Spread.TableStyle" /> object.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:FarPoint.Win.Spread.TableStyle" /> object.</summary>
      <param name="index">Item index.</param>
      <value>A <see cref="T:FarPoint.Win.Spread.TableStyle" /> object.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollection.Add(FarPoint.Win.Spread.TableStyle)">
      <summary>Adds a table style.</summary>
      <param name="item">The style to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollection.Clear">
      <summary>Clear style collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollection.DeserializeEntry(System.Runtime.Serialization.SerializationEntry)">
      <summary>Deserialize for each binary entry</summary>
      <param name="entry" />
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollection.GetEnumerator">
      <summary>Get table style enumerator.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollection.Remove(System.String)">
      <summary>Remove a table style.</summary>
      <param name="name">Style name.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.TableStyleCollection.CollectionChanged">
      <summary>Occurs when there was a changed in the style collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableStyleCollectionChangedEventArgs">
      <summary>Represents table style collection changed event arguments.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableStyleCollectionChangedEventArgs.#ctor(System.String,FarPoint.Win.Spread.TableStyleCollectionChangedType)">
      <summary>Creates a tabel style collection changed event argument.</summary>
      <param name="name">The item name</param>
      <param name="changeType">The change type</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollectionChangedEventArgs.ChangeType">
      <summary>Gets the changed type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableStyleCollectionChangedEventArgs.ItemName">
      <summary>Gets the item name.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableUtils">
      <summary>Represents a util class for spread table.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TableUtils" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.CreateNewTableStyle(System.Windows.Forms.Form,System.Boolean@)">
      <summary>Creates a new table style.</summary>
      <param name="tableStyleEditorForm">Table Style Editor Form</param>
      <param name="isDefaultStyle">Whether the style is default</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableStyle" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.DuplicateTableStyle(System.Windows.Forms.Form,System.String,System.Boolean@)">
      <summary>Duplicate a table style.</summary>
      <param name="tableStyleEditorForm">Table Style Editor Form</param>
      <param name="tbStyle">Name of style to edit</param>
      <param name="isDefaultStyle">Whether the style is default</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableStyle" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.FindRange(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.ITableRangeManager,System.Int32,System.Int32,System.Collections.Generic.List{FarPoint.Win.Spread.Model.ITableRange}@,System.Collections.Generic.List{FarPoint.Win.Spread.Model.ITableRange}@)">
      <summary>Finds tables intersected in a range.</summary>
      <param name="row">Row index of range</param>
      <param name="column">Column index of range</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="manger">The manager of the range</param>
      <param name="maxRowcount">Maximum number of rows in the range</param>
      <param name="maxColumnCount">Maximum number of columns in the range</param>
      <param name="inRangeTables">Number of tables in the range</param>
      <param name="intersectTables">List of tables intersected with the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.ModifyTableStyle(System.Windows.Forms.Form,FarPoint.Win.Spread.TableStyle,System.Boolean@)">
      <summary>Modifies a table style.</summary>
      <param name="tableStyleEditorForm">Table Style Editor Form</param>
      <param name="tbStyle">Table style to edit</param>
      <param name="isDefaultStyle">Whether the style is default</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.TableStyle" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.ShowTableCreatorForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread)">
      <summary>Shows a form used to create a new table.</summary>
      <param name="parentForm">The parent of this form.</param>
      <param name="spread">Spread to add new table to.</param>
      <returns>A <see cref="T:System.Windows.Forms.Form" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.ShowTableResizeForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread)">
      <summary>Shows a form used to resize a table whose range contains an active cell.</summary>
      <param name="parentForm">The parent of this form.</param>
      <param name="spread">Spread to add new table to.</param>
      <returns>A <see cref="T:System.Windows.Forms.Form" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableUtils.TableStyleEditorForm(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates an Editor form to create new or modify table styles in Spread.</summary>
      <param name="fpSpread">Spread to add new TableStyle to</param>
    </member>
    <member name="T:FarPoint.Win.Spread.TableView">
      <summary>Represents spread table.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.TableView" /> object.</summary>
      <param name="name">The table name</param>
      <param name="tableStyleName">The style name</param>
      <param name="row">The row index</param>
      <param name="column">The column index</param>
      <param name="rowCount">The number of rows</param>
      <param name="columnCount">The number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.TableView" /> object.</summary>
      <param name="name">Name of table.</param>
      <param name="tableStyleName">Table style name.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Row count.</param>
      <param name="columnCount">Column count.</param>
      <param name="visibleHeaderRow">Indicates whether the header row is visible.</param>
      <param name="visibleTotalRow">Indicates whether the total row is visible. If the value is TRUE, total value and formula are not set.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.TableView" /> from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.BandedColumns">
      <summary>Gets or sets whether to display the banded column style in the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.BandedRows">
      <summary>Gets or sets whether the banded row style is displayed in the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.Comment">
      <summary>Gets or sets table comments.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.DataRange">
      <summary>Gets the table range area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.DataSource">
      <summary>Gets data source of the <see cref="T:FarPoint.Win.Spread.TableView" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.FilterButtonVisible">
      <summary>Gets or sets whether to display the filter button in the table header row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.FirstColumn">
      <summary>Gets or sets whether to display the first column style in the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.HeaderRowIndex">
      <summary>Gets header row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.HeaderRowVisible">
      <summary>Gets or sets whether the header row is visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.LastColumn">
      <summary>Gets or sets whether to display the last column style in the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.Name">
      <summary>Gets or sets the table name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.StyleName">
      <summary>Gets or sets the table style name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableColumns">
      <summary>Gets the table column collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableDataRowStyle">
      <summary>Gets or sets style information for the table data area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableDataRowStyleName">
      <summary>Gets or sets style name for the table data area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableHeaderRowStyle">
      <summary>Gets or sets style information for the table header row area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableHeaderRowStyleName">
      <summary>Gets or sets style name for the table header row area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableRowFilter">
      <summary>Get or sets the RowFilter of the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableTotalRowStyle">
      <summary>Gets or sets style information for the table total row area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TableTotalRowStyleName">
      <summary>Gets or sets style name for the table total row area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TotalRowIndex">
      <summary>Gets total row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableView.TotalRowVisible">
      <summary>Gets or sets whether the total row is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.AddColumns(System.Int32,System.Int32)">
      <summary>Adds columns to the table.</summary>
      <param name="column">Table column index</param>
      <param name="count">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.AddDataRows(System.Int32,System.Int32)">
      <summary>Add rows into the table data area.</summary>
      <param name="row">Table data row index.</param>
      <param name="count">Number of rows to add.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.DeserializeEntry(System.Runtime.Serialization.SerializationEntry)">
      <summary>Deserializes for each binary entry.</summary>
      <param name="entry" />
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.Filter(System.Int32,FarPoint.Win.Spread.IFilterItem)">
      <summary>Filters a column in the table.</summary>
      <param name="column">Index</param>
      <param name="activeFilter">Filter item</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.GetColumnIndex(System.String)">
      <summary>Gets the column index.</summary>
      <param name="name">Name of the column</param>
      <returns>An int value specifies the column index.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.GetColumnName(System.Int32)">
      <summary>Gets table column name.</summary>
      <param name="index">Column index.</param>
      <returns>Name of the column.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.GetDataColumnFormula(System.Int32)">
      <summary>Gets column formula from a special column.</summary>
      <param name="columnIndex">Column index.</param>
      <returns>A string values that specifies formula of the column.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.GetUniqueColumnName(System.String,System.Int32)">
      <summary>Gets unique name for a table column.</summary>
      <param name="name">Original name.</param>
      <param name="baseTableColumnIndex">Column index.</param>
      <returns>A string value specifies the new unique table column name.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.MoveTableColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Moves the columns in the table.</summary>
      <param name="fromColumn">The column to move from.</param>
      <param name="toColumn">The column to move to.</param>
      <param name="count">The number of columns to move.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.MoveTableRows(System.Int32,System.Int32,System.Int32)">
      <summary>Moves the rows in the table.</summary>
      <param name="fromRow">The row to move from.</param>
      <param name="toRow">The row to move to.</param>
      <param name="count">The number of rows to move.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes columns from the table.</summary>
      <param name="column">Table column index</param>
      <param name="count">Number of columns to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.RemoveDataRows(System.Int32,System.Int32)">
      <summary>Removes rows from the table data area.</summary>
      <param name="row">Table data row index.</param>
      <param name="count">Number of data rows to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.ResetTotalRow">
      <summary>Resets total row values and formulas.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.Resize(System.Int32,System.Int32)">
      <summary>Resizes the table.</summary>
      <param name="rowCount">New row count.</param>
      <param name="columnCount">New column count.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.SetColumnNames(System.String[])">
      <summary>Sets the column names for the table. The count of array names must equal the count of table columns. Each element must not be null or empty and each element must be unique (not case sensitive) in the array names.</summary>
      <param name="names">Array of table column names.</param>
      <returns>true if set successfully; otherwise, returns false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.SetDataColumnFormula(System.Int32,System.String)">
      <summary>Sets data formula in a special column.</summary>
      <param name="columnIndex">Column index.</param>
      <param name="formula">Formula string.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.Sort(FarPoint.Win.Spread.ComplexSortInfo[])">
      <summary>Performs a table sort using a complex table sort information setting.</summary>
      <param name="tblsSortInfo">An array of <see cref="T:FarPoint.Win.Spread.ComplexSortInfo" /> objects.</param>
      <remarks>It ignores the IComparer that is part of the ComplexSortInfo object.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.TableView.Sort">
      <summary>Sorts the table again using the current table complex sort information setting.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.TableView.NameChanged">
      <summary>Occurs when name of the table changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.TableView.NameChanging">
      <summary>Occurs when name of the table is about to change.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.TableView.PropertyChanged">
      <summary>Occurs when the user changes a property of the table.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.TableView.PropertyChanging">
      <summary>Occurs when the user is changing a property of the table.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.TableView.TableRangeChanged">
      <summary>Occurs when table range changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.TableView.TableRangeChanging">
      <summary>Occurs when table range is about to change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableViewClipboardInfo">
      <summary>Represents a TableView's data structure in the clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TableViewClipboardInfo.#ctor(System.Int32,System.Int32)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.TableViewClipboardInfo" /> object with specific row and colum indexes.</summary>
      <param name="baseRow">Base row index.</param>
      <param name="baseCol">Base column index.</param>
    </member>
    <member name="F:FarPoint.Win.Spread.TableViewClipboardInfo.tables">
      <summary>List of <see cref="T:FarPoint.Win.Spread.TableView" /> objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewClipboardInfo.BaseColumn">
      <summary>Gets base column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewClipboardInfo.BaseRow">
      <summary>Gets base row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableViewColumn">
      <summary>Represents a column in the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.DataCellStyle">
      <summary>Gets or sets the style in table data cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.DataCellStyleName">
      <summary>Gets or sets the style name in table data cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.DataFormula">
      <summary>Gets or sets the formula in the data cells of the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.HeaderCellStyle">
      <summary>Gets or sets the style in the header cell of the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.HeaderCellStyleName">
      <summary>Gets or sets the style name in the header cell of the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.Name">
      <summary>Get or sets the name of the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.TotalCellStyle">
      <summary>Gets or sets the style in the total cell of the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.TotalCellStyleName">
      <summary>Gets or sets the style name in the total cell of the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.TotalFormula">
      <summary>Gets or sets the formula in the total cell of the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumn.TotalLabel">
      <summary>Gets or sets the label in the total cell of the column.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableViewColumnCollection">
      <summary>Represents a one-dimensional collection of Column objects in a table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumnCollection.Count">
      <summary>Gets the number of columns contained in the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumnCollection.Item(System.Int32)">
      <summary>Gets the table column specified by index.</summary>
      <param name="column">Column index.</param>
      <value>A <see cref="T:FarPoint.Win.Spread.TableViewColumn" /> object.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TableViewColumnCollection.Item(System.String)">
      <summary>Gets the table column specified by name.</summary>
      <param name="name">Name of column.</param>
      <value>A <see cref="T:FarPoint.Win.Spread.TableViewColumn" /> object.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.TabStrip">
      <summary>Represents the set of sheet tabs.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TabStrip.#ctor">
      <summary>Creates a new tab strip for a set of sheet tabs.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TabStrip.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Creates a new tab strip for a set of sheet tabs for the specified FpSpread component.</summary>
      <param name="owner">FpSpread component that owns the tab strip</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.ActiveSheetTab">
      <summary>Gets the active sheet tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.BackColor">
      <summary>Gets or sets the background color of the tab strip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.ButtonPolicy">
      <summary>Gets or sets whether the sheet tab buttons are displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.Count">
      <summary>Gets the number of sheet tabs displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.DefaultSheetTab">
      <summary>Gets the default sheet tab.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.Editable">
      <summary>Gets or sets whether users can edit the sheet tab text by double-clicking it.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStrip.Item(System.Int32)">
      <summary>Gets the specified sheet tab.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TabStripHitTestInformation">
      <summary>Represents hit test information for the tab strip of the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TabStripHitTestInformation.#ctor">
      <summary>Creates new hit test information for the tab strip of the spreadsheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStripHitTestInformation.Button">
      <summary>Returns the tab strip button the location refers to.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TabStripHitTestInformation.Sheet">
      <summary>Returns the sheet the given location refers to.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TextConditionalFormattingRule">
      <summary>Represents the conditional formatting rule used for checking text values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TextConditionalFormattingRule.#ctor(FarPoint.Win.Spread.TextConditionOperator,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TextConditionalFormattingRule" /> class.</summary>
      <param name="op">The operator.</param>
      <param name="text">The text.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextConditionalFormattingRule.#ctor(FarPoint.Win.Spread.TextConditionOperator,System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TextConditionalFormattingRule" /> class.</summary>
      <param name="op">The operator.</param>
      <param name="text">The text.</param>
      <param name="isFormula">if set to <c>true</c>, the text parameter represents a formula; otherwise, it represents a normal text value.</param>
      <param name="suppressCustomName">
        <c>true</c> indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextConditionalFormattingRule.#ctor(FarPoint.Win.Spread.TextConditionOperator,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TextConditionalFormattingRule" /> class.</summary>
      <param name="op">The operator.</param>
      <param name="text">The text.</param>
      <param name="isFormula">if set to <c>true</c>, the text parameter represents a formula; otherwise, it represents a normal text value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TextConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TextConditionalFormattingRule.Formula">
      <summary>Gets or sets the formula.</summary>
      <value>The formula.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TextConditionalFormattingRule.Operator">
      <summary>Gets or sets conditions used for checking text.</summary>
      <value>The text condition.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TextConditionalFormattingRule.Text">
      <summary>Gets or sets the text to check for.</summary>
      <value>The text.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.TextConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TextLengthValidator">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.TextLengthValidator" /> that validates the length of the specified value using the <see cref="P:FarPoint.Win.Spread.TextLengthValidator.LengthUnit" /> setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TextLengthValidator.Encoding">
      <summary>Gets or sets the encoding.</summary>
      <value>The encoding. The default is <see cref="P:System.Text.Encoding.Unicode" />.</value>
      <exception cref="T:System.ArgumentNullException"> The assigned value is <see langword="null" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.TextLengthValidator.EncodingCodePage">
      <summary>Gets or sets the encoding code page.</summary>
      <value>The encoding code page. The default is Encoding.Unicode.CodePage.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TextLengthValidator.LengthUnit">
      <summary>Gets or sets the <see cref="P:FarPoint.Win.Spread.TextLengthValidator.LengthUnit" /> used to validate the text length.</summary>
      <value>The length unit. The default is <see cref="F:FarPoint.Win.Spread.LengthUnit.Char" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a <see cref="P:FarPoint.Win.Spread.TextLengthValidator.LengthUnit" /> value. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.TextLengthValidator.MaximumLength">
      <summary>Gets or sets the maximum length of the text.</summary>
      <value>The maximum length. The default is <see cref="F:System.Int32.MaxValue" />.</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is less than <see cref="P:FarPoint.Win.Spread.TextLengthValidator.MinimumLength" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.TextLengthValidator.MinimumLength">
      <summary>Gets or sets the minimum length of the text.</summary>
      <value>The minimum length. The default is 0.</value>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is less than 0 or greater than <see cref="P:FarPoint.Win.Spread.TextLengthValidator.MaximumLength" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.TextLengthValidator.NullIsValid">
      <summary>Gets or sets whether the validation always succeeds when the specified value is <see langword="null" />.</summary>
      <value>
        <see langword="true" /> if the validation always succeeds when the specified value is <see langword="null" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
      <remarks>If the cell's value is <see langword="null" />, you can determine whether the validation always succeeds.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.BaseDataValidator" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.BaseDataValidator" nolink="true" />.</returns>
      <remarks>You must invoke this method when you inherit from the <see cref="T:FarPoint.Win.Spread.BaseDataValidator" /> class and override the <b>Clone</b> method.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TextLengthValidator.Validate(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Validates whether the specified value satisfy the given condition by the <paramref name="context" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TextTipFetchEventArgs">
      <summary>Represents the event data for the TextTipFetch event for the Spread component, which occurs when the text tip is being fetched.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TextTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
      <summary>Creates a new object with the TextTipFetch event arguments.</summary>
      <param name="view">View that contains the cell that is clicked</param>
      <param name="text">Text in the text tip</param>
      <param name="row">Row index of the cell that is clicked</param>
      <param name="column">Column index of the cell that is clicked</param>
      <param name="wrapText">Whether the text tip or cell note should wrap for multiple lines</param>
      <param name="width">Width of the text tip or cell note</param>
      <param name="showTip">Whether to show the text tip or cell note</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the TextTipFetch event arguments.</summary>
      <param name="view">View that contains the cell that is clicked</param>
      <param name="text">Text in the text tip</param>
      <param name="row">Row index of the cell that is clicked</param>
      <param name="column">Column index of the cell that is clicked</param>
      <param name="wrapText">Whether the text tip or cell note should wrap for multiple lines</param>
      <param name="width">Width of the text tip or cell note</param>
      <param name="showTip">Whether to show the text tip or cell note</param>
      <param name="rowHeader">Whether the cell is in the row headers</param>
      <param name="columnHeader">Whether the cell is in the column headers</param>
      <param name="fetchCellNote">Whether to display the cell note</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TextTipFetchEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a new object with the TextTipFetch event arguments.</summary>
      <param name="view">View that contains the cell that is clicked</param>
      <param name="text">Text in the text tip</param>
      <param name="row">Row index of the cell that is clicked</param>
      <param name="column">Column index of the cell that is clicked</param>
      <param name="wrapText">Whether the text tip or cell note should wrap for multiple lines</param>
      <param name="width">Width of the text tip or cell note</param>
      <param name="showTip">Whether to show the text tip or cell note</param>
      <param name="rowHeader">Whether the cell is in the row headers</param>
      <param name="columnHeader">Whether the cell is in the column headers</param>
      <param name="columnFooter">Whether the cell is in the column footers</param>
      <param name="fetchCellNote">Whether to display the cell note</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.Column">
      <summary>Gets the column index of the cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.ColumnFooter">
      <summary>Gets whether the cell is in the column footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.ColumnHeader">
      <summary>Gets whether the cell is in the column headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.FetchCellNote">
      <summary>Gets whether to fetch the cell note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.Row">
      <summary>Gets the row index of the cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.RowHeader">
      <summary>Gets whether the cell is in the row headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.ShowTip">
      <summary>Gets or sets whether to show the text tip or show the cell note as a tip window.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.TipText">
      <summary>Gets or sets the text in the text tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.TipWidth">
      <summary>Gets or sets the width of the text tip or cell note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.View">
      <summary>Gets the view that contains the cell that is clicked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TextTipFetchEventArgs.WrapText">
      <summary>Gets or sets whether the text tip or cell note should wrap for multiple lines.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule">
      <summary>Represents the color scale conditional formatting rule with one middle value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minColor">Color of the minimum value.</param>
      <param name="midColor">Color of the middle value.</param>
      <param name="maxColor">Color of the maximum value.</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minColor">Color of the minimum value.</param>
      <param name="midColor">Color of the middle value.</param>
      <param name="maxColor">Color of the maximum value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minValue">The minimum value. Note: The minimum value only accepts the ConditionalFormattingColorValue object which has a Type value of Min, Number, Percent, Formula, or Pecentile.</param>
      <param name="midValue">The middle value. Note: The middle value only accepts the ConditionalFormattingColorValue object which has a Type value of Number, Percent, Formula, or Pecentile.</param>
      <param name="maxValue">The maximum value. Note: The maximum value only accepts the ConditionalFormattingColorValue object which has a Type value of Max, Number, Percent, Formula, or Pecentile.</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minValue">The minimum value. Note: The minimum value only accepts the ConditionalFormattingColorValue object which has a Type value of Min, Number, Percent, Formula, or Pecentile.</param>
      <param name="midValue">The middle value. Note: The middle value only accepts the ConditionalFormattingColorValue object which has a Type value of Number, Percent, Formula, or Pecentile.</param>
      <param name="maxValue">The maximum value. Note: The maximum value only accepts the ConditionalFormattingColorValue object which has a Type value of Max, Number, Percent, Formula, or Pecentile.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.MaxValue">
      <summary>Gets or sets the maximum value. Note: The maximum value only accepts the ConditionalFormattingColorValue object which has a Type property value of Max, Number, Percent, Formula, or Pecentile.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.MidValue">
      <summary>Gets or sets the middle value. Note: The middle value only accepts the ConditionalFormattingColorValue object which has a Type property value of Number, Percent, Formula, or Pecentile.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.MinValue">
      <summary>Gets or sets the minimum value. Note: The minimum value only accepts the ConditionalFormattingColorValue object which has a Type property value of Min, Number, Percent, Formula, or Pecentile.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeColorScaleConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ThreeStateIconNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that can display a valid icon or invalid icon when cell validating succeeds or fails.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeStateIconNotify.IconAlignment">
      <summary>Gets or sets the <see cref="T:System.Drawing.ContentAlignment" /> of the icon.</summary>
      <value>The icon alignment. The default is <see cref="F:System.Drawing.ContentAlignment.MiddleRight" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a valid <see cref="T:System.Drawing.ContentAlignment" /> value. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeStateIconNotify.InvalidIcon">
      <summary>Gets or sets the icon to display when validation fails.</summary>
      <value>The invalid icon. The default is <see langword="null" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeStateIconNotify.InvalidIconTip">
      <summary>Gets or sets the tip text to display with the icon when validation fails.</summary>
      <value>The icon tip text. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeStateIconNotify.ValidIcon">
      <summary>Gets or sets the icon to display when validation is successful.</summary>
      <value>The valid icon. The default is <see langword="null" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ThreeStateIconNotify.ValidIconTip">
      <summary>Gets or sets the tip text to display with the icon when validation is successful.</summary>
      <value>The icon tip text. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.ThreeStateIconNotify" /> object.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.ThreeStateIconNotify" /> object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current action using the <paramref name="context" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ThreeStateIconNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule">
      <summary>Represents a conditional formatting rule that accepts periods of time.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule.#ctor(FarPoint.Win.Spread.TimePeriod)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule" /> class.</summary>
      <param name="period">The period.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule.TimePeriod">
      <summary>Gets or sets the time period.</summary>
      <value>The time period.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TimePeriodConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TipAppearance">
      <summary>Represents the appearance settings for various tips in the interface (text tips, scroll tips, and cell notes).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TipAppearance.#ctor">
      <summary>Creates a set of appearance settings, for various tips in the interface, with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TipAppearance.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
      <summary>Creates a set of appearance settings, for various tips in the interface, with the specified values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TipAppearance.BackColor">
      <summary>Gets or sets the background color of the tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TipAppearance.Font">
      <summary>Gets or sets the font of the tip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TipAppearance.ForeColor">
      <summary>Gets or sets the text color of the tip.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TipAppearance.CopyFrom(FarPoint.Win.Spread.TipAppearance)">
      <summary>Copies the settings of the specified set of tip appearance settings to this tip.</summary>
      <param name="appearance">Tip appearance settings (TipAppearance object)</param>
    </member>
    <member name="T:FarPoint.Win.Spread.TipNotify">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that shows a tool tip for the validating <see cref="T:FarPoint.Win.Spread.Cell" /> when validation fails.</summary>
      <remarks>
        <note> If the <see cref="P:FarPoint.Win.Spread.TipNotify.ToolTipText" /> property value is <see langword="null" /> or <see cref="F:System.String.Empty">String.Empty</see>, the tool tip text uses <see cref="!:ValidateContext.ValidateInfo" />. </note>
      </remarks>
      <seealso cref="T:FarPoint.Win.Spread.ValidateActionBase" />
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TipNotify" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TipNotify.ToolTipIcon">
      <summary>Gets or sets a <see cref="T:System.Windows.Forms.ToolTipIcon" /> that is displayed in the tool tip.</summary>
      <value>A <see cref="T:System.Windows.Forms.ToolTipIcon" /> value. The default is <see cref="F:System.Windows.Forms.ToolTipIcon.None" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a <see cref="T:System.Windows.Forms.ToolTipIcon" /> value. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.TipNotify.ToolTipSpan">
      <summary>Gets or sets the period of time, in milliseconds, the tool tip is displayed.</summary>
      <value>A <see cref="T:System.Int32" /> value that indicates the period of time, in milliseconds, the tool tip is displayed. The default is <b>5000</b>.</value>
      <remarks>If the value is set to 0, the action uses a value of 5000.</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException"> The assigned value is less than <b>0</b>. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.TipNotify.ToolTipText">
      <summary>Gets or sets the tool tip text.</summary>
      <value>A <see cref="T:System.String" /> value that indicates the tool tip text. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TipNotify.ToolTipTitle">
      <summary>Gets or sets the title of the tool tip.</summary>
      <value>A <see cref="T:System.String" /> value that indicates the title of the tool tip. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.TipNotify" /> object.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.TipNotify" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current <see cref="T:FarPoint.Win.Spread.TipNotify" /> using the <paramref name="context" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates whether the validation failed, and relative context information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TipNotify.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TitlebarHitTestInformation">
      <summary>Represents hit test information for the title and subtitle.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TitlebarHitTestInformation.#ctor">
      <summary>Creates a new instance of the <see cref="T:FarPoint.Win.Spread.TitlebarHitTestInformation" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitlebarHitTestInformation.InSubtitle">
      <summary>Gets whether the location refers to the subtitle area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitlebarHitTestInformation.InTitle">
      <summary>Gets whether the location refers to the title area.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TitleInfo">
      <summary>Represents information about the title bar in the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.#ctor">
      <summary>Creates information about the title bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new default sheet style model from deserialization.</summary>
      <param name="si">Serialization Info</param>
      <param name="ctx">Streaming Context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.BackColor">
      <summary>Gets or sets the back color of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.Border">
      <summary>Gets or sets the border of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.CellType">
      <summary>Gets or sets the type of cell for the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.Font">
      <summary>Gets or sets the font settings of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.ForeColor">
      <summary>Gets or sets the text color of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.Height">
      <summary>Gets or sets the height of title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.HorizontalAlign">
      <summary>Gets or sets the horizontal alignment of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.StyleInfo">
      <summary>Gets or sets the style of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.Text">
      <summary>Gets or sets the text of title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.Value">
      <summary>Gets or sets the value for title.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the title bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TitleInfo.Visible">
      <summary>Gets or sets whether the titleinfo is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the title bar information from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.FireChanged(System.String)">
      <summary>Raises the property Changed event.</summary>
      <param name="propertyName">Property name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the object to the SerializationInfo.</summary>
      <param name="info">Serialization Info</param>
      <param name="context">Streaming Context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.Reset">
      <summary>Resets the title bar information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TitleInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the title bar information to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Top10FilterItem">
      <summary>Provides a Top10Filter class to filter cells whose values are numeric.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Top10FilterItem" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.#ctor(System.Boolean,System.Int32,System.Boolean)">
      <summary>Creates a new Top10Filter instance with customized settings.</summary>
      <param name="descending">A boolean value that indicates whether items are filtered in descending order</param>
      <param name="number">An integer value that indicates the minimum number of items to be filtered</param>
      <param name="isPercent">A boolean value that indicates whether items are filtered by percentage or item</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.DisplayAtTopOfList">
      <summary>Gets or sets whether the display name is added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.DisplayName">
      <summary>Gets the display name of the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.IsDescending">
      <summary>Gets or sets a boolean value that specifies whether numeric numbers are filtered in descending order.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.IsObjectValueEditable">
      <summary>Gets or sets whether the object value can be edited. In the filter bar UI, the text editor is displayed if the value is true.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.IsPercent">
      <summary>Gets or sets a boolean value that specifies whether the filter is based on a percentage.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.Label">
      <summary>Gets displayed text of the filter (filter name or operator).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.ObjectValue">
      <summary>Gets or sets the text value for the filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.Rank">
      <summary>Gets or sets a number filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Top10FilterItem.SheetView">
      <summary>Sets the SheetView object to the filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.Equals(System.Object)">
      <summary>Determines whether the specified System.Object is equal to the current Top10Filter object.</summary>
      <param name="obj">Comparing reference</param>
      <returns>True when all settings are equal; otherwise, false. The SheetView setting is not included.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.Filter(System.Int32)">
      <summary>Filters the specified column of the sheet.</summary>
      <param name="columnIndex">Model column index</param>
      <returns>An integer array of filters of filtered rows</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:FarPoint.Win.Spread.Top10FilterItem" /> class.</summary>
      <returns>A hash code for the current <see cref="T:FarPoint.Win.Spread.Top10FilterItem" /> class.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Top10FilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether the name is displayed in the filter drop-down list.</summary>
      <param name="columnIndex">Model column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
      <returns>true if the name of the filter is displayed in the filter drop-down list; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TopChangeEventArgs">
      <summary>Represents the event data for the TopChange event in the Spread component, which occurs when the top row changes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TopChangeEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new object with the TopChange event arguments.</summary>
      <param name="view">View that contains the row</param>
      <param name="oldTop">Index of the previous top row</param>
      <param name="newTop">Index of the new top row</param>
      <param name="rowViewportIndex">Index of the viewport row in which the change occurred</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TopChangeEventArgs.NewTop">
      <summary>Gets the index of the new top row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TopChangeEventArgs.OldTop">
      <summary>Gets the index of the previous top row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TopChangeEventArgs.RowViewportIndex">
      <summary>Gets the index of the viewport row in which the change occurred.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule">
      <summary>Represents a top bottom conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.IsDescending">
      <summary>Gets or sets a value that indicates whether this conditional format has an accepted value at the top of the rank.</summary>
      <value>
        <c>true</c> if this instance is at the top; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.IsPercent">
      <summary>Gets or sets a value that indicates whether this conditional formatting rule is used as a percentage.</summary>
      <value>
        <c>true</c> if this instance is a percent; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.Rank">
      <summary>Gets or sets the rank.</summary>
      <value>The rank.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TopRankedValuesConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TouchStripButton">
      <summary>Represents a tool strip button for a touch device.</summary>
      <remarks>The touch strip button changes the default value of some properties, such as TextImageRelation, ImageAlign, TextAlign, DisplayStyle, and so on.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.TouchStripButton.#ctor">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.TouchStripButton" /> instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TouchStripButton.#ctor(System.String,System.Drawing.Image)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.TouchStripButton" /> instance.</summary>
      <param name="text">Indicates the button text.</param>
      <param name="image">Indicates the button image.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TouchStripButton.GetPreferredSize(System.Drawing.Size)">
      <summary>Retrieves the size of a rectangular area into which a System.Windows.Forms.ToolStripButton can be fitted.</summary>
      <param name="constrainingSize">The specified area for a System.Windows.Forms.ToolStripButton.</param>
      <returns>An ordered pair of type System.Drawing.Size that represents the width and height of a rectangle.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.TouchStripOpeningEventArgs">
      <summary>Represents the event arguments for the <see cref="E:FarPoint.Win.Spread.FpSpread.TouchStripOpening">FpSpread.TouchStripOpening</see> event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TouchStripOpeningEventArgs.Area">
      <summary>Indicates what area should display a <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" />.</summary>
      <value>One of the <see cref="T:FarPoint.Win.Spread.TouchStripShowingArea" /> values.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TouchStripOpeningEventArgs.KeepSelection">
      <summary>Gets or sets a value that indicates whether to keep the selection.</summary>
      <value>
        <see langword="True" /> to keep the selection; otherwise, <see cref="!:False" />. The default is <see langword="True" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TouchStripOpeningEventArgs.X">
      <summary>Gets or sets the horizontal position for the tapped position.</summary>
      <value>An integer that indicates the horizontal position for the tapped position.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.TouchStripOpeningEventArgs.Y">
      <summary>Gets or sets the vertical position for the tapped position.</summary>
      <value>An integer that indicates the vertical position for the tapped position.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer">
      <summary>Represents the painter that drawing the indicator shape for a triangle for the indicator of a note in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.#ctor">
      <summary>Creates a new renderer of the triangle shape indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.#ctor(System.Drawing.Color)">
      <summary>Creates a new renderer for the triangle indicator with the specified color and thickness.</summary>
      <param name="clr">Color of the focus indicator</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.Color">
      <summary>Gets or sets the color of the solid focus indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="indicatorColor">Color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,FarPoint.Win.Spread.NoteIndicatorPosition,System.Boolean)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="indicatorColor">Color</param>
      <param name="indicatorPosition">note indicator position</param>
      <param name="rightToLeft">Whether right to left orientation</param>
    </member>
    <member name="E:FarPoint.Win.Spread.TriangleNoteIndicatorRenderer.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule">
      <summary>Represents the two color scale conditional formatting rule.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="suppressCustomName">
        <c>true</c> indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor(System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minColor">Color of the minimum value.</param>
      <param name="maxColor">Color of the maximum value.</param>
      <param name="suppressCustomName">
        <c>true</c> indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minColor">Color of the minimum value.</param>
      <param name="maxColor">Color of the maximum value.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minValue">The minimum value. Note: The minimum value only accepts the ConditionalFormattingColorValue object which has a Type value of Min, Number, Percent, Formula, or Pecentile.</param>
      <param name="maxValue">The maximum value. Note: The maximum value only accepts the ConditionalFormattingColorValue object which has a Type value of Max, Number, Percent, Formula, or Pecentile.</param>
      <param name="suppressCustomName">
        <c>true</c> Indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor(FarPoint.Win.Spread.ConditionalFormattingColorValue,FarPoint.Win.Spread.ConditionalFormattingColorValue)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class.</summary>
      <param name="minValue">The minimum value. Note: The minimum value only accepts the ConditionalFormattingColorValue object which has a Type value of Min, Number, Percent, Formula, or Pecentile.</param>
      <param name="maxValue">The maximum value. Note: The maximum value only accepts the ConditionalFormattingColorValue object which has a Type value of Max, Number, Percent, Formula, or Pecentile.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.MaxValue">
      <summary>Gets the maximum value. Note: The maximum value only accepts the ConditionalFormattingColorValue object which has a Type property value of Max, Number, Percent, Formula, or Pecentile.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.MinValue">
      <summary>Gets or sets the minimum value. Note: The minimum value only accepts the ConditionalFormattingColorValue object which has a Type property value of Min, Number, Percent, Formula, or Pecentile.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.Execute(System.Int32,System.Int32,System.Object)">
      <summary>Executes the conditional format rule to change the cell's style.</summary>
      <param name="row">The row of the cell</param>
      <param name="column">The column of the cell</param>
      <param name="value">The value to determine what the result style is.</param>
      <returns>The result after executing the rule.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.GetAllRules">
      <summary>Gets all rules.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.TwoColorScaleConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that is used before starting to paint the background.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.#ctor(FarPoint.Win.Spread.UnaryComparisonOperator,System.Object,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule" /> class.</summary>
      <param name="operator">The @operator.</param>
      <param name="value">The value.</param>
      <param name="isFormula">The boolean value indicates whether the value is a formula.</param>
      <param name="suppressCustomName">
        <c>true</c> indicates that the expression, referred to by a custom name, will not be restricted; otherwise, <c>false</c></param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.#ctor(FarPoint.Win.Spread.UnaryComparisonOperator,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule" /> class.</summary>
      <param name="operator">The @operator.</param>
      <param name="value">The value.</param>
      <param name="isFormula">The boolean value indicates whether the value is a formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.Formula">
      <summary>Gets or sets the formula.</summary>
      <value>The formula.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.Operator">
      <summary>Gets or sets the operator.</summary>
      <value>The operator.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.Value">
      <summary>Gets or sets the value.</summary>
      <value>The value.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UnaryComparisonConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule">
      <summary>Represents a conditional formatting rule that accepts unique or duplicated values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule.#ctor(System.Boolean,System.Boolean)">
      <param name="isUnique" />
      <param name="createCommonRule" />
    </member>
    <member name="M:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule" /> class.</summary>
      <param name="isUnique">If set to <c>true</c>, is unique.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule" /> class from serialization.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo object to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule.IsUnique">
      <summary>Gets or sets a value that indicates whether this conditional formatting rule accepts unique values.</summary>
      <value>
        <c>true</c> if this instance is unique; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.</summary>
      <param name="info">The System.Runtime.Serialization.SerializationInfo to populate with data.</param>
      <param name="context">The destination (see System.Runtime.Serialization.StreamingContext) for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UniqueOrDuplicatedConditionalFormattingRule.IsValid(System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if the specified value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UserFormulaEnteredEventArgs">
      <summary>Represents the event data for the UserFormulaEntered event for the Spread component, which occurs when the user has entered a formula in a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32,System.Int32)">
      <summary>Creates a new object with the UserFormulaEntered event arguments.</summary>
      <param name="view">View that contains the user created formula</param>
      <param name="row">Row index of the cell in which the user entered a formula</param>
      <param name="column">Column index of the cell in which the user entered a formula</param>
    </member>
    <member name="P:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.Column">
      <summary>Gets the column index of the cell in which the user entered a formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.Row">
      <summary>Gets the row index of the cell in which the user entered a formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.UserFormulaEnteredEventArgs.View">
      <summary>Gets the main view in which the user entered a formula.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UserSpecifiedFilterItem">
      <summary>Represents a user specified filter item.</summary>
      <remarks>This class is used to add a custom filter item when SheetView.AutoFilterColumn is called with a string that is not present in the column, and -1 is the list item index.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UserSpecifiedFilterItem.#ctor(FarPoint.Win.Spread.SheetView,System.String)">
      <summary>Creates a new instance of the UserSpecifiedFilterItem object.</summary>
      <param name="sheet">SheetView</param>
      <param name="filterBy">The string to filter by</param>
    </member>
    <member name="P:FarPoint.Win.Spread.UserSpecifiedFilterItem.DisplayName">
      <summary>Gets the display name for the filter item.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UserSpecifiedFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Returns whether the item should be shown in the drop-down list.</summary>
      <param name="columnIndex">The integer</param>
      <param name="filteredInRowList">int[]</param>
      <returns>True if the item should be shown; otherwise, false.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ValidateActionBase">
      <summary>Provides the capability to execute certain actions if a Cell value fails to validate. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.#ctor">
      <summary>Represents the default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionBase.DoActionReason">
      <summary>Gets or sets the reasons that cause the action to execute.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionBase.Name">
      <summary>Gets or sets the <see cref="!:CellValidateAction" /> name.</summary>
      <value>A <see cref="T:System.String" /> value that represents the <see cref="!:CellValidateAction" /> name. The default is <see cref="F:System.String.Empty">String.Empty</see>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.ValidateActionBase" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current using the <paramref name="context" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.OnPropertyChanged(System.String)">
      <summary>Raises the PropertyChanged event.</summary>
      <param name="propertyName" />
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionBase.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.ValidateActionBase.PropertyChanged">
      <summary>The PropertyChanged event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ValidateActionCollection">
      <summary>Represents a <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValidateActionCollection.InsertItem(System.Int32,FarPoint.Win.Spread.ValidateActionBase)">
      <summary>Inserts an element into the collection at the specified index.</summary>
      <param name="index" />
      <param name="item" />
    </member>
    <member name="T:FarPoint.Win.Spread.ValidateActionContext">
      <summary>Provides relative context information when the BaseValidationAction executes.</summary>
      <remarks>This class provides information when executing the BaseValidationAction. You can get the validated cell's context information and the validation result. You can use this information to execute actions if the validation fails. You can keep the focus on the validated cell by setting the "KeepFocus" property when executing DoAction.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.CellValue">
      <summary>Internal use only Gets the object which is used as replacement of cell value to execute.</summary>
      <value>The cell value replacement.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.ColumnIndex">
      <summary>Gets the column Index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.EditedValue">
      <summary>Gets a value that indicates the validated value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.IsValid">
      <summary>Gets whether the validation is successful.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.KeepFocus">
      <summary>Gets a value that indicates whether to keep the focus on the validating cell when executing the <see cref="T:FarPoint.Win.Spread.ValidateActionBase" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.RowIndex">
      <summary>Gets the row index of cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.ValidateInfo">
      <summary>Gets or sets what information is displayed when validated.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.ValidateReasons">
      <summary>Gets the reason that a <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> executes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ValidateActionContext.ValueChanged">
      <summary>Gets whether the value of the validating cell was changed when executing <see cref="T:FarPoint.Win.Spread.ValidateActionBase" />. This is only used for <see cref="T:FarPoint.Win.Spread.ValueProcess" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ValueProcess">
      <summary>Represents a special <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that processes the value when validation fails.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.#ctor">
      <summary>Represents a default empty constructor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of this class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ValueProcess.DoActionReason">
      <summary>Gets or sets the reasons which can cause a <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> to execute.</summary>
      <value>A bitwise combination of the <see cref="T:FarPoint.Win.Spread.ValidateReasons" />. The default is <see cref="F:FarPoint.Win.Spread.ValidateReasons.CellValidating" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a valid <see cref="T:FarPoint.Win.Spread.ValidateReasons" /> value. </exception>
      <exception cref="T:System.InvalidOperationException"> The assigned value is not <see cref="F:FarPoint.Win.Spread.ValidateReasons.CellValidating" />, <see cref="F:FarPoint.Win.Spread.ValidateReasons.EndEdit" />, or <see cref="F:FarPoint.Win.Spread.ValidateReasons.CellValidating" nolink="true" /> |<see cref="F:FarPoint.Win.Spread.ValidateReasons.EndEdit" nolink="true" />. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.ValueProcess.ValueProcessOption">
      <summary>Gets or sets the <see cref="P:FarPoint.Win.Spread.ValueProcess.ValueProcessOption" /> object.</summary>
      <value>The value process option. The default is <see cref="F:FarPoint.Win.Spread.ValueProcessOption.Keep" />.</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"> The assigned value is not a valid <see cref="P:FarPoint.Win.Spread.ValueProcess.ValueProcessOption" /> value. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.Clone">
      <summary>Creates an exact copy of the current <see cref="T:FarPoint.Win.Spread.ValueProcess" />.</summary>
      <returns>A <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> that represents the cloned <see cref="T:FarPoint.Win.Spread.ValueProcess" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.DoAction(FarPoint.Win.Spread.ValidateActionContext)">
      <summary>Executes the current <see cref="T:FarPoint.Win.Spread.ValidateActionBase" /> using the <paramref name="context" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.ValidateActionContext" /> value that indicates whether the validation failed, and other relative context information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ValueProcess.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ViewportHitTestInformation">
      <summary>Represents hit test information for the viewports of the spreadsheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ViewportHitTestInformation.#ctor">
      <summary>Creates a new set of viewport hit test information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.Column">
      <summary>Gets the column location referred to in the viewport.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.InDragDrop">
      <summary>Gets whether the location refers to a drag drop area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.InDragFill">
      <summary>Gets whether the location refers to a drag fill area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.InNote">
      <summary>Gets whether the location refers to a sticky note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.InNoteIndicator">
      <summary>Gets whether the location refers to a note indicator area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.InReservedLocation">
      <summary>Gets whether the location refers to a reserved location for a cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.InShape">
      <summary>Gets whether the location refers to a shape.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ViewportHitTestInformation.Row">
      <summary>Gets the row location referred to in the viewport.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.WinLossSparklineRenderer">
      <summary>Represents the renderer of the win/loss sparklines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.WinLossSparklineRenderer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.WinLossSparklineRenderer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.WinLossSparklineRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.WinLossSparklineRenderer" /> class.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.WinLossSparklineRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.WinLossSparklineRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.WinLossSparklineRenderer.PaintSparkline(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Sparkline)">
      <summary>Paints the sparkline.</summary>
      <param name="g">The graphics object.</param>
      <param name="rectangle">The rectangle.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.WinLossSparklineRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ZoomEventArgs">
      <summary>Represents the event data for the UserZooming event for the Spread component, which occurs when the user zooms.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomEventArgs.#ctor(System.Single,System.Single)">
      <summary>Creates a new object with the Zoom event arguments.</summary>
      <param name="oldZoomFactor">Old zoom factor</param>
      <param name="newZoomFactor">New zoom factor</param>
    </member>
    <member name="P:FarPoint.Win.Spread.ZoomEventArgs.NewZoomFactor">
      <summary>Gets or sets the new zoom factor of the spread.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ZoomEventArgs.OldZoomFactor">
      <summary>Gets the old zoom factor of the spread.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ZoomSliderStatusBarElement">
      <summary>Represents the status bar element that displays the zoom slider with the zoom out and zoom in buttons.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.#ctor">
      <summary>Creates a new zoom slider.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a new ZoomStatusBarElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.ActiveSheetChangeHandler(System.Object,System.EventArgs)">
      <summary>Handle active sheet changed event</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.CalculateValue">
      <summary>Calcualate value of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.Dopaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the element to the graphics object using the rectangle.</summary>
      <param name="g">Graphics</param>
      <param name="r">Clip rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.GetPreferedWidth">
      <summary>Gets the preferred width of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the text tip when the mouse moves over the zoom slider.</summary>
      <param name="pt">point of mouse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnAttachSpreadContext">
      <summary>Calls this function when attaching the spread context to the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnDetachSpreadContext">
      <summary>Calls this function when detaching the spread context from the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse down event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnMouseLeave(System.EventArgs)">
      <summary>Processes the mouse leave event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse move event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse up event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.OnValueChanged(System.EventArgs)">
      <summary>Raises the ValueChanged event.</summary>
      <param name="e">EventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.SheetViewEndInitHandler(System.Object,System.EventArgs)">
      <summary>Sheet view end init handler</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomSliderStatusBarElement.ZoomChanged(System.Object,FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs)">
      <summary>Handles the zoom changed event.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.ZoomStatusBarElement">
      <summary>Represents the status bar element that displays the zoom level.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.#ctor">
      <summary>Instantiate a new ZoomStatusBarElement object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.#ctor(System.Boolean,FarPoint.Win.Spread.ElementAlign)">
      <summary>Instantiate a new ZoomStatusBarElement object.</summary>
      <param name="visible" />
      <param name="align" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.ActiveSheetChangeHandler(System.Object,System.EventArgs)">
      <summary>Handles the active sheet changed event.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.CalculateValue">
      <summary>Calcualate value of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.Dopaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints element to the graphics object using the rectangle.</summary>
      <param name="g">Graphics</param>
      <param name="r">Clip rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.GetPreferedWidth">
      <summary>Gets the preferred width of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.OnAttachSpreadContext">
      <summary>Calls this function when attaching the spread context to the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.OnDetachSpreadContext">
      <summary>Calls this function when detaching the spread context from the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse down event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.OnMouseLeave(System.EventArgs)">
      <summary>Processes the mouse leave event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse move event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse up event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.SheetViewEndInitHandler(System.Object,System.EventArgs)">
      <summary>Sheet view end init handler</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.ZoomStatusBarElement.ZoomChanged(System.Object,FarPoint.Win.Spread.SheetViewPropertyChangeEventArgs)">
      <summary>Handles the zoom changed event.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.Keystroke">
      <summary>Represents a key being typed on the keyboard. It contains both a character code for the key and a modifier (Alt, Ctrl, Shift, or a combination).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new keystroke from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Char)">
      <summary>Creates a new keystroke with the specified character.</summary>
      <param name="keyChar">Character defined by this keystroke</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
      <summary>Creates a new keystroke with a specified a key code and modifier keys.</summary>
      <param name="keyCode">Key code defined by this keystroke</param>
      <param name="modifiers">Modifier keys defined by this keystroke</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys,System.Boolean)">
      <summary>Creates a new keystroke with a specified a key code, modifier keys, and whether the keystroke is active on key release.</summary>
      <param name="keyCode">Key code defined by this keystroke</param>
      <param name="modifiers">Modifier keys defined by this keystroke</param>
      <param name="onKeyRelease">Whether the keystroke is active on key release</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Keystroke.KeyChar">
      <summary>Gets the character defined by this keystroke.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Keystroke.KeyCode">
      <summary>Gets the key code defined by this keystroke.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Keystroke.Modifiers">
      <summary>Gets the modifier keys defined by this keystroke.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Keystroke.OnKeyRelease">
      <summary>Gets whether the keystroke is active on key release.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.Equals(System.Object)">
      <summary>Determines whether an object is equal to the current one.</summary>
      <param name="o">Object to compare to the current one</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.GetHashCode">
      <summary>Returns a value that can used as an index in a hash table.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the keystroke (<see cref="T:FarPoint.Win.Spread.Keystroke" /> object).</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.ToString">
      <summary>Returns a string that represents the keystroke.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.op_Equality(FarPoint.Win.Spread.Keystroke,FarPoint.Win.Spread.Keystroke)">
      <summary>Determines whether two keystrokes (KeyStroke structures) are equal.</summary>
      <param name="lhs">First keystroke (left hand side of equality operator)</param>
      <param name="rhs">Second keystroke (right hand side of equality operator)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Keystroke.op_Inequality(FarPoint.Win.Spread.Keystroke,FarPoint.Win.Spread.Keystroke)">
      <summary>Determines whether two keystrokes (KeyStroke structures) are not equal.</summary>
      <param name="lhs">First keystroke (left hand side of inequality operator)</param>
      <param name="rhs">Second keystroke (right hand side of inequality operator)</param>
    </member>
    <member name="T:FarPoint.Win.Spread.LinearRange">
      <summary>Represent a range in one-dimension which is defined by the start index and end index.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LinearRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.LinearRange" /> struct.</summary>
      <param name="start">The start.</param>
      <param name="end">The end.</param>
    </member>
    <member name="F:FarPoint.Win.Spread.LinearRange.Empty">
      <summary>Represents a LinearRange structure with its properties left uninitialized. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LinearRange.End">
      <summary>The end index of range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LinearRange.Start">
      <summary>The start index of range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.LinearRange.Length">
      <summary>Gets the length.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.LinearRange.CompareTo(FarPoint.Win.Spread.LinearRange)">
      <summary>Compares the current object with another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LinearRange.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LinearRange.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LinearRange.op_Equality(FarPoint.Win.Spread.LinearRange,FarPoint.Win.Spread.LinearRange)">
      <summary>Implements the operator ==.</summary>
      <param name="r1">The r1.</param>
      <param name="r2">The r2.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.LinearRange.op_Inequality(FarPoint.Win.Spread.LinearRange,FarPoint.Win.Spread.LinearRange)">
      <summary>Implements the operator !=.</summary>
      <param name="r1">The r1.</param>
      <param name="r2">The r2.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.ListBase`1.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:FarPoint.Win.Spread.ListBase`1" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ListBase`1.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Enumerator.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ListBase`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IAllowArrowKeysMoveActiveCell">
      <summary>Interface that defines the methods and properties required by objects used to allow the arrows to move the active cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IAllowArrowKeysMoveActiveCell.AllowArrowKeysMoveActiveCell">
      <summary>Gets or sets the options used when allowing arrow keys to move the active cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IAllowArrowKeysMoveActiveCell.CheckAllowMoveActiveCell(System.Windows.Forms.Keys)">
      <summary>Checks allow move active cell.</summary>
      <param name="dataKey" />
    </member>
    <member name="T:FarPoint.Win.Spread.IAnimatedFocusIndicatorRenderer">
      <summary>Interface that supports painting a changing (or animated) focus indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IAnimatedFocusIndicatorRenderer.Position">
      <summary>Gets or sets the current step in the animation.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IApplyEvents">
      <summary>Internal use only. Interface that supports apply events in Spread Designer.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IApplyEvents.Applied">
      <summary>Occurs when applied.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IApplyEvents.Applying">
      <summary>Occurs when applying.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IConditionalFormatSupport">
      <summary>Interface that supports conditional formatting of cells on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ClearConditionalFormats(System.Int32,System.Int32)">
      <summary>Removes all of the conditional formats from the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatInvalidateCell(System.Int32,System.Int32)">
      <summary>Invalidates the conditional format cell that is specified.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatInvalidateColumn(System.Int32)">
      <summary>Invalidates the conditional format cell that is specified.</summary>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatInvalidateRow(System.Int32)">
      <summary>Invalidates the conditional format cell that is specified.</summary>
      <param name="row">Row index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatIsRowUsed(System.Int32)">
      <summary>Determines whether the specified row has a conditional format set.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.ConditionalFormatNextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the next non-empty column in the specified row after the specified column that contains a conditional format.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetCellConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
      <summary>Gets a conditional format for the next cell after the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="findNext">Whether to find the next cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetColumnConditionalFormats(System.Int32@,System.Boolean)">
      <summary>Gets a conditional format for the next column after the specified column.</summary>
      <param name="column">Column index</param>
      <param name="findNext">Whether to find the next cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetConditionalFormats(System.Int32,System.Int32)">
      <summary>Gets a conditional format from the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
      <summary>Gets a conditional format for the next cell after the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="findNext">Whether to find the next cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetRowConditionalFormats(System.Int32@,System.Boolean)">
      <summary>Gets a conditional format for the next row after the specified row.</summary>
      <param name="row">Row index</param>
      <param name="findNext">Whether to find the next cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.GetValidConditionalFormat(System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Gets the style for the first condition that is satisfied from the list of conditional formats for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="value">Cell value</param>
      <param name="dm">Data model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
      <summary>Sets a parameterized conditional format for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter value</param>
      <param name="value">Parameter value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
      <summary>Sets a parameterized conditional format for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">First parameter value</param>
      <param name="lastCondition">Last parameter value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
      <summary>Sets a parameterized conditional format for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">First parameter value</param>
      <param name="lastCondition">Last parameter value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport.SetFormulaConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
      <summary>Sets a formula conditional format for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
      <param name="formula">Formula for the condition</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IConditionalFormatSupport2">
      <summary>Interface that supports conditional formatting of cells on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport2.GetConditionalFormats">
      <summary>Returns all conditional formats.</summary>
      <returns>Returns all conditional formats</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormatSupport2.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[])">
      <summary>Sets conditional format(s) for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="conditionalFormats">Conditional format(s)</param>
      <returns>Whether the conditional format is set.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IConditionalFormattingDataRule">
      <summary>Represents an interface which provides supported requirements for a conditional formatting rule.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingDataRule.MaxMinAverageRequires">
      <summary>Gets a value that indicates whether the conditional formatting rule requires maximum, minimum, or average values from the data ranges.</summary>
      <value>
        <c>true</c> if the conditional formatting rule requires maximum and/or minimum and/or average values from the data ranges; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingDataRule.ValuesRequires">
      <summary>Gets a value that indicates whether the rule needs all values from the ranges.</summary>
      <value>
        <c>true</c> if the rule needs all values from the ranges; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormattingDataRule.NotifyDataChanged">
      <summary>Called when the data from the data provider has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IConditionalFormattingModel">
      <summary>Represents the conditional formatting model for a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingModel.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:FarPoint.Win.Spread.ConditionalFormatting" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingModel.SheetView">
      <summary>Gets or sets the sheet view.</summary>
      <value>The sheet view.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormattingModel.AdjustSplittingConditionalFormattings">
      <summary>Adjusts the ConditionalFormatting model when there are some ConditionalFormattings objects that need to be split.</summary>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormattingModel.Find(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Finds all conditional formatting that takes effect in the specified cell range.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="rowCount">The row count.</param>
      <param name="columnCount">The column count.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormattingModel.FindRules(System.Int32,System.Int32)">
      <summary>Finds all rules which take effect in the specified cell.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormattingModel.Resume">
      <summary>Resumes this instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IConditionalFormattingModel.Suspend">
      <summary>Suspends this instance.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IConditionalFormattingModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the conditional formatting of cells in the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IConditionalFormattingRule">
      <summary>Represents a conditional formatting rule.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingRule.ConditionalFormatting">
      <summary>Gets or sets the ConditionalFormatting object that contains this rule.</summary>
      <value>The ConditionalFormatting instance.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingRule.Priority">
      <summary>Gets or sets the priority.</summary>
      <value>The priority.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.IConditionalFormattingRuleCellRangeInvalidatingRequest">
      <summary>Represents an interface which provides the invalidating request.</summary>
      <remarks>This class is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.IConditionalFormattingRuleCellRangeInvalidatingRequest.RequestNeeded">
      <summary>Gets whether a request is needed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ICustomizeColor">
      <summary>Interface that defines the methods and properties required by objects used as customization of the color of TabStrip.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.ArrowColorDisabled">
      <summary>Gets or sets disabled arrow color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.ArrowColorEnabled">
      <summary>Gets or sets enabled arrow color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.ForeColor">
      <summary>Gets or sets fore color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.GrayAreaColor">
      <summary>Gets or set gray area color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.RangeGroupBackgroundColor">
      <summary>Gets or sets range group back ground color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.RangeGroupButtonBorderColor">
      <summary>Gets or sets range group button border color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.RangeGroupLineColor">
      <summary>Gets or sets range group line color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.ScrollBoxBackgroundColor">
      <summary>Gets or sets scroll box back ground color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SheetTabBorderColor">
      <summary>Gets or sets sheet tab border color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SheetTabLowerActiveColor">
      <summary>Gets or sets sheet tab lower active color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SheetTabLowerNormalColor">
      <summary>Gets or sets sheet tab lower normal color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SheetTabUpperActiveColor">
      <summary>Gets or sets sheet tab upper active color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SheetTabUpperNormalColor">
      <summary>Gets or sets sheet tab upper normal color</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SplitBarBackgroundColor">
      <summary>Gets or sets split bar back ground color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SplitBarDarkColor">
      <summary>Gets or sets split bar dark color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SplitBarLightColor">
      <summary>Gets or sets split bar light color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SplitBoxBackgroundColor">
      <summary>Gets or sets split box back ground color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.SplitBoxBorderColor">
      <summary>Gets or sets split box border color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripBackgroundColor">
      <summary>Gets or sets tab strip back ground color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonBorderColor">
      <summary>Gets or set tab strip button border color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonLowerActiveColor">
      <summary>Gets or sets tab stip button lower active color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonLowerNormalColor">
      <summary>Gets or sets tab strip button lower normal color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonLowerPressedColor">
      <summary>Gets or sets tab strip pressed button lower color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonUpperActiveColor">
      <summary>Gets or sets tab strip button upper active color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonUpperNormalColor">
      <summary>Gets or sets tab strip button upper normal color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ICustomizeColor.TabStripButtonUpperPressedColor">
      <summary>Gets or sets tab strip spressed button upper color.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IEnhancedInterfaceRenderer">
      <summary>Interface that defines the enhanced methods and properties required by objects used as painters of tab sheets.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IEnhancedInterfaceRenderer.PaintSpecialSheetTab(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font,System.Drawing.Image)">
      <summary>Paints the special insert sheet tab.</summary>
      <param name="g">Graphics device interface for painting the sheet tab</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether mouse is over the sheet tab</param>
      <param name="placementbStrip">Location of the tab strip</param>
      <param name="isLeftToRight">Whether the sheet is oriented left-to-right</param>
      <param name="enabled">Whether the sheet is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
      <param name="newSheetImage">Image for insert sheet tab</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IEnhancedPdfRenderer">
      <summary>Interface that supports printing to PDF, which supports extended features.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IEnhancedPdfRenderer.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single,FarPoint.Win.Spread.ExtraRendererSettings)">
      <summary>Paints (prints) the cell to PDF when not in edit mode.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="r">Boundary rectangle to paint</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Value to paint</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
      <param name="extraRendererSettings">The extra renderer settings.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IEnhancedRenderer">
      <summary>Interface that defines the methods and properties required by objects used as enhanced renderers which supports extended features. Renderers are responsible for painting cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IEnhancedRenderer.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single,FarPoint.Win.Spread.ExtraRendererSettings)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum needed size</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <param name="extraRendererSettings">The extra renderer settings.</param>
      <returns>The size required to fully paint the content.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IEnhancedRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single,FarPoint.Win.Spread.ExtraRendererSettings)">
      <summary>Paints the cell when not in edit mode.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">The rectangle boundary in which to paint the value.</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="isSelected">if set to <c>true</c>, the cell is in a selected state.</param>
      <param name="isLocked">if set to <c>true</c>, the cell is in a locked state.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <param name="extraRendererSettings">The extra renderer settings.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IErrorIconRenderer">
      <summary>Interface that defines the methods and properties required by objects used as painters of the error icon.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IErrorIconRenderer.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the cell with the error icon using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IExcelExporter">
      <summary>Provides a unified way of converting types of values to a value used for Excel export.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IExcelExporter.CanExportTo(System.Type)">
      <summary>Returns whether this exporter can export the object to the specified type.</summary>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to export to.</param>
      <returns>true if this exporter can perform the export; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IExcelExporter.ExportTo(System.Type)">
      <summary>Exports the given value object to the specified type.</summary>
      <param name="destinationType">The <see cref="T:System.Type" /> to export the object to.</param>
      <returns>A <see cref="T:System.Object" /> that represents the exported value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IFilteredRowSupport">
      <summary>Interface that supports style filters in the style model for filtering rows on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilteredRowSupport.ClearFilterRowFormats">
      <summary>Removes all the filtered row formats from the style model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilteredRowSupport.SetFilteredRowFormat(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the format for the specified row into the style model.</summary>
      <param name="rowIndex">Row index</param>
      <param name="style">StyleInfo object that contains the style</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IFilteredRowSupport2">
      <summary>Interface that supports style filters in the style model for filtering rows on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilteredRowSupport2.RemoveFilterRowFormats(System.Int32)">
      <summary>Removes the filtered row formats from the style model.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IFilteredRowSupport3">
      <summary>Interface that supports style filters in the style model for filtering rows on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilteredRowSupport3.IgnoreFilterInfoChanging">
      <summary>Ignore style from changing when model changes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilteredRowSupport3.ResumeFilterInfoChanging">
      <summary>Resume style changing when model changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IFilterItem">
      <summary>Interface that supports the creation of custom row filters for filtering rows on a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFilterItem.DisplayAtTopOfList">
      <summary>Gets whether the display name should be added to the top of the filter drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFilterItem.DisplayName">
      <summary>Gets the display name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFilterItem.SheetView">
      <summary>Sets the sheet to filter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilterItem.Filter(System.Int32)">
      <summary>Selects a filter from the filter drop-down list.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilterItem.ShowInDropDown(System.Int32,System.Int32[])">
      <summary>Determines whether this filter should be displayed in the filter drop-down list based on the currently filtered-in rows.</summary>
      <param name="columnIndex">Column index</param>
      <param name="filteredInRowList">List of rows filtered in</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IFilterSupport">
      <summary>Interface that supports row filters for filtering rows on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilterSupport.GetDropDownFilterItems(System.Int32)">
      <summary>Gets the list of items to display in the filter drop-down list.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilterSupport.InvalidateRowFilter(System.Boolean,System.Boolean)">
      <summary>Invalidates the row filter and causes the columns to be repainted.</summary>
      <param name="clear">Whether to clear</param>
      <param name="forceInvalidate">Whether to force the invalidate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilterSupport.ResetFilteredColumn(System.Int32)">
      <summary>Internal Use: Resets a column to be unfiltered.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IFilterSupport.SetFilteredColumn(System.Int32,System.String)">
      <summary>Internal Use: Sets a column as filtered, and passes the selected drop-down list string by which to filter.</summary>
      <param name="columnIndex">Column index</param>
      <param name="filterBy">String that contains what to filter by</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IFocusIndicatorRenderer">
      <summary>Interface that supports painting the focus indicator using a specified control and dimensions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFocusIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints the cell with the focus indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="left">Whether to paint the left side of the focus indicator</param>
      <param name="top">Whether to paint the top of the focus indicator</param>
      <param name="right">Whether to paint the right side of the focus indicator</param>
      <param name="bottom">Whether to paint the bottom of the focus indicator</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IFocusIndicatorRenderer2">
      <summary>Interface that supports painting the focus indicator using a specified control and dimensions for Touch gripper support.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFocusIndicatorRenderer2.PaintTouchGripper(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Color,System.Drawing.Color)">
      <summary>Paints the gripper focus indicator.</summary>
      <param name="g">Graphics device interface for painting</param>
      <param name="rect">Paint rectangle</param>
      <param name="thickness">Thickness</param>
      <param name="backColor">Background color</param>
      <param name="foreColor">Foreground color</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IFormulaEditingSupport">
      <summary>Indicates whether the cell editor can handle formula input.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IFormulaEditingSupport2">
      <summary>Indicates whether the cell editor can handle formula input. With runtime check</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFormulaEditingSupport2.CanSupportFormulaEditing">
      <summary>Gets a value that indicates whether the cell type can support formula editing state.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IFpStatusBar">
      <summary>Interface for the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.BackColor">
      <summary>Gets or sets the backcolor of the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.Elements">
      <summary>Gets the collection of elements in the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.EnableContextMenu">
      <summary>Gets or sets where the context menu of status bar is enabled</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.Font">
      <summary>Gets or sets the text font in the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.ForeColor">
      <summary>Gets or sets the forecolor of the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.Owner">
      <summary>Gets the fpspread that owns the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.Skin">
      <summary>Gets or sets the skin for the status bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.Visible">
      <summary>Gets whether the status bar is visible</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.ZoomButtonHoverColor">
      <summary>Gets or sets the zoom level button color when when the mouse is over it.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.ZoomSliderColor">
      <summary>Gets or sets the color of the zoom slider button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.ZoomSliderHoverColor">
      <summary>Gets or sets the color for the zoom slider button when the mouse is over the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBar.ZoomSliderTrackColor">
      <summary>Gets or sets the track color for the zoom slider in the status bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBar.ApplySkin(FarPoint.Win.Spread.StatusBarSkin)">
      <summary>Applies the skin to the status bar.</summary>
      <param name="skin" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBar.FireElementVisibleChanged">
      <summary>Causes the element visible changed event to occur.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBar.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the rectangle of the status bar.</summary>
      <param name="rect" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBar.PointToClient(System.Drawing.Point)">
      <summary>Converts the point.</summary>
      <param name="point" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBar.SetStatusBarElements(FarPoint.Win.Spread.IFpStatusBarElement[])">
      <summary>Sets elements for the status bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBar.ShouldSerialize">
      <summary>Gets whether the status bar should serialize the Code DOM.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IFpStatusBar.ElementVisibleChanged">
      <summary>Occurs when the visible property of the element is changed by the menu strip.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IFpStatusBarElement">
      <summary>Interface for the status bar elements.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBarElement.Align">
      <summary>Gets or sets the element alignment.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBarElement.MenuText">
      <summary>Gets the element text displayed in context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBarElement.Owner">
      <summary>Gets the status bar that contains the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBarElement.Text">
      <summary>Gets the element text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBarElement.ValueText">
      <summary>Gets value as string type</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IFpStatusBarElement.Visible">
      <summary>Indicates whether the element is displayed in the status bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.CalculateValue">
      <summary>Calcualate value of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.Dopaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the element using the graphics object and the rectangle.</summary>
      <param name="g">Graphics</param>
      <param name="r">Clip rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.GetPreferedWidth">
      <summary>Gets the preferred width of the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.GetTextTip(System.Drawing.Point)">
      <summary>Gets the element text tip.</summary>
      <param name="pt" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.OnAttachSpreadContext">
      <summary>Calls the function when attaching the spread context to the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.OnDetachSpreadContext">
      <summary>Calls the function when detaching the spread context from the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse down event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.OnMouseLeave(System.EventArgs)">
      <summary>Processes the mouse leave event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse move event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse up event for the element.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.IFpStatusBarElement.SetBound(System.Drawing.Rectangle)">
      <summary>Sets the element boundary.</summary>
      <param name="r" />
    </member>
    <member name="E:FarPoint.Win.Spread.IFpStatusBarElement.OnChanged">
      <summary>Causes the event to occur when the element is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IIgnoreSupport">
      <summary>Interface that defines the methods and properties required by objects used for ignoring changes of the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IIgnoreSupport.IgnoreBaseSheetChange">
      <summary>Gets or sets whether to ignore base sheet changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IInterfaceRenderer">
      <summary>Interface that defines the methods and properties required by objects used as painters of tab sheets.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripButton,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Paints a tab strip button.</summary>
      <param name="g">Graphics device interface for the tab strip</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="button">Button to render</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="pressed">Whether the sheet tab is pressed</param>
      <param name="isLeftToRight">Whether the orientation is left to right</param>
      <param name="enabled">Whether the sheet tab is enabled</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintGrayArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the gray area.</summary>
      <param name="g">Graphics device interface for painting the gray area</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintRangeGroupArea(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the outline (range group) area.</summary>
      <param name="g">Graphics device interface for painting the area</param>
      <param name="x">Near X-coordinate</param>
      <param name="y">Top Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintRangeGroupButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.GroupState,System.Boolean,System.Boolean)">
      <summary>Paints the outline (range group) button.</summary>
      <param name="g">Graphics device interface for painting the button</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="groupState">State of the outline (range group)</param>
      <param name="rowGroup">Whether this is an outline (range group) of rows</param>
      <param name="isLeftToRight">Whether set to right-to-left</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintRangeGroupLevelBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Paints the outline (range group) level indicator box.</summary>
      <param name="g">Graphics device interface for painting the box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="groupLevel">Level of the outline (range group)</param>
      <param name="rowGroup">Whether this is an outline (range group) of rows</param>
      <param name="isLeftToRight">Whether set to right-to-left</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintRangeGroupLine(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point)">
      <summary>Paints the outline (range group) line.</summary>
      <param name="g">Graphics device interface for painting the line</param>
      <param name="startPoint">Start point of the line</param>
      <param name="endPoint">End point of the line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintRangeGroupPoint(System.Drawing.Graphics,System.Drawing.Point)">
      <summary>Paints the outline (range group) point.</summary>
      <param name="g">Graphics device interface for painting the point</param>
      <param name="point">Point to paint</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintScrollBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the scroll box.</summary>
      <param name="g">Graphics device interface for painting the scroll box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintSheetTab(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the sheet tab.</summary>
      <param name="g">Graphics device interface for painting the tab strip</param>
      <param name="sheet">Sheet index of sheet tab to render</param>
      <param name="text">Sheet name</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="focused">Whether the sheet tab has focus</param>
      <param name="placement">Location of the tab strip</param>
      <param name="isLeftToRight">Whether the sheet is oriented left-to-right</param>
      <param name="enabled">Whether the sheet is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintSheetTabPartial(System.Drawing.Graphics,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints a sheet tab which is partially displayed.</summary>
      <param name="g">Graphics device interface for painting the sheet tab</param>
      <param name="sheet">Sheet index of sheet tab to render</param>
      <param name="text">Sheet name</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether the mouse is over the sheet tab</param>
      <param name="focused">Whether the sheet tab has focus</param>
      <param name="placement">Location of the tab strip</param>
      <param name="isLeftToRight">Whether the sheet is oriented left-to-right</param>
      <param name="enabled">Whether the sheet is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintSpecialSheetTab(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,FarPoint.Win.Spread.TabStripPlacement,System.Boolean,System.Boolean,System.Drawing.Font,System.Drawing.Font)">
      <summary>Paints the special insert sheet tab.</summary>
      <param name="g">Graphics device interface for painting the sheet tab</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="mouseOver">Whether mouse is over the sheet tab</param>
      <param name="placementbStrip">Location of the tab strip</param>
      <param name="isLeftToRight">Whether the sheet is oriented left-to-right</param>
      <param name="enabled">Whether the sheet is enabled</param>
      <param name="font">Font for sheet tab when not selected</param>
      <param name="activeFont">Font for sheet tab when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintSplitBar(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split bar.</summary>
      <param name="g">Graphics device interface for painting the split bar</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintSplitBarCrossover(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the crossing between the split bars.</summary>
      <param name="g">Graphics device interface for painting the split bars</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintSplitBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the split box.</summary>
      <param name="g">Graphics device interface for painting the split box</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IInterfaceRenderer.PaintTabStripBackground(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.TabStripPlacement)">
      <summary>Paints the tab strip background.</summary>
      <param name="g">Graphics device interface for painting the tab strip background</param>
      <param name="x">Near X-coordinate</param>
      <param name="y">Top Y-coordinate</param>
      <param name="width" />
      <param name="height" />
      <param name="placement" />
    </member>
    <member name="T:FarPoint.Win.Spread.IManualRowFilterSupport">
      <summary>Interface that supports to not filtering automatically when there is a cell change.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IManualRowFilterSupport.IsManual">
      <summary>Gets or sets whether filter responds immediately to a cell change. <value><c>true</c>specifies the filter will not automatically trigger when there is a cell change; otherwise, <c>false</c>. </value></summary>
    </member>
    <member name="P:FarPoint.Win.Spread.INamedObject.Name">
      <summary>Gets or sets the name of the object.</summary>
      <value>A <see cref="T:System.String" /> value that represents the name of the object.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.INoteIndicatorRenderer">
      <summary>Interface that defines the methods and properties required by objects used as painters of the note indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.INoteIndicatorRenderer.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
    </member>
    <member name="T:FarPoint.Win.Spread.INoteIndicatorRenderer2">
      <summary>Interface that defines the methods and properties required by objects used as painters of the note indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.INoteIndicatorRenderer2.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="indicatorColor">Color</param>
    </member>
    <member name="T:FarPoint.Win.Spread.INoteIndicatorRenderer3">
      <summary>Interface that defines the methods and properties required by objects used as painters of the note indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.INoteIndicatorRenderer3.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,FarPoint.Win.Spread.NoteIndicatorPosition,System.Boolean)">
      <summary>Paints the cell with the note indicator using the specified control and dimensions.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate</param>
      <param name="y">Y-coordinate</param>
      <param name="width">Width, in pixels</param>
      <param name="height">Height, in pixels</param>
      <param name="indicatorColor">Color</param>
      <param name="indicatorPosition">note indicator position</param>
      <param name="rightToLeft">Whether right to left orientation</param>
    </member>
    <member name="T:FarPoint.Win.Spread.INotifyDataChanged">
      <summary>Interface that supports the form noitify the data has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.INotifyDataChanged.Changed">
      <summary>Occurs when the data has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.INotifyItemChanged">
      <summary>Interface that notifies Spread when the item is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.INotifyItemChanged.ItemAdded">
      <summary>Occurs when an item is added.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.INotifyItemChanged.ItemRemoved">
      <summary>Occurs when an item is removed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.INotifyItemChanged.ItemUpdated">
      <summary>Occurs when the item is updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IOptimizedFilterConditionalFormattingModel">
      <summary>Interface that supports additional optimization in the conditional formatting model beyond IOptimizedFilterConditionalFormattingModel.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterConditionalFormattingModel.FindIntersection(System.Int32,System.Int32)">
      <summary>Finds all rows which have been covered by at least one conditional format at the specified column.</summary>
      <param name="column">The specified column.</param>
      <param name="maxRow">The maximum row count to find.</param>
      <returns>The sorted row list in ascending order.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IOptimizedFilterConditionalFormattingModel1">
      <summary>Interface that supports additional optimization in the conditional formatting model beyond IOptimizedFilterConditionalFormattingModel.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterConditionalFormattingModel1.FindIntersection(System.Int32,System.Int32,System.Int32)">
      <summary>Finds all rows which have been covered by at least one conditional format at the specified column.</summary>
      <param name="column">The specified column.</param>
      <param name="startRowIndex">Start row index to find.</param>
      <param name="endRowIndex">End row index to find</param>
      <returns>The sorted row list in ascending order.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IOptimizedFilterStyleModel">
      <summary>Interface that supports additional optimization for retrieval of styles in the style model beyond IOptimizedFilterStyleModel.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IOptimizedFilterStyleModel.IncludeCellLocked">
      <summary>Gets or sets a value that indicates whether the cell locked status is performed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IOptimizedFilterStyleModel.IsConditionalFormatEmpty">
      <summary>Gets a value that indicates whether this instance is empty.</summary>
      <value>
        <c>true</c> if this conditional format instance is empty; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.IOptimizedFilterStyleModel.IsFilteredStyleEmpty">
      <summary>Gets whether this filtered style is empty.</summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterStyleModel.GetCompositeBackColor(FarPoint.Win.Spread.StyleInfo)">
      <summary>Get the composite backcolor of a StyleInfo object.</summary>
      <param name="style">The StyleInfo</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterStyleModel.GetCompositeCellType(System.Int32,System.Int32,FarPoint.Win.Spread.CellType.ICellType@,FarPoint.Win.Spread.CellType.IFormatter@)">
      <summary>Gets the celltype and formatter for a cell, column, row, or model as a composite of settings.</summary>
      <param name="modelRow">The model row.</param>
      <param name="modelColumn">The model column.</param>
      <param name="cellType">Type of the cell.</param>
      <param name="formatter">The formatter.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterStyleModel.GetCompositeForeColor(FarPoint.Win.Spread.StyleInfo)">
      <summary>Get the composite forecolor of a StyleInfo object.</summary>
      <param name="style">The StyleInfo</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the composite information.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="altIndex">Alternating index.</param>
      <param name="destInfo">The destination information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterStyleModel.NextNonEmptyRow(System.Int32,System.Boolean)">
      <summary>Gets the index of the next row that contains a style setting in the model.</summary>
      <param name="row">Row index to start searching after (-1 to start at row 0)</param>
      <param name="foreColor">if set to <c>true</c> forecolor.</param>
      <returns>Row index of next non-empty row</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.IOptimizedFilterStyleModel.NextNonEmptyRow(System.Int32,System.Int32,System.Boolean)">
      <summary>Gets the index of the next row that contains a style setting for the specified column in the model.</summary>
      <param name="row">Row index to start searching after (-1 to start at row 0)</param>
      <param name="column">The column index.</param>
      <param name="foreColor">if set to <c>true</c> forecolor.</param>
      <returns>Row index of next non-empty row</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.IPdfPrintableRule">
      <summary>Represents the conditional formatting rule that is used for painting to PDF before the text is painted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IPdfPrintableRule.CanPrint">
      <summary>Gets a value that indicates whether this rule can print directly to PDF graphics.</summary>
      <value>
        <c>true</c> if this rule can print directly to PDF graphics; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IPdfPrintableRule.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to PDF graphics with the specified appearance settings if the conditional format rule is satisfied.</summary>
      <param name="g">PDF graphics for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IPrePaintConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that is used before starting to paint the background.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IPrePaintConditionalFormattingRule.Execute(System.Int32,System.Int32,System.Object)">
      <summary>Executes the conditional format rule to change the cell's style.</summary>
      <param name="row">The row of the cell to check.</param>
      <param name="column">The column of the cell to check.</param>
      <param name="value">The value to determine what the result style is.</param>
      <returns>The result after executing the rule.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IPrePaintConditionalFormattingRule.Execute(System.Object)">
      <summary>Executes the conditional format rule to change the cell's style.</summary>
      <param name="value">The value to determine what the result style is.</param>
      <returns>The result after executing the rule.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that is used for painting before the text is painted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule.ShowConditionalFormatOnly">
      <summary>Gets or sets a value that indicates whether the cell text should not be painted.</summary>
      <value>
        <c>true</c> if the cell text should not be painted; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single,System.Boolean)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred size of other content</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <param name="showCFOnly">Indicates whether the text will be painted.</param>
      <returns>The preferred (maximum required) size of the cell for the renderer control</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule.GetRuleEffectingInfo(FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Gets the information with the specified appearance settings if the conditional format rule is satisfied.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IPrePaintTextConditionalFormattingRule.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings if the conditional format rule is satisfied.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.PrePaintTextResult" /> object that indicates the result of painting</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.IPropertyChangedNotification">
      <summary>Interface for notifying Spread when the property changes from the previous value.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IPropertyChangedNotification.PropertyChanged">
      <summary>Occurs when the property is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IRangeGroupModel">
      <summary>Interface that supports creating a model that represents an outline (range group) of rows or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.AddGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Groups rows or columns into an outline (range group) from a specified start index by a specified amount.</summary>
      <param name="startIndex">Start index</param>
      <param name="count">Amount of the row or column to group</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.AddIndexes(System.Int32,System.Int32,System.Boolean)">
      <summary>Adds a specified amount of outline (range group) indexes starting with a specified index in a group.</summary>
      <param name="startIndex">Start index</param>
      <param name="addCount">Number of rows or columns to add</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.ClearRangeGroup(System.Boolean)">
      <summary>Removes all the outlines (range groups) of rows or columns.</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.ExpandGroup(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Expands an outline (range group) of rows or columns.</summary>
      <param name="level">Level of the outline (range group) to expand or collapse</param>
      <param name="endIndex">End index of the outline (range group) to expand</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.Expands(System.Int32,System.Boolean,System.Boolean)">
      <summary>Expands an outline (range group) at a specified index.</summary>
      <param name="index">Index to expand or collapse</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.Expands(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Expands an outline (range group) at the specified indexes.</summary>
      <param name="startIndex">Start index to expand or collapse</param>
      <param name="count">Number of rows or columns to expand or collapse</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.FindGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Finds an outline (range group) with a specified level and end index.</summary>
      <param name="level">Level of the outline (range group)</param>
      <param name="end">End index of the outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Outline (range group)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.GetCopy(System.Int32,System.Int32,System.Boolean)">
      <summary>Gets a copy of all the outlines (range groups) from the specified index with the specified count.</summary>
      <param name="startIndex">Start index</param>
      <param name="copyCount">Copy count</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Copy of the outlines (range groups)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.GetGroupLevels(System.Boolean)">
      <summary>Gets the amount of the level of an outline (range group).</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.GetOutLineLevel(System.Boolean,System.Int32)">
      <summary>Gets the outline level of the specified index of the outline (range group).</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="index">Index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.GetRangeGroupInfo(System.Int32,System.Boolean)">
      <summary>Gets an outline (range group) of rows or columns by level.</summary>
      <param name="level">Level to get the associated outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Collection of outlines (range groups) with the specified level</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.IsCollapsed(System.Int32,System.Boolean)">
      <summary>Determines if a row or column belongs to any collapsed (closed) outline (range group).</summary>
      <param name="index">Row or column index</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Boolean: true if the row or column belongs to a closed range group; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.Move(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Moves an outline (range group) and pastes it into an outline (range group) at the specified location, by indexes.</summary>
      <param name="fromIndex">Index from which to begin the move</param>
      <param name="toIndex">Index at which to paste the range group</param>
      <param name="moveCount">Number of rows or columns to move</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.PasteGroup(FarPoint.Win.Spread.RangeGroupInfo,System.Int32,System.Boolean)">
      <summary>Pastes an outline (range group) into a segment starting with a specified index.</summary>
      <param name="group">Outline (range group) to paste</param>
      <param name="pasteIndex">Index of row or column at which to paste the range group</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.RemoveGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Removes an outline (range group) of rows or columns from a specified start index by a specified amount.</summary>
      <param name="startIndex">Start index</param>
      <param name="count">Number of rows or columns</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel.RemoveIndexes(System.Int32,System.Int32,System.Boolean)">
      <summary>Removes the specified outline (range group) starting with a specified index and moving up indexes below that.</summary>
      <param name="startIndex">Start index</param>
      <param name="removeCount">Number of rows or columns to remove</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="E:FarPoint.Win.Spread.IRangeGroupModel.Changed">
      <summary>Occurs when an outline (range group) has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IRangeGroupModel2">
      <summary>Interface that supports creating a model that represents an outline (range group) of rows or columns.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.IRangeGroupModel2.Changing">
      <summary>Occurs when an outline (range group) is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IRangeGroupModel3">
      <summary>Interface that supports creating a model that represents an outline (range group) of rows or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel3.FindGroupByIndex(System.Int32,System.Int32,System.Boolean)">
      <summary>Finds an outline (range group) with a specified level and index.</summary>
      <param name="level">Level of the outline (range group)</param>
      <param name="index">Index of the outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Outline (range group)</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupModel3.GetRangeGroupDirectInfo(System.Int32,System.Boolean)">
      <summary>Gets an outline (range group) of rows or columns by level.</summary>
      <param name="level">Level to get the associated outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Collection of outlines (range groups) with the specified level</returns>
      <remarks>RangeGroupInfo array elements are elements which are stored in RangeGroupModel. Changing their values is not recommended.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.IRangeGroupSupport">
      <summary>Interface that supports the outline (range group) of rows or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.AddRangeGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Groups a range of rows or columns into an outline from a specified start index by a specified amount.</summary>
      <param name="startIndex">Start index</param>
      <param name="count">Number of rows or columns to group</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.ClearRangeGroup(System.Boolean)">
      <summary>Removes an outline (range group).</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.ExpandRangeGroup(FarPoint.Win.Spread.RangeGroupInfo,System.Boolean,System.Boolean)">
      <summary>Expands or collapses an outline (range group) of rows or columns, by specified group.</summary>
      <param name="group">Outline (range group) to expand or collapse</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.ExpandRangeGroup(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Expands or collapses an outline (range group) of rows or columns, by specified level and index.</summary>
      <param name="level">Level of the outline (range group) to expand or collapse</param>
      <param name="endIndex">End index of the outline (range group) to expand or collapse</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <param name="expand">Whether the action is to expand</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.GetRangeGroupInfo(System.Int32,System.Boolean)">
      <summary>Gets all the outlines (range groups) in a specified level.</summary>
      <param name="level">Level of outline (range group)</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
      <returns>Collection of outlines (range groups) in the level</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.GetRangeGroupLevels(System.Boolean)">
      <summary>Gets the amount of the level of an outline (range group).</summary>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRangeGroupSupport.RemoveRangeGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>Removes a range of rows or columns from the outline (range group) at the specified start index by a specified amount.</summary>
      <param name="startIndex">Start index</param>
      <param name="count">Number of rows or columns to remove</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IRowFilter">
      <summary>Interface that supports row filters for filtering rows on a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.AllString">
      <summary>Gets or sets the "(All)" filter item string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.BlanksString">
      <summary>Gets or sets the "(Blanks)" filter item string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.ColumnDefinitions">
      <summary>Gets the collection of filter column definitions for the sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.DropDownBorderStyle">
      <summary>Gets the style for the border around the drop-down list of filter items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.NonBlanksString">
      <summary>Gets or sets the "(NonBlanks)" filter item string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.SheetView">
      <summary>Gets or sets the sheet for this row filter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.ShowFilterIndicator">
      <summary>Gets or sets whether the filter indicator is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilter.UnfilteredRows">
      <summary>Gets or sets rows that are not to be filtered.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.AddColumn(FarPoint.Win.Spread.FilterColumnDefinition)">
      <summary>Adds a filter column definition to the row filter.</summary>
      <param name="fcd">FilterColumnDefinition object that contains the filter column definition</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.AddColumn(System.Int32)">
      <summary>Adds a filter column definition to the row filter.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.AddColumn(System.Int32,FarPoint.Win.Spread.FilterListBehavior)">
      <summary>Adds a filter column definition to the row filter.</summary>
      <param name="columnIndex">Column index</param>
      <param name="listBehavior">FilterListBehvior object that contains the list behavior</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.AddFilteredOutRow(System.Int32)">
      <summary>Adds a row to the filtered-out row list, which is the list of rows currently filtered-out by the combined settings of the filtered columns.</summary>
      <param name="rowIndex">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.ClearFilteredRows">
      <summary>Internal use only. Removes all temporary filter settings including the filtered-in list and filtered-out list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.ClearFilteredRows(System.Int32)">
      <summary>Internal use only. Removes all temporary filter settings for a specified column including the filtered-in list and the filtered-out list.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetColumnFilterBy(System.Int32)">
      <summary>Gets the string selected in the drop-down list of filters for the specified column.</summary>
      <param name="modelColumnIndex">Columnn index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetColumnFilterIndexFromColumnIndex(System.Int32)">
      <summary>Gets the column filter index for the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilterColumnDefinition(System.Int32)">
      <summary>Gets the filter column definition for the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilteredColumnIndexes">
      <summary>Gets an array of column indexes where row filters exist.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilteredInRows(System.Int32)">
      <summary>Internal use only. Gets the the filtered-in rows for the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetFilteredOutRowList">
      <summary>Gets the list of rows that are filtered out.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetIntersectedFilteredInRows">
      <summary>Gets the intersection of the filtered-in rows for all the filtered columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.GetIntersectedFilteredInRows(System.Int32)">
      <summary>Gets the intersection of the filtered-in rows for all the filtered columns except the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.IsFiltered(System.Int32)">
      <summary>Determines whether the specified column is filtered.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.IsRowFilteredOut(System.Int32)">
      <summary>Determines whether the specified row is filtered out.</summary>
      <param name="rowIndex">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves the filter column(s) to another location.</summary>
      <param name="fromRow">Row index from which to move</param>
      <param name="fromColumn">Column index from which to move</param>
      <param name="toRow">Destination row index</param>
      <param name="toColumn">Destination column index</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.MoveFilters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Internal use only. Moves the filter column(s) to another location.</summary>
      <param name="fromRow">Row index from which to move</param>
      <param name="fromColumn">Column index from which to move</param>
      <param name="toRow">Destination row index</param>
      <param name="toColumn">Destination column index</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
      <param name="ignoreUpdate">Whether to ignore resetting the column indexes in the filter column definitions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.OnDataModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
      <summary>Internal use only. Event handler for when the sheet data model changes.</summary>
      <param name="sender">Sender object</param>
      <param name="e">Sheet data model event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.RemoveColumn(System.Int32)">
      <summary>Removes a filter column definition from the row filter.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.ResetCachedIntersectedFilteredInRowIndexes">
      <summary>Internal use only. Resets the cached array of filtered in row indexes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.ResetFilter">
      <summary>Resets the temporary filter settings for all columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.ResetFilter(System.Int32)">
      <summary>Resets the temporary filter settings for the specified column.</summary>
      <param name="columnIndex">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.SetColumnFilterBy(System.Int32,System.String)">
      <summary>Internal use only. Sets the string selected in the drop-down list of filters for the specified column.</summary>
      <param name="modelColumnIndex">Columnn index</param>
      <param name="filterBy">String that contains the filter selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.SetFilteredInRowList(System.Int32,System.Int32[])">
      <summary>Internal use only. Sets the list of rows currently filtered in for a specified column containing a filter definition.</summary>
      <param name="columnIndex">Column index</param>
      <param name="rowList">Integer array or list of row indexes</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.SetIsFiltered(System.Int32,System.Boolean)">
      <summary>Internal use only. Sets the isFiltered flag for the existing column filter.</summary>
      <param name="columnIndex">Column index</param>
      <param name="isFiltered">Whether the column is filtered</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter.SetupEventHandlers">
      <summary>Sets up the event handlers to listen to the SheetView object. Intended for internal use only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IRowFilter2">
      <summary>Interface that supports row filters for filtering rows on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter2.IsAnyFilterApplied">
      <summary>Checks whether a filter has been applied in the spread sheet.</summary>
      <returns>Returns true if there is an applied filter; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.IRowFilter2.OnStyleModelChanged(System.Object,FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
      <summary>Internal use only. Event handler for when the sheet style model changes.</summary>
      <param name="sender">Sender object</param>
      <param name="e">Sheet style model event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.IRowFilterFrozenSupport">
      <summary>Interface for supporting optional filtering of frozen rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IRowFilterFrozenSupport.FilterFrozenRows">
      <summary>Gets or sets whether frozen rows should be included in the filter operation.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IScrollBarRenderer">
      <summary>Interface that supports painting the scroll bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the arrow button.</summary>
      <param name="g">Graphics device interface for drawing the arrow button</param>
      <param name="bounds">Rectangular bounds for drawing the arrow button</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawCustomButton(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the custom button.</summary>
      <param name="g">Graphics device interface for drawing the custom button</param>
      <param name="bounds">Rectangular bounds for drawing the custom button</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawHorizontalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal thumb.</summary>
      <param name="g">Graphics device interface for drawing the thumb</param>
      <param name="bounds">Rectangular bounds for drawing the thumb</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawHorizontalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the horizontal thumb grip.</summary>
      <param name="g">Graphics device interface for drawing the thumb grip</param>
      <param name="bounds">Rectangular bounds for drawing the thumb grip</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawLeftHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the left horizontal track.</summary>
      <param name="g">Graphics device interface for drawing the horizontal track</param>
      <param name="bounds">Rectangular bounds for drawing the horizontal track</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawLowerVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the lower vertical track.</summary>
      <param name="g">Graphics device interface for drawing the scroll bar</param>
      <param name="bounds">Rectangle object</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawRightHorizontalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the right horizontal track.</summary>
      <param name="g">Graphics device interface for drawing the horizontal track</param>
      <param name="bounds">Rectangular bounds for drawing the horizontal track</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawUpperVerticalTrack(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the upper vertical track.</summary>
      <param name="g">Graphics device interface for drawing the vertical track</param>
      <param name="bounds">Rectangular bounds for drawing the vertical track</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawVerticalThumb(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical thumb.</summary>
      <param name="g">Graphics device interface for drawing the thumb</param>
      <param name="bounds">Rectangular bounds for drawing the thumb</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.IScrollBarRenderer.DrawVerticalThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.FpScrollBarButton)">
      <summary>Draws the vertical thumb grip.</summary>
      <param name="g">Graphics device interface for drawing the thumb grip</param>
      <param name="bounds">Rectangular bounds for drawing the thumb grip</param>
      <param name="element">Scroll bar button object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ISelectionRenderer">
      <summary>Interface that supports painting the selection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ISelectionRenderer.PaintSelection(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Paints the selection.</summary>
      <param name="g">Graphics object used to paint the rectangle</param>
      <param name="x">X-coordinate of the upper-left corner of the rectangle to paint</param>
      <param name="y">Y-coordinate of the upper-left corner of the rectangle to paint</param>
      <param name="width">Width of rectangle to paint</param>
      <param name="height">Height of rectangle to paint</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ISheetCellRangeSupport">
      <summary>Interface that causes the SheetCellRange container to reevaluate the SheetCellRange when the formula changes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ISheetCellRangeSupport.ReferenceError">
      <summary>Gets a value that indicates whether the current cell range is an invalid reference.</summary>
      <value>
        <c>true</c> if the current cell range is an invalid reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ISheetCellRangeSupport.ReLoadFormula(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView)">
      <summary>Reevaluates the formula.</summary>
      <param name="spread">The spread.</param>
      <param name="ownerSheetView">The sheetview that contains the sparkline.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.ISheetCellRangeSupport.FormulaChanged">
      <summary>Occurs when the formula is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ISheetStyleModelTableSupport">
      <summary>Interface that supports merging the table style with the model style by priority.</summary>
      <remarks>This interface is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ISheetStyleModelTableSupport.GetHigherCompositeStyleInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the style that has a higher priority than the table style.</summary>
      <param name="row">Row index</param>
      <param name="column">Column Index</param>
      <param name="altIndex">Alternative row index.</param>
      <param name="destInfo">Destination <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object.</param>
      <returns>a <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object.</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.ISheetStyleModelTableSupport.GetLowerCompositeStyleInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the style that has a lower priority than the table style.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="altIndex">Alternative row index.</param>
      <param name="destInfo">Destination <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object.</param>
      <returns>A <see cref="T:FarPoint.Win.Spread.StyleInfo" /> object</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.ISheetViewInitializer">
      <summary>The sheetview initializer interface. Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ISheetViewInitializer.Initialize(FarPoint.Win.Spread.SheetView)">
      <summary>Initializes the specified sheet view.</summary>
      <param name="sheetView">The sheet view.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ISparkline">
      <summary>Interface that supports creating a sparkline.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparkline.Column">
      <summary>Gets or sets the column.</summary>
      <value>The column.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparkline.Row">
      <summary>Gets or sets the row.</summary>
      <value>The row.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparkline.GetSparkLineData">
      <summary>Gets the data that the sparkline contains for rendering.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ISparkline.Updated">
      <summary>Occurs when updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ISparklineContainer">
      <summary>Interface that supports creating a model that represents a sparkline.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparklineContainer.IsEmpty">
      <summary>Gets a value that indicates whether this instance is empty.</summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparklineContainer.Item(System.Int32)">
      <summary>Gets the <see cref="!:FarPoint.Web.Spread.ISparklineGroup" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparklineContainer.Owner">
      <summary>Owner of this container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparklineContainer.AddSparklineToGroup(FarPoint.Win.Spread.ISparkline,FarPoint.Win.Spread.ISparklineGroup)">
      <summary>Adds the sparkline to the existing group.</summary>
      <param name="sparkline">The sparkline.</param>
      <param name="sparklineGroup">The sparkline group information.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparklineContainer.GetSparkline(System.Int32,System.Int32,FarPoint.Win.Spread.ISparklineGroup@,FarPoint.Win.Spread.ISparkline@)">
      <summary>Gets the sparkline in the specified location.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="sparklineGroup">The sparkline group information in the specified location.</param>
      <param name="sparkline">The sparkline.</param>
      <returns>true if the sparkline exists in the location.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparklineContainer.GetSparkline(System.Int32,System.Int32)">
      <summary>Gets the sparkline information.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparklineContainer.RemoveSparkline(System.Int32,System.Int32)">
      <summary>Removes the sparkline.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.ISparklineContainer.Changed">
      <summary>Occurs when the sparkline group or sparkline has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ISparklineGroup">
      <summary>Interface that supports creating a group of sparklines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparklineGroup.Item(System.Int32)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.ISparkline" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparklineGroup.Renderer">
      <summary>Gets or sets the renderer.</summary>
      <value>The renderer.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.ISparklineGroup.Setting">
      <summary>Gets or sets the setting.</summary>
      <value>The setting.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparklineGroup.CloneSetting">
      <summary>Clones a new sparkline group that copies the setting of the current sparkline group.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ISparklineGroup.ClearItems">
      <summary>Occurs when all items are clear.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.ISparklineGroup.Updated">
      <summary>Occurs when updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ISparklineRenderer">
      <summary>Interface that supports creating a renderer for painting sparklines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.ISparklineRenderer.PaintSparkline(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Sparkline)">
      <summary>Paints the sparkline.</summary>
      <param name="g">The graphics object.</param>
      <param name="rectangle">The rectangle.</param>
      <param name="sparkline">The sparkline.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ISparklineSetting">
      <summary>Interface that supports creating a setting for sparklines.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.IStopablePrePaintConditionalFormattingRule">
      <summary>Represents the conditional formatting rule that is used before starting to paint the background and can stop all following conditional formatting rules.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.IStopablePrePaintConditionalFormattingRule.StopIfTrue">
      <summary>Gets or sets a value that indicates whether all following conditional formatting rules should be stopped.</summary>
      <value>
        <c>true</c> if all following conditional formatting rules should be stopped; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoFilterMode">
      <summary>Specifies settings for the automatic filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.AutoFilterMode.FilterGadget">
      <summary>Displays a filter gadget for the automatic filter</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.AutoFilterMode.EnhancedContextMenu">
      <summary>Displays a context menu for the automatic filter</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.AutoFilterMode.FilterBar">
      <summary>Displays a filter bar for the automatic filter</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.AutoFilterMode.RangeFilter">
      <summary>Internal use only. The mode used to specify a range filter mode.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.BorderCollapse">
      <summary>Specifies how the borders of adjacent cells are displayed in the view.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.BorderCollapse.Collapse">
      <summary>Displays borders for adjacent cells as collapsed into a single border</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.BorderCollapse.Separate">
      <summary>Displays borders for adjacent cells as separate borders detached from each other</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.BoundaryFeedbackMode">
      <summary>Specifies how <see cref="T:FarPoint.Win.Spread.FpSpread" /> reacts when the manipulation has gone beyond certain boundaries.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.BoundaryFeedbackMode.Standard">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> control causes the parent window to have a visual feedback.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.BoundaryFeedbackMode.Split">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> control shows a split visual feedback.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ButtonDrawModes">
      <summary>Specifies how to display buttons in cells for button and combo box cell types.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.Always">
      <summary>[0] Always displays buttons</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.CurrentCell">
      <summary>[1] Displays buttons only in the current cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.CurrentColumn">
      <summary>[2] Displays buttons only in the current column</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.CurrentRow">
      <summary>[4] Displays buttons only in the current row</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.AlwaysPrimaryButton">
      <summary>[8] Always displays buttons for button cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.AlwaysSecondaryButton">
      <summary>[16] Always displays buttons for combo box cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ButtonDrawModes.AlwaysEditButtons">
      <summary>[32] Always displays buttons for edit cells</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CalculationPolicy">
      <summary>Indicates the policy of the calculation controller.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CalculationPolicy.Reference">
      <summary>Reference</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CalculationPolicy.Event">
      <summary>Event</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellHorizontalAlignment">
      <summary>Specifies the horizontal alignment of the cell contents.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.General">
      <summary>Aligns the cell content according to the cell's interpretation of the content</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Left">
      <summary>Aligns the cell content to the left</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Center">
      <summary>Centers the content in the cell horizontally</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Right">
      <summary>Aligns the cell content to the right</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Justify">
      <summary>Indicates that whitespace has been inserted to make the text fill the special area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellHorizontalAlignment.Distributed">
      <summary>Indicates that whitespace has been inserted to make the text fill the special area.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellRangeType">
      <summary>Represents the CellRange type.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellRangeType.Sheet">
      <summary>Represents the sheet CellType</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellRangeType.Column">
      <summary>Represents the column CellType</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellRangeType.Row">
      <summary>Represents the row CellType</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellRangeType.Cell">
      <summary>Represents the cell CellType</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellSpanSelectionPolicy">
      <summary>Sets the type of selection model when working with spans.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellSpanSelectionPolicy.Default">
      <summary>Specifies the default behavior for the selection.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellSpanSelectionPolicy.Contained">
      <summary>Specifies that the selection is contained in the range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellSpanSelectionPolicy.Intersected">
      <summary>Specifies that the selection contains all ranges that intersect with the selected range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellSpanSelectionPolicy.IgnoreSpan">
      <summary>Specifies that the selection will ignore the spanned cell</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellVerticalAlignment">
      <summary>Specifies the vertical alignment of the cell contents.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.General">
      <summary>Aligns the cell contents according to the cell's interpretation of the contents</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Top">
      <summary>Aligns the cell contents to the top</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Center">
      <summary>Centers the content in the cell vertically</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Bottom">
      <summary>Aligns the cell contents to the bottom</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Justify">
      <summary>Indicates that whitespace has been inserted to make the text fill the special area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellVerticalAlignment.Distributed">
      <summary>Indicates that whitespace has been inserted to make the text fill the special area.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Centering">
      <summary>Specifices the type of centering for the printed page.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Centering.None">
      <summary>[0] Does not center the printed page at all.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Centering.Horizontal">
      <summary>[1] Centers the printed layout horizontally on the page.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Centering.Vertical">
      <summary>[2] Centers the printed layout vertically on the page.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Centering.Both">
      <summary>[3] Centers the printed layout both horizontally and vertically on the page.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ChangeType">
      <summary>Specifies the type of change (movement) of the scroll bar button.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ChangeType.None">
      <summary>Indicates no movement of the scroll bar button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ChangeType.SmallChange">
      <summary>Indicates a small amount of movement of the scroll bar button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ChangeType.LargeChange">
      <summary>Indicates a large amount of movement of the scroll bar button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ChangeType.MoveToHome">
      <summary>Indicates movement to the left (horiztonally) or to the top (vertically) of the scroll bar button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ChangeType.MoveToEnd">
      <summary>Indicates movement to the right (horiztonally) or to the bottom (vertically) of the scroll bar button</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardBehavior">
      <summary>Represents the origin of the source of the Clipboard data.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardBehavior.CellDragFill">
      <summary>Clipboard is for cell drag fill action.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardBehavior.Unknown">
      <summary>Clipboard is for unknown action.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardBehavior.Redo">
      <summary>Clipboard is for cell redo action.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardBehavior.Undo">
      <summary>Clipboard is for cell undo action.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardCopyOptions">
      <summary>Specifies what data is copied to the Clipboard.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardCopyOptions.All">
      <summary>[0] Copies all data objects, including values, formatting, and formulas</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardCopyOptions.Values">
      <summary>[1] Copies only values</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardCopyOptions.Formatting">
      <summary>[2] Copies only formatting</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardCopyOptions.Formulas">
      <summary>[3] Copies only formulas</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardCopyOptions.AsString">
      <summary>[5] Copies as a text string</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardCopyOptions.AsStringSkipHidden">
      <summary>[6] Copies as a text string and skips hidden cells</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardOptions">
      <summary>Specifies which headers are included when data is copied to or pasted from the Clipboard.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardOptions.NoHeaders">
      <summary>[0] Includes neither column nor row headers when data is copied; does not overwrite selected column or row headers when data is pasted</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardOptions.RowHeaders">
      <summary>[1] Includes selected row headers when data is copied; overwrites selected row headers when data is pasted</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardOptions.ColumnHeaders">
      <summary>[2] Includes selected column headers when data is copied; overwrites selected column headers when data is pasted</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardOptions.AllHeaders">
      <summary>[3] Includes selected headers when data is copied; overwrites selected headers when data is pasted</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardOptions.FilterBar">
      <summary>[4] Includes selected filter bars when data is copied; overwrites selected filter bars when data is pasted</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardOptions.AllHeadersAndFilterBar">
      <summary>[7] Includes selected headers and filter bars when data is copied; overwrites selected headers and filter bars when data is pasted</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardPasteOptions">
      <summary>Specifies what data is pasted from the Clipboard.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.All">
      <summary>[0] Pastes all data objects, including values, formatting, and formulas</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Values">
      <summary>[1] Pastes only values</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Formatting">
      <summary>[2] Pastes only formatting</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Formulas">
      <summary>[3] Pastes only formulas</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.AsLink">
      <summary>[4] Pastes as a link to the original cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.AsString">
      <summary>[5] Pastes as a text string</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.AsStringSkipHidden">
      <summary>[6] Pastes as a text string and skips hidden cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ClipboardPasteOptions.Shape">
      <summary>[7] Pastes only shapes</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CodeDomStrategies">
      <summary>Represents the CodeDom strategies.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CodeDomStrategies.Auto">
      <summary>Determines the best strategry base on current data.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CodeDomStrategies.Code">
      <summary>Geneates code as normal.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CodeDomStrategies.Resource">
      <summary>Generates data as OpenXMl format in resource file.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CollectionEditorOptions">
      <summary>Specifies which UITypeEditor to invoke directly at runtime.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CollectionEditorOptions.Sheets">
      <summary>Displays the Sheets Collection Editor</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CollectionEditorOptions.NamedStyles">
      <summary>Displays the NamedStyles Collection Editor</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CollectionEditorOptions.AlternatingRow">
      <summary>Displays the AlternatingRow Collection Editor</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CollectionEditorOptions.GroupInfo">
      <summary>Displays the GroupInfo Collection Editor</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CompareStringValidatorOperator">
      <summary>Defines the operators which are used to compare strings.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CompareStringValidatorOperator.Equals">
      <summary>Specifies that the two strings are equal.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CompareStringValidatorOperator.NotEquals">
      <summary>Specifies that the two strings are not equal.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CompareStringValidatorOperator.Contains">
      <summary>Specifies that the first string contains the second string.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CompareStringValidatorOperator.StartsWith">
      <summary>Specifies that the first string starts with the second string.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CompareStringValidatorOperator.EndsWith">
      <summary>Specifies that the first string ends with the second string.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ComparisonOperator">
      <summary>Specifies the operator for conditional formats.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.IsTrue">
      <summary>Determines whether a formula evaluates to true</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.IsFalse">
      <summary>Determines whether a formula evaluates to false</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.Between">
      <summary>Determines whether a cell value is between the two parameter values</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.NotBetween">
      <summary>Determines whether a cell value is not between the two parameter values</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.EqualTo">
      <summary>Determines whether a cell value is equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.NotEqualTo">
      <summary>Determines whether a cell value is not equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.GreaterThan">
      <summary>Determines whether a cell value is greater than the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.LessThan">
      <summary>Determines whether a cell value is less than the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.GreaterThanOrEqualTo">
      <summary>Determines whether a cell value is greater than or equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.LessThanOrEqualTo">
      <summary>Determines whether a cell value is less than or equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ComparisonOperator.IsEmpty">
      <summary>Determines whether a cell is empty</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingChangedEventType">
      <summary>Specifies the type of Changed event that has occurred for conditional formatting.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingChangedEventType.RuleCollectionChanged">
      <summary>Indicates that the rule colllection of conditional formatting has been changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingChangedEventType.RuleChanged">
      <summary>Indicates that an individual rule of conditional formatting has been changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingChangedEventType.EffectChanged">
      <summary>Indicates that the effect on the applying cellrange of conditional formatting has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingIcon">
      <summary>Represents the predefined icon for conditional formatting.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.BlackCircle">
      <summary>Specifies the black circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.BlackCircleWithBorder">
      <summary>Specifies the black circle with a border icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.CircleWithOneWhiteQuarter">
      <summary>Specifies the circle with one white quarter icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.CircleWithThreeWhiteQuarters">
      <summary>Specifies the circle with three white quarters icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.CircleWithTwoWhiteQuarters">
      <summary>Specifies the circle with two white quarters icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.FourFilledBoxes">
      <summary>Specifies the four filled boxes icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GoldStar">
      <summary>Specifies the gold star icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GrayCircle">
      <summary>Specifies the gray circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GrayDownArrow">
      <summary>Specifies the gray down arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GrayDownInclineArrow">
      <summary>Specifies the gray down incline arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GraySideArrow">
      <summary>Specifies the gray side arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GrayUpArrow">
      <summary>Specifies the gray up arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GrayUpInclineArrow">
      <summary>Specifies the gray up incline arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenCheck">
      <summary>Specifies the green check icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenCheckSymbol">
      <summary>Specifies the green check symbol icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenCircle">
      <summary>Specifies the green circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenFlag">
      <summary>Specifies the green flag icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenTrafficLight">
      <summary>Specifies the green traffic light icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenUpArrow">
      <summary>Specifies the green up arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.GreenUpTriangle">
      <summary>Specifies the green up triangle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.HalfGoldStar">
      <summary>Specifies the half gold star icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.OneFilledBox">
      <summary>Specifies the one filled box icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.PinkCircle">
      <summary>Specifies the pink circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedCircle">
      <summary>Specifies the red circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedCircleWithBorder">
      <summary>Specifies the red circle with border icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedCross">
      <summary>Specifies the red cross icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedCrossSymbol">
      <summary>Specifies the red cross symbol icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedDiamond">
      <summary>Specifies the red diamond icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedDownArrow">
      <summary>Specifies the red down arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedDownTriangle">
      <summary>Specifies the red down triangle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedFlag">
      <summary>Specifies the red flag icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.RedTrafficLight">
      <summary>Specifies the red traffic light icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.SignalMeterWithFourFilledBars">
      <summary>Specifies the signal meter with four filled bars icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.SignalMeterWithNoFilledBars">
      <summary>Specifies the signal meter with no filled bars icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.SignalMeterWithOneFilledBar">
      <summary>Specifies the signal meter with one filled bar icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.SignalMeterWithThreeFilledBars">
      <summary>Specifies the signal meter with three filled bars icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.SignalMeterWithTwoFilledBars">
      <summary>Specifies the signal meter with two filled bars icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.SilverStar">
      <summary>Specifies the silver star icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.ThreeFilledBoxes">
      <summary>Specifies the three filled boxes icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.TwoFilledBoxes">
      <summary>Specifies the two filled boxes icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.WhiteCircle">
      <summary>Specifies the white circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowCircle">
      <summary>Specifies the yellow circle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowDash">
      <summary>Specifies the yellow dash icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowDownInclineArrow">
      <summary>Specifies the yellow down incline arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowExclamation">
      <summary>Specifies the yellow exclamation icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowExclamationSymbol">
      <summary>Specifies the yellow exclamation symbol icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowFlag">
      <summary>Specifies the yellow flag icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowSideArrow">
      <summary>Specifies the yellow side arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowTrafficLight">
      <summary>Specifies the yellow traffic light icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowTriangle">
      <summary>Specifies the yellow triangle icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.YellowUpInclineArrow">
      <summary>Specifies the yellow up incline arrow icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.ZeroFilledBoxes">
      <summary>Specifies the zero filled boxes icon.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.None">
      <summary>Specifies no icon</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIcon.Custom">
      <summary>Specifies a custom icon</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle">
      <summary>Represents the style of the icon set.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeColoredArrows">
      <summary>Indicates a set of three colored arrow icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeGrayArrows">
      <summary>Indicates a set of three gray arrow icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeFlags">
      <summary>Indicates a set of three flag icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeUnrimmedTrafficLights">
      <summary>Indicates a set of three unrimmed traffic light icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeRimmedTrafficLights">
      <summary>Indicates a set of three rimmed traffic light icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeSigns">
      <summary>Indicates a set of three sign icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeCircledSymbols">
      <summary>Indicates a set of three circled symbol icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeUnCircledSymbols">
      <summary>Indicates a set of three uncircled symbol icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FourColoredArrows">
      <summary>Indicates a set of four colored arrow icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FourGrayArrows">
      <summary>Indicates a set of four gray arrow icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.RedToBlack">
      <summary>Indicates a set of circle icons from red to black.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FourRatings">
      <summary>Indicates a set of four rating icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FourTrafficLights">
      <summary>Indicates a set of four traffic light icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FiveColoredArrows">
      <summary>Indicates a set of five colored arrow icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FiveGrayArrows">
      <summary>Indicates a set of five gray arrow icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FiveRatings">
      <summary>Indicates a set of five rating icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FiveQuarters">
      <summary>Indicates a set of five quarter icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeStars">
      <summary>Indicates a set of three star icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.ThreeTriangles">
      <summary>Indicates a set of three triangle icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.FiveBoxes">
      <summary>Indicates a set of five box icons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingIconSetStyle.Custom">
      <summary>Indicates a set of custom icons.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingModelEventType">
      <summary>Specifies the type of Change event that has occurred for a conditional formatting model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.ItemAdded">
      <summary>Indicates that an individual conditional formatting has been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.ItemRemoved">
      <summary>Indicates that an individual conditional formatting has been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.ItemChanged">
      <summary>Indicates that an individual conditional formatting has been changed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.ColumnsAdded">
      <summary>Indicates that columns have been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.ColumnsRemoved">
      <summary>Indicates that columns have been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.RowsAdded">
      <summary>Indicates that rows have been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.RowsRemoved">
      <summary>Indicates that rows have been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.Cleared">
      <summary>Indicates that conditional formattings have been cleared</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.Swaped">
      <summary>Indicates that conditional formattings have been moved</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.Moved">
      <summary>Indicates that conditional formattings have been moved</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.Copied">
      <summary>Indicates that conditional formattings have been copied</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingModelEventType.EffectChanged">
      <summary>Indicates that the effect on the applying cellrange of conditional formatting has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingValueType">
      <summary>Represents the value type of the conditional formatting.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.Number">
      <summary>Indicates the number value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.Percent">
      <summary>The minimum value in the range of cells that the conditional formatting rule applies to plus X percent of the difference between the maximum and minimum values in the range of cells that the conditional formatting rule applies to.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.Max">
      <summary>The maximum value from the range of cells that the conditional formatting rule applies to.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.Min">
      <summary>The minimum value from the range of cells that the conditional formatting rule applies to.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.Formula">
      <summary>The result of the formula determines the minimum or maximum value of the cell range that the rule applies to. If the result is not numeric, it is treated as zero.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.Percentile">
      <summary>The minimum value of the cell that is in the X percentile of the range of cells that the conditional formatting rule applies to.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.AutoMin">
      <summary>The smaller of zero or the minimum value from the range of cells that the conditional formatting rule applies to.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalFormattingValueType.AutoMax">
      <summary>The larger of zero or the maximum value from the range of cells that the conditional formatting rule applies to.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalStyleOperator">
      <summary>Defines operators that are used to customize a <see cref="T:FarPoint.Win.Spread.ConditionalStyleInfo" />.</summary>
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleItem" />
      <seealso cref="T:FarPoint.Win.Spread.ConditionalStyleItemCollection" />
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNull">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is <see langword="null" /> or <see cref="F:System.DBNull.Value">DBNull.Value</see>.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotNull">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is not <see langword="null" /> or <see cref="F:System.DBNull.Value">DBNull.Value</see>.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsEmpty">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is <see langword="null" /> or <see cref="F:System.DBNull.Value">DBNull.Value</see> or <see cref="F:System.String.Empty">String.Empty</see>.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotEmpty">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is not <see langword="null" /> or <see cref="F:System.DBNull.Value">DBNull.Value</see> or <see cref="F:System.String.Empty">String.Empty</see>.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsTrue">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is <see langword="true" />.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsFalse">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is <see langword="false" />.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.Between">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotBetween">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is out of range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.Equals">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is equal to the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.NotEquals">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is not equal to the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThan">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is greater than the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThan">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is less than the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.GreaterThanOrEquals">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is greater than or equal to the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.LessThanOrEquals">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> is less than or equal to the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.Contains">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> contains a value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.StartsWith">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> starts with a value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.EndsWith">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> ends with a value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsMatch">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> matches a regular expression.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ConditionalStyleOperator.IsNotMatch">
      <summary>Indicates that the <see cref="P:FarPoint.Win.Spread.Cell.Value" /> does not match a regular expression.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CursorType">
      <summary>Specifies the area in the view in which to display a different pointer.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.Normal">
      <summary>Displays a pointer in the general area within the control</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RowResize">
      <summary>Displays a pointer in the row resize area</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.ColumnResize">
      <summary>Displays a pointer in the column resize area</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.LockedCell">
      <summary>Displays a pointer within a locked cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.ColumnHeader">
      <summary>Displays a pointer within a column header</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.FilterBar">
      <summary>Displays a pointer within a filter bar</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.FilterBarHeader">
      <summary>Displays a pointer within a filter bar header</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.ColumnFooter">
      <summary>Displays a pointer within a column footer</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.FooterCorner">
      <summary>Displays a pointer within a footer corner</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RowHeader">
      <summary>Displays a pointer within a row header</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.DragDropArea">
      <summary>Displays a pointer for drag and drop on the edge of the selection</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.Corner">
      <summary>Displays a pointer within the sheet corner</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.TabStrip">
      <summary>Displays a pointer in the sheet tabs</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.DragFill">
      <summary>Displays a pointer for drag and fill on the edge of the area</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RowColumnSplitBar">
      <summary>Displays a pointer over row and column split bars</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RowSplitBar">
      <summary>Displays a pointer over the row split bar</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.ColumnSplitBar">
      <summary>Displays a pointer over the column split bar</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RowSplitBox">
      <summary>Displays a pointer over the row split box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.ColumnSplitBox">
      <summary>Displays a pointer over the column split box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.TabStripSplitBox">
      <summary>Displays a pointer over the sheet tabs split box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RangeGroup">
      <summary>Displays a pointer over the range group.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.TitleBar">
      <summary>Displays a pointer over the title and subtitle.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.GrayArea">
      <summary>Displays a pointer over the gray area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.ColumnOutResize">
      <summary>Displays a pointer in the resize area of a zero-size column when the ResizeZeroIndicator property is set to Enhanced</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.RowOutResize">
      <summary>Displays a pointer in the resize area of a zero-size row when the ResizeZeroIndicator property is set to Enhanced</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CursorType.DragFillSeries">
      <summary>Displays a pointer for drag and fill series on the edge of the area</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomFilterOperatorType">
      <summary>Specifies the operator for custom filtering.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomFilterOperatorType.Equal">
      <summary>Shows results which are equal to the criteria.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomFilterOperatorType.GreaterThan">
      <summary>Shows results which are greater than the criteria.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomFilterOperatorType.GreaterThanOrEqual">
      <summary>Shows results which are greater than or equal to the criteria.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomFilterOperatorType.LessThan">
      <summary>Shows results which are less than the criteria.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomFilterOperatorType.LessThanOrEqual">
      <summary>Shows results which are less than or equal to the criteria.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomFilterOperatorType.NotEqual">
      <summary>Shows results which are not equal to the criteria.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomNameChangeAction">
      <summary>Specifies how to process the data when a custom name changes.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomNameChangeAction.Add">
      <summary>[1] Whether to add a custom name</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomNameChangeAction.Modify">
      <summary>[2] Whether to modify a custom name</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomNameChangeAction.SetComment">
      <summary>[3] Whether to set the comment for a custom name</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CustomNameChangeAction.Remove">
      <summary>[1] Whether to remove a custom name</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DataBarAxisPosition">
      <summary>Represents the axis position for the data bar.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DataBarAxisPosition.Automatic">
      <summary>Indicates that the axis position for the data bar is calculated automatically.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DataBarAxisPosition.Middle">
      <summary>Indicates that the axis position for the data bar is the midpoint of the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DataBarAxisPosition.None">
      <summary>Indicates that there is no axis for the data bar.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DateTimeGroupingType">
      <summary>Specifies the part of the date time value used in a comparision.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Day">
      <summary>Specifies datetime values compared by day</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Hour">
      <summary>Specifies datetime values compared by hour</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Minute">
      <summary>Specifies datetime values compared by minute</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Month">
      <summary>Specifies datetime values compared by month</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Second">
      <summary>Specifies datetime values compared by second</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Year">
      <summary>Specifies datetime values compared by year</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.All">
      <summary>Specifies datetime values compared by all values</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DateTimeGroupingType.Date">
      <summary>Specifies datetime values compared by date (time is ignored)</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DragFillMode">
      <summary>Specifies the type of DragFill mode.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DragFillMode.Copy">
      <summary>Fills cells as a copy of selections</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DragFillMode.Series">
      <summary>Fills cells with series patterns</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DragFillMode.ControlCopy">
      <summary>Fills cells with series patterns and copy patterns when Ctrl is pressed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DragFillMode.ControlSeries">
      <summary>Fills cells with copy patterns and series patterns when Ctrl is pressed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DynamicFilterType">
      <summary>Specifies a value that indicates the type of dynamic filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.AboveAverage">
      <summary>Filters cells whose values are greater than the average value; used for number filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.BelowAverage">
      <summary>Filters cells whose values are less than the average value; used for number filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.LastMonth">
      <summary>Filters cells whose values are in the last month; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.LastQuarter">
      <summary>Filters cells whose values are in the last quarter; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.LastWeek">
      <summary>Filters cells whose values are in the last week; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.LastYear">
      <summary>Filters cells whose values are in the last year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M1">
      <summary>Filters cells whose values are in January, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M2">
      <summary>Filters cells whose values are in February, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M3">
      <summary>Filters cells whose values are in March, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M4">
      <summary>Filters cells whose values are in April, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M5">
      <summary>Filters cells whose values are in May, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M6">
      <summary>Filters cells whose values are in June, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M7">
      <summary>Filters cells whose values are in July, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M8">
      <summary>Filters cells whose values are in August, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M9">
      <summary>Filters cells whose values are in September, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M10">
      <summary>Filters cells whose values are in October, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M11">
      <summary>Filters cells whose values are in November, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.M12">
      <summary>Filters cells whose values are in December, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.NextMonth">
      <summary>Filters cells whose values are next month; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.NextQuarter">
      <summary>Filters cells whose values are in the next quarter; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.NextWeek">
      <summary>Filters cells whose values are in the next week; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.NextYear">
      <summary>Filters cells whose values are in the next year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Q1">
      <summary>Filters cells whose values are in the first quarter, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Q2">
      <summary>Filters cells whose values are in the second quarter, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Q3">
      <summary>Filters cells whose values are in the third quarter, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Q4">
      <summary>Filters cells whose values are in the fourth quarter, regardless of year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.ThisMonth">
      <summary>Filters cells whose values are in this month; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.ThisQuarter">
      <summary>Filters cells whose values are in this quarter; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.ThisWeek">
      <summary>Filters cells whose values are in this week; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.ThisYear">
      <summary>Filters cells whose values are in this year; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Today">
      <summary>Filters cells whose values are equal to today; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Tomorrow">
      <summary>Filters cells whose values are equal to tomorrow; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.YearToDate">
      <summary>Fitlers cells whose values are between the beginning of the year and today, inclusive; used for date filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DynamicFilterType.Yesterday">
      <summary>Filters cells whose values are equal to yesterday; used for date filter.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EditError">
      <summary>Specifies the possible editor messages based on the user action.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.CellIsLocked">
      <summary>[1] Indicates the user attempted to interact with a locked cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.ColumnRestricted">
      <summary>Indicates the user attempted to move the focus to a restricted column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.RowRestricted">
      <summary>Indicates the user attempted to move the focus to a restricted row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.ColumnAndRowRestricted">
      <summary>Indicates the user attempted to move the focus to a cell that is located in both a restricted row and column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.InvalidCellData">
      <summary>Indicates the current input value in the editor is invalid</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.TypedInCheckbox">
      <summary>Indicates the user attempted to type in a check box cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.InvalidCellFormula">
      <summary>Indicates the user typed an invalid formula into a cell (sent when the user has left the cell).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.InvalidHyperlink">
      <summary>Indicates the user clicked a link that is invalid.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EditError.InvalidCellValue">
      <summary>Indicates the user typed invalid data into a cell (sent when the user has left the cell).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ElementAlign">
      <summary>Specifies the element alignment for the status bar.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ElementAlign.Left">
      <summary>Elements will be painted on the left side of status bar</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ElementAlign.Right">
      <summary>Elements will be painted on the right side of status bar</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EnhancedFilterSortingMode">
      <summary>Specifies settings for sorting items in an enhanced filter.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedFilterSortingMode.Default">
      <summary>Specifies to display items in an enhanced filter by default order.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedFilterSortingMode.Text">
      <summary>Specifies to display items in an enhanced filter by the display text order.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ButtonStyles">
      <summary>Specifies the button style.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ButtonStyles.Flat">
      <summary>Displays the button as flat.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedInterfaceRenderer.ButtonStyles.Enhanced">
      <summary>Displays the button as enhanced.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabShape">
      <summary>Specifies the shape of sheet tabs.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabShape.Rectangle">
      <summary>Displays the sheet tab as a rectangle with squared corners.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabShape.RoundedRectangle">
      <summary>Displays the sheet tab as a rectangle with rounded corners.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabShape.Trapezoid">
      <summary>Displays the sheet tab as a trapezoid (in N. America or trapezium in other parts).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.EnhancedInterfaceRenderer.SheetTabShape.IsoscelesTrapezoid">
      <summary>Displays the sheet tab as an icosceles trapezoid (in N. America or trapezium in other parts).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FillDirection">
      <summary>Specifies the direction of the fill in the view.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FillDirection.Left">
      <summary>Fills from the right to the left</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FillDirection.Right">
      <summary>Fills from the left to the right</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FillDirection.Up">
      <summary>Fills from the bottom to the top</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FillDirection.Down">
      <summary>Fills from the top to the bottom</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterListBehavior">
      <summary>Specifies how the row filter behaves.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.Custom">
      <summary>[0] Uses the custom filter</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.Blank">
      <summary>[2] Displays the "(Blanks)" item in the drop-down list when appropriate</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.NonBlank">
      <summary>[4] Displays the "(NonBlanks)" item in the drop-down list when appropriate</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.DefaultFilter">
      <summary>[1024] Includes the DefaultFilterItem implementation of IFilterItem in the drop-down list</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortAlphabetically">
      <summary>[1025] Uses the default filter behavior and sorts the drop-down list alphabetically</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.Default">
      <summary>[1031] Uses the default filter behavior, including Blank, NonBlank, and SortAlphabetically</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortByMostOccurrences">
      <summary>[1032] Sorts the drop-down list by the number of times an item occurs from most to least</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortByLeastOccurrences">
      <summary>[1040] Sorts the drop-down list by the number of times an item occurs from least to most</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortNoSort">
      <summary>[1056] Uses the default filter behavior and does not perform a sort on the drop-down list.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterListBehavior.SortNumerically">
      <summary>[1088] Uses the default filter behavior and sorts the drop-down list numerically</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterState">
      <summary>Specifies the state of filtering for the current column so the column renderer knows which filtering image to draw.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterState.None">
      <summary>Filtering is not available.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterState.FilterActive">
      <summary>Filtering is active.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterState.FilterInactive">
      <summary>Filtering is available, but not currently in use.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterState.FilterActiveDisabled">
      <summary>Filtering is active, and the control is disabled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FilterState.FilterInactiveDisabled">
      <summary>Filtering is available, but not currently in use, and the control is disabled.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FlagArrowKeys">
      <summary>Defines the moving active cell while editing cell enumeration.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FlagArrowKeys.Up">
      <summary>Allows moving up while editing cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FlagArrowKeys.Down">
      <summary>Allows moving down while editing cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FlagArrowKeys.Left">
      <summary>Allows moving left while editing cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FlagArrowKeys.Right">
      <summary>Allows moving right while editing cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FlagArrowKeys.All">
      <summary>Allows moving in all directions while editing cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FlagArrowKeys.None">
      <summary>Does not allow moving while editing the cell</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.FormatCells.FormatCellsTab">
      <summary>Represents the tabs of the format cell form.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FormatCells.FormatCellsTab.Number">
      <summary>The number tab.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FormatCells.FormatCellsTab.Alignment">
      <summary>The text alignment tab.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FormatCells.FormatCellsTab.Font">
      <summary>The text font tab.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FormatCells.FormatCellsTab.Border">
      <summary>The border tab.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FormatCells.FormatCellsTab.Fill">
      <summary>The fill tab.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.FormatCells.FormatCellsTab.Protection">
      <summary>The protection tab.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GridLines">
      <summary>Specifies whether horizontal or vertical grid lines or both are displayed on the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLines.None">
      <summary>Does not display grid lines on the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLines.Horizontal">
      <summary>Displays horizontal grid lines on the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLines.Vertical">
      <summary>Displays vertical grid lines on the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLines.Both">
      <summary>Displays both horizontal and vertical grid lines on the sheet</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GridLineType">
      <summary>Specifies the type of grid lines.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLineType.None">
      <summary>Displays no grid lines on the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLineType.Flat">
      <summary>Displays grid lines on the sheet as flat, no contour</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLineType.Lowered">
      <summary>Displays grid lines on the sheet to appear as lowered contour</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GridLineType.Raised">
      <summary>Displays grid lines on the sheet to appear as raised contour</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.GroupState">
      <summary>Specifies the status of an outline (range group).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GroupState.Expanded">
      <summary>Expanded status with the minus sign</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GroupState.Collapsed">
      <summary>Collapsed status with the plus sign</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.GroupState.PartCollapsed">
      <summary>Internal use only: Ambiguous (or undetermined) status with the plus sign</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HeaderAutoText">
      <summary>Specifies the default labels to display in headers.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HeaderAutoText.Blank">
      <summary>[0] Displays blanks in the headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HeaderAutoText.Numbers">
      <summary>[1] Displays numbers in the headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HeaderAutoText.Letters">
      <summary>[2] Displays letters in the headers</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HitTestType">
      <summary>Specifies the locations in the component for the HitTest method.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.Empty">
      <summary>Specifies an empty location</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.Corner">
      <summary>Specifies that the location is in the upper left sheet corner of a workbook</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.TabStrip">
      <summary>Specifies that the location is in the sheet name tab area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.RowHeader">
      <summary>Specifies that the location is in the row header area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.ColumnHeader">
      <summary>Specifies that the location is in the column header area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.ColumnFooter">
      <summary>Specifies that the location is in the column footer area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.Viewport">
      <summary>Specifies that the location is in a viewport of the data area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.RowSplitBar">
      <summary>Specifies that the location is in the row splitter bar area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.ColumnSplitBar">
      <summary>Specifies that the location is in the column splitter bar area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.RowSplitBox">
      <summary>Specifies that the location is in the row split box of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.ColumnSplitBox">
      <summary>Specifies that the location is in the column split box of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.TabSplitBox">
      <summary>Specifies that the location is in the tab split box of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.HorizontalScrollBar">
      <summary>Specifies that the location is in the horizontal scroll bar of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.VerticalScrollBar">
      <summary>Specifies that the location is in the vertical scroll bar of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.RangeGroup">
      <summary>Specifies that the location is in the outline (range group) area of the component</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.TitleBar">
      <summary>Specifies that the location is in the titles bar</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.FilterCellBar">
      <summary>Specifies that the location is in the filter bar</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HitTestType.FilterHeaderBar">
      <summary>Specifies that the location is in the header of the filter bar</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.HorizontalPosition">
      <summary>Specifies the horizontal position of the object for placement in the displayed portion of the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HorizontalPosition.Left">
      <summary>Positions the cell or column at the leftmost position of the displayed portion of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HorizontalPosition.Center">
      <summary>Positions the cell or column in the center of the displayed portion of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HorizontalPosition.Right">
      <summary>Positions the cell or column at the rightmost position of the displayed portion of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.HorizontalPosition.Nearest">
      <summary>Positions the cell or column to the nearest edge of the displayed portion of the sheet</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.InputDeviceType">
      <summary>Indicates the input device type.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.InputDeviceType.Mouse">
      <summary>Specifies the mouse device.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.InputDeviceType.Touch">
      <summary>Specifies the touch-enabled input device.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.InputDeviceType.Keyboard">
      <summary>Specifies the touch keyboard or hardware keyboard.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.InputMapMode">
      <summary>Specifies the condition for which an input map applies.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.InputMapMode.WhenFocused">
      <summary>Uses an input map when the control has the focus</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.InputMapMode.WhenAncestorOfFocused">
      <summary>Uses an input map when the control or a child of the control has the focus</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.LegacyBehaviors">
      <summary>Represents options for backward compatibility.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.None">
      <summary>New behaviors will be applied automatically in new releases.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.Style">
      <summary>All style default settings and behaviors will be compatible with previous version.</summary>
      <remarks>Turn off this option to use new style system which is compatible with Excel.</remarks>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.AutoRowHeight">
      <summary>Row height won't be auto adjusted when cell's value or properties are changed on UI of Spread, all auto fit row height will be treated as custom row height</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.CalculationEngine">
      <summary>Fallbacks to old behaviors of calculation engine.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.PropertyDefaults">
      <summary>Initialized values of some properties will be different compared with previous versions.</summary>
      <remarks>If this flag is turned off: <para><see cref="P:FarPoint.Win.Spread.FpSpread.AllowUserFormulas" /> is <c>true</c>.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.AllowDragDrop" /> is <c>true</c>.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.AllowDragFill" /> is <c>true</c>.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.AllowSheetMove" /> is <c>true</c>.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.AllowEditOverflow" /> is <c>true</c>.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.BorderCollapse" /> is <see cref="F:FarPoint.Win.Spread.BorderCollapse.Collapse" />.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.ResizeZeroIndicator" /> is <c>true</c>.</para><para><see cref="P:FarPoint.Win.Spread.FpSpread.TabStripPolicy" /> is <see cref="F:FarPoint.Win.Spread.TabStripPolicy.Always" />.</para><para><see cref="P:FarPoint.Win.Spread.SheetView.SelectionPolicy" /> is <see cref="F:FarPoint.Win.Spread.Model.SelectionPolicy.MultiRange" />.</para><para><see cref="P:FarPoint.Win.Spread.SheetView.AutoFilterMode" /> is <see cref="F:FarPoint.Win.Spread.AutoFilterMode.EnhancedContextMenu" />.</para><para>Changes for keys:</para><para> - F2 start editing with current cell value.</para><para> - Backspace start editing with empty editor.</para><para> - F4 takes no effect.</para><para> - When user press an input key to start editing, the current cell value will be replaced by the pressed key.</para><para>The changed properties may be added more in the future release.</para></remarks>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.Protect">
      <summary>Initialized values of sheetview's Protect and cell's lock will be different compared with previous versions.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.KeepFormulaOnSetValue">
      <summary>Any attempt to set a value to a cell that contains a formula to fail and instead raise the <see cref="E:FarPoint.Win.Spread.FpSpread.Error" /> event.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.PreferTextOnExport">
      <summary>The cell text will be exported if there is an explicit cell type.</summary>
      <remarks>This option doesn't affects to numeric, <see cref="T:System.DateTime" /> and <see cref="T:System.TimeSpan" /> values.</remarks>
    </member>
    <member name="F:FarPoint.Win.Spread.LegacyBehaviors.All">
      <summary>All behaviors are compatible with previous version.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.LengthUnit">
      <summary>Defines the units that are used to validate the text length.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LengthUnit.Char">
      <summary>Validates using <see cref="F:FarPoint.Win.Spread.LengthUnit.Char" /> units.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LengthUnit.Byte">
      <summary>Validates using <see cref="F:FarPoint.Win.Spread.LengthUnit.Byte" /> units.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.LengthUnit.TextElement">
      <summary>Validates using text element units.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NamedStyleCollectionEventType">
      <summary>Specifies the type of change event that has occurred for the style in the collection.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemAdded">
      <summary>Indicates that a style has been added to the collection</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemRemoved">
      <summary>Indicates that a style has been removed from the collection</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemChanged">
      <summary>Indicates that a style in the collection has been replaced</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NamedStyleCollectionEventType.ItemContentChanged">
      <summary>Indicates that the content of the style in the collection has been modified</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NonEmptyItemFlag">
      <summary>Specifies the type of contents of a cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NonEmptyItemFlag.Data">
      <summary>[1] Indicates that a cell contains data</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NonEmptyItemFlag.Style">
      <summary>[2] Indicates that a cell contains formatting information</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NoteIndicatorPosition">
      <summary>Specifies the position of the cell note indicator.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteIndicatorPosition.TopLeft">
      <summary>Displays the note indicator on the top and left of a cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteIndicatorPosition.TopRight">
      <summary>Displays the note indicator on the top and right of a cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteIndicatorPosition.BottomLeft">
      <summary>Displays the note indicator on the bottom and left of a cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteIndicatorPosition.BottomRight">
      <summary>Displays the note indicator on the bottom and right of a cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NoteStyle">
      <summary>Specifies how the cell notes are displayed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteStyle.Hidden">
      <summary>Does not display the cell note or the cell note indicator</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteStyle.PopupNote">
      <summary>Displays the cell note as a floating object only when the mouse is over the cell note indicator</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteStyle.StickyNote">
      <summary>Always displays the cell note as a movable box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.NoteStyle.PopupStickyNote">
      <summary>Displays the cell sticky note as a floating object only when the mouse is over the cell note indicator</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.OperationMode">
      <summary>Specifies how the sheet responds to user interaction and what selections are allowed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.OperationMode.Normal">
      <summary>Allows default spreadsheet operations</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.OperationMode.ReadOnly">
      <summary>Prohibits the user from changing anything on this spreadsheet (and sheet has no active cell)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.OperationMode.RowMode">
      <summary>Allows the user to select rows in the spreadsheet, and edit individual cells in rows by double-clicking the cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.OperationMode.SingleSelect">
      <summary>Allows the user to select single rows in the spreadsheet (as one would in a single-selection list box)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.OperationMode.MultiSelect">
      <summary>Allows the user to select multiple contiguous rows in the spreadsheet (as one would in a multiple-select list box)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.OperationMode.ExtendedSelect">
      <summary>Allows the user to select multiple discontiguous rows in the spreadsheet (as one would in an extended-select list box)</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PdfWriteMode">
      <summary>Specifies the output mode for printing the sheet as PDF.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PdfWriteMode.New">
      <summary>Prints the sheet as PDF to a file or stream with no reference to previous sheets</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PdfWriteMode.Append">
      <summary>Prints the sheet as PDF to the file or stream from the print information of the previous sheet</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PdfWriteTo">
      <summary>Specifies the output for printing the sheet as PDF.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PdfWriteTo.File">
      <summary>Prints the sheet as PDF to a file</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PdfWriteTo.Stream">
      <summary>Prints the sheet as PDF to a stream</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PreferredSizeColumnOptions">
      <summary>Specifies the options when getting the preferred width for the column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.IncludeAll">
      <summary>Specifies to include all automatic fit options</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.Off">
      <summary>Specifies to turn off automatic fit for the column width</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.ExcludeHeaders">
      <summary>Specifies to ignore headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.ExcludeFooters">
      <summary>Specifies to ignore footers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.ExcludeSpans">
      <summary>Specifies to ignore spans</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.ExcludeWordWrap">
      <summary>Specifies to exclude cells with wrapped contents</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeColumnOptions.IncludeHidden">
      <summary>Includes hidden columns</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PreferredSizeRowOptions">
      <summary>Specifies the options when getting the preferred height for the row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeRowOptions.IncludeAll">
      <summary>Specifies to Include all automatic fit options</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeRowOptions.Off">
      <summary>Specifies to turn off automatic fit for the row height</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeRowOptions.ExcludeHeaders">
      <summary>Specifies to ignore headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PreferredSizeRowOptions.ExcludeSpans">
      <summary>Specifies to ignore spans</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintDocumentEventType">
      <summary>Represents the type of PrintDocument event which occurs during the print process of the sheetview.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintDocumentEventType.BeginPrintDocument">
      <summary>Beginning of the sheetview print process.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintDocumentEventType.BeginPrintPage">
      <summary>Starting page of the print job.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintDocumentEventType.EndPrintPage">
      <summary>Ending page of the print job.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintDocumentEventType.EndPrintDocument">
      <summary>Ending of the sheetview print process.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintHeader">
      <summary>Specifies whether the header is printed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintHeader.Inherit">
      <summary>Inherits the setting from SheetView class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintHeader.Show">
      <summary>Shows the header in the printed sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintHeader.Hide">
      <summary>Hides the header in the printed sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintNotes">
      <summary>Specifies how cell notes are printed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintNotes.None">
      <summary>[0] Does not print the cell notes</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintNotes.AtEnd">
      <summary>[1] Prints the cell notes in summary form after the last sheet is printed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintNotes.AsDisplayed">
      <summary>[2] Prints the cell notes as they are displayed on the sheet</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintOrientation">
      <summary>Specifies the page orientation used to print the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintOrientation.Auto">
      <summary>[0] Uses the current printer setting</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintOrientation.Portrait">
      <summary>[1] Prints the sheet in portrait orientation</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintOrientation.Landscape">
      <summary>[2] Prints the sheet in landscape orientation</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintPageOrder">
      <summary>Specifies the order in which pages are printed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintPageOrder.Auto">
      <summary>[0] Automatically determines the best order for printing pages</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintPageOrder.DownThenOver">
      <summary>[1] Prints pages down then across</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintPageOrder.OverThenDown">
      <summary>[2] Prints pages across then down</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintTitle">
      <summary>Specifies whether the title is printed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintTitle.Inherit">
      <summary>Inherits the setting from SheetView class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintTitle.Show">
      <summary>Shows the title in the printed sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintTitle.Hide">
      <summary>Hides the title in the printed sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintType">
      <summary>Specifies the type of print range used to print the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintType.All">
      <summary>[0] Prints the entire sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintType.CellRange">
      <summary>[1] Prints the area specified by the PrintInfo.ColStart, PrintInfo.ColEnd, PrintInfo.RowStart, and PrintInfo.RowEnd properties</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintType.CurrentPage">
      <summary>[2] Prints the current page of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.PrintType.PageRange">
      <summary>[3] Prints the pages in the range specified by the PrintInfo.PageStart and PrintInfo.PageEnd properties</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupButtonStyle">
      <summary>Specifies the button style for an outline (range group) of rows or columns.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupButtonStyle.Standard">
      <summary>Displays the standard window button style</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupButtonStyle.System">
      <summary>Displays the System button style</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupButtonStyle.Enhanced">
      <summary>Displays an enhanced outline (range group) button style</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupInfoEventType">
      <summary>Specifies the type of Change event that has occurred for the outline (range group) model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupInfoEventType.StateChange">
      <summary>Indicates that the state of the outline (range group) has changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupInfoEventType.ChildGroupAdd">
      <summary>Indicates that the child range group is added.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupInfoEventType.ChildGroupRemove">
      <summary>Indicates that the child range group is removed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupModelEventType">
      <summary>Specifies the type of change that has occurred for an outline (range group) for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupModelEventType.Add">
      <summary>Indicates that an outline (range group) is added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupModelEventType.Clear">
      <summary>Indicates that all outlines (range groups) are removed, cleared</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupModelEventType.Remove">
      <summary>Indicates that an outline (range group) is removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupModelEventType.Expand">
      <summary>Indicates that an outline (range group) is expanded or collapsed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupModelEventType.Move">
      <summary>Indicates that an range of indexes is moved</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RangeGroupModelEventType.Pasted">
      <summary>Indicates that a range of indexes is pasted</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RegularBoldItalicFontStyle">
      <summary>Specifies whether regular, bold, or italic font styles are applied to the text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RegularBoldItalicFontStyle.NotSet">
      <summary>Specifies that the regular, bold, italic font style is not set.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RegularBoldItalicFontStyle.Regular">
      <summary>Specifies regular text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RegularBoldItalicFontStyle.Bold">
      <summary>Specifies bold text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RegularBoldItalicFontStyle.Italic">
      <summary>Specifies italic text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RegularBoldItalicFontStyle.BoldItalic">
      <summary>Specifies bold italic text.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ResetOption">
      <summary>Specifies whether the rules or a particular rule should reset before testing the next rule.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ResetOption.None">
      <summary>[0] Never resets the rule(s)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ResetOption.Current">
      <summary>[1] Resets the current rule</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ResetOption.All">
      <summary>[2] Resets all the rules</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RowSelectorState">
      <summary>Specifies the state of the row header selector for the current selected row, so the row renderer knows which row header selector image to draw.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RowSelectorState.None">
      <summary>The row header selector is not enabled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RowSelectorState.Unused">
      <summary>The row header selector is enabled, but not currently in use for the row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RowSelectorState.Active">
      <summary>The row header selector is enabled, and currently in use for the row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RowSelectorState.Disabled">
      <summary>The row header selector is enabled, but the Spread control is disabled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.RowSelectorState.Editing">
      <summary>The row header selector is enabled, but the Spread control is in edit mode.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SaveXMLOptions">
      <summary>Specifies how to save spreadsheet data to an XML file.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SaveXMLOptions.All">
      <summary>Saves all spreadsheet data.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SaveXMLOptions.DataOnly">
      <summary>Saves data only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SaveXMLOptions.AllAndStyleMerging">
      <summary>Saves everything and converts style information to named styles.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScaleMode">
      <summary>Specifies the type of DPI scale support.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScaleMode.ZoomDpiSupport">
      <summary>Supports DPI scaling by zooming</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScaleMode.None">
      <summary>Does not support scaling</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollBarButtons">
      <summary>Specifies the type of scroll bar buttons by specifying which elements of the scroll bar are displayed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarButtons.None">
      <summary>[0] Indicates that no elements of the scroll bar appear.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarButtons.Thumb">
      <summary>[1] Indicates that the scroll box of the scroll bar appears.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarButtons.LineUpDown">
      <summary>[2] Indicates that the backward line button and the foward line button of the scroll bar appear.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarButtons.PageUpDown">
      <summary>[4] Indicates that the backward page button and the foward page button of the scroll bar appear.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarButtons.HomeEnd">
      <summary>[8] Indicates that the backward-to-home button and the foward-to-end button of the scroll bar appear.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollBarPolicy">
      <summary>Specifies when the component displays the scroll bars.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarPolicy.AsNeeded">
      <summary>Displays the scroll bars only when needed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarPolicy.Always">
      <summary>Displays the scroll bars at all times.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarPolicy.Never">
      <summary>Does not display the scroll bars.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollBarTrackPolicy">
      <summary>Specifies whether the component scrolls the sheet when the user moves the scroll box.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Off">
      <summary>Does not scroll the sheet when the user moves the scroll box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Vertical">
      <summary>Scrolls the sheet when the user moves the vertical scroll box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Horizontal">
      <summary>Scrolls the sheet when the user moves the horizontal scroll box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollBarTrackPolicy.Both">
      <summary>Scrolls the sheet when the user moves either the horizontal or the vertical scroll box</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollingContentRowNumberPolicy">
      <summary>Specifies how to display the current row number in scrolling content.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollingContentRowNumberPolicy.Never">
      <summary>Doesn't display the current row number in the scrolling content.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollingContentRowNumberPolicy.First">
      <summary>Display the current row number at the start of the scrolling content.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollingContentRowNumberPolicy.Last">
      <summary>Display the current row number at the end of the scrolling content.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollTipPolicy">
      <summary>Specifies whether the component displays the text tip when the user moves the scroll box.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Off">
      <summary>Does not display the text tip when the user moves the scroll box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Vertical">
      <summary>Displays the row number in a text tip when the user moves the vertical scroll box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Horizontal">
      <summary>Displays the column number in a text tip when the user moves the horizontal scroll box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ScrollTipPolicy.Both">
      <summary>Displays the text tip when the user moves either the horizontal or the vertical scroll box</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SearchFoundFlags">
      <summary>Specifies where the search string is found.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SearchFoundFlags.Error">
      <summary>[0] Indicates an error has occured due to an invalid argument</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SearchFoundFlags.CellText">
      <summary>[1] Indicates that the string is found in the cell text</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SearchFoundFlags.CellNote">
      <summary>[2] Indicates that the string is found in the cell note</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SearchFoundFlags.CellTag">
      <summary>[4] Indicates that the string is found in the cell tag</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SelectionBlockOptions">
      <summary>Specifies which part of the sheet can be selected by the user.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.None">
      <summary>[0] Does not allow selections</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Cells">
      <summary>[1] Allows the user to select a range of cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Rows">
      <summary>[2] Allows the user to select a row or rows of cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Columns">
      <summary>[4] Allows the user to select a column or columns of cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionBlockOptions.Sheet">
      <summary>[8] Allows the user to select all the cells in the sheet by clicking the sheet corner</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SelectionStyles">
      <summary>Specifies the style for the display of selected cells.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionStyles.None">
      <summary>[0] Does not change how the cells are displayed when selected</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionStyles.SelectionColors">
      <summary>[1] Uses the selection text and background color when cells are selected</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionStyles.SelectionRenderer">
      <summary>[2] Uses the default settings in the renderer when cells are selected</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SelectionStyles.Both">
      <summary>[3] Uses both the selection color settings and the renderer when cells are selected</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetView.ImageLayout">
      <summary>Specifies the position of the image on viewport.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetView.ImageLayout.None">
      <summary>The image is left-aligned at the top across the control's client rectangle.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SheetView.ImageLayout.Tile">
      <summary>The image is tiled across the control's client rectangle.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortBy">
      <summary>Specifies the type that is sorted.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortBy.Values">
      <summary>Sort by values.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortBy.CellColor">
      <summary>Sort by cell back color.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortBy.FontColor">
      <summary>Sort by cell fore color.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortBy.CellIcon">
      <summary>Sort by conditional formating cell icon.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortingMode">
      <summary>The mode used to specify the sorting behavior.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortingMode.ViewIndex">
      <summary>Sorts using the View index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortingMode.RangeSorting">
      <summary>Sorts by swapping real data in the models.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortState">
      <summary>Specifies the sorting state for the current column so the column renderer knows which sorting image to draw.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.None">
      <summary>Sorting is not enabled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.Unsorted">
      <summary>Sorting is available, but not currently in use.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.Ascending">
      <summary>Sorted in ascending order.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.Descending">
      <summary>Sorted in descending order.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.UnsortedDisabled">
      <summary>Sorting is not enabled, and the control is disabled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.AscendingDisabled">
      <summary>Sorted in ascending order, and the control is disabled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SortState.DescendingDisabled">
      <summary>Sorted in descending order, and the control is disabled.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SparklineAxisMinMax">
      <summary>An enumeration that specifies information about how the vertical axis minimum or maximum is computed for this sparkline group.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SparklineAxisMinMax.Individual">
      <summary>Specifies that the vertical axis minimum or maximum for each sparkline in this sparkline group is calculated automatically such that the data point with the minimum or maximum value can be displayed in the plot area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SparklineAxisMinMax.Group">
      <summary>Specifies that the vertical axis minimum or maximum is shared across all sparklines in this sparkline group and is calculated automatically such that the data point with the minimum or maximum value can be displayed in the plot area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SparklineAxisMinMax.Custom">
      <summary>Specifies that the vertical axis minimum or maximum for each sparkline in this sparkline group is specified by the manualMin attribute or the manualMax attribute of the sparkline group.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SparklineType">
      <summary>Represents the type of sparkline.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SparklineType.Column">
      <summary>Column sparkline</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SparklineType.Line">
      <summary>Line Sparkline</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SparklineType.Winloss">
      <summary>Winloss Sparkline</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SplitBoxAlignment">
      <summary>Specifies the placement of split boxes in the component with respect to their alignment with the scroll bars.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SplitBoxAlignment.Leading">
      <summary>Displays the split boxes before (to the left or above) the scroll bars.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SplitBoxAlignment.Trailing">
      <summary>Displays the split boxes after (to the right or below) the scroll bars.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SplitBoxPolicy">
      <summary>Specifies when the component displays the split boxes.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SplitBoxPolicy.Always">
      <summary>Displays the split box all the time</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SplitBoxPolicy.Never">
      <summary>Does not display the split box</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SplitBoxPolicy.AsNeeded">
      <summary>Displays the split box only when needed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadPanningMode">
      <summary>Specifies how <see cref="T:FarPoint.Win.Spread.FpSpread" /> reacts to touch manipulation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadPanningMode.None">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> does not respond to pan input.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadPanningMode.HorizontalOnly">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> control only scrolls horizontally.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadPanningMode.VerticalOnly">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> control only scrolls vertically.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadPanningMode.HorizontalOrVertical">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> control scrolls horizontally or vertically.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SpreadPanningMode.Both">
      <summary>The <see cref="T:FarPoint.Win.Spread.FpSpread" /> control scrolls horizontally and vertically.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SpreadView.SetInputMapOption">
      <summary>Option to set input maps for spread (internal use only).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StrikeoutFontStyle">
      <summary>Specifies whether the strikeout font style is applied to the text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StrikeoutFontStyle.NotSet">
      <summary>Specifies that the strikeout font style is not set.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StrikeoutFontStyle.Strikeout">
      <summary>Specifies strikeout text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StrikeoutFontStyle.None">
      <summary>Specifies no strikeout text.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StyleContainerEventType">
      <summary>Internal use only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StyleContainerEventType.ItemsUpdated">
      <summary>Indicates that the style of one or more items in the container has changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StyleContainerEventType.ItemsAdded">
      <summary>Indicates that the style of one or more items have been added.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StyleContainerEventType.ItemsRemoved">
      <summary>Indicates that the style of one or more items have been removed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.StyleContainerEventType.ModelUpdated">
      <summary>Indicates that the container has been updated such that all styles may have changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SystemSoundType">
      <summary>Specifies a system sound type which relates to a <see cref="T:System.Media.SystemSound" />.</summary>
      <seealso cref="T:FarPoint.Win.Spread.SoundNotify" />
    </member>
    <member name="F:FarPoint.Win.Spread.SystemSoundType.Asterisk">
      <summary>Specifies the <see cref="P:System.Media.SystemSounds.Asterisk" /> sound.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SystemSoundType.Beep">
      <summary>Specifies the <see cref="P:System.Media.SystemSounds.Beep" /> sound.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SystemSoundType.Exclamation">
      <summary>Specifies the <see cref="P:System.Media.SystemSounds.Exclamation" /> sound.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SystemSoundType.Hand">
      <summary>Specifies the <see cref="P:System.Media.SystemSounds.Hand" /> sound.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.SystemSoundType.Question">
      <summary>Specifies the <see cref="P:System.Media.SystemSounds.Question" /> sound.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableStyleCollectionChangedType">
      <summary>The table style changed collection type.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyleCollectionChangedType.Cleared">
      <summary>Collection cleared.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyleCollectionChangedType.ItemAdded">
      <summary>An item added.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyleCollectionChangedType.ItemRemoved">
      <summary>An item removed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TableStyleCollectionChangedType.ItemChanged">
      <summary>An item changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TabStripButton">
      <summary>Specifies the sheet tab buttons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.None">
      <summary>Indicates the None button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.Home">
      <summary>Indicates the Home button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.Previous">
      <summary>Indicates the Previous button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.Next">
      <summary>Indicates the Next button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.End">
      <summary>Indicates the End button</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.PrevHiddenSheet">
      <summary>Indicates the button that allow active previous hidden sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButton.NextHiddenSheet">
      <summary>Indicates the button that allow active next hidden sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TabStripButtonPolicy">
      <summary>Specifies the display policy for the tab strip buttons.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButtonPolicy.Always">
      <summary>Always display the tab strip buttons</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButtonPolicy.Never">
      <summary>Do not ever display the tab strip buttons</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripButtonPolicy.AsNeeded">
      <summary>Display the tab strip buttons only when needed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TabStripPlacement">
      <summary>Specifies the location of the tab strip in the component.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripPlacement.WithHorizontalScrollBar">
      <summary>The tab strip is located next to the horizontal scroll bar.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripPlacement.Top">
      <summary>The tab strip is located across the top of the component.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripPlacement.Bottom">
      <summary>The tab strip is located across the bottom of the component.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TabStripPolicy">
      <summary>Specifies when the component displays the sheet name tabs.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripPolicy.Always">
      <summary>Always displays the sheet tabs</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripPolicy.Never">
      <summary>Does not display the sheet tabs</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TabStripPolicy.AsNeeded">
      <summary>Displays the sheet tabs only when needed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TextConditionOperator">
      <summary>Represents operators applied for text conditional formatting.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextConditionOperator.Contains">
      <summary>The value contains the specified text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextConditionOperator.NotContains">
      <summary>The value does not contain the specified text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextConditionOperator.BeginsWith">
      <summary>The value contains the specified text at the beginning.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextConditionOperator.EndsWith">
      <summary>The value contains the specified text at the end.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TextFileFlags">
      <summary>Specifies how to process the data when saving to a text file.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextFileFlags.None">
      <summary>[0] Not specified</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextFileFlags.Unformatted">
      <summary>[1] Whether to bypass the IFormatter in the StyleInfo for the cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextFileFlags.SaveFormulas">
      <summary>[2] Whether to save formulas</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextFileFlags.IncludeFooter">
      <summary>[4] Whether to save the column footer</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextFileFlags.FilterRows">
      <summary>[8] Whether to filter the rows with the row filter</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextFileFlags.ForceCellDelimiter">
      <summary>[16] Whether to force the cell delimiter</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TextTipPolicy">
      <summary>Specifies how the text tip of a cell in the view is displayed, and also how the cell note is displayed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextTipPolicy.Off">
      <summary>Does not display the text tip</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextTipPolicy.Fixed">
      <summary>Aligns it to the top-left corner of the cell for which it appears at any time</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextTipPolicy.Floating">
      <summary>Aligns it to the pointer location at any time</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextTipPolicy.FixedFocusOnly">
      <summary>Aligns it to the top-left corner of the cell for which it appears only when the control has the focus</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TextTipPolicy.FloatingFocusOnly">
      <summary>Aligns it to the pointer location only when the control has the focus</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TimePeriod">
      <summary>Represents a time period which is used in a date conditional formatting rule. These are dynamic time periods, which change based on the date when the conditional formatting rule is refreshed or applied.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.Last7Days">
      <summary>Indicates a date in the last seven days.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.LastMonth">
      <summary>Indicates a date that occurred in the last calendar month.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.LastWeek">
      <summary>Indicates a date that occurred last week.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.NextMonth">
      <summary>Indicates a date that occurs in the next calendar month.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.NextWeek">
      <summary>Indicates a date that occurs next week.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.ThisMonth">
      <summary>Indicates a date that occurs in this calendar month.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.ThisWeek">
      <summary>Indicates a date that occurs this week.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.Today">
      <summary>Indicates today's date.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.Tomorrow">
      <summary>Indicates tomorrow's date.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TimePeriod.Yesterday">
      <summary>Indicates yesterday's date.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TouchStripShowingArea">
      <summary>Specifies what area to display the <see cref="T:FarPoint.Win.Spread.SpreadTouchStrip" />.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.Cell">
      <summary>Specifies the cell area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.Row">
      <summary>Specifies the row area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.Column">
      <summary>Specifies the column area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.Shape">
      <summary>Specifies the shape area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.Chart">
      <summary>Specifies the chart area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.Note">
      <summary>Specifies the sticky note area.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.TouchStripShowingArea.ChildControl">
      <summary>Specifies the child control area.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UnaryComparisonOperator">
      <summary>Represents the unary comparison operator.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnaryComparisonOperator.EqualTo">
      <summary>Determines whether a value is equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnaryComparisonOperator.NotEqualTo">
      <summary>Determines whether a value is not equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnaryComparisonOperator.GreaterThan">
      <summary>Determines whether a value is greater than the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnaryComparisonOperator.LessThan">
      <summary>Determines whether a value is less than the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnaryComparisonOperator.GreaterThanOrEqualTo">
      <summary>Determines whether a value is greater than or equal to the parameter value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnaryComparisonOperator.LessThanOrEqualTo">
      <summary>Determines whether a value is less than or equal to the parameter value</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UnderlineFontStyle">
      <summary>Specifies whether the underline font style is applied to the text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnderlineFontStyle.NotSet">
      <summary>Specifies that the underline font style is not set.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnderlineFontStyle.Underline">
      <summary>Specifies underlined text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UnderlineFontStyle.None">
      <summary>Specifies no underlined text.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ValidateComparisonOperator">
      <summary>Specifies the binary operations between the target value and the compared value when validating a cell.</summary>
      <seealso cref="T:FarPoint.Win.Spread.CompareValueBaseValidator" />
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateComparisonOperator.Equals">
      <summary>The target cell's value is equal to the compared value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateComparisonOperator.NotEquals">
      <summary>The target cell's value is not equal to the compared value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateComparisonOperator.GreaterThan">
      <summary>The target cell's value is greater than the compared value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateComparisonOperator.GreaterThanOrEquals">
      <summary>The target cell's value is greater than or equal to the compared value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateComparisonOperator.LessThan">
      <summary>The target cell's value is less than the compared value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateComparisonOperator.LessThanOrEquals">
      <summary>The target cell's value is less than or equal to the compared value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ValidateReasons">
      <summary>Specifies the reasons that cause an action to execute.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateReasons.CellValidating">
      <summary>Indicates the action that is executed when the cell validates.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateReasons.EndEdit">
      <summary>Indicates the action that is executed when a cell leaves edit mode and applies the edited value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValidateReasons.CancelEdit">
      <summary>Indicates the action that is executed when a cell leaves edit mode without applying the edited value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ValueProcessOption">
      <summary>Defines the options that are used by ValueProcess.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValueProcessOption.Keep">
      <summary>Keeps the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValueProcessOption.Clear">
      <summary>Clears the value.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.ValueProcessOption.Restore">
      <summary>Restores the former value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.VerticalPosition">
      <summary>Specifies the vertical position of the object for placement in the displayed portion of the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.VerticalPosition.Top">
      <summary>Positions the cell or row at the top of the displayed portion of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.VerticalPosition.Center">
      <summary>Positions the cell or row in the center of the displayed portion of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.VerticalPosition.Bottom">
      <summary>Positions the cell or row at the bottom of the displayed portion of the sheet</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.VerticalPosition.Nearest">
      <summary>Positions the cell or row at the nearest edge of the displayed portion of the sheet</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Xlf">
      <summary>Excel Function (XLF) defines. These values are unique identifiers used when parsing Excel Formula buffers to determine the current function being referenced.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ExternCustom">
      <summary>[0xFF] External or custom function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Count">
      <summary>[0] COUNT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.If">
      <summary>[1] IF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Isna">
      <summary>[2] ISNA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Iserror">
      <summary>[3] ISERROR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sum">
      <summary>[4] SUM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Average">
      <summary>[5] AVERAGE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Min">
      <summary>[6] MIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Max">
      <summary>[7] MAX function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Row">
      <summary>[8] ROW function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Column">
      <summary>[9] COLUMN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Na">
      <summary>[10] NA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Npv">
      <summary>[11] NPV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Stdev">
      <summary>[12] STDEV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dollar">
      <summary>[13] DOLLAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fixed">
      <summary>[14] FIXED function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sin">
      <summary>[15] SIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Cos">
      <summary>[16] COS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Tan">
      <summary>[17] TAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Atan">
      <summary>[18] ATAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Pi">
      <summary>[19] PI function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sqrt">
      <summary>[20] SQRT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Exp">
      <summary>[21] EXP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ln">
      <summary>[22] LN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Log10">
      <summary>[23] LOG10 function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Abs">
      <summary>[24] ABS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Int">
      <summary>[25] INT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sign">
      <summary>[26] SIGN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Round">
      <summary>[27] ROUND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Lookup">
      <summary>[28] LOOKUP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Index">
      <summary>[29] INDEX function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rept">
      <summary>[30] REPT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Mid">
      <summary>[31] MID function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Len">
      <summary>[32] LEN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Value">
      <summary>[33] VALUE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.True">
      <summary>[34] TRUE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.False">
      <summary>[35] FALSE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.And">
      <summary>[36] AND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Or">
      <summary>[37] OR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Not">
      <summary>[38] NOT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Mod">
      <summary>[39] MOD function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dcount">
      <summary>[40] DCOUNT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dsum">
      <summary>[41] DSUM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Daverage">
      <summary>[42] DAVERAGE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dmin">
      <summary>[43] DMIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dmax">
      <summary>[44] DMAX function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dstdev">
      <summary>[45] DSTDEV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Var">
      <summary>[46] VAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dvar">
      <summary>[47] DVAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Text">
      <summary>[48] TEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Linest">
      <summary>[49] LINEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Trend">
      <summary>[50] TREND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Logest">
      <summary>[51] LOGEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Growth">
      <summary>[52] GROWTH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Goto">
      <summary>[53] GOTO function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Halt">
      <summary>[54] HALT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Pv">
      <summary>[56] PV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fv">
      <summary>[57] FV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Nper">
      <summary>[58] NPER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Pmt">
      <summary>[59] PMT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rate">
      <summary>[60] RATE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Mirr">
      <summary>[61] MIRR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Irr">
      <summary>[62] IRR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rand">
      <summary>[63] RAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Match">
      <summary>[64] MATCH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Date">
      <summary>[65] DATE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Time">
      <summary>[66] TIME function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Day">
      <summary>[67] DAY function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Month">
      <summary>[68] MONTH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Year">
      <summary>[69] YEAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Weekday">
      <summary>[70] WEEKDAY function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Hour">
      <summary>[71] HOUR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Minute">
      <summary>[72] MINUTE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Second">
      <summary>[73] SECOND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Now">
      <summary>[74] NOW function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Areas">
      <summary>[75] AREAS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rows">
      <summary>[76] ROWS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Columns">
      <summary>[77] COLUMNS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Offset">
      <summary>[78] OFFSET function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Absref">
      <summary>[79] ABSREF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Relref">
      <summary>[80] RELREF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Argument">
      <summary>[81] ARGUMENT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Search">
      <summary>[82] SEARCH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Transpose">
      <summary>[83] TRANSPOSE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Error">
      <summary>[84] ERROR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Step">
      <summary>[85] STEP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Type">
      <summary>[86] TYPE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Echo">
      <summary>[87] ECHO function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.SetName">
      <summary>[88] SETNAME function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Caller">
      <summary>[89] CALLER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Deref">
      <summary>[90] DEREF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Windows">
      <summary>[91] WINDOWS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Series">
      <summary>[92] SERIES function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Documents">
      <summary>[93] DOCUMENTS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ActiveCell">
      <summary>[94] ACTIVECELL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Selection">
      <summary>[95] SELECTION function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Result">
      <summary>[96] RESULT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Atan2">
      <summary>[97] ATAN2 function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Asin">
      <summary>[98] ASIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Acos">
      <summary>[99] ACOS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Choose">
      <summary>[100] CHOOSE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Hlookup">
      <summary>[101] HLOOKUP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Vlookup">
      <summary>[102] VLOOKUP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Links">
      <summary>[103] LINKS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Input">
      <summary>[104] INPUT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Isref">
      <summary>[105] ISREF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetFormula">
      <summary>[106] GETFORMULA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetName">
      <summary>[107] GETNAME function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.SetValue">
      <summary>[108] SETVALUE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Log">
      <summary>[109] LOG function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Exec">
      <summary>[110] EXEC function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Char">
      <summary>[111] CHAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Lower">
      <summary>[112] LOWER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Upper">
      <summary>[113] UPPER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Proper">
      <summary>[114] PROPER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Left">
      <summary>[115] LEFT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Right">
      <summary>[116] RIGHT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Exact">
      <summary>[117] EXACT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Trim">
      <summary>[118] TRIM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Replace">
      <summary>[119] REPLACE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Substitute">
      <summary>[120] SUBSTITUTE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Code">
      <summary>[121] CODE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Names">
      <summary>[122] NAMES function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Directory">
      <summary>[123] DIRECTORY function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Find">
      <summary>[124] FIND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Cell">
      <summary>[125] CELL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Iserr">
      <summary>[126] ISERR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Istext">
      <summary>[127] ISTEXT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Isnumber">
      <summary>[128] ISNUMBER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Isblank">
      <summary>[129] ISBLANK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.T">
      <summary>[130] T function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.N">
      <summary>[131] N function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fopen">
      <summary>[132] FOPEN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fclose">
      <summary>[133] FCLOSE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fsize">
      <summary>[134] FSIZE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Freadln">
      <summary>[135] FREADIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fread">
      <summary>[136] FREAD function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fwriteln">
      <summary>[137] FWRITEIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fwrite">
      <summary>[138] FWRITE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fpos">
      <summary>[139] FPOS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Datevalue">
      <summary>[140] DATEVALUE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Timevalue">
      <summary>[141] TIMEVALUE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sln">
      <summary>[142] SLN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Syd">
      <summary>[143] SYD function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ddb">
      <summary>[14] DBD function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetDef">
      <summary>[145] GETDEF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Reftext">
      <summary>[146] REFTEXT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Textref">
      <summary>[147] TEXTREF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Indirect">
      <summary>[148] INDIRECT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Register">
      <summary>[149] REGISTER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Call">
      <summary>[150] CALL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.AddBar">
      <summary>[151] ADDBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.AddMenu">
      <summary>[152] ADDMENU function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.AddCommand">
      <summary>[153] ADDCOMMAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.EnableCommand">
      <summary>[154] ENABLECOMMAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.CheckCommand">
      <summary>[155] CHECKCOMMAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.RenameCommand">
      <summary>[156] RENAMECOMMAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ShowBar">
      <summary>[157] SHOWBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.DeleteMenu">
      <summary>[158] DELETEMENU function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.DeleteCommand">
      <summary>[159] DELETECOMMAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetChartItem">
      <summary>[160] GETCHARTITEM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.DialogBox">
      <summary>[161] DIALOGBOX function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Clean">
      <summary>[162] CLEAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Mdeterm">
      <summary>[163] MDETERM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Minverse">
      <summary>[164] MINVERSE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Mmult">
      <summary>[165] MMULT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Files">
      <summary>[166] FILES function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ipmt">
      <summary>[167] IPMT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ppmt">
      <summary>[168] PPMT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Counta">
      <summary>[169] COUNTA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.CancelKey">
      <summary>[170] CANCELKEY function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Initiate">
      <summary>[175] INITIATE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Request">
      <summary>[176] REQUEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Poke">
      <summary>[177] POKE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Execute">
      <summary>[178] EXECUTE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Terminate">
      <summary>[179] TERMINATE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Restart">
      <summary>[180] RESTART function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Help">
      <summary>[181] HELP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetBar">
      <summary>[182] GETBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Product">
      <summary>[183] PRODUCT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fact">
      <summary>[184] FACT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetCell">
      <summary>[185] GETCELL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetWorkspace">
      <summary>[186] GETWORKSPACE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetWindow">
      <summary>[187] GETWINDOW function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetDocument">
      <summary>[188] GETDOCUMENT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dproduct">
      <summary>[189] DPRODUCT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Isnontext">
      <summary>[190] ISNONTEXT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetNote">
      <summary>[191] GETNOTE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Note">
      <summary>[192] NOTE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Stdevp">
      <summary>[193] STDEVP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Varp">
      <summary>[194] VARP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dstdevp">
      <summary>[195] DSTDEVP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dvarp">
      <summary>[196] DVARP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Trunc">
      <summary>[197] TRUNC function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Islogical">
      <summary>[198] ISLOGICAL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dcounta">
      <summary>[199] DCOUNTA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.DeleteBar">
      <summary>[200] DELETEBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Unregister">
      <summary>[201] UNREGISTER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Usdollar">
      <summary>[204] USDOLLAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Findb">
      <summary>[205] FINDB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Searchb">
      <summary>[206] SEARCHB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Replaceb">
      <summary>[207] REPLACEB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Leftb">
      <summary>[208] LEFTB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rightb">
      <summary>[209] RIGHTB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Midb">
      <summary>[210] MIDB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Lenb">
      <summary>[211] LENB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Roundup">
      <summary>[212] ROUNDUP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rounddown">
      <summary>[213] ROUNDDOWN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Asc">
      <summary>[214] ASC function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dbcs">
      <summary>[215] DBCS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rank">
      <summary>[216] RANK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Address">
      <summary>[219] ADDRESS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Days360">
      <summary>[220] DAYS360 function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Today">
      <summary>[221] TODAY function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Vdb">
      <summary>[222] VDB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Median">
      <summary>[227] MEDIAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sumproduct">
      <summary>[228] SUMPRODUCT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sinh">
      <summary>[229] SINH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Cosh">
      <summary>[230] COSH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Tanh">
      <summary>[231] TANH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Asinh">
      <summary>[232] ASINH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Acosh">
      <summary>[233] ACOSH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Atanh">
      <summary>[234] ATANH function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Dget">
      <summary>[235] DGET function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.CreateObject">
      <summary>[236] CREATEOBJECT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Volatile">
      <summary>[111] VOLATILE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.LastError">
      <summary>[238] LASTERROR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.CustomUndo">
      <summary>[239] CUSTOMUNDO function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.CustomRepeat">
      <summary>[240] CUSTOMREPEAT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.FormulaConvert">
      <summary>[241] FORMULACONVERT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetLinkInfo">
      <summary>[242] GETLINKINFO function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.TextBox">
      <summary>[243] TEXTBOX function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Info">
      <summary>[244] INFO function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Group">
      <summary>[245] GROUP function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetObject">
      <summary>[246] GETOBJECT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Db">
      <summary>[247] DB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Pause">
      <summary>[248] PAUSE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Resume">
      <summary>[251] RESUME function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Frequency">
      <summary>[252] FREQUENCY function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.AddToolbar">
      <summary>[253] ADDTOOLBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.DeleteToolbar">
      <summary>[254] DELETETOOLBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ResetToolbar">
      <summary>[256] RESETTOOLBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Evaluate">
      <summary>[257] EVALUATE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetToolbar">
      <summary>[258] GETTOOLBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetTool">
      <summary>[259] GETTOOL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.SpellingCheck">
      <summary>[260] SPELLINGCHECK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ErrorType">
      <summary>[261] ERRORTYPE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.AppTitle">
      <summary>[262] APPTITLE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.WindowTitle">
      <summary>[263] WINDOWTITLE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.SaveToolbar">
      <summary>[264] SAVETOOLBAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.EnableTool">
      <summary>[265] ENABLETOOL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.PressTool">
      <summary>[266] PRESSTOOL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.RegisterId">
      <summary>[267] REGISTERID function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetWorkbook">
      <summary>[268] GETWORKBOOK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Avedev">
      <summary>[269] AVEDEV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Betadist">
      <summary>[270] BETADIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Gammaln">
      <summary>[271] GAMMALN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Betainv">
      <summary>[272] BETAINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Binomdist">
      <summary>[273] BINOMDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Chidist">
      <summary>[274] CHIDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Chiinv">
      <summary>[275] CHIINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Combin">
      <summary>[276] COMBIN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Confidence">
      <summary>[277] CONFIDENCE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Critbinom">
      <summary>[278] CRITBINOM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Even">
      <summary>[279] EVEN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Expondist">
      <summary>[280] EXPONDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fdist">
      <summary>[281] FDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Finv">
      <summary>[282] FINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fisher">
      <summary>[283] FISHER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Fisherinv">
      <summary>[284] FISHERINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Floor">
      <summary>[285] FLOOR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Gammadist">
      <summary>[286] GAMMADIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Gammainv">
      <summary>[287] GAMMAINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ceiling">
      <summary>[288] CEILING function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Hypgeomdist">
      <summary>[289] HYPGEOMDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Lognormdist">
      <summary>[290] LOGNORMDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Loginv">
      <summary>[291] LOGINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Negbinomdist">
      <summary>[292] NEGBINOMDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Normdist">
      <summary>[293] NORMDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Normsdist">
      <summary>[294] NORMSDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Norminv">
      <summary>[295] NORMINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Normsinv">
      <summary>[296] NORMSINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Standardize">
      <summary>[297] STANDARDIZE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Odd">
      <summary>[298] ODD function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Permut">
      <summary>[299] PERMUT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Poisson">
      <summary>[300] POISSON function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Tdist">
      <summary>[301] TDIST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Weibull">
      <summary>[302] WEIBULL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sumxmy2">
      <summary>[303] SUMXMY2 function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sumx2my2">
      <summary>[304] SUMX2MY2 function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sumx2py2">
      <summary>[305] SUMX2PY2 function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Chitest">
      <summary>[306] CHITEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Correl">
      <summary>[307] CORREL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Covar">
      <summary>[308] COVAR function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Forecast">
      <summary>[309] FORECAST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ftest">
      <summary>[310] FTEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Intercept">
      <summary>[311] INTERCEPT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Pearson">
      <summary>[312] PEARSON function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Rsq">
      <summary>[313] RSQ function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Steyx">
      <summary>[314] STEYX function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Slope">
      <summary>[315] SLOPE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ttest">
      <summary>[316] TTEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Prob">
      <summary>[317] PROB function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Devsq">
      <summary>[318] DEVSQ function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Geomean">
      <summary>[319] GEOMEAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Harmean">
      <summary>[320] HARMEAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sumsq">
      <summary>[321] SUMSQ function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Kurt">
      <summary>[322] KURT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Skew">
      <summary>[323] SKEW function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ztest">
      <summary>[324] ZTEST function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Large">
      <summary>[325] LARGE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Small">
      <summary>[326] SMALL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Quartile">
      <summary>[327] QUARTILE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Percentile">
      <summary>[328] PERCENTILE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Percentrank">
      <summary>[329] PERCENTRANK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Mode">
      <summary>[330] MODE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Trimmean">
      <summary>[331] TRIMMEAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Tinv">
      <summary>[332] TINV function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.MovieCommand">
      <summary>[334] MOVIECOMMAND function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetMovie">
      <summary>[335] GETMOVIE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Concatenate">
      <summary>[336] CONCATENATE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Power">
      <summary>[337] POWER function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.PivotAddData">
      <summary>[338] PIVOTADDDATA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetPivotTable">
      <summary>[339] GETPIVOTTABLE function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetPivotField">
      <summary>[340] GETPIVOTFIELD function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetPivotItem">
      <summary>[341] GETPIVOTITEM function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Radians">
      <summary>[342] RADIANS function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Degrees">
      <summary>[343] DEGREES function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Subtotal">
      <summary>[344] SUBTOTAL function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Sumif">
      <summary>[345] SUMIF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Countif">
      <summary>[346] COUNTIF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Countblank">
      <summary>[347] COUNTBLANK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ScenarioGet">
      <summary>[348] SCENARIOGET function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.OptionsListsGet">
      <summary>[349] OPTIONSLISTSGET function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Ispmt">
      <summary>[350] ISPMT function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Datedif">
      <summary>[351] DATEDIF function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Datestring">
      <summary>[352] DATESTRING function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Numberstring">
      <summary>[353] NUMBERSTRING function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Roman">
      <summary>[354] ROMAN function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.OpenDialog">
      <summary>[355] OPENDIALOG function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.SaveDialog">
      <summary>[356] SAVEDIALOG function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.ViewGet">
      <summary>[357] VIEWGET function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.GetPivotData">
      <summary>[358] GETPIVOTDATA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Hyperlink">
      <summary>[359] HYPERLINK function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.Phonetic">
      <summary>[360] PHONETIC function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.AverageA">
      <summary>[361] AVERAGEA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.MaxA">
      <summary>[362] MAXA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.MinA">
      <summary>[363] MINA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.StDevPA">
      <summary>[364] STDEVPA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.VarPA">
      <summary>[365] VARPA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.StDevA">
      <summary>[366] STDEVA function</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Xlf.VarA">
      <summary>[367] VARA function</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.ActiveSheetChangingEventHandler">
      <summary>Represents a defined method that handles the ActiveSheetChanging event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AdvanceEventHandler">
      <summary>Represents a defined method that handles the Advance event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AnnotationModeEndingEventHandler">
      <summary>Represents a defined method that handles the AnnotationModeEnding event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AnnotationModeStartingEventHandler">
      <summary>Represents a defined method that handles the AnnotationModeStarting event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ApplyEventHandler">
      <summary>Internal use only. Handles the apply event.</summary>
      <param name="sender">Source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoFilteredColumnEventHandler">
      <summary>Represents a defined method that handles the AutoFilteredColumn event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoFilteringColumnEventHandler">
      <summary>Represents a defined method that handles the AutoFilteringColumn event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoSortedColumnEventHandler">
      <summary>Represents a defined method that handles the AutoSortedColumn event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.AutoSortingColumnEventHandler">
      <summary>Represents a defined method that handles the AutoSortingColumn event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.BeforeSettingPropertyValueHandler">
      <summary>Represents a defined method that handles the BeforeSettingPropertyValue event.</summary>
      <param name="sender">Source of the event</param>
      <param name="arg">Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CalculateExceptionHandler">
      <summary>Represents a defined method that handles the CalculateException event.</summary>
      <param name="sender">Source of the event</param>
      <param name="arg">Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellClickEventHandler">
      <summary>Represents a defined method that handles the CellClick and CellDoubleClick events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellErrorTextEventHandler">
      <summary>Represents a defined method that handles the error text change event for a cell.</summary>
      <param name="sender">The sender</param>
      <param name="e">Event argument</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ChangeEventHandler">
      <summary>Represents a defined method that handles the Change event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ChildControlEventHandler">
      <summary>Represents a defined method that handles the child control related events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ChildViewCreatedEventHandler">
      <summary>Represents a defined method that handles the ChildViewCreated event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ChildWorkbookCreatedEventHandler">
      <summary>Represents a defined method that handles the ChildWorkbookCreated event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CircularFormulaEventHandler">
      <summary>The handler for the Spread CirculaFormula event.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.CircularFormulaEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ClearGroupEventHandler">
      <summary>Represents the method that handles an event after the group is cleared.</summary>
      <param name="sender">Object that raised the event.</param>
      <param name="e">The <see cref="!:FarPoint.Web.Spread.ItemEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardPastedEventHandler">
      <summary>Event handler for ClipboardPasted event.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.ClipboardPastingEventHandler">
      <summary>Represents a defined method that handles the ClipboardPasting event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnViewportWidthChangedEventHandler">
      <summary>Represents a defined method that handles the ColumnViewportWidthChanged event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnWidthChangedEventHandler">
      <summary>Represents a defined method that handles the ColumnWidthChanged event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ColumnWidthChangingEventHandler">
      <summary>Represents a defined method that handles the ColumnWidthChanging event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ConditionalFormattingChangedEventHandler">
      <summary>Represents a method that handles the conditional formatting Changed events.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CustomNameEventHandle">
      <summary>Represents a method that handles the custom name events.</summary>
      <param name="sender" />
    </member>
    <member name="T:FarPoint.Win.Spread.DataColumnConfigureEventHandler">
      <summary>Represents a defined method that handles the DataColumnConfigure event for the Spread component.</summary>
      <param name="sender">Source of the DataColumnConfigure event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DialogCharEventHandler">
      <summary>Represents the method that handles the DialogChar event of a Spread component.</summary>
      <param name="sender">Source of the DialogChar event</param>
      <param name="e">DialogCharEventArgs object that contains the event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DialogKeyEventHandler">
      <summary>Represents the method that handles the DialogKey event of a Spread component.</summary>
      <param name="sender">Source of the DialogKey event</param>
      <param name="e">DialogKeyEventArgs object that contains the event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragDropBlockCompletedEventHandler">
      <summary>Represents a defined method that handles the DragDrop event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragDropBlockEventHandler">
      <summary>Represents a defined method that handles the DragDropBlock event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragFillBlockCompletedEventHandler">
      <summary>Represents a defined method that handles the DragFillBlockCompleted event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragFillBlockEventHandler">
      <summary>Represents a defined method that handles the DragFillBlock event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragMoveCompletedEventHandler">
      <summary>Represents a defined method that handles the ColumnDragMoveCompleted or RowDragMoveCompleted event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DragMoveEventHandler">
      <summary>Represents a defined method that handles the ColumnDragMove or RowDragMove event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DynamicCellStyleConditionHandler">
      <summary>Represents a method that returns a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> with the specified <see cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" />.</summary>
      <param name="context">A <see cref="T:FarPoint.Win.Spread.DynamicStyleInfoContext" /> value that indicates the current context of <see cref="!:GcMultiRow" />.</param>
      <remarks>The <see cref="T:FarPoint.Win.Spread.DynamicStyleInfo" /> class defines a <see cref="P:FarPoint.Win.Spread.DynamicStyleInfo.ConditionHandler" /> which is a DynamicCellStyleConditionHandler type. This allows you to attach an event handling method, that can return a <see cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" /> with the given <paramref name="context" /> dynamically.</remarks>
      <seealso cref="T:FarPoint.Win.Spread.AppearanceStyleInfo" />
      <seealso cref="T:FarPoint.Win.Spread.DynamicStyleInfo" />
    </member>
    <member name="T:FarPoint.Win.Spread.EditErrorEventHandler">
      <summary>Represents a defined method that handles the EditError events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.EditModeStartingEventHandler">
      <summary>Represents a defined method that handles the EditModeStarting event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.EditorNotifyEventHandler">
      <summary>Represents a defined method that handles the ButtonClicked, ComboCloseUp, ComboDropDown, ComboSelChange, and EditChange events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ElementChangeHandler">
      <summary>Represents a defined method that handles the element changing event for the status bar.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.EnterCellEventHandler">
      <summary>Represents a defined method that handles the EnterCell event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ErrorEventHandler">
      <summary>Represents a defined method that handles the Error events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ExpandEventHandler">
      <summary>Represents a defined method that handles the Expand event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FilterBarClickEventHandler">
      <summary>Represents a defined method that handles the CellClick and CellDoubleClick events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.FpScrollBarButtonClickEventHandler">
      <summary>Represents a defined method that handles the FpScrollBarButtonClickEventArgs event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.GetCustomIconHandler">
      <summary>Represents the delegate for measuring size of an icon for the icon conditional formatting rule in a cell.</summary>
      <param name="sender">The sender.</param>
      <param name="args">The <see cref="T:FarPoint.Win.Spread.GetCustomIconEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.GroupingEventHandler">
      <summary>Represents a defined method that handles the Grouping event in the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.HyperLinkClickedEventHandler">
      <summary>Represents a defined method that handles the HyperLinkClicked event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ItemEventHandler">
      <summary>Represents the method that handles an event after the item is operated on.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:FarPoint.Win.Spread.ItemEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.LeaveCellEventHandler">
      <summary>Represents a defined method that handles the LeaveCell event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.LeftChangeEventHandler">
      <summary>Represents a defined method that handles the LeftChange event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ListBase`1.ListChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:FarPoint.Win.Spread.ListBase`1.ListChanged" /> event of the <see cref="T:FarPoint.Win.Spread.ListBase`1" /> class.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.ListBase`1.ListChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.NamedStyleCollectionEventHandler">
      <summary>Represents a defined method that handles the NamedStyleCollection object's Changed event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.NoteEventHandler">
      <summary>Represents a method that handles the note events.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintGrayAreaEventHandler">
      <summary>Represents a defined method that handles the PaintBackground event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintGroupBarBackgroundEventHandler">
      <summary>Represents a defined method that handles the PaintGroupBarBackground event in the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintTabStripButtonEventHandler">
      <summary>Represents a defined method that handles the PaintTabStrip event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintTabStripEventHandler">
      <summary>Represents a defined method that handles the PaintTabStrip event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PaintTabStripTabEventHandler">
      <summary>Represents a defined method that handles the PaintTabStripTab event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PreviewRowFetchEventHandler">
      <summary>Represents a defined method that handles the PreviewRowFetch event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintAbortEventHandler">
      <summary>Represents a defined method that handles the PrintAbort event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintBackgroundEventHandler">
      <summary>Represents a defined method that handles the PrintBackground event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintCancelledEventHandler">
      <summary>Represents a defined method that handles the PrintCancelled event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintDocumentEventHandler">
      <summary>Represents a defined method that handles the PrintDocument event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintHeaderFooterAreaEventHandler">
      <summary>Represents a defined method that handles the PrintHeaderFooterArea event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintMessageBoxEventHandler">
      <summary>Represents a defined method that handles the PrintMessageBox event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PrintPreviewShowingEventHandler">
      <summary>Represents a defined method that handles the PrintPreviewShowing event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.PropertyTrackChangedEventHandler">
      <summary>Represents an event handler which is raised when the property has changed and has infomation about the current value and the previous value.</summary>
      <param name="sender">Object that raised the event.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.PropertyTrackChangedEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.QueryValueHandler">
      <summary>Represents a defined method that handles the QueryValue event.</summary>
      <param name="sender">Source of the event</param>
      <param name="arg">Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupModelEventHandler">
      <summary>Handles the Changed event for the outline (range group) model for the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupStateChangedEventHandler">
      <summary>Represents a defined method that handles the RangeGroupStateChanged event for an outline (range group) of the Spread component.</summary>
      <param name="sender">Source of the RangeGroupStateChanged event</param>
      <param name="e">RangeGroupStateChangedEventArgs object that contains the event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RangeGroupStateChangingEventHandler">
      <summary>Represents a defined method that handles the RangeGroupStateChanging event for an outline (range group) of the Spread component.</summary>
      <param name="sender">Source of the RangeGroupStateChanging event</param>
      <param name="e">RangeGroupStateChangingEventArgs object that contains the event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ReloadSheetCellRangeEventHandler">
      <summary>Represents the event handler for the FormulaChanged event, which occurs when an object that contains the sheet cell ranges notifies that formulas have been changed and that the SheetCellRange needs to be updated.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">
        <see cref="T:FarPoint.Win.Spread.ReloadSheetCellRangeFormulaEventArgs" /> object that contains event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RowErrorTextEventHandler">
      <summary>Represents a defined method that handles the error text change event for a row.</summary>
      <param name="sender">The sender</param>
      <param name="e">Event argument</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RowHeightChangedEventHandler">
      <summary>Represents a defined method that handles the RowHeightChanged event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RowHeightChangingEventHandler">
      <summary>Represents a defined method that handles the ColumnWidthChanging event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.RowViewportHeightChangedEventHandler">
      <summary>Represents a defined method that handles the RowViewportHeightChanged event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.ScrollTipFetchEventHandler">
      <summary>Represents a defined method that handles the ScrollTipFetch event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SelectionChangedEventHandler">
      <summary>Represents a defined method that handles the SelectionChanged events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SelectionChangingEventHandler">
      <summary>Represents a defined method that handles the SelectionChanging events for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetDragMovedEventHandler">
      <summary>Represents a defined method that handles the SheetDragMoved event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetDragMovingEventHandler">
      <summary>Represents a defined method that handles the SheetDragMoving event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetTabClickEventHandler">
      <summary>Represents a defined method that handles the SheetTabClick event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetTabDoubleClickEventHandler">
      <summary>Represents a defined method that handles the SheetTabDoubleClick event for the Spread component. which occurs when the user double-clicks the mouse button with the pointer on the sheet name tab.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetViewEventHandler">
      <summary>Represents a method that handles the sheet events.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SheetViewPropertyChangeEventHandler">
      <summary>Represents a defined method that handles sheet property change events.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.SortedEventHandler">
      <summary>Represents a defined method that handles the Sorted event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SortingEventHandler">
      <summary>Represents a defined method that handles the Sorting event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SparklineModelEventHandler">
      <summary>Represents the event handler for the UpdatedCellRanges event, which occurs when an object that contains the sheet cell ranges notifies that formulas have been changed and that the SheetCellRange needs to be updated.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Spread.SparklineModelUpdateEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.StickyNoteEventHandler">
      <summary>Obsolete. Use NoteEventHandler instead. Represents a method that handles the sticky note events.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.StyleContainerEventHandler">
      <summary>Internal use only.</summary>
      <param name="sender">Object that sends the Changed event</param>
      <param name="e">A StyleContainerEventArgs object that contains data for the Changed event</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SubEditorClosedEventHandler">
      <summary>Represents a defined method that handles the SubEditorClosed event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.SubEditorOpeningEventHandler">
      <summary>Represents a defined method that handles the SubEditorOpening event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.TablePropertyChangedEventHandler">
      <summary>Handles the Changed event in the table.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TablePropertyChangingEventHandler">
      <summary>Handles the table property changed event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TableStyleCollectionChangedEventHandler">
      <summary>The TableStyleCollectionChangedEventArgs handler.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.TextTipFetchEventHandler">
      <summary>Represents a defined method that handles the TextTipFetch event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.TopChangeEventHandler">
      <summary>Represents a defined method that handles the TopChange event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UserFormulaEnteredEventHandler">
      <summary>Represents a defined method that handles the UserFormulaEntered event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UserZoomingEventHandler">
      <summary>Represents a defined method that handles the UserZooming event for the Spread component.</summary>
      <param name="sender">Source of the event</param>
      <param name="e">Event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCodeCellType">
      <summary>Represents a barcode cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.#ctor">
      <summary>Creates a new barcode cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new barcode cell for deserialization.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.AcceptsCheckDigit">
      <summary>Gets or sets whether to accept the check digit in the input.</summary>
      <value>
        <c>true</c> if check digit is accepted; <c>false</c> otherwise.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.AdjustSize">
      <summary>Gets or sets whether the barcode adjusts its size according to the BarSize property.</summary>
      <value>
        <c>true</c> if true the barcode adjusts its size; <c>false</c> otherwise</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.AutoStretch">
      <summary>Gets or sets whether the barcode automatically resizes itself when the cell size changes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.BarAdjust">
      <summary>Gets or sets the width of the adjust bar for fine tuning the placement.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.BarCodePadding">
      <summary>Gets or sets the left and right padding of the barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.BarSize">
      <summary>Gets or sets the height and width of the barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.DisplayCheckDigit">
      <summary>Gets or sets whether the check digit is visible.</summary>
      <value>
        <c>true</c> if check digit is visible; <c>false</c> otherwise</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.DisplayMode">
      <summary>Gets or sets how the barcode is displayed in the cell.</summary>
      <value>Display mode</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.FixedLength">
      <summary>Gets or sets the number of the fixed digits of the value of the barcode. Only can be set if barcode type is PostNet, ITF, or Code39. If bar type is PostNet, the value must be 5 or 10 or 12.</summary>
      <value>Number of the fixed digits of the barcode value</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.IsFormulaValue">
      <summary>Determines whether the editor contains a formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.Message">
      <summary>Gets or sets whether to show the message string with the barcode.</summary>
      <value>if message visible;</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.MessagePosition">
      <summary>Gets or sets the display position message associated with the barcode.</summary>
      <value>Position of the message</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.MessageValue">
      <summary>Gets or sets the message string.</summary>
      <value>Message string</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.MinimumHeight">
      <summary>Gets or sets the minimum height of the entire barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.ModuleSize">
      <summary>Gets or sets the size of the barcode module.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.Resolution">
      <summary>Gets or sets the resolution (in dots-per-inch) of the output image of the barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.Rotation">
      <summary>Gets or sets the rotation angle of the barcode.</summary>
      <value>Rotation angle setting</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.Type">
      <summary>Gets or sets the bar type in the barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCodeCellType.Unit">
      <summary>Gets or sets the measurement unit of the barcode.</summary>
      <value>Unit of measurement</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CanBeOverflown">
      <summary>Determines whether data from another cell can overflow into this cell (whether this cell can be overflowed into).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CanOverflow">
      <summary>Determines whether a cell can overflow its data into an adjacent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.Clone">
      <summary>Clones this cell type object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CreateBitmap(System.Object)">
      <summary>Creates the bitmap image of the barcode.</summary>
      <param name="value">The new value of the barcode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CreateBitmap(System.Int32,System.Object)">
      <summary>Creates the bitmap image of the barcode.</summary>
      <param name="dpi">Resolution in DPI (dots-per-inch)</param>
      <param name="value">The new value of the barcode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CreateBitmap(System.Int32,System.Int32,System.Object)">
      <summary>Creates the bitmap image of the barcode.</summary>
      <param name="dpiX">X-axis resolution in DPI (dots-per-inch)</param>
      <param name="dpiY">Y-axis resolution in DPI (dots-per-inch)</param>
      <param name="value">The new value of the barcode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CreateMetafile(System.Object)">
      <summary>Creates the image metafile from the barcode.</summary>
      <param name="value">The new value of the barcode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CreateMetafile(System.Int32,System.Object)">
      <summary>Creates the image metafile from the barcode with the specified resolution (in DPI).</summary>
      <param name="dpi">Resolution in DPI (dots-per-inch)</param>
      <param name="value">The new value of the barcode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.CreateMetafile(System.Int32,System.Int32,System.Object)">
      <summary>Creates the image metafile from the barcode with the specified resolution (in DPI for X and Y).</summary>
      <param name="dpiX">X-axis resolution in DPI (dots-per-inch)</param>
      <param name="dpiY">Y-axis resolution in DPI (dots-per-inch)</param>
      <param name="value">The new value of the barcode</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.Format(System.Object)">
      <summary>No formatting needed.</summary>
      <param name="obj" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Returns the barcode editor control (BarCodeValueEditor).</summary>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetEditorValue">
      <summary>Returns the text entered by the user in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum required) size of the cell for the editor control.</summary>
      <param name="editor">Name of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines the default fixed size of the barcode in pixels.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Size of the barcode</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Value to display</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Editor control to initialize</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">Key the user pressed and whether any modifier keys (Ctrl, Alt, and Shift) are pressed at the same time</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for painting the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Creates an image of the barcode and draws it inside the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.Parse(System.String)">
      <summary>No formatting needed.</summary>
      <param name="s" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.SetEditorValue(System.Object)">
      <summary>Sets the value to the editor when it appears.</summary>
      <param name="value">Value object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCodeCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BaseCellType">
      <summary>Represents the base class for other cell type classes. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.BaseCellType" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseCellType.ExtraRendererSettings">
      <summary>Gets the conditional formatting settings.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseCellType.SubEditor">
      <summary>Gets or sets the subeditor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.CanBeOverflown">
      <summary>Determines whether data from another cell can overflow into this cell (whether this cell can be overflowed into).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.CanOverflow">
      <summary>Determines whether a cell can overflow its data into an adjacent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.Clone">
      <summary>Creates and returns a base cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.FireEditingCanceled">
      <summary>Fires the EditingCanceled event if there are any delegates attached.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.FireEditingStopped">
      <summary>Fires the EditingStopped event if there are any delegates attached.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.FireEditorValueChanged(System.EventArgs)">
      <summary>Fires the EditorValueChanged event if there are any delegates attached.</summary>
      <param name="e">EventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetErrorIconBound(System.Drawing.Graphics,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle,System.Single)">
      <summary>Gets a rectangle to draw the error icon in.</summary>
      <param name="g">A graphics object</param>
      <param name="appearance">Appearance settings</param>
      <param name="cellRectangle">Rectangle to paint the cell in</param>
      <param name="zoomFactor">Zoom factor setting</param>
      <returns>A rectangle</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum needed) size of the cell for the editor control.</summary>
      <param name="editor">Name of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum required size</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.GetReusableEditorControl(FarPoint.Win.Spread.CellType.IReuseEditorControl,System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Implementation of IReuseEditorControl.GetEditorControl for use by cell types.</summary>
      <param name="irec">Editor control to reuse</param>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
      <returns>Control</returns>
      <remarks>After calling this method, if initialized is false, you must call IReuseEditorControl.InitializeEditorControl to make the editor control ready for editing.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsCaretInTheBeginning">
      <summary>Gets whether the caret is in the beginning.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsCaretInTheEnd">
      <summary>Gets whether the caret is at the end.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsCaretInTheFirstLine">
      <summary>Gets whether the caret is in the first line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsCaretInTheLastLine">
      <summary>Gets whether the caret is in the last line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsPropertySupported(System.String)">
      <summary>Gets whether the cell type supports the named property.</summary>
      <param name="propertyName">Name of the property</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">Key the user pressed and whether any modifier keys (Ctrl, Alt, and Shift) are pressed at the same time</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for painting the editor control</param>
      <param name="x">
        <i>X</i>-coordinate of pointer location</param>
      <param name="y">
        <i>Y</i>-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) the cell to PDF when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">PDF graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.PaintEnhancedConditionalFormat(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single,System.Drawing.RectangleF@)">
      <summary>Paints the enhanced conditional format.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">The rectangle boundary to paint the value in.</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="isSelected">if set to <c>true</c>, the cell is in a selected state.</param>
      <param name="isLocked">if set to <c>true</c>, the cell is in a locked state.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <param name="rText">The rectangle text.</param>
      <returns>True to stop painting the text; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select everything</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseCellType.ToString">
      <summary>Converts the name of the cell type to a string.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.BaseCellType.EditingCanceled">
      <summary>Occurs when editing (the editor control) has been canceled by the user.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.BaseCellType.EditingStopped">
      <summary>Occurs when editing in the the editor control has been stopped by the user.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.BaseCellType.EditorValueChanged">
      <summary>Occurs when the value in the editor control has been changed by the user.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer">
      <summary>Represents a base header flat style renderer. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer" /></summary>
      <remarks>for inheritance</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the column header cells from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.ActiveFontStyle">
      <summary>Gets or sets the cell font style in active mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.ActiveForeColor">
      <summary>Gets or sets the foreground color of the cell in an active state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.ActiveMouseOverBackColor">
      <summary>Gets or sets the backcolor of the cell when the mouse is over the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.ActiveSelectedBackColor">
      <summary>Gets or sets the color of the header cell when selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.ContainSelectBackColor">
      <summary>Gets or sets the background color of the header cell that contains the selected cell in the viewport.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.GridLineActiveColor">
      <summary>Gets or sets the header cell grid line color in an active state or separated by viewport.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.GridLineNormalColor">
      <summary>Gets or sets the header cell grid line color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.NormalBackgroundColor">
      <summary>Gets or sets the backcolor of the cell in normal mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Internal use only. Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">SerializationInfo to populate with data</param>
      <param name="context">Destination (see StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.GetPaintSpecialActiveSelectionRegion(System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance)">
      <summary>Supports getting the region that paints the special active selection like Office 2013.</summary>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.PaintBackground(System.Drawing.Graphics,System.Boolean@,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean,System.Drawing.Color)">
      <summary>Paints the background.</summary>
      <param name="g">Graphics object.</param>
      <param name="useXpStyles">Specifies whether to use XP style.</param>
      <param name="toscreen">Specifies whether paint to screen.</param>
      <param name="pressed">Specifies whether it is pressed.</param>
      <param name="focus">Specifies whether it is focused.</param>
      <param name="r">Rectangle boundary.</param>
      <param name="dpx">Integer number of resolution (DPI) along the x-axis</param>
      <param name="dpy">Integer number of resolution (DPI) along the y-axis</param>
      <param name="style">Whether to turn on visual styles</param>
      <param name="rightToLeft">Whether drawing right to left</param>
      <param name="backColor">Cell background color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the header cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region for painting the header cell</param>
      <param name="appearance">Appearance settings of the header cell</param>
      <param name="value">Object that contains the name of the renderer control of the header cell</param>
      <param name="isSelected">Whether the header cell is selected</param>
      <param name="isLocked">Whether the header cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double,System.Single)">
      <summary>Paints the column header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of the button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Shadow thickness in pixels</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
      <param name="appearance">Appearance settings</param>
      <param name="textRotationAngle">Text rotation angle</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.PaintSpecialActiveSelection(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,FarPoint.Win.Spread.Appearance)">
      <summary>Supports painting the special active selection like Office 2013.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="color">The color using to paint special active selection.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BaseHeaderFlatStyleRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Internal use only. Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ButtonCellType">
      <summary>Represents a button cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.#ctor">
      <summary>Creates a new button cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.#ctor(FarPoint.Win.Spread.CellType.ButtonCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified button cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new button cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.BackgroundStyle">
      <summary>Gets or sets how the background is rendered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.ButtonColor">
      <summary>Gets or sets the color for the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.ButtonColor2">
      <summary>Gets or sets the secondary color used when drawing a gradient button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.DarkColor">
      <summary>Gets or sets the shadow color for the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.GradientMode">
      <summary>Gets or sets the drawing style of a gradient button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.HotkeyPrefix">
      <summary>Gets or sets whether the ampersand character underlines text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.LightColor">
      <summary>Gets or sets the highlight color for the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.Picture">
      <summary>Gets or sets the image for the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.PictureDown">
      <summary>Gets or sets the image for the down state of the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.PictureZoomEffect">
      <summary>Gets or sets whether the image has zoom effects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.ShadowSize">
      <summary>Gets or sets the width (in pixels) of the shadow around the button.</summary>
      <exception cref="T:System.ArgumentException"> Specified width is not valid; must be between 0 and 256 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.Text">
      <summary>Gets or sets the button text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextAlign">
      <summary>Gets or sets how the text aligns itself in relation to the button image.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextColor">
      <summary>Gets or sets the color for the button text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextDown">
      <summary>Gets or sets the text for the button down state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextOrientation">
      <summary>Gets or sets how text orients itself when painting the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TextRotationAngle">
      <summary>Gets or sets the rotation angle of the text for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.TwoState">
      <summary>Gets or sets whether the button has two states.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.UseVisualStyleBackColor">
      <summary>Gets or sets whether to use the visual style setting background color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ButtonCellType.WordWrap">
      <summary>Gets or sets whether text that is too long to fit in the cell wraps to additional lines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the button cell type settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control for editing.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell, when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Object - value of the editor control</param>
      <exception cref="T:System.ArgumentException"> Specified value to set is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ButtonCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CellTypeConverter">
      <summary>Provides a drop-down list of cell types for a property of type ICellType in the property grid.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.CellTypeConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether the specified type can be converted to a cell type object.</summary>
      <param name="context">Type descriptor context</param>
      <param name="sourceType">Type</param>
      <returns>True if sourceType is string; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether a cell type object can be converted to the specified type.</summary>
      <param name="context">Type descriptor context</param>
      <param name="destinationType">Type</param>
      <returns>True if a border object can be converted to the specified type, and false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a string to a new cell type object.</summary>
      <param name="context">Type descriptor context</param>
      <param name="culture">CultureInfo</param>
      <param name="value">The object</param>
      <returns>A new border object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the cell type object to a string.</summary>
      <param name="context">Type descriptor context</param>
      <param name="culture">CultureInfo</param>
      <param name="value">The object</param>
      <param name="destinationType">Type</param>
      <returns>String representation of a border object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Retrieves the set of properties for this type.</summary>
      <param name="context">Type descriptor context</param>
      <param name="value">The object</param>
      <param name="attributes">Array of properties (attributes)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines whether this object supports properties.</summary>
      <param name="context">Type descriptor context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the set of standard values for this type for the specified context.</summary>
      <param name="context">Type descriptor context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CellTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines whether this object supports standard values.</summary>
      <param name="context">Type descriptor context</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CheckBoxCellType">
      <summary>Represents a check box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.#ctor">
      <summary>Creates a new check box cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.#ctor(FarPoint.Win.Spread.CellType.CheckBoxCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified check box cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new check box cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.BackgroundImage">
      <summary>Gets or sets the background image for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.Caption">
      <summary>Gets or sets the text in the check box regardless of the state, overrides TextTrue, TextFalse, and TextIndeterminate.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.FocusRectangle">
      <summary>Gets or sets whether the focus rectangle is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.HotkeyPrefix">
      <summary>Gets or sets whether the ampersand character underlines text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.Picture">
      <summary>Gets or sets the images for the states of the check box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextAlign">
      <summary>Gets or sets how the text is aligned in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextFalse">
      <summary>Gets or sets the text for the false state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextIndeterminate">
      <summary>Gets or sets the indeterminate state text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.TextTrue">
      <summary>Gets or sets the text for the true state.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CheckBoxCellType.ThreeState">
      <summary>Gets or sets whether the check box has three states.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Clone">
      <summary>Creates and returns a check box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the check box for editing.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select everything</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CheckBoxCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ColorPickerCellType">
      <summary>Represents a color picker cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.#ctor">
      <summary>Creates a new color picker cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.#ctor(FarPoint.Win.Spread.CellType.ColorPickerCellType)">
      <summary>Creates a new color picker cell by copying from the specified ColorPickerCellType ("copy constructor").</summary>
      <param name="g">Specified color picker cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new color picker cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.AllowFullOpen">
      <summary>Gets or sets whether to allow the color picker dialog to open fully.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.AnyColor">
      <summary>Gets or sets whether any color is allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.BoxWidth">
      <summary>Gets or sets the width (in pixels) of the box in the color picker cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.Caption">
      <summary>Gets or sets the caption to display in the color picker cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.CustomColors">
      <summary>Gets or sets the custom colors for the color picker dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.DialogShowing">
      <summary>Gets or sets whether the color picker dialog is showing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.DropDown">
      <summary>Gets or sets whether to drop down the color picker dialog by default.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.FullOpen">
      <summary>Gets or sets whether to display the color picker dialog fully open.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.SolidColorOnly">
      <summary>Gets or sets whether only solid colors are displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.Style">
      <summary>Gets or sets the style of the color picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.UnknownText">
      <summary>Gets or sets the text for unknown colors.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColorPickerCellType.UnknownTextStyle">
      <summary>Gets or sets the style of text for unknown colors.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model with cell data to format</param>
      <returns>String that contains the formatted data to put in the cell</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the editor control.</summary>
      <param name="appearance">Appearance of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum) size of the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Size of the cell</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for painting the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns>Object that contains the results of the parsing to put in the data model</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.SetEditorValue(System.Object)">
      <summary>Sets the unformatted value in the editor control.</summary>
      <param name="value" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.ShowSubEditor">
      <summary>Displays a color editor dialog.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColorPickerCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer">
      <summary>Represents the painter of column header cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.#ctor">
      <summary>Creates a new column header renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the column header cells from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.appearance">
      <summary>Creates the appearance.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.headerTheme">
      <summary>Creates a visual style (theme) for the header.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.BackColor2">
      <summary>Gets or sets the secondary color used when drawing a gradient button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.BackgroundStyle">
      <summary>Gets or sets how the background is rendered.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.DarkColor">
      <summary>Gets or sets the color to draw the three-dimensional outside border of the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GradientMode">
      <summary>Gets or sets the drawing style of a gradient button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment of text in the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.HotkeyPrefix">
      <summary>Gets or sets whether the ampersand character underlines text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Images">
      <summary>Gets or sets user override images for the headers. Use the SpreadView static image constants for the array indexes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.LightColor">
      <summary>Gets or sets the color to draw the three-dimensional inside border of the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Picture">
      <summary>Gets or sets the image displayed in the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PictureZoomEffect">
      <summary>Gets or sets whether the image has effects with zooming.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ShadowSize">
      <summary>Gets or sets the size of shadow around the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ShrinkToFit">
      <summary>Gets or sets whether a drop-down button is displayed in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.TextAlign">
      <summary>Gets or sets how text is aligned relative to the picture in the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.TextIndent">
      <summary>Gets or sets the text indent.</summary>
      <value>The text indent.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.TextOrientation">
      <summary>Gets or sets how text orients itself when painting the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.TextRotationAngle">
      <summary>Gets or sets the text rotation angle.</summary>
      <value>The text rotation angle.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of text in the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.WordWrap">
      <summary>Gets or sets whether the text that does not fit on one line wraps to multiple lines within the button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ZoomFactor">
      <summary>Gets or sets zoom factor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.CanBeOverflown">
      <summary>Determines whether data in adjacent cells can overflow these specific cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.CanOverflow">
      <summary>Determines whether data in cells can overflow into adjacent cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Internal use only. Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Dispose(System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="disposing">Whether disposing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Dispose">
      <summary>Dispose this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Finalize">
      <summary>The destructor method.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetFilterSortButtonSize(System.Single)">
      <summary>Get filter sort button size.</summary>
      <param name="scaleFactor">Scale factor</param>
      <returns>A <see cref="T:System.Int32" /> value that represents size of the button</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetImageBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.String,FarPoint.Win.ButtonTextAlign,System.Drawing.Image)">
      <summary>Returns information about the image.</summary>
      <param name="g">Image graphic</param>
      <param name="r">Image rectangle</param>
      <param name="font">Font</param>
      <param name="halign">Horizontal alignment</param>
      <param name="valign">Vertical alignment</param>
      <param name="text">Text</param>
      <param name="nAlign">Button text alignment</param>
      <param name="pict">Image</param>
      <returns>Rectangle object for image</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetImageBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.String,FarPoint.Win.ButtonTextAlign,System.Drawing.Image,System.Int32)">
      <summary>Returns information about the image.</summary>
      <param name="g">Image graphic</param>
      <param name="r">Image rectangle</param>
      <param name="font">Font</param>
      <param name="halign">Horizontal alignment</param>
      <param name="valign">Vertical alignment</param>
      <param name="text">Text</param>
      <param name="nAlign">Button text alignment</param>
      <param name="pict">Image</param>
      <param name="textIndent">TextIndent</param>
      <returns>Rectangle object for image</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for zoom factor for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.GetSelectorEditingButtonSize(System.Single)">
      <summary>Gets the selection edit button size.</summary>
      <param name="scaleFactor">Scale factor</param>
      <returns>A <see cref="T:System.Int32" /> value that represents size of the button</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintBackground(System.Drawing.Graphics,System.Boolean@,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean,System.Drawing.Color)">
      <summary>Paints the background of the enhanced header cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="useXpStyles">Whether to use XP themes</param>
      <param name="toscreen">Whether painting to the screen</param>
      <param name="pressed">Whether in a pressed state</param>
      <param name="focus">Whether the cell has focus</param>
      <param name="r">Boundary rectangle</param>
      <param name="dpx">Integer number of resolution (DPI) along the x-axis</param>
      <param name="dpy">Integer number of resolution (DPI) along the y-axis</param>
      <param name="style">Whether to turn on visual styles</param>
      <param name="rightToLeft">Whether drawing right to left</param>
      <param name="backColor">Cell background color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the column header cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Location and size of a rectangular region for painting the column header cell</param>
      <param name="appearance">Appearance settings of the column header cell</param>
      <param name="value">Object that contains the name of the renderer control of the column header cell</param>
      <param name="isSelected">Whether the column header cell is selected</param>
      <param name="isLocked">Whether the column header cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the column header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) the cell to PDF.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintFilterIndicator(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Paints the filtering indicator in the column header with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the indicator</param>
      <param name="r">Location and size of the rectangular region in which to paint the indicator</param>
      <param name="appearance">Appearance settings of the indicator</param>
      <param name="zoomFactor">Numeric value for scaling the display of the indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean)">
      <summary>Paints the column header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of the button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Shadow thickness in pixels</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the column header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Shadow thickness in pixels</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double)">
      <summary>Paints the column header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of the button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Shadow thickness in pixels</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
      <param name="appearance">Appearance settings</param>
      <param name="textRotationAngle">Text rotation angle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double,System.Single)">
      <summary>Paints the column header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of the button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Shadow thickness in pixels</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
      <param name="appearance">Appearance settings</param>
      <param name="textRotationAngle">Text rotation angle</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintRowEditingSelector(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Paints the row header selector in the row header of the selected row.</summary>
      <param name="g">Graphics device interface for painting the row header selector.</param>
      <param name="r">Location and size of the rectangular region in which to paint the row header selector.</param>
      <param name="appearance">Appearance settings of the row header selector.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the row header selector.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintRowSelector(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Paints the row header selector in the row header of the selected row.</summary>
      <param name="g">Graphics device interface for painting the row header selector.</param>
      <param name="r">Location and size of the rectangular region in which to paint the row header selector.</param>
      <param name="appearance">Appearance settings of the row header selector.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the row header selector.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.PaintSortIndicator(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Paints the sorting indicator in the column header with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the indicator</param>
      <param name="r">Location and size of the rectangular region in which to paint the indicator</param>
      <param name="appearance">Appearance settings of the indicator</param>
      <param name="zoomFactor">Numeric value for scaling the display of the indicator</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Internal use only. Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ColumnHeaderRenderer.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ComboBoxCellType">
      <summary>Represents an ordinary combo box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.#ctor">
      <summary>Creates a new combo box cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.#ctor(FarPoint.Win.Spread.CellType.ComboBoxCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified combo box cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new combo box cell from serialization.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ComboBoxCellType.theme">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AcceptsArrowKeys">
      <summary>Gets or sets how arrow keys are processed by the combo box control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AllowArrowKeysMoveActiveCell">
      <summary>Gets or sets whether to allow arrow keys to move the active cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AllowEditorVerticalAlign">
      <summary>Gets or sets whether to allow vertical alignment in the editor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AutoCompleteCustomSource">
      <summary>Gets or sets the custom source (of strings) for automatic completion of entries in the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AutoCompleteMode">
      <summary>Gets or sets how the automatic completion works for entries in the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AutoCompleteSource">
      <summary>Gets or sets the source for automatic completion of entries in the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AutoFillAutoCompleteCustomSource">
      <summary>Gets or sets a whether the AutoCompleteCustomSource is automatically filled with data from the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.AutoSearch">
      <summary>Gets or sets how a list of items in a combo box is searched based on input of a character key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.BackgroundImage">
      <summary>Gets or sets the image to paint in the background of the combo box edit portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ButtonAlign">
      <summary>Gets or sets where buttons are displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.CharacterCasing">
      <summary>Gets or sets the case of characters in the text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.CharacterSet">
      <summary>Gets or sets what characters to allow for the text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.DoubleClickTextToDropDown">
      <summary>Gets or sets whether to display the combo box list when double-clicking the text area.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.DropDownOptions">
      <summary>Gets or sets the drop-down options for displaying the combo box list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.DropDownWhenStartEditing">
      <summary>Gets or sets whether to display the combo box list when pressing the enter key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.Editable">
      <summary>Gets or sets whether you can type into the edit portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.EditorValue">
      <summary>Gets or sets what value is written to the underlying data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ImageList">
      <summary>Gets or sets the image list of a combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ItemData">
      <summary>Gets or sets the corresponding data for the items in the drop-down list in the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.Items">
      <summary>Gets or sets the items for the drop-down list in the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListAlignment">
      <summary>Gets or sets the side of the cell on which the list aligns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListControl">
      <summary>Gets or sets the control for the list portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListOffset">
      <summary>Gets or sets how many pixels to offset the list from the aligned edge of the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.ListWidth">
      <summary>Gets or sets the width (in pixels) of the drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.MaxDrop">
      <summary>Gets or sets the number of items to display at one time in the list portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.MaxLength">
      <summary>Gets or sets the maximum number of characters allowed in the combo box cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ComboBoxCellType.StopEditingAfterDropDownItemSelected">
      <summary>Gets or sets whether to close the drop-down list and stop editing after pressing the enter key or clicking a combo box list item.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Clear">
      <summary>Removes all items from the list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Clone">
      <summary>Creates and returns an ordinary combo box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Dispose(System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="disposing">Whether disposing.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Dispose">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Finalize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetErrorIconBound(System.Drawing.Graphics,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle,System.Single)">
      <summary>Gets a rectangle to draw the error icon in.</summary>
      <param name="g">A graphics object</param>
      <param name="appearance">Appearance settings</param>
      <param name="cellRectangle">Rectangle to paint cell in</param>
      <param name="zoomFactor">Zoom factor setting</param>
      <returns>A rectangle</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
      <summary>Gets the rectangle in which text is drawn.</summary>
      <param name="g">Graphics device interface for painting the text</param>
      <param name="r">Cell rectangle</param>
      <param name="f">Font</param>
      <param name="appearance">Appearance settings of the rectangle</param>
      <param name="rText">Text rectangle returned</param>
      <param name="paintString">String to be painted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsCaretInTheBeginning">
      <summary>Gets whether the caret is in the beginning.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsCaretInTheEnd">
      <summary>Gets whether the caret is at the end.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsCaretInTheFirstLine">
      <summary>Gets whether the caret is in the first line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsCaretInTheLastLine">
      <summary>Gets whether the caret is in the last line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Specified value in the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.RemoveItem(System.Int32)">
      <summary>Removes the individual item specified by index from the list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ComboBoxCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CornerRenderer">
      <summary>Represents the painter of the corner cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.#ctor">
      <summary>Creates a new painter of the corner cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the corner cell from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CornerRenderer.appearance">
      <summary>Sets the appearance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.CanBeOverflown">
      <summary>Determines whether adjacent cells can overflow into this cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.CanOverflow">
      <summary>Determines whether this cell can overflow into an adjacent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Deserializes.</summary>
      <param name="r" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data</param>
      <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for zoom factor for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the corner cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the corner cell</param>
      <param name="r">Location and size of a rectangular region for painting the corner cell</param>
      <param name="appearance">Appearance settings of the corner cell</param>
      <param name="value">Object that contains the name of the renderer control of the corner cell</param>
      <param name="isSelected">Whether the corner cell is selected</param>
      <param name="isLocked">Whether the corner cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the corner cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) the cell to PDF.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.PaintCorner(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.String,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the corner cell.</summary>
      <param name="g">Graphics device interface for painting the corner cell</param>
      <param name="r">Location and size of a rectangular region for painting the corner cell</param>
      <param name="backColor">Background color of the corner cell</param>
      <param name="foreColor">Foreground color of the corner cell</param>
      <param name="f">Font</param>
      <param name="horizontalAlignment">Horizontal alignment of corner cell content</param>
      <param name="verticalAlignment">Vertical alignment of the corner cell content</param>
      <param name="s">String to paint</param>
      <param name="textOrientation">Orientation of the text</param>
      <param name="wordWrap">Whether to wrap words to multiple lines</param>
      <param name="hotkeyPrefix">Whether to show hotkey effects</param>
      <param name="stringTrim">String trimming mode</param>
      <param name="visualStyles">Visual styles</param>
      <param name="mouseOver">Whether the mouse is over the corner cell</param>
      <param name="rightToLeft">Whether to display right to left</param>
      <param name="zoomFactor">Numeric value for scaling the display of the corner cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Serializes.</summary>
      <param name="w" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.ToString">
      <summary>Returns the name of the corner renderer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CornerRenderer.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CurrencyCellType">
      <summary>Represents a numeric cell formatted as currency.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.#ctor">
      <summary>Creates a new currency cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.#ctor(FarPoint.Win.Spread.CellType.CurrencyCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified currency cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new currency cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.CurrencySymbol">
      <summary>Gets or sets the string for the currency symbol when displaying currency values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.DecimalPlaces">
      <summary>Gets or sets the number of decimal places.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.DecimalSeparator">
      <summary>Gets or sets the decimal character.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.FixedPoint">
      <summary>Gets or sets whether to display zeros as placeholders in the decimal portion of the number for a fixed-point numeric display.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.LeadingZero">
      <summary>Gets or sets whether leading zeros are displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.MaximumValue">
      <summary>Gets or sets the maximum value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is beyond accepted limits </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.MinimumValue">
      <summary>Gets or sets the minimum value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is beyond accepted limits </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.NegativeFormat">
      <summary>Gets or sets the format for displaying a negative value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.NegativeRed">
      <summary>Gets or sets whether negative numeric values are displayed in red.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.OverflowCharacter">
      <summary>Gets or sets the character for replacing the value if it does not fit the width of the display.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.PositiveFormat">
      <summary>Gets or sets the format for displaying a positive value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.Separator">
      <summary>Gets or sets the string used to separate thousands in a numeric value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.ShowCurrencySymbol">
      <summary>Gets or sets whether to display the currency symbol.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.ShowSeparator">
      <summary>Gets or sets whether to display the thousands separator string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinButton">
      <summary>Gets or sets whether a spin button is displayed when editing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinDecimalIncrement">
      <summary>Gets or sets the amount by which the value increments when using the spin buttons and the cursor is in the decimal portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinIntegerIncrement">
      <summary>Gets or sets the amount by which the value increments when using the spin buttons and the cursor is in the integer portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.CurrencyCellType.SpinWrap">
      <summary>Gets or sets whether the value wraps when the minimum or maximum is reached.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.ApplyNegativeFormat">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.ApplyPositiveFormat">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Clone">
      <summary>Creates and returns a currency cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetCurrencyDecimalSeparator">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetCurrencyGroupSeparatorString">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetCurrencySymbolString">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetDecimalPlacesValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetDecimalSeparatorString">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetNegativeFormatValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetNewFormat">
      <summary>Gets the format string for formatting currency values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetPositiveFormatValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the editor control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.GetSeparatorCharacter">
      <summary>Gets the separator character for formatting currency values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value can be converted to a decimal value and is between the minimum and maximum allowed value.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell, when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.SetCalculatorText(System.String,System.String)">
      <summary>Sets the text for the pop-up calculator.</summary>
      <param name="okText">Text for the OK button</param>
      <param name="cancelText">Text for the Cancel button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.CurrencyCellType.SetNewFormat">
      <summary>Sets the new format string (returned by GetNewFormat) into the internal cell formatter.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.DateTimeCellType">
      <summary>Represents a date-time cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.#ctor">
      <summary>Creates a new date-time cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.#ctor(FarPoint.Win.Spread.CellType.DateTimeCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified date-time cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new date-time cell from serialization.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeCellType.IncompleteValue">
      <summary>Gets the value returned from the editor if the editing value is partial and not empty. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.AMString">
      <summary>Gets or sets the string to indicate morning for 12-hour time format.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.Calendar">
      <summary>Gets or sets the calendar for formatting date values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarDayBackColor">
      <summary>Gets or sets the background color of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarDayFont">
      <summary>Gets or sets the text font of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarDayForeColor">
      <summary>Gets or sets the text color of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarMonthBackColor">
      <summary>Gets or sets the background color of the month part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarMonthFont">
      <summary>Gets or sets the text font of the month part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarMonthForeColor">
      <summary>Gets or sets the text color of the month part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarMonthHeaderDock">
      <summary>Gets or sets how to dock the month header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarMonthHeaderHeight">
      <summary>Gets or sets the height of the month header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarMonthHeaderStyle">
      <summary>Gets or sets the style of the month header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarShowSurroundingDays">
      <summary>Gets or sets whether to show the surrounding days in the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarSingleLineHeader">
      <summary>Gets or sets the single line header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarSurroundingDaysColor">
      <summary>Gets or sets the color of the surrounding days of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarWeekdayBackColor">
      <summary>Gets or sets the background color of the weekday part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarWeekdayFont">
      <summary>Gets or sets the text font of the weekday part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarWeekdayForeColor">
      <summary>Gets or sets the text color of the weekday part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarWeekdayHeaderDock">
      <summary>Gets or sets how to dock the weekday header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarWeekdayHeaderHeight">
      <summary>Gets or sets the height of the weekday header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarYearBackColor">
      <summary>Gets or sets the background color of the year part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarYearFont">
      <summary>Gets or sets the text font of the year part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarYearForeColor">
      <summary>Gets or sets the text color of the year part of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarYearHeaderDock">
      <summary>Gets or sets how to dock the year header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarYearHeaderHeight">
      <summary>Gets or sets the height of the year header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.CalendarYearHeaderStyle">
      <summary>Gets or sets the style of the year header of the pop-up calendar in the date-time cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DateDefault">
      <summary>Gets or sets the default date for the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DateSeparator">
      <summary>Gets or sets the string that separates the portions of a date value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DateTimeFormat">
      <summary>Gets or sets the format for displaying dates and times.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.DayNames">
      <summary>Gets or sets alternate day names for the control (use with UserDefinedFormat).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.EditorValue">
      <summary>Gets or sets what value is written to the underlying data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MaximumDate">
      <summary>Gets or sets the maximum date value allowed for user entry.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MaximumTime">
      <summary>Gets or sets the maximum time value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value out of range; must be between 00:00:00 and 23:59:59 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MinimumDate">
      <summary>Gets or sets the minimum date value allowed for user entry.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MinimumTime">
      <summary>Gets or sets the minimum time value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value out of range; must be between 00:00:00 and 23:59:59.9999999 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.MonthNames">
      <summary>Gets or sets alternate month names for the control (use with UserDefinedFormat).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.PMString">
      <summary>Gets or sets the string to indicate afternoon and evening for 12-hour time format.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.ShortDayNames">
      <summary>Gets or sets alternate short day names for the control (use with UserDefinedFormat).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.ShortMonthNames">
      <summary>Gets or sets alternate short month names for the control (use with UserDefinedFormat).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.SimpleEdit">
      <summary>Gets or sets whether the celltype ignores invalid character input while editing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.SpinButton">
      <summary>Gets or sets whether a spin button is displayed while editing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.TimeDefault">
      <summary>Gets or sets the default time used in the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.TimeSeparator">
      <summary>Gets or sets the string that separates the portions of a time value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.TwoDigitYearMax">
      <summary>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range for Gregorian calendar; must be between 100 and 9999 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range for Hijri calendar; must be between 100 and 9666 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is out of range for Hebrew calendar; must be between 5343 and 6000 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.DateTimeCellType.UserDefinedFormat">
      <summary>Gets or sets the format used when the date-time format is user-defined.</summary>
      <exception cref="T:System.ArgumentException"> Specified format is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Clone">
      <summary>Creates and returns a date-time cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <exception cref="T:System.ArgumentException"> Specified object to format is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetAMStringDesignator">
      <summary>Gets the AM string for formatting time values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetDateSeparatorString">
      <summary>Gets the date separator string for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetDayNames">
      <summary>Gets the long day names for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetFormatString">
      <summary>Gets the format string for formatting date values or time values or both.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetLongDateFormat">
      <summary>Gets the long date format for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetMonthNames">
      <summary>Gets the long month names for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetNewFormat">
      <summary>Gets the new format for formatting date values or time values or both.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetPMStringDesignator">
      <summary>Gets the PM string for formatting time values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the editor control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetShortDateFormat">
      <summary>Gets the short date format for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetShortDayNames">
      <summary>Gets the short day names for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetShortMonthNames">
      <summary>Gets the short month names for formatting date values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetTimeFormat">
      <summary>Gets the time format for formatting time values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.GetTimeSeparatorString">
      <summary>Gets the time separator string for formatting time values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value can be converted to a date-time value and is between the minimum and maximum allowed values.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarFormat(System.String)">
      <summary>Sets the format to be used for the pop-up calendar header.</summary>
      <param name="calFormat">Format of the header of the calendar</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarText(System.String[],System.String[],System.String[],System.String[],System.String,System.String)">
      <summary>Sets the various text elements for the pop-up calendar, including the day and month names and the button text.</summary>
      <param name="dayNames">Set of day names</param>
      <param name="monthNames">Set of month names</param>
      <param name="shortdayNames">Set of abbreviated day names</param>
      <param name="shortmonthNames">Set of abbreviated month names</param>
      <param name="okText">Text for the OK button</param>
      <param name="cancelText">Text for the Cancel button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarText(System.String[],System.String[],System.String[],System.String[],System.String,System.String,System.String)">
      <summary>Sets the various text elements for the pop-up calendar, including the day and month names, the today text, and the button text.</summary>
      <param name="dayNames">Set of day names</param>
      <param name="monthNames">Set of month names</param>
      <param name="shortdayNames">Set of abbreviated day names</param>
      <param name="shortmonthNames">Set of abbreviated month names</param>
      <param name="okText">Text for the OK button</param>
      <param name="cancelText">Text for the Cancel button</param>
      <param name="currentText">Text for the Today button or Now button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetCalendarText(System.String,System.String)">
      <summary>Sets the various text elements for the pop-up calendar, namely the button text.</summary>
      <param name="okText">Text for the OK button</param>
      <param name="cancelText">Text for the Cancel button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DateTimeCellType.SetNewFormat">
      <summary>Sets the new format (returned by GetNewFormat) into the internal cell formatter.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter">
      <summary>Provides a drop-down list of cell types for a property of type ICellType in the property grid.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Creates an object of this type by using a specified set of property values for the object.</summary>
      <param name="context">Type descriptor context</param>
      <param name="propertyValues">Dictionary of property values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.DesignTimeCellTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines whether changing a value on this object should require a call to the CreateInstance method to create a new value.</summary>
      <param name="context">Type descriptor context</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EditBaseCellType">
      <summary>Represents the basis for all editable cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.#ctor">
      <summary>Creates a new editable cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.#ctor(FarPoint.Win.Spread.CellType.EditBaseCellType)">
      <summary>Copies properties from the specified EditBaseCellType ("copy constructor").</summary>
      <param name="g">Specified base cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new editable cell from serialization.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditBaseCellType.theme">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AcceptsArrowKeys">
      <summary>Gets or sets how arrow keys are processed by the edit control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AllowArrowKeysMoveActiveCell">
      <summary>Gets or sets whether to allow arrow keys to move the active cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AllowEditorVerticalAlign">
      <summary>Gets or sets whether to allow editor vertical align.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AutoCompleteCustomSource">
      <summary>Gets or sets a custom string collection when the AutoCompleteSource property is set to CustomSource.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AutoCompleteMode">
      <summary>Gets or sets how automatic completion works.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AutoCompleteSource">
      <summary>Gets or sets the source of complete strings used for automatic completion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.AutoFillAutoCompleteCustomSource">
      <summary>Gets or sets whether the AutoCompleteCustomSource is automatically filled with data from other cells in the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.BackgroundImage">
      <summary>Gets or sets the background image for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.ButtonAlign">
      <summary>Gets or sets where the buttons are displayed in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.DefaultFont">
      <summary>Gets the default font.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.DropDownButton">
      <summary>Gets or sets whether a drop-down button is displayed in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.EnableSubEditor">
      <summary>Gets or sets whether the SubEditor is available.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.FocusPosition">
      <summary>Gets or sets the initial cursor position.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.NullDisplay">
      <summary>Gets or sets the text to display for null values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.ReadOnly">
      <summary>Gets or sets whether the cell is read-only (and thus cannot be modified).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.ShrinkToFit">
      <summary>Gets or sets whether to shrink the text to fit the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.Static">
      <summary>Gets or sets whether the cell is static, which prohibits user interaction.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.StringTrim">
      <summary>Gets or sets how to trim characters that do not fit in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.SubEditor">
      <summary>Gets or sets the subeditor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.TextAdjustmentSpacing">
      <summary>Allow to gets or sets text adjustment spacing</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.TextOrientation">
      <summary>Gets or sets how text orients itself when painting the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.TextRotationAngle">
      <summary>Gets or sets the rotation angle of the text for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EditBaseCellType.WordWrap">
      <summary>Gets or sets whether text that is too long to fit in the cell wraps to additional lines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.CanBeOverflown">
      <summary>Determines whether data from another cell can overflow into this cell (whether this cell can be overflowed into).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.CanOverflow">
      <summary>Determines whether the cell can overflow into adjacent cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Clone">
      <summary>Creates and returns an editable base cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Dispose">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Finalize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <exception cref="T:System.ArgumentException"> Specified object to format is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetHorizontalAlignment(System.Object)">
      <summary>Gets the horizontal alignment based on the value.</summary>
      <param name="value">Value of the horizontal alignment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum required size</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum required) size of the cell for the editor control.</summary>
      <param name="editor">Name of editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetReusableEditorControl(FarPoint.Win.Spread.CellType.IReuseEditorControl,System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Implementation of IReuseEditorControl.GetEditorControl for use by cell types.</summary>
      <param name="irec">Editor control to reuse</param>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
      <returns>Control</returns>
      <remarks>After calling this method, if initialized is false, you must call IReuseEditorControl.InitializeEditorControl to make the editor control ready for editing.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
      <summary>Gets the rectangle in which text is drawn.</summary>
      <param name="g">Graphics device interface for painting the text</param>
      <param name="r">Cell rectangle</param>
      <param name="f">Font</param>
      <param name="appearance">Appearance settings of the rectangle</param>
      <param name="rText">Text rectangle returned</param>
      <param name="paintString">String to be painted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.GetVerticalAlignment(System.Object)">
      <summary>Gets the vertical alignment based on the value.</summary>
      <param name="value">Value of the vertical alignment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Editor control to initialize</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsCaretInTheBeginning">
      <summary>Gets whether the caret is in the beginning.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsCaretInTheEnd">
      <summary>Gets whether the caret is at the end.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsCaretInTheFirstLine">
      <summary>Gets whether the caret is in the first line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsCaretInTheLastLine">
      <summary>Gets whether the caret is in the last line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) the cell to PDF.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell, when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.SetCurrentCulture(System.Globalization.CultureInfo)">
      <summary>Gets or sets the current culture.</summary>
      <param name="culture">Culture information setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
      <exception cref="T:System.ArgumentException"> Specified value to set is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EditBaseCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EmptyCellType">
      <summary>Represents an empty cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.#ctor">
      <summary>Creates a new empty cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new empty cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.AcceptsArrowKeys">
      <summary>Gets or sets how arrow keys are processed by the edit control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.StringTrim">
      <summary>Gets or sets how to trim characters that do not fit into the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.TextOrientation">
      <summary>Gets or sets how text orients itself when painting the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EmptyCellType.TextRotationAngle">
      <summary>Gets or sets the rotation angle of the text for the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the control used by the given cell type.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EmptyCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer">
      <summary>Represents the painting of the column header cells with the look and feel of Excel 2007.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
      <summary>Creates a new painter of the column header cells with the specified values.</summary>
      <param name="activeBackgroundColor">Color of the background when in focus</param>
      <param name="normalBackgroundColor">Color of the background when not in focus</param>
      <param name="normalGridLineColor">Color of the grid line when not in focus</param>
      <param name="selectedActiveBackgroundColor">Color of the background when selected and in focus</param>
      <param name="selectedBackgroundColor">Color of the background when selected but not in focus</param>
      <param name="selectedGridLineColor">Color of the grid line when selected</param>
      <param name="allowGradient">Allow background color paint gradient</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a new painter of the column header cells with the specified values.</summary>
      <param name="activeBackgroundColor">Color of the background when in focus</param>
      <param name="normalBackgroundColor">Color of the background when not in focus</param>
      <param name="normalGridLineColor">Color of the grid line when not in focus</param>
      <param name="selectedActiveBackgroundColor">Color of the background when selected and in focus</param>
      <param name="selectedBackgroundColor">Color of the background when selected but not in focus</param>
      <param name="selectedGridLineColor">Color of the grid line when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.#ctor">
      <summary>Creates a new painter of the column header cells from default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the column header cells from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.ActiveBackgroundColor">
      <summary>Gets or sets the color of the active background.</summary>
      <value>Color of the background when the cell is active</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.AllowGradient">
      <summary>Gets or Set Allow gradient</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.NormalBackgroundColor">
      <summary>Gets or sets the color of the normal background.</summary>
      <value>Color of the normal background</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.NormalGridLineColor">
      <summary>Gets or sets the color of the normal grid line.</summary>
      <value>Color of the grid line for the cells</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.SelectedActiveBackgroundColor">
      <summary>Gets or sets the color of the selected active background.</summary>
      <value>Color of the background when the cell is active and selected</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.SelectedBackgroundColor">
      <summary>Gets or sets the color of the selected background.</summary>
      <value>Color of the background when the cell is selected</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.SelectedGridLineColor">
      <summary>Gets or sets the color of the selected grid line.</summary>
      <value>Color of the grid line when the cells are selected</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">SerializationInfo to populate with data</param>
      <param name="context">Destination (see StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.PaintBackground(System.Drawing.Graphics,System.Boolean@,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean,System.Drawing.Color)">
      <summary>Paints the background of the enhanced header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="useXpStyles">Whether to paint visual styles (XP themes)</param>
      <param name="toscreen">Whether to paint the header cell to the screen</param>
      <param name="pressed">Whether to paint the header cell as pressed</param>
      <param name="focus">Whether the header cell has focus</param>
      <param name="r">Boundary rectangle</param>
      <param name="dpx">Integer number of resolution (DPI) along the x-axis</param>
      <param name="dpy">Integer number of resolution (DPI) along the y-axis</param>
      <param name="style">Visual styles setting</param>
      <param name="rightToLeft">Whether to display as right-to-left</param>
      <param name="backColor">Background color of the header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the column header cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Location and size of a rectangular region for painting the column header cell</param>
      <param name="appearance">Appearance settings of the column header cell</param>
      <param name="value">Object that contains the name of the renderer control of the column header cell</param>
      <param name="isSelected">Whether the column header cell is selected</param>
      <param name="isLocked">Whether the column header cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the column header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the grid lines for the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate of the cell</param>
      <param name="y">Y-coordinate of the cell</param>
      <param name="width">Width of the cell</param>
      <param name="height">Height of the cell</param>
      <param name="appearance">Appearance settings of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double)">
      <summary>Paints the header cell with the look and feel of Excel 2007.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Cell's backcolor</param>
      <param name="foreColor">Color of the text</param>
      <param name="font">Font of the text</param>
      <param name="halign">Horizontal alignment of the text</param>
      <param name="valign">Vertical alignment of the text</param>
      <param name="pressed">State of the header being pressed</param>
      <param name="focus">Whether in focus</param>
      <param name="text">Text to display in the header</param>
      <param name="textDown">Text to display in the header when pressed</param>
      <param name="nAlign">Alignment of the text and image</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether to wrap text to multiple lines</param>
      <param name="shadowSize">Size of the shadow</param>
      <param name="darkColor">Dark color</param>
      <param name="lightColor">Light color</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the button is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual styles</param>
      <param name="mouseOver">Whether the mouse is over the cell</param>
      <param name="rightToLeft">Whether drawing right to left</param>
      <param name="appearance">Appearance settings of the header cell</param>
      <param name="textRotationAngle">Text rotation angle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double,System.Single)">
      <summary>Paints the header cell with the look and feel of Excel 2007.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Cell's backcolor</param>
      <param name="foreColor">Color of the text</param>
      <param name="font">Font of the text</param>
      <param name="halign">Horizontal alignment of the text</param>
      <param name="valign">Vertical alignment of the text</param>
      <param name="pressed">State of the header being pressed</param>
      <param name="focus">Whether in focus</param>
      <param name="text">Text to display in the header</param>
      <param name="textDown">Text to display in the header when pressed</param>
      <param name="nAlign">Alignment of the text and image</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether to wrap text to multiple lines</param>
      <param name="shadowSize">Size of the shadow</param>
      <param name="darkColor">Dark color</param>
      <param name="lightColor">Light color</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the button is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual styles</param>
      <param name="mouseOver">Whether the mouse is over the cell</param>
      <param name="rightToLeft">Whether drawing right to left</param>
      <param name="appearance">Appearance settings of the header cell</param>
      <param name="textRotationAngle">Text rotation angle</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedColumnHeaderRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer">
      <summary>Represents the painting of the corner cells with the look and feel of Excel 2007.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a new painter of the corner cells with a more up to date look.</summary>
      <param name="activeBackgroundColor">Color of the active background</param>
      <param name="gridLineColor">Color of the grid line</param>
      <param name="normalBackgroundColor">Color of the normal background</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.#ctor">
      <summary>Creates a new painter for the corner cell with the default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the corner cell from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.ActiveBackgroundColor">
      <summary>Gets or sets the color of the active background.</summary>
      <value>Color of the background when the cell is active</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.GridLineColor">
      <summary>Gets or sets the color of the grid line.</summary>
      <value>Color of the grid lines for the cells</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.NormalBackgroundColor">
      <summary>Gets or sets the color of the normal background.</summary>
      <value>Color of the background for the cell</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.Dispose(System.Boolean)">
      <summary>Cleans up any resources being used.</summary>
      <param name="disposing">Whether the object is disposed through the IDisposable interface (true) or finalized by the garbage collector (false)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.Finalize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">SerializationInfo to populate with data</param>
      <param name="context">Destination (see StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the sheet corner cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the sheet corner cell</param>
      <param name="r">Location and size of a rectangular region for painting the sheet corner cell</param>
      <param name="appearance">Appearance settings of the sheet corner cell</param>
      <param name="value">Object that contains the name of the renderer control of the sheet corner cell</param>
      <param name="isSelected">Whether the sheet corner cell is selected</param>
      <param name="isLocked">Whether the sheet corner cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the sheet corner cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the grid lines for the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate of the cell</param>
      <param name="y">Y-coordinate of the cell</param>
      <param name="width">Width of the cell</param>
      <param name="height">Height of the cell</param>
      <param name="appearance">Appearance settings of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.PaintCorner(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.String,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the sheet corner.</summary>
      <param name="g">Graphics device interface for painting the sheet corner</param>
      <param name="r">Location and size of a rectangular region for painting the sheet corner</param>
      <param name="backColor">Background color of the cell</param>
      <param name="foreColor">Text color of the cell</param>
      <param name="f">Font of the text</param>
      <param name="horizontalAlignment">Horizontal alignment of cell content</param>
      <param name="verticalAlignment">Vertical alignment of the cell content</param>
      <param name="s">String to draw</param>
      <param name="textOrientation">Orientation of the text</param>
      <param name="wordWrap">Whether to wrap words to multiple lines</param>
      <param name="hotkeyPrefix">Whether to show hotkey effects</param>
      <param name="stringTrim">String trimming mode</param>
      <param name="visualStyles">Visual styles setting</param>
      <param name="mouseOver">Whether the mouse is over the cell</param>
      <param name="rightToLeft">Right to left</param>
      <param name="zoomFactor">Numeric value for scaling the display of the sheet corner</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedCornerRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer">
      <summary>Represents the painting of the row header cells with the look and feel of Excel 2007.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a new painter of the row header cells with the specified values.</summary>
      <param name="activeBackgroundColor">Color of the background when in focus</param>
      <param name="normalBackgroundColor">Color of the background when not in focus</param>
      <param name="normalGridLineColor">Color of the grid line when not in focus</param>
      <param name="selectedActiveBackgroundColor">Color of the background when selected and in focus</param>
      <param name="selectedBackgroundColor">Color of the background when selected but not in focus</param>
      <param name="selectedGridLineColor">Color of the grid line when selected</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.#ctor">
      <summary>Creates a new painter of the row header cells with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the row header cells from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.ActiveBackgroundColor">
      <summary>Gets or sets the color of the active background.</summary>
      <value>Color of the background when the cell is active</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.NormalBackgroundColor">
      <summary>Gets or sets the color of the normal background.</summary>
      <value>Color of the background of the cell</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.NormalGridLineColor">
      <summary>Gets or sets the color of the normal grid lines.</summary>
      <value>Color of the grid lines for the cells</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.SelectedActiveBackgroundColor">
      <summary>Gets or sets the color of the selected active background.</summary>
      <value>Color of the background when the cell is active and selected</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.SelectedBackgroundColor">
      <summary>Gets or sets the color of the selected background.</summary>
      <value>Color of the background when the cell is selected</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.SelectedGridLineColor">
      <summary>Gets or sets the color of the selected grid lines.</summary>
      <value>Color of the grid lines when cells are selected</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">SerializationInfo to populate with data</param>
      <param name="context">Destination (see StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.PaintBackground(System.Drawing.Graphics,System.Boolean@,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean,System.Drawing.Color)">
      <summary>Paints the background of the enhanced header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="useXpStyles">Whether to paint visual styles (XP themes)</param>
      <param name="toscreen">Whether to paint the header cell to the screen</param>
      <param name="pressed">Whether to paint the header cell as pressed</param>
      <param name="focus">Whether the header cell has focus</param>
      <param name="r">Boundary rectangle</param>
      <param name="dpx">Integer number of resolution (DPI) along the x-axis</param>
      <param name="dpy">Integer number of resolution (DPI) along the y-axis</param>
      <param name="style">Visual styles setting</param>
      <param name="rightToLeft">Whether to draw as right-to-left</param>
      <param name="backColor">Background color of the header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the row header cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the row header cell</param>
      <param name="r">Location and size of a rectangular region for painting the row header cell</param>
      <param name="appearance">Appearance settings of the row header cell</param>
      <param name="value">Object that contains the name of the renderer control of the row header cell</param>
      <param name="isSelected">Whether the row header cell is selected</param>
      <param name="isLocked">Whether the row header cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the row header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the grid lines for the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">X-coordinate of the cell</param>
      <param name="y">Y-coordinate of the cell</param>
      <param name="width">Width of the cell</param>
      <param name="height">Height of the cell</param>
      <param name="appearance">Appearance settings of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double)">
      <summary>Paints the header cell with the look and feel of Excel 2007.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color of the header cell</param>
      <param name="foreColor">Color of the text</param>
      <param name="font">Font of the text</param>
      <param name="halign">Horizontal alignment of the text</param>
      <param name="valign">Vertical alignment of the text</param>
      <param name="pressed">Whether to paint the header cell as pressed</param>
      <param name="focus">Whether the header cell has focus</param>
      <param name="text">Text to display in the header cell</param>
      <param name="textDown">Text to display in the header cell when pressed</param>
      <param name="nAlign">Alignment of the text and image in the header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header cell</param>
      <param name="wordWrap">Whether to wrap text to multiple lines</param>
      <param name="shadowSize">Size of the shadow</param>
      <param name="darkColor">Dark color</param>
      <param name="lightColor">Light color</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the button is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual styles setting</param>
      <param name="mouseOver">Whether the mouse is over the header cell</param>
      <param name="rightToLeft">Whether to draw as right-to-left</param>
      <param name="appearance">Appearance settings of the header cell</param>
      <param name="textRotationAngle">Text rotation angle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Double,System.Single)">
      <summary>Paints the header cell with the look and feel of Excel 2007.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color of the header cell</param>
      <param name="foreColor">Color of the text</param>
      <param name="font">Font of the text</param>
      <param name="halign">Horizontal alignment of the text</param>
      <param name="valign">Vertical alignment of the text</param>
      <param name="pressed">Whether to paint the header cell as pressed</param>
      <param name="focus">Whether the header cell has focus</param>
      <param name="text">Text to display in the header cell</param>
      <param name="textDown">Text to display in the header cell when pressed</param>
      <param name="nAlign">Alignment of the text and image in the header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header cell</param>
      <param name="wordWrap">Whether to wrap text to multiple lines</param>
      <param name="shadowSize">Size of the shadow</param>
      <param name="darkColor">Dark color</param>
      <param name="lightColor">Light color</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the button is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual styles setting</param>
      <param name="mouseOver">Whether the mouse is over the header cell</param>
      <param name="rightToLeft">Whether to draw as right-to-left</param>
      <param name="appearance">Appearance settings of the header cell</param>
      <param name="textRotationAngle">Text rotation angle</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.EnhancedRowHeaderRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FilterBarCellType">
      <summary>Represents a FilterBarCellType object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.#ctor">
      <summary>Creates a new filter bar cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new filter bar cell from serialization.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.AutoFormat">
      <summary>Gets or sets whether text is displayed with a format.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.ContextMenuType">
      <summary>Gets or sets the type of filter bar context menu.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.DateTimeFormatInfo">
      <summary>Gets or sets a DateTimeFormatInfo object that defines the format for displaying dates and times.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.FormatString">
      <summary>Gets or sets the format string used to format the value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.IgnoreFiringFilterItemValueChangedEvent">
      <summary>Gets or sets whether to fire the FilterItemValueChanged event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.Interval">
      <summary>Gets or sets the time, in milliseconds, before the FilterItemValueChanged event is raised relative to the last occurrence of the FilterItemValueChanged event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.LabelColor">
      <summary>Gets or sets the color of the label.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.NumberFormatInfo">
      <summary>Gets or sets a NumberFormatInfo object that defines the format for displaying a numeric value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.ShowDropDownMenuStrip">
      <summary>Gets or sets whether the cell type displays the drop-down menu button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.ShowEditor">
      <summary>Gets or sets whether the cell type displays the editor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarCellType.ShowLabel">
      <summary>Gets or sets whether the cell type displays the label.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the control associated with the editor for the specified parent control.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
      <returns>The control</returns>
      <remarks>After creating the control the first time, add it to parent.Controls. Use this function to return the same instance when called for that parent.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">The SerializationInfo to populate with data.</param>
      <param name="context">The destination (see StreamingContext) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">Occurs when the caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Editor control to initialize</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for painting the editor control</param>
      <param name="x">
        <i>X</i>-coordinate of the pointer location</param>
      <param name="y">
        <i>Y</i>-coordinate of the pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this control can be reused.</summary>
      <returns>
        <c>True</c> if this control can be reused; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
      <returns>
        <c>True</c> if the value is valid; otherwise, <c>false</c></returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.IsValidFilterItem(FarPoint.Win.Spread.IFilterItem)">
      <summary>Determines whether the filter item is valid to apply to the sheetview.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.FilterBarCellType.FilterItemValueChanged">
      <summary>Occurs when the filter value has been changed by the user.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FilterBarDropDownSelectionChangingEventArgs">
      <summary>Represents the event data for the FilterBar editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarDropDownSelectionChangingEventArgs.#ctor(System.Int32,System.Object)">
      <summary>Creates a new FilterBarEditorSelectionChangedEventArgs object.</summary>
      <param name="columnIndex" />
      <param name="changesObject" />
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarDropDownSelectionChangingEventArgs.ChangesObject">
      <summary>The new value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarDropDownSelectionChangingEventArgs.ColumnIndex">
      <summary>Specifies the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarDropDownSelectionChangingEventArgs.Handled">
      <summary>Indicates whether the new value is handled.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FilterBarEditor">
      <summary>Represents a Spread FilterBarEditor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarEditor.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.CellType.FilterBarEditor" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarEditor.ActiveFilterItem">
      <summary>Gets or sets active filter item.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarEditor.ImeModeBase">
      <summary>Gets or sets the IME mode base.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FilterBarEditor.ImeSentenceMode">
      <summary>Gets or sets the IME sentence mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FilterBarEditor.Reset">
      <summary>Resets the editor.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.FilterBarEditor.CancelEditing">
      <summary>Occurs when cancel the editing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.FilterBarEditor.EndEditing">
      <summary>Occurs when end the editing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer">
      <summary>Represents the painting of the column footer cells with the look and feel of Excel 2013.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer.GetPaintSpecialActiveSelectionRegion(System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance)">
      <summary>Supports getting the region that paints the special active selection like Office 2013.</summary>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer.PaintSpecialActiveSelection(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,FarPoint.Win.Spread.Appearance)">
      <summary>Supports painting the special active selection like Office 2013.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="color">The color using to paint special active selection.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnFooterRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer">
      <summary>Represents the painting of the column header cells with the look and feel of Excel 2013.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer.GetPaintSpecialActiveSelectionRegion(System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance)">
      <summary>Supports getting the region that paints the special active selection like Office 2013.</summary>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer.PaintSpecialActiveSelection(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,FarPoint.Win.Spread.Appearance)">
      <summary>Supports painting the special active selection like Office 2013.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="color">The color using to paint special active selection.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatColumnHeaderRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FlatCornerFooterRenderer">
      <summary>Represents the painting of the corner footer cells with the look and feel of Excel 2013.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerFooterRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.FlatCornerFooterRenderer" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerFooterRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerFooterRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer">
      <summary>Represents the painting of the corner header cells with the look and feel of Excel 2013.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the corner from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.ActiveForeColor">
      <summary>Gets or sets the foreground color of the corner when active or the entire sheet is selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.ActiveMouseOverForeColor">
      <summary>Gets or sets the foreground color of the triangle when the mouse is over the triangle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.GridLineColor">
      <summary>Gets or sets the corner grid line color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.NormalTriangleColor">
      <summary>Gets or sets the color of the triangle in normal mode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.TriangleSize">
      <summary>Gets or sets the triangle size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Internal use only. Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">SerializationInfo to populate with data</param>
      <param name="context">Destination (see StreamingContext) for this serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the corner cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the corner cell</param>
      <param name="r">Location and size of a rectangular region for painting the corner cell</param>
      <param name="appearance">Appearance settings of the corner cell</param>
      <param name="value">Object that contains the name of the renderer control of the corner cell</param>
      <param name="isSelected">Whether the corner cell is selected</param>
      <param name="isLocked">Whether the corner cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the corner cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.PaintCorner(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.String,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the corner cell.</summary>
      <param name="g">Graphics device interface for painting the corner cell</param>
      <param name="r">Location and size of a rectangular region for painting the corner cell</param>
      <param name="backColor">Background color of the corner cell</param>
      <param name="foreColor">Foreground color of the corner cell</param>
      <param name="f">Font</param>
      <param name="horizontalAlignment">Horizontal alignment of corner cell content</param>
      <param name="verticalAlignment">Vertical alignment of the corner cell content</param>
      <param name="s">String to paint</param>
      <param name="textOrientation">Orientation of the text</param>
      <param name="wordWrap">Whether to wrap words to multiple lines</param>
      <param name="hotkeyPrefix">Whether to show hotkey effects</param>
      <param name="stringTrim">String trimming mode</param>
      <param name="visualStyles">Visual styles</param>
      <param name="mouseOver">Whether the mouse is over the corner cell</param>
      <param name="rightToLeft">Whether to display right to left</param>
      <param name="zoomFactor">Numeric value for scaling the display of the corner cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatCornerHeaderRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer">
      <summary>Represents the painting of the filter bar header cells with the look and feel of Excel 2013.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer.PaintBackground(System.Drawing.Graphics,System.Boolean@,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean,System.Drawing.Color)">
      <summary>Paints the background.</summary>
      <param name="g">Graphics object.</param>
      <param name="useXpStyles">Specifies whether to use XP style.</param>
      <param name="toscreen">Specifies whether paint to screen.</param>
      <param name="pressed">Specifies whether it is pressed.</param>
      <param name="focus">Specifies whether it is focused.</param>
      <param name="r">Rectangle boundary.</param>
      <param name="dpx">Integer number of resolution (DPI) along the x-axis</param>
      <param name="dpy">Integer number of resolution (DPI) along the y-axis</param>
      <param name="style">Whether to turn on visual styles</param>
      <param name="rightToLeft">Whether drawing right to left</param>
      <param name="backColor">Cell background color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer.PaintSpecialActiveSelection(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,FarPoint.Win.Spread.Appearance)">
      <summary>Supports painting the special active selection like Office 2013.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="color">The color using to paint special active selection.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatFilterBarHeaderRenderer.ToString">
      <summary>Returns name of the renderer.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer">
      <summary>Represents the painting of the row header cells with the look and feel of Excel 2013.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer.#ctor">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer.GetPaintSpecialActiveSelectionRegion(System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance)">
      <summary>Supports getting the region that paints the special active selection like Office 2013.</summary>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the cell grid line.</summary>
      <param name="g">Graphics object.</param>
      <param name="x">X-coordinate.</param>
      <param name="y">Y-coordinate.</param>
      <param name="width">Width.</param>
      <param name="height">Height.</param>
      <param name="appearance">Appearance.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer.PaintSpecialActiveSelection(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,FarPoint.Win.Spread.Appearance)">
      <summary>Supports painting the special active selection like Office 2013.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Location and size of a rectangular region for painting the cell.</param>
      <param name="color">The color using to paint special active selection.</param>
      <param name="appearance">Appearance settings of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FlatRowHeaderRenderer.ToString">
      <summary>Returns name of the renderer.</summary>
      <returns>A <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FpColorPicker">
      <summary>Represents the FarPoint color picker control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.#ctor">
      <summary>Creates a new FarPoint color picker control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.AlignHorz">
      <summary>Gets or sets the horizontal alignment of the color picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.AlignVert">
      <summary>Gets or sets the vertical alignment of the color picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.AllowFullOpen">
      <summary>Gets or sets whether to allow the color picker dialog to open fully.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.AnyColor">
      <summary>Gets or sets whether any color is allowed (typically for systems that can handle the full set of colors).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.BoxWidth">
      <summary>Gets or sets the width (in pixels) of the box in the color picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.Color">
      <summary>Gets or sets the color in the color picker dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.CustomColors">
      <summary>Gets or sets the array of custom colors to display in the color picker dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.DropDown">
      <summary>Gets or sets whether to drop down the color picker dialog by default.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.FullOpen">
      <summary>Gets or sets whether to display the color picker dialog fully open.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.IsShowing">
      <summary>Gets or sets whether the color picker dialog is showing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.SolidColorOnly">
      <summary>Gets or sets whether solid colors only are displayed (typically for systems that can handle a limited set of colors).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.Style">
      <summary>Gets or sets the style of the color picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.Text">
      <summary>Gets or sets the text associated with this control.</summary>
      <value>The text associated with this control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.UnknownText">
      <summary>Gets or sets the text for unknown colors.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpColorPicker.UnknownTextStyle">
      <summary>Gets or sets the style of text for unknown colors.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Color,System.String,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.Spread.CellType.ColorPickerStyle,FarPoint.Win.Spread.CellType.UnknownTextStyle,System.String,System.Boolean,System.Int32)">
      <summary>Paints the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="backColor">Background color</param>
      <param name="foreColor">Text (foreground) color</param>
      <param name="font">Font</param>
      <param name="c">Color</param>
      <param name="caption">Caption text</param>
      <param name="horizontalAlignment">Horizontal alignment</param>
      <param name="verticalAlignment">Vertical alignment</param>
      <param name="style">Style</param>
      <param name="textStyle">Text Style</param>
      <param name="unknownText">Text for unknown color</param>
      <param name="rightToLeft">Whether right to left orientation</param>
      <param name="boxWidth">Width of the box in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Color,System.String,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.Spread.CellType.ColorPickerStyle,FarPoint.Win.Spread.CellType.UnknownTextStyle,System.String,System.Boolean,System.Int32,System.Single)">
      <summary>Paints the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="backColor">Background color</param>
      <param name="foreColor">Text (foreground) color</param>
      <param name="font">Font</param>
      <param name="c">Color</param>
      <param name="caption">Caption text</param>
      <param name="horizontalAlignment">Horizontal alignment</param>
      <param name="verticalAlignment">Vertical alignment</param>
      <param name="style">Style</param>
      <param name="textStyle">Text Style</param>
      <param name="unknownText">Text for unknown color</param>
      <param name="rightToLeft">Whether right to left orientation</param>
      <param name="boxWidth">Width of the box in pixels</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is an input key that the component can handle without preprocessing.</summary>
      <param name="keyData">Key to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnAfterFocus(System.EventArgs)">
      <summary>Raises the AfterFocus event</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnGotFocus(System.EventArgs)">
      <summary>Raises the GotFocus event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Processes the key down event.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Processes the key press event.</summary>
      <param name="e">KeyPressEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Processes the mouse down event.</summary>
      <param name="e">MouseEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Handles the paint event.</summary>
      <param name="e">PaintEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.OnValueChanged(System.EventArgs)">
      <summary>Raises the ValueChanged event.</summary>
      <param name="e">EventArgs that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.ProcessDialogChar(System.Char)">
      <summary>Determines whether to process the dialog character.</summary>
      <param name="charCode">Character code</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Determines whether to process the dialog key.</summary>
      <param name="keyData">Key</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpColorPicker.ShowColorDialog">
      <summary>Displays the color dialog.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.FpColorPicker.AfterFocus">
      <summary>Occurs after the control gets focus.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.FpColorPicker.ValueChanged">
      <summary>Occurs when the value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FpList">
      <summary>Represents a list box control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpList.#ctor">
      <summary>Creates a new list box control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpList.ImageList">
      <summary>Gets or sets the image list of a combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.FpList.ItemData">
      <summary>Gets or sets the item data list of a combo box.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpList.DrawListBoxItem(System.String,System.Windows.Forms.ImageList,System.Windows.Forms.DrawItemEventArgs,System.Boolean)">
      <summary>Draws one of the list box items.</summary>
      <param name="strText">Text of the item in the list box</param>
      <param name="images">List of images for the list box</param>
      <param name="e">DrawItem event that contains the item</param>
      <param name="rightToLeft">Whether to draw the object with a right to left orientation</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpList.DrawListBoxItem(System.String,System.Windows.Forms.ImageList,System.Windows.Forms.DrawItemEventArgs,System.Boolean,System.Windows.Forms.SelectionMode,System.Drawing.Color,System.Drawing.Color)">
      <summary>Draws one of the list box items.</summary>
      <param name="strText">Text of the item in the list box</param>
      <param name="images">List of images for the list box</param>
      <param name="e">DrawItem event that contains the item</param>
      <param name="rightToLeft">Whether to draw the object with a right to left orientation</param>
      <param name="selMode">SelectionMode of the ListBox</param>
      <param name="itemBackColor">The backcolor for the item</param>
      <param name="itemForeColor">The forecolor for the item</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpList.OnAfterFocus(System.EventArgs)">
      <summary>Raises the AfterFocus event</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.FpList.OnGotFocus(System.EventArgs)">
      <summary>Raises the GotFocus event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.FpList.AfterFocus">
      <summary>Occurs after the control gets focus.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.GeneralCellType">
      <summary>Represents the default cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.#ctor">
      <summary>Creates a new general (default) cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new general (default) cell from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.DateTimeFormat">
      <summary>Gets or sets a DateTimeFormatInfo object that defines the format for displaying dates and times.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.FormatString">
      <summary>Gets or sets the format string used to format the value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.IsDateFormat">
      <summary>Gets or sets whether the format string should be interpreted as a date-time format (true) or a number format (false).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.IsFormulaValue">
      <summary>Determines whether the editor contains a formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.Multiline">
      <summary>Gets or sets whether multiple lines of text are allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.NegativeRed">
      <summary>Gets or sets whether negative values are displayed in red.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralCellType.NumberFormat">
      <summary>Gets or sets a NumberFormatInfo object that defines the format for displaying a numeric value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Clone">
      <summary>Creates and returns a general (default) cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.GetParseFormat(System.Int32,System.Int32,System.String@,System.IFormatProvider@)">
      <summary>Gets the parse format string and IFormatProvider for formatting when the format string is not set.</summary>
      <param name="row">Ignored</param>
      <param name="column">Ignored</param>
      <param name="formatString">Format string</param>
      <param name="info">IFormatProvider to handle formatting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.SetCurrentCulture(System.Globalization.CultureInfo)">
      <summary>Sets the current culture information.</summary>
      <param name="culture">Culture information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
      <exception cref="T:System.ArgumentException"> Specified value to set is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.SetFormatString(System.String,System.Boolean)">
      <summary>Sets the format string for formatting values.</summary>
      <param name="value">Format string for formatting values</param>
      <param name="isDateFormat">Whether to consider the number as a date and time value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.SetParseFormat(System.Int32,System.Int32,System.String,System.IFormatProvider)">
      <summary>Sets the parse format string and IFormatProvider for formatting when the format string is not set.</summary>
      <param name="row">Ignored</param>
      <param name="column">Ignored</param>
      <param name="formatString">Format string</param>
      <param name="info">IFormatProvider for formatting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.GeneralEditor">
      <summary>Represents the base control for the cell types derived from GeneralCellType.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.#ctor">
      <summary>Constructs a new general editor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AcceptsArrowKeys">
      <summary>Gets or sets whether to accept arrow keys.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AcceptsReturn">
      <summary>Gets or sets whether a return is accepted.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AutoAdvance">
      <summary>Gets or sets whether the focus moves to another control when the cursor is moved with the arrow keys.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AutoCompleteCustomSource">
      <summary>Gets or sets a custom System.Collections.Specialized.StringCollection when the AutoCompleteSource property is set to CustomSource.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AutoCompleteMode">
      <summary>Gets or sets how automatic completion works.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.AutoCompleteSource">
      <summary>Gets or sets the source of complete strings used for automatic completion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.BorderStyle">
      <summary>Gets or sets the style of the border.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.CharacterCasing">
      <summary>Gets or sets the character case.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.CharacterSet">
      <summary>Gets or sets the character set to use.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.DecimalIncrement">
      <summary>Sets the amount by which the value increments when the cursor is in the decimal portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.IntegerIncrement">
      <summary>Sets the amount by which the value increments when the cursor is in the integer portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.MaximumLength">
      <summary>Gets or sets the maximum number of characters allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.Multiline">
      <summary>Gets or sets whether the text box has multiple lines.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.PasswordChar">
      <summary>Gets or sets which character to substitute when the user types in a password.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.ReadOnly">
      <summary>Gets or sets whether the cell is read-only (and cannot be edited).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.ScrollBars">
      <summary>Gets or sets the use of scroll bars.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditor">
      <summary>Gets or sets the subeditor in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.WordWrap">
      <summary>Gets or sets whether text that is too long to fit in the cell wraps to additional lines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.Dispose(System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="disposing">Whether disposing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.DropDownDefaultAction">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.Finalize">
      <summary>The destructor method</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.GetDrawingStringFormat(System.Drawing.Rectangle@)">
      <summary>Gets the format for drawing the string.</summary>
      <param name="drawRect">Rectangular boundary</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.HandleValidCharacter(System.Int32@)">
      <summary>Internal use only. Determines whether the character is handled by the control.</summary>
      <param name="c">Numerical value for an ASCII character</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.HandleValidKey(System.Int32)">
      <summary>Internal use only. Determines whether the key is handled by the control.</summary>
      <param name="c">Numerical value for an ASCII character</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.IsCaretInIntegerPortion">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnAfterFocus(System.EventArgs)">
      <summary>Raises the AfterFocus event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnEditKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>Internal use only. Occurs when the edit key is pressed down.</summary>
      <param name="sender">Source object of the event</param>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnEditMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only. Occurs when the mouse is down on an edit.</summary>
      <param name="sender">Source object of the event</param>
      <param name="e">MouseEventArgs event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnEditMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only. Occurs when the mouse is up on an edit.</summary>
      <param name="sender">Source object of the event</param>
      <param name="e">MouseEventArgs event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnEditTextChanged(System.Object,System.EventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender">Source object</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnEditTextPasted(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>Internal use only. Occurs when the edit text is pasted.</summary>
      <param name="sender">Source object of the event</param>
      <param name="e">CancelEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnEditTextPasting(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>Internal use only. Occurs when the edit text is pasting.</summary>
      <param name="sender">Source object of the event</param>
      <param name="e">CancelEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnGotFocus(System.EventArgs)">
      <summary>Internal use only.</summary>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnLocationChanged(System.EventArgs)">
      <summary>Raises the System.Windows.Forms.Control.LocationChanged event.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="e">MouseEventArgs event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnSubEditorClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorClosed" /> event.</summary>
      <param name="e">EventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.OnSubEditorOpening(FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening" /> event.</summary>
      <param name="e">EventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.PopUpDefaultAction">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.Reset">
      <summary>Resets the contents of the control to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.Select(System.Boolean,System.Boolean)">
      <summary>Selects a control using the specified direction in the tab order from which to select the control.</summary>
      <param name="directed">
        <c>true</c> to specify the direction of the control to select; otherwise, <c>false</c></param>
      <param name="forward">
        <c>true</c> to move forward in the tab order; <c>false</c> to move backward in the tab order</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.ShowSubEditor(System.Boolean)">
      <summary>Shows or hides the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.SpinDownDefaultAction">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.SpinUpDefaultAction">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
      <param name="m">Message</param>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.GeneralEditor.AfterFocus">
      <summary>Occurs after the control gets focus.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorClosed">
      <summary>Occurs when the subeditor for a cell closes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening">
      <summary>Occurs when the subeditor for a cell opens.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs">
      <summary>Represents the event data for the canceling of the <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening" /> event for the component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs.#ctor">
      <summary>Creates a new object with the SubEditorCancel event arguments.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default processing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.GradientHeaderRenderer">
      <summary>Represents the painter of a gradient header.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the gradient header from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.#ctor">
      <summary>Creates a new renderer for a gradient header.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Drawing.Color,System.Drawing.Color)">
      <summary>Creates a new renderer for a gradient header with color and mode specified.</summary>
      <param name="topColor">Color at the top of the gradient</param>
      <param name="bottomColor">Color at the bottom of the gradient</param>
      <param name="activeTopColor">Color at the top when the header cell is active</param>
      <param name="activeBottomColor">Color at the bottom when the header cell is active</param>
      <param name="mode">Mode of the linear gradient</param>
      <param name="selTopColor">Color at the top of gradient when the column or row of header cell contains a selection</param>
      <param name="selBottomColor">Color at the bottom of the gradient when the column or row of header cell contains a selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>Creates a new renderer for a gradient header with color and mode specified.</summary>
      <param name="topColor">Color at the top of the gradient</param>
      <param name="bottomColor">Color at the bottom of the gradient</param>
      <param name="activeTopColor">Color at the top when the header cell is active</param>
      <param name="activeBottomColor">Color at the bottom when the header cell is active</param>
      <param name="mode">Mode of the linear gradient</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.ActiveBottomColor">
      <summary>Gets or sets the color of the bottom of the gradient when the header cell is active.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.ActiveTopColor">
      <summary>Gets or sets the color of the top of the gradient when the header cell is active.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.BottomColor">
      <summary>Gets or sets the color of the bottom of the gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.Mode">
      <summary>Gets or sets the mode of the linear gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.SelectionBottomColor">
      <summary>Gets or sets the color of the bottom of the gradient when the column or row of header cell contains a selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.SelectionTopColor">
      <summary>Gets or sets the color of the top of the gradient when the column or row of header cell contains a selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.TopColor">
      <summary>Gets or sets the color of the top of the gradient.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.DrawHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the gradient header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="topColor">Color at the top of the gradient</param>
      <param name="bottomColor">Color at the bottom of the gradient</param>
      <param name="activeTopColor">Color at the top of the gradient when active</param>
      <param name="activeBottomColor">Color at the bottom of the gradient when active</param>
      <param name="mode">Mode of the linear gradient</param>
      <param name="foreColor">Color of the text</param>
      <param name="font">Font of the text</param>
      <param name="halign">Horizontal alignment of the text</param>
      <param name="valign">Vertical alignment of the text</param>
      <param name="pressed">State of the header being pressed</param>
      <param name="text">Text to display in the header</param>
      <param name="textDown">Text to display in the header when pressed</param>
      <param name="nAlign">Alignment of the text</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether to wrap text to multiple lines</param>
      <param name="shadowSize">Size in pixels of the shadow</param>
      <param name="darkColor">Dark color</param>
      <param name="lightColor">Light color</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the button is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="appearance">Appearance settings of the header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.DrawHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Paints the gradient header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="topColor">Color at the top of the gradient</param>
      <param name="bottomColor">Color at the bottom of the gradient</param>
      <param name="activeTopColor">Color at the top of the gradient when active</param>
      <param name="activeBottomColor">Color at the bottom of the gradient when active</param>
      <param name="mode">Mode of the linear gradient</param>
      <param name="foreColor">Color of the text</param>
      <param name="font">Font of the text</param>
      <param name="halign">Horizontal alignment of the text</param>
      <param name="valign">Vertical alignment of the text</param>
      <param name="pressed">State of the header being pressed</param>
      <param name="text">Text to display in the header</param>
      <param name="textDown">Text to display in the header when pressed</param>
      <param name="nAlign">Alignment of the text</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether to wrap text to multiple lines</param>
      <param name="shadowSize">Size in pixels of the shadow</param>
      <param name="darkColor">Dark color</param>
      <param name="lightColor">Light color</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the button is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="appearance">Appearance settings of the header cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.GetAppearance">
      <summary>Returns the appearance attributes for the current header cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the background of the gradient header cell.</summary>
      <param name="g">Graphics device interface for painting the indicator</param>
      <param name="r">Location and size of the rectangular region in which to paint</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the column header cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Location and size of a rectangular region for painting the column header cell</param>
      <param name="appearance">Appearance settings of the column header cell</param>
      <param name="value">Object that contains the name of the renderer control of the column header cell</param>
      <param name="isSelected">Whether the column header cell is selected</param>
      <param name="isLocked">Whether the column header cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the column header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.GradientHeaderRenderer.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.HyperLinkCellType">
      <summary>Represents the hyperlink cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.#ctor">
      <summary>Creates a new hyperlink cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.#ctor(FarPoint.Win.Spread.CellType.HyperLinkCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified hyperlink cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new hyperlink cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.BackgroundImage">
      <summary>Gets or sets the background image for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.Link">
      <summary>Gets or sets the hyperlink.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkArea">
      <summary>Gets or sets the area of the text that is the hyperlink.</summary>
      <exception cref="T:System.ArgumentException"> Specified start is invalid; must be positive </exception>
      <exception cref="T:System.ArgumentException"> Specified length is invalid; must be positive </exception>
      <exception cref="T:System.ArgumentException"> Specified length is invalid; must be less than or equal to the length of the entire text </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkAreas">
      <summary>Gets or sets the area of the text that is the hyperlink.</summary>
      <exception cref="T:System.ArgumentException"> Specified start is invalid; must be positive </exception>
      <exception cref="T:System.ArgumentException"> Specified length is invalid; must be positive </exception>
      <exception cref="T:System.ArgumentException"> Specified length is invalid; must be less than or equal to the length of the entire text </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkColor">
      <summary>Gets or sets the color of links.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.LinkToolTips">
      <summary>Gets or sets tooltips for the hyperlinks.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.Links">
      <summary>Gets or sets the hyperlinks.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.StringTrim">
      <summary>Gets or sets how to trim characters that do not fit in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.Text">
      <summary>Gets or sets the text string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.UseModelValueAsText">
      <summary>Gets a value indicating whether use text for hyperlink from data model.</summary>
      <value>
        <c>true</c> if use text for hyperlink from data model otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.HyperLinkCellType.VisitedLinkColor">
      <summary>Gets or sets the color of visited links.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.CanBeOverflown">
      <summary>Determines whether a cell can overflow its data into an adjacent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Clone">
      <summary>Creates and returns a hyperlink cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.HyperLinkCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ImageCellType">
      <summary>Represents an image cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor">
      <summary>Creates a new image cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(FarPoint.Win.RenderStyle)">
      <summary>Creates a new image cell with the specified render style.</summary>
      <param name="style">RenderStyle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(FarPoint.Win.RenderStyle,System.Drawing.Color)">
      <summary>Creates a new image cell with the specified render style and transparency color.</summary>
      <param name="style">Render style</param>
      <param name="transparencyColor">Color to set as transparent</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(FarPoint.Win.RenderStyle,System.Drawing.Color,System.Int32)">
      <summary>Creates a new image cell with the specified render style, transparency color, and tolerance.</summary>
      <param name="style">Render style</param>
      <param name="transparencyColor">Color to set as transparent</param>
      <param name="transparencyTolerance">Amount of transparency tolerance from the transparent color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new image cell from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ImageCellType.Style">
      <summary>Gets or sets the render style of the image.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ImageCellType.TransparencyColor">
      <summary>Gets or sets the transparency color in the image.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ImageCellType.TransparencyTolerance">
      <summary>Gets or sets the transparency tolerance in the image.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.CanBeOverflown">
      <summary>Determines whether data from another cell can overflow into this cell (whether this cell can be overflowed into).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.CanOverflow">
      <summary>Determines whether a cell can overflow its data into an adjacent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type, and since this cell type does not support formatting, it does nothing.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetBase64String(System.Drawing.Image)">
      <summary>Gets the base-64 string encoding for the byte array serialization of the image.</summary>
      <param name="image">Image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetBytes(System.Drawing.Image)">
      <summary>Gets the byte array serialization for the image.</summary>
      <param name="image">Image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the control used by the image cell (returns null since this cell type does not support editing).</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control (does nothing since this cell type does not support editing).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetImage(System.Object)">
      <summary>Gets an Image object from its base-64 string encoding, byte array, or stream serialization.</summary>
      <param name="o">Object that contains base-64 string encoding, byte array, and so on. from which to get the image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the image cell.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the image cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the image cell</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.IsPropertySupported(System.String)">
      <summary>Gets whether the cell type supports the named property.</summary>
      <param name="propertyName">Name of the property</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid (Image).</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) the cell to PDF when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">PDF graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the image cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region of the image cell</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the image cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type (does nothing since this cell type does not support parsing).</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ImageCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control (does nothing since this cell type does not support editing).</summary>
      <param name="value">Value of editor control (as object)</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ListBoxCellType">
      <summary>Represents a list box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.#ctor">
      <summary>Creates a new list box cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.#ctor(FarPoint.Win.Spread.CellType.ListBoxCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified list box cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new list box cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ListBoxCellType.EditorValue">
      <summary>Gets or sets what value is written to the underlying data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ListBoxCellType.ImageList">
      <summary>Gets or sets the list of images for the list box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ListBoxCellType.ItemData">
      <summary>Gets or sets the corresponding data for the items in the list box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ListBoxCellType.ItemHeight">
      <summary>Gets or sets the height of each item in the list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ListBoxCellType.Items">
      <summary>Gets or sets the list of items for the list box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ListBoxCellType.SelectionMode">
      <summary>Gets or sets the selection mode for the list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.Clone">
      <summary>Creates and returns a list box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Collections.ArrayList,System.Array,System.Boolean,System.Windows.Forms.ImageList,System.Int32,System.Boolean,System.Windows.Forms.SelectionMode)">
      <summary>Paints the list box cell.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Rectangle around the column header cell</param>
      <param name="backColor">Background color for the column header cell</param>
      <param name="foreColor">Text color for the column header cell</param>
      <param name="font">Font for the column header cell</param>
      <param name="halign">Horizontal alignment of text in the column header cell</param>
      <param name="valign">Vertical alignment of text in the column header cell</param>
      <param name="radioList">List of items</param>
      <param name="selectedItems">Selected items from the list</param>
      <param name="bLocked">Whether the list is locked</param>
      <param name="imgList">List of pictures that correspond with the items</param>
      <param name="itemHeight">Height in pixels of each item</param>
      <param name="rightToLeft">Whether to draw the object with a right-to-left orientation</param>
      <param name="selMode">The selection mode indicates how the specified <see cref="T:FarPoint.Win.Spread.CellType.ListBoxCellType" /> control is selected.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Collections.ArrayList,System.Int32,System.Boolean,System.Windows.Forms.ImageList,System.Int32,System.Boolean)">
      <summary>Paints the list box cell.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Rectangle around the column header cell</param>
      <param name="backColor">Background color for the column header cell</param>
      <param name="foreColor">Text color for the column header cell</param>
      <param name="font">Font for the column header cell</param>
      <param name="halign">Horizontal alignment of text in the column header cell</param>
      <param name="valign">Vertical alignment of text in the column header cell</param>
      <param name="radioList">List of items</param>
      <param name="selectedItem">Selected item from the list</param>
      <param name="bLocked">Whether the list is locked</param>
      <param name="imgList">List of pictures that correspond with the items</param>
      <param name="itemHeight">Height in pixels of each item</param>
      <param name="rightToLeft">Whether to draw the object with a right-to-left orientation</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Collections.ArrayList,System.Int32,System.Boolean,System.Windows.Forms.ImageList,System.Int32,System.Boolean,System.Windows.Forms.SelectionMode)">
      <summary>Paints the list box cell.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Rectangle around the column header cell</param>
      <param name="backColor">Background color for the column header cell</param>
      <param name="foreColor">Text color for the column header cell</param>
      <param name="font">Font for the column header cell</param>
      <param name="halign">Horizontal alignment of text in the column header cell</param>
      <param name="valign">Vertical alignment of text in the column header cell</param>
      <param name="radioList">List of items</param>
      <param name="selectedItem">Selected item from the list</param>
      <param name="bLocked">Whether the list is locked</param>
      <param name="imgList">List of pictures that correspond with the items</param>
      <param name="itemHeight">Height in pixels of each item</param>
      <param name="rightToLeft">Whether to draw the object with a right-to-left orientation</param>
      <param name="selMode">SelectionMode of ListBox</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the list box cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ListBoxCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.MaskCellType">
      <summary>Represents a mask cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.#ctor">
      <summary>Creates a new mask cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.#ctor(FarPoint.Win.Spread.CellType.MaskCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified mask cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new mask cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MaskCellType.CustomMaskCharacters">
      <summary>Gets or sets the custom characters for the mask.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MaskCellType.Mask">
      <summary>Gets or sets the mask string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MaskCellType.MaskChar">
      <summary>Gets or sets the placeholder character.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Clone">
      <summary>Creates and returns a mask cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.OnCustomMaskCharacter(System.Object,FarPoint.Win.SuperEdit.CustomMaskEventArgs)">
      <summary>Handles the CustomMask event.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">CustomMaskEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MaskCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType">
      <summary>Represents a multiple-column combo box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.#ctor">
      <summary>Creates a new multiple-column combo box cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.#ctor(FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified multiple-column combo box cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new multiple-column combo box cell from serialization.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.theme">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.AcceptsArrowKeys">
      <summary>Gets or sets how arrow keys are processed by the edit control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.AllowArrowKeysMoveActiveCell">
      <summary>Gets or sets whether to allow arrow keys to move the active cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.AllowEditorVerticalAlign">
      <summary>Gets or sets whether to allow editor vertical align.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.AutoSearch">
      <summary>Gets or sets how the list is searched based on input of a character key.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.BackgroundImage">
      <summary>Gets or sets the background image of the multiple-column combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ButtonAlign">
      <summary>Gets or sets where the buttons are displayed in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ColumnEdit">
      <summary>Gets or sets which list column (by index) serves as the edit portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ColumnEditName">
      <summary>Gets or sets which list column (by name) serves as the edit portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.DataColumn">
      <summary>Gets or sets which list column (by index) serves as the data portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.DataColumnName">
      <summary>Gets or sets which list column (by name) serves as the data portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.DataMemberList">
      <summary>Gets or sets the name of the data member that populates the list in the list portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.DataSourceList">
      <summary>Gets or sets the data source for the list portion of the combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Editable">
      <summary>Gets or sets whether you can type into the edit portion of the multi-column combo box.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ListAlignment">
      <summary>Gets or sets to which side of the editor the list aligns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ListBorderStyle">
      <summary>Gets or sets the type of border style for the drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ListOffset">
      <summary>Gets or sets how much the list offsets from the editor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ListResizeColumns">
      <summary>Gets or sets how the columns in the drop-down list are sized when displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ListWidth">
      <summary>Gets or sets the width of the list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.MaxDrop">
      <summary>Gets or sets the maximum number of items to display at one time in the list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ShowColumnHeaders">
      <summary>Gets or sets whether column headers are displayed in the drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ShowGridLines">
      <summary>Gets or sets whether grid lines are displayed in the drop-down list.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.StringTrim">
      <summary>Gets or sets how to trim characters that do not fit in the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.CanBeOverflown">
      <summary>Determines whether data from another cell can overflow into this cell (whether this cell can be overflowed into).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.CanOverflow">
      <summary>Determines whether the cell can overflow into adjacent cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Clone">
      <summary>Creates and returns an editable base cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Dispose(System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="disposing">Whether disposing.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Dispose">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Finalize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <exception cref="T:System.ArgumentException"> Specified object to format is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetErrorIconBound(System.Drawing.Graphics,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle,System.Single)">
      <summary>Gets a rectangle to draw the error icon in.</summary>
      <param name="g">A graphics object</param>
      <param name="appearance">Appearance settings</param>
      <param name="cellRectangle">Rectangle to paint cell in</param>
      <param name="zoomFactor">Zoom factor setting</param>
      <returns>A rectangle</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetHorizontalAlignment(System.Object)">
      <summary>Gets the horizontal alignment based on the value.</summary>
      <param name="value">Value of the horizontal alignment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum required) size of the cell for the editor control.</summary>
      <param name="editor">Name of editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
      <summary>Gets the rectangle in which text is drawn.</summary>
      <param name="g">Graphics device interface for painting the text</param>
      <param name="r">Cell rectangle</param>
      <param name="f">Font</param>
      <param name="appearance">Appearance settings of the rectangle</param>
      <param name="rText">Text rectangle returned</param>
      <param name="paintString">String to be painted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.GetVerticalAlignment(System.Object)">
      <summary>Gets the vertical alignment based on the value.</summary>
      <param name="value">Value of the vertical alignment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsCaretInTheBeginning">
      <summary>Gets whether the caret is in the beginning.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsCaretInTheEnd">
      <summary>Gets whether the caret is at the end.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsCaretInTheFirstLine">
      <summary>Gets whether the caret is in the first line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsCaretInTheLastLine">
      <summary>Gets whether the caret is in the last line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
      <exception cref="T:System.ArgumentException"> Specified value to set is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnComboBoxCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.MultiColumnEditor">
      <summary>Represents the editor control for the multiple-column combo box cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.CellType.MultiColumnEditor" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.HandleValidKey(System.Int32)">
      <param name="c" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is an input key or a special key that requires preprocessing.</summary>
      <param name="keyData">Key to check</param>
      <returns>Boolean: true if the character can be sent directly and not preprocessed; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.OnEditKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the EditKeyPress event.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.OnEditMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only. Occurs when the mouse is down on an edit.</summary>
      <param name="sender">Source object of the event</param>
      <param name="e">MouseEventArgs event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.ProcessDialogChar(System.Char)">
      <summary>Internal use only.</summary>
      <param name="charCode">Character code</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Internal use only.</summary>
      <param name="keyData">Key data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.ShowSubEditor(System.Boolean)">
      <summary>Shows or hides the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiColumnEditor.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.MultiOptionCellType">
      <summary>Represents a multiple option button cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.#ctor">
      <summary>Creates a new multiple option button cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.#ctor(FarPoint.Win.Spread.CellType.MultiOptionCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified multiple-option cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new multiple option button cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.BackgroundImage">
      <summary>Gets or sets the background image for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.EditorValue">
      <summary>Gets or sets what value is written to the underlying data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.ItemData">
      <summary>Gets or sets the corresponding data for the items in the list of options.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.Items">
      <summary>Gets or sets the list for the option buttons.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.Orientation">
      <summary>Gets or sets the orientation of the option buttons.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.Picture">
      <summary>Gets or sets the image for the option buttons.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.TextAlign">
      <summary>Gets or sets how text aligns in the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.MultiOptionCellType.UseMnemonic">
      <summary>Gets or sets whether hot keys are used in the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Clone">
      <summary>Creates and returns a multiple option button cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.MultiOptionCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.NumberCellType">
      <summary>Represents a numeric cell with formatting that you can specify.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.#ctor">
      <summary>Creates a new numeric cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.#ctor(FarPoint.Win.Spread.CellType.NumberCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified number cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new numeric cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.DecimalPlaces">
      <summary>Gets or sets the number of decimal places.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.DecimalSeparator">
      <summary>Gets or sets the decimal character.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FixedPoint">
      <summary>Gets or sets whether to display zeros as placeholders in the decimal portion of the number for a fixed-point numeric display.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FractionConvertWholeNumbers">
      <summary>Gets or sets whether to convert whole numbers to fractions when values are displayed as fractions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FractionCustomFormat">
      <summary>Gets or sets how values are displayed as fractions with custom formatting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FractionDenominatorDigits">
      <summary>Gets or sets the number of digits when values are displayed as fractions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FractionDenominatorPrecision">
      <summary>Gets or sets the precision when values are displayed as fractions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FractionMode">
      <summary>Gets or sets whether values are represented as fractions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.FractionRenderOnly">
      <summary>Gets or sets whether to allow fractions in edit mode when values are displayed as fractions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.LeadingZero">
      <summary>Gets or sets whether leading zeros are displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.MaximumValue">
      <summary>Gets or sets the maximum value allowed for user input.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is beyond accepted limits </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.MinimumValue">
      <summary>Gets or sets the minimum value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is beyond accepted limits </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.NegativeFormat">
      <summary>Gets or sets how the value is formatted for negative values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.NegativeRed">
      <summary>Gets or sets whether negative numeric values are displayed in red.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.OverflowCharacter">
      <summary>Gets or sets the character used to replace the value if it does not fit the width of the display.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.Separator">
      <summary>Gets or sets the string used to separate thousands in a numeric value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.ShowSeparator">
      <summary>Gets or sets whether to display the thousands separator string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinButton">
      <summary>Gets or sets whether a spin button is displayed when editing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinDecimalIncrement">
      <summary>Gets or sets the amount by which the value increments when using the spin buttons and the cursor is in the decimal portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinIntegerIncrement">
      <summary>Gets or sets the amount by which the value increments when using the spin buttons and the cursor is in the integer portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.NumberCellType.SpinWrap">
      <summary>Gets or sets whether the value wraps when the minimum or maximum is reached.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.ApplyNegativeFormat">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Clone">
      <summary>Creates and returns a numeric cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetDecimalPlacesValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetDecimalSeparatorString">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetNegativeFormatValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetNewFormat">
      <summary>Gets the format string for formatting the numeric value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the editor control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.GetSeparatorCharacter">
      <summary>Gets the separator character for formatting the numeric value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value can be converted to a double-precision, floating point value and is between the minimum and maximum allowed values.</summary>
      <param name="value">Value to validate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Overrides the PaintCell to provide fraction support.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.SetCalculatorText(System.String,System.String)">
      <summary>Sets the text for the pop-up calculator.</summary>
      <param name="okText">Text for the OK button</param>
      <param name="cancelText">Text for the Cancel button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.NumberCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
      <exception cref="T:System.ArgumentException"> Specified value to set is not valid </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.PercentCellType">
      <summary>Represents a numeric cell formatted as a percent value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.#ctor">
      <summary>Creates a new percent cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.#ctor(FarPoint.Win.Spread.CellType.PercentCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified percent cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new percent cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.DecimalPlaces">
      <summary>Gets or sets the number of decimal places.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.DecimalSeparator">
      <summary>Gets or sets the decimal character.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.FixedPoint">
      <summary>Gets or sets whether to display zeros as placeholders in the decimal portion of the number for a fixed-point numeric display.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.LeadingZero">
      <summary>Gets or sets whether leading zeros are displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.MaximumValue">
      <summary>Gets or sets the maximum value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value exceeds the expected limit. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.MinimumValue">
      <summary>Gets or sets the minimum value allowed for user entry.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified value is beyond accepted limits. </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.NegativeFormat">
      <summary>Gets or sets the format for displaying a negative value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.NegativeRed">
      <summary>Gets or sets whether negative numeric values are displayed in red.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.PercentSign">
      <summary>Gets or sets the character to display as the percent sign.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.PositiveFormat">
      <summary>Gets or sets the format for displaying a positive value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.Separator">
      <summary>Gets or sets the string used to separate thousands in a numeric value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.ShowSeparator">
      <summary>Gets or sets whether to display the thousands separator string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinButton">
      <summary>Gets or sets whether a spin button is displayed when editing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinDecimalIncrement">
      <summary>Gets or sets the amount by which the value increments when using the spin buttons and the cursor is in the decimal portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinIntegerIncrement">
      <summary>Gets or sets the amount by which the value increments when using the spin buttons and the cursor is in the integer portion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.PercentCellType.SpinWrap">
      <summary>Gets or sets whether the value wraps when the minimum or maximum is reached.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.ApplyNegativeFormat">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.ApplyPositiveFormat">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Clone">
      <summary>Creates and returns a percent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetDecimalPlacesValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetDecimalSeparatorString">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetNegativeFormatValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetNewFormat">
      <summary>Gets the new format string for formatting percent values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetPercentSignString">
      <summary>Gets the percent symbol string for formatting percent values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetPositiveFormatValue">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Retrieves the size of a rectangular area into which a control fits.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.GetSeparatorCharacter">
      <summary>Gets the separator character string for formatting percent values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value can be converted to a double-precision, floating point value and is between the minimum and maximum allowed values.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell, when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.SetCalculatorText(System.String,System.String)">
      <summary>Sets the text for the pop-up calculator.</summary>
      <param name="okText">Text for the OK button</param>
      <param name="cancelText">Text for the Cancel button</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.PercentCellType.SetNewFormat">
      <summary>Sets the new format (returned by GetNewFormat) into the internal cell formatter.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ProgressCellType">
      <summary>Represents a progress indicator cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.#ctor">
      <summary>Creates a new progress indicator cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.#ctor(FarPoint.Win.Spread.CellType.ProgressCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified progress indicator cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new progress indicator cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.BackgroundImage">
      <summary>Gets or sets the background image for the progress indicator cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.FillColor">
      <summary>Gets or sets the color for the filled part of the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.FillColor2">
      <summary>Gets or sets the second fill color to display for the progress indicator when indicator style is set to display a gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.FillTextColor">
      <summary>Gets or sets the color for the text in the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.GradientMode">
      <summary>Gets or sets the gradient style to display for the progress indicator when indicator style is set to display a gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Maximum">
      <summary>Gets or sets the maximum value for user entry in the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Minimum">
      <summary>Gets or sets the minimum value for user entry in the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Orientation">
      <summary>Gets or sets the orientation of the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Picture">
      <summary>Gets or sets the image to display for the progress indicator when indicator style is set to display a picture.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.ShowText">
      <summary>Gets or sets whether the percent filled string is displayed in the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Style">
      <summary>Gets or sets the display type of the progress indicator.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.Text">
      <summary>Gets or sets the text string to use in the progress indicator when the text style is set to display custom text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ProgressCellType.TextStyle">
      <summary>Gets or sets how the text portion of the progress indicator is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Clone">
      <summary>Creates and returns a progress indicator cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value can be converted to an integer value and is between the minimum and maximum allowed values.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.ToHorizontalAlignment(FarPoint.Win.Spread.CellHorizontalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellHorizontalAlignment value to the corresponding FarPoint.Win.HorizontalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellHorizontalAlignment value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ProgressCellType.ToVerticalAlignment(FarPoint.Win.Spread.CellVerticalAlignment)">
      <summary>Converts a FarPoint.Win.Spread.CellVerticalAlignment value to the corresponding FarPoint.Win.VerticalAlignment value.</summary>
      <param name="alignment">FarPoint.Win.Spread.CellVerticalAlignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RegularExpressionCellType">
      <summary>Represents a regular expression cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.#ctor">
      <summary>Creates a new regular expression cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new regular expression cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RegularExpressionCellType.RegularExpression">
      <summary>Gets or sets the regular expression string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Clone">
      <summary>Creates and returns a regular expression cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RegularExpressionCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RichTextBoxWrapper">
      <summary>Represents a wrapper object for the rich text box for additional rich text support.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.#ctor">
      <summary>Creates a wrapper object for the rich text box.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.Render(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Performs painting of contents to graphics with the specified size.</summary>
      <param name="g">Graphics device interface for painting the contents</param>
      <param name="r">Rectangle from which to render</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.SetSelectionBold(System.Boolean)">
      <summary>Sets the bold style only for the selected part of the rich text box without modifying the other properties like font or size.</summary>
      <param name="bold">true to make selection bold; false to make it regular</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.SetSelectionFont(System.String)">
      <summary>Sets the font only for the selected part of the rich text box without modifying the other properties like size or style.</summary>
      <param name="face">Name of the font for the selected part</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.SetSelectionItalic(System.Boolean)">
      <summary>Sets the italic style only for the selected part of the rich text box without modifying the other properties like font or size.</summary>
      <param name="italic">true to make selection italics; false to make it regular</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.SetSelectionSize(System.Single)">
      <summary>Sets the font size only for the selected part of the rich text box without modifying the other properties like font or style.</summary>
      <param name="size">Point size for the selected part</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.SetSelectionUnderlined(System.Boolean)">
      <summary>Sets the underlined style only for the selected part of the rich text box without modifying the other properties like font or size.</summary>
      <param name="underlined">true to underline selection; false to make it regular</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextBoxWrapper.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RichTextCellType">
      <summary>Represents a rich text formatted text cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.#ctor">
      <summary>Creates a new rich text cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new rich text cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.AllowArrowKeysMoveActiveCell">
      <summary>Gets or sets whether to allow the arrow keys to move the active cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.BackgroundImage">
      <summary>Gets or sets the background image for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.IsFormulaValue">
      <summary>Determines whether the editor contains a formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.MaxLength">
      <summary>Gets or sets the maximum number of characters allowed in the rich text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.Multiline">
      <summary>Gets or sets whether multiple lines of text are allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.ReadOnly">
      <summary>Gets or sets whether text is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.ScrollBars">
      <summary>Gets or sets which scroll bars to display for the rich text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.Static">
      <summary>Gets or sets whether text can be selected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.SubEditor">
      <summary>Gets or sets the subeditor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextCellType.WordWrap">
      <summary>Gets or sets whether text that is too long to fit in the cell wraps to additional lines.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.CanOverflow">
      <summary>Determines whether the cell can overflow into adjacent cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Clone">
      <summary>Creates and returns a rich text cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Format(System.Object)">
      <summary>Formats the object.</summary>
      <param name="o">Object to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetEditorValue">
      <summary>Gets the unformatted value in the edit control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum required) size of the editor control.</summary>
      <param name="editor">Name of editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that contains the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsCaretInTheBeginning">
      <summary>Gets whether the caret is in the beginning.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsCaretInTheEnd">
      <summary>Gets whether the caret is at the end.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsCaretInTheFirstLine">
      <summary>Gets whether the caret is in the first line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsCaretInTheLastLine">
      <summary>Gets whether the caret is in the last line.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.IsValid(System.Object)">
      <summary>Returns whether the entry is valid.</summary>
      <param name="o">Object that contains the entry</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.MeasureString(System.Drawing.Graphics,System.Drawing.Size,System.Object)">
      <summary>Measures the string size.</summary>
      <param name="g">Graphics device interface for painting the string</param>
      <param name="defaultSize">Default size</param>
      <param name="value">Value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the rich text cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the cell</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the value</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) the cell to PDF when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">PDF graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Parse(System.String)">
      <summary>Parses the string.</summary>
      <param name="s">String to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the edit control.</summary>
      <param name="value">Object that contains the edit control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RichTextEditor">
      <summary>Represents the base control for the rich text cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.#ctor">
      <summary>Creates a new rich text editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.#ctor(System.Boolean)">
      <summary>Creates a new rich text editor with a required user interface.</summary>
      <param name="requiresUI" />
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextEditor.AllowClipboard">
      <summary>Gets or sets whether the use of the Clipboard is allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditor">
      <summary>Gets or sets the subeditor to use.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextEditor.Value">
      <summary>Gets or sets the value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.AlignCenter_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the center alignment is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.AlignLeft_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the left alignment is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.AlignRight_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the right alignment is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.BitmapPaint">
      <summary>Paints a bitmap.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.BitmapPaint(FarPoint.Win.Picture)">
      <summary>Paints the specified background image as a bitmap.</summary>
      <param name="imgBackground">Background image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.BitmapPaint(FarPoint.Win.Picture,System.Single)">
      <summary>Paints the specified background image as a bitmap with the specified scaling.</summary>
      <param name="imgBackground">Background image</param>
      <param name="zoomFactor">Numeric value for scaling the display of the image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.BitmapPaint(FarPoint.Win.Picture,System.Drawing.Rectangle)">
      <summary>Paints the specified background image as a bitmap in the specified rectangle.</summary>
      <param name="imgBackground">Background image</param>
      <param name="r">Boundary rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.BitmapPaint(FarPoint.Win.Picture,System.Drawing.Rectangle,System.Single)">
      <summary>Paints the specified background image as a bitmap in the specified rectangle with the specified scaling.</summary>
      <param name="imgBackground">Background image</param>
      <param name="r">Boundary rectangle</param>
      <param name="zoomFactor">Numeric value for scaling the display of the image</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Bold_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the bold style is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ClearAll_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the clear all selection choice is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Color_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the color is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ContextMenu_Popup(System.Object,System.EventArgs)">
      <summary>Occurs when the context menu is displayed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Copy">
      <summary>Copies when use of Clipboard is allowed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Copy_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the copy to the Clipboard choice is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.CreateCompatibleDC(System.IntPtr)">
      <summary>Creates a compatible device context</summary>
      <param name="hdc">A device context</param>
      <returns>An <see cref="T:System.IntPtr" /> represents the compatiable device context</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Cut">
      <summary>Cuts when use of Clipboard is allowed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Cut_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the cut to the Clipboard choice is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.DeleteDC(System.IntPtr)">
      <summary>Deletes a device context</summary>
      <param name="hdc">The device context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Delete_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the delete selection choice is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.DisableContextMenu(System.Boolean)">
      <summary>Determines if the context menu is disabled.</summary>
      <param name="disable" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Font_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the font is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether to process the specified key by the control.</summary>
      <param name="keyData">Key for the control to process</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Italic_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the italic style is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.LoadFile_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the load file is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnAfterFocus(System.EventArgs)">
      <summary>Raises the AfterFocus event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnEnter(System.EventArgs)">
      <summary>Raises the Enter event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnGotFocus(System.EventArgs)">
      <summary>Raises the GotFocus event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnHandleDestroyed(System.EventArgs)">
      <summary>Occurs when the handle is destroyed.</summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is down. Internal use only.</summary>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Handles mouse down processing.</summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnParentChanged(System.EventArgs)">
      <summary>Raises the ParentChanged event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnSubEditorClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorClosed" /> event.</summary>
      <param name="e">EventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnSubEditorOpening(FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorCancelEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorOpening" /> event.</summary>
      <param name="e">EventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnUserError(FarPoint.Win.SuperEdit.UserErrorEventArgs)">
      <summary>Raises the UserError event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.OnVisibleChanged(System.EventArgs)">
      <summary>Raises the VisibleChanged event.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Paste">
      <summary>Pastes when use of Clipboard is allowed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Paste(System.Windows.Forms.DataFormats.Format)">
      <summary>Pastes with formatting when use of Clipboard is allowed.</summary>
      <param name="clipFormat" />
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Paste_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the paste from the Clipboard choice is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes the specified dialog key by the control.</summary>
      <param name="keyData">Key for the control to process</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.SelectAll_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the select all choice is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.SetBackgroundImageRenderDimensions(System.Int32,System.Int32)">
      <summary>Sets the dimensions of the background image renderer.</summary>
      <param name="width">Width of the renderer</param>
      <param name="height">Height of the renderer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.SetRenderDimensions(System.Int32,System.Int32)">
      <summary>Sets the dimensions of the renderer.</summary>
      <param name="width">Width of the renderer</param>
      <param name="height">Height of the renderer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.ShowSubEditor(System.Boolean)">
      <summary>Shows or hides the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Size_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the size is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.Underline_Clicked(System.Object,System.EventArgs)">
      <summary>Occurs when the underline style is selected.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.WndProc(System.Windows.Forms.Message@)">
      <summary>Internal use only.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.AfterFocus">
      <summary>Occurs after the control gets focus.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorClosed">
      <summary>Occurs when the subeditor for a cell closes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorOpening">
      <summary>Occurs when the subeditor for a cell opens.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.UserError">
      <summary>Occurs when content is provided that cannot be processed or is invalid.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RichTextEditor.VisibleChanged">
      <summary>Occurs when the System.Windows.Forms.Control.Visible property value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorCancelEventArgs">
      <summary>Represents the event data for the canceling of the <see cref="E:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorOpening" /> event for the FpSpread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorCancelEventArgs.#ctor">
      <summary>Creates a new object with the SubEditorCancel event arguments.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorCancelEventArgs.Cancel">
      <summary>Gets or sets whether to cancel the default processing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RotationAngle">
      <summary>Represents a displayed clock to set the text rotation angle.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.#ctor">
      <summary>Creates a new clock (rotation angle) control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.Counterclockwise">
      <summary>Gets or sets whether the direction of the rotation is counterclockwise.</summary>
      <value>A <b>bool</b> that indicates whether this is the counterclockwise direction.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.MaximumScale">
      <summary>Gets or sets the maximum mark angle in degrees.</summary>
      <value>An <b>int</b> that indicates the maximum mark angle in degrees</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.MaximumValue">
      <summary>Gets or sets the maximum value.</summary>
      <value>An <b>int</b> that indicates the maximum value.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.MinimumScale">
      <summary>Gets or sets the minimum mark angle in degrees.</summary>
      <value>An <b>int</b> that indicates the minimum mark angle in degrees</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.MinimumValue">
      <summary>Gets or sets the minimum value.</summary>
      <value>An <b>int</b> that indicates the minimum value.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.SelectedTickColor">
      <summary>Gets or sets the selected tick color.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that indicates the selected tick color.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.Text">
      <summary>Gets or sets the text.</summary>
      <value>A <b>string</b> that indicates the text.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.TickColor">
      <summary>Gets or sets the tick color.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that indicates the tick color.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.RotationAngle.Value">
      <summary>Gets or sets the value.</summary>
      <value>An <b>int</b> that indicates the value.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.DegreeToCoordinate(System.Int32)">
      <summary>Converts a degree value to a coordinate location.</summary>
      <param name="degree">Degree value</param>
      <returns>Returns a <see cref="T:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate" /> that indicates the coordinate location.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.DrawHand(System.Drawing.Graphics)">
      <summary>Draws the pointer.</summary>
      <param name="g">Graphics device interface for painting the pointer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.DrawTicks(System.Drawing.Graphics)">
      <summary>Draws the ticks.</summary>
      <param name="g">Graphics device interface for painting the marks</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.MouseSelect(System.Drawing.Point)">
      <summary>Processses the mouse selection.</summary>
      <param name="mousePosition">
        <see cref="T:System.Drawing.Point" /> that indicates the mouse position</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Lays out the control.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that indicates the event arguments.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Overridden, processes the mouse down event.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> that indicates the event argument</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Overridden, processes the mouse move event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that indicates the event argument.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Paints the control.</summary>
      <param name="e">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.OnParentEnabledChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value of the control's container changes.</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.OnValueChanged(System.EventArgs)">
      <summary>Raises the ValueChanged event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event arguments.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.RotationAngle.ValueChanged">
      <summary>Occurs when the value changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RotationAngle.Mark">
      <summary>Defines a class to save the mark position and value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RotationAngle.Mark.#ctor(System.Drawing.Point,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.RotationAngle.Mark" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Mark.Position">
      <summary>A <see cref="T:System.Drawing.Point" /> that indicates the mark's position.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Mark.Value">
      <summary>An <b>int</b> that indicates the value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RowHeaderRenderer">
      <summary>Represents the painter of the row header.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RowHeaderRenderer.#ctor">
      <summary>Creates a new painter of the row header with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RowHeaderRenderer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new painter of the row header from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RowHeaderRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the column header cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the column header cell</param>
      <param name="r">Location and size of a rectangular region for painting the column header cell</param>
      <param name="appearance">Appearance settings of the column header cell</param>
      <param name="value">Object that contains the name of the renderer control of the column header cell</param>
      <param name="isSelected">Whether the column header cell is selected</param>
      <param name="isLocked">Whether the column header cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the column header cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RowHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean)">
      <summary>Paints the row header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Thickness in pixels of the shadow</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RowHeaderRenderer.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean,System.Boolean,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Paints the row header cell.</summary>
      <param name="g">Graphics device interface for painting the header cell</param>
      <param name="r">Location and size of a rectangular region around the header cell</param>
      <param name="rectTextIn">Rectangular region for the text</param>
      <param name="backColor">Background color for the header cell</param>
      <param name="foreColor">Text color for the header cell</param>
      <param name="font">Font for the header cell</param>
      <param name="halign">Horizontal alignment of text in the header cell</param>
      <param name="valign">Vertical alignment of text in the header cell</param>
      <param name="pressed">Whether the header cell appears as a pressed button</param>
      <param name="focus">Whether the header cell has the focus (is active)</param>
      <param name="text">Text string to appear in the header cell</param>
      <param name="textDown">Text string to appear in the header cell if it is pressed (as a button)</param>
      <param name="nAlign">Alignment of the button in the column header cell</param>
      <param name="textOrientation">Orientation of the text with respect to the button picture in the header</param>
      <param name="wordWrap">Whether the text wraps to multiple lines if needed</param>
      <param name="shadowSize">Shadow thickness in pixels</param>
      <param name="darkColor">Color for the dark line part of the shadow</param>
      <param name="lightColor">Color for the light line part of the shadow</param>
      <param name="pictUp">Picture to display when the button is not pressed</param>
      <param name="pictDown">Picture to display when the button is pressed</param>
      <param name="bLocked">Whether the header cell is locked</param>
      <param name="prefix">Letter to underline as a hotkey prefix</param>
      <param name="style">Visual style (XP theme)</param>
      <param name="mouseOver">Whether the mouse is over the header</param>
      <param name="rightToLeft">Whether to draw the header cell with a right-to-left orientation</param>
      <param name="appearance">Appearance settings of the header cells</param>
      <param name="zoomFactor">Numeric value for scaling the display of the header cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.RowHeaderRenderer.ToString">
      <summary>Returns the name of the renderer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.SliderCellType">
      <summary>Represents a slider cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.#ctor">
      <summary>Creates a new slider cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.#ctor(FarPoint.Win.Spread.CellType.SliderCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified slider cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new slider cell from serialization.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.BackgroundImage">
      <summary>Gets or sets the background image for the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.ChangeOnFocus">
      <summary>Gets or sets whether the slider moves with the initial click.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.KnobColor">
      <summary>Gets or sets the color of the slider knob.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.KnobPicture">
      <summary>Gets or sets the image for the slider knob.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.KnobWidth">
      <summary>Gets or sets the width (in pixels) of the slider knob.</summary>
      <exception cref="T:System.ArgumentException"> Specified value is out of range; must be between 0 and 255 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.Maximum">
      <summary>Gets or sets the maximum value for user entry.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.Minimum">
      <summary>Gets or sets the minimum value for user entry.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.Orientation">
      <summary>Gets or sets the orientation of the slider.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TickColor">
      <summary>Gets or sets the color of the tick marks in the slider.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TickLength">
      <summary>Gets or sets the width (in pixels) of the tick marks of the slider.</summary>
      <exception cref="T:System.ArgumentException"> Specified value is out of range; must be between 0 and 255 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TickSpacing">
      <summary>Gets or sets how frequently to space the tick marks in the slider.</summary>
      <exception cref="T:System.ArgumentException"> Specified value is out of range; must be between 0 and 255 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TrackColor">
      <summary>Gets or sets the color of the track of the slider.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TrackPicture">
      <summary>Gets or sets the image for the track of the slider.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SliderCellType.TrackWidth">
      <summary>Gets or sets the width (in pixels) of the slider track.</summary>
      <exception cref="T:System.ArgumentException"> Specified value is out of range; must be between 0 and 255 </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.CancelEditing">
      <summary>Cancels the editing of a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Clone">
      <summary>Creates and returns a slider cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="o">Object in the data model to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetEditorValue">
      <summary>Gets the unformatted value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this cell type.</summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">KeyEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for drawing the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value can be converted to an integer value and is between the minimum and maximum allowed values.</summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts the editing of a cell.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SliderCellType.StopEditing">
      <summary>Stops the editing of a cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar">
      <summary>Represents a Windows control that enables the user to select a date using a visual monthly calendar display.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.#ctor(System.Globalization.DateTimeFormatInfo,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" /> class.</summary>
      <param name="info">Defines how <see cref="T:System.DateTime" /> values are formatted and displayed.</param>
      <param name="dateDefault">The default value for <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" /></param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The instructor method that is initialized automatically when deserializing.</summary>
      <param name="info">Object that holds the serialized object data.</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.DateDefault">
      <summary>Gets or sets the default value for <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.DateTimeInfo">
      <summary>Gets or sets a DateTimeFormatInfo object for <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.GetLocation(System.Drawing.Rectangle)">
      <summary>Gets the location of the <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" /> object.</summary>
      <param name="rect">The rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>The method that is invoked automatically when serializing the <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" /> object into a stream.</summary>
      <param name="info">Object that holds the serialized object data.</param>
      <param name="context">Information about the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.GetPreferredSize">
      <summary>Retrieves the size of a rectangular area into which a control fits.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.GetSubEditorControl">
      <summary>Gets the sub editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.GetValue">
      <summary>Gets the current value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.OnDateChanged(System.Windows.Forms.DateRangeEventArgs)">
      <summary>Raises the ValueChanged event.</summary>
      <param name="drevent">The event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the MouseUp event.</summary>
      <param name="e">The event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.SetValue(System.Object)">
      <summary>Sets a value for the specified <see cref="T:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar" /> object.</summary>
      <param name="value" />
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.CloseUp">
      <summary>Occurs when the calendar has closed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.SpreadDropDownMonthCalendar.ValueChanged">
      <summary>Occurs when a value has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.SpreadMonthCalendar">
      <summary>Represents a month calendar window.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.SpreadMonthCalendar" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.#ctor(System.String,System.String,System.Globalization.DateTimeFormatInfo,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.SpreadMonthCalendar" /> class.</summary>
      <param name="okText">A caption for the OK button</param>
      <param name="cancelText">A caption for the Cancel button</param>
      <param name="info">A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object for formatting and displaying <see cref="T:System.DateTime" /> values, depending on culture.</param>
      <param name="calFormat" />
      <param name="dateDefault">A default value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.#ctor(FarPoint.Win.Spread.CellType.SpreadMonthCalendar)">
      <summary>Creates a new copy from the specified cell type.</summary>
      <param name="g">Specified button cell type from which to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a SpreadMonthCalendar from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.CalendarFormat">
      <summary>Gets or sets a calendar format string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.CancelText">
      <summary>Gets or sets a caption for the Cancel button.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.DateDefault">
      <summary>Gets or sets a default value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.DateTimeInfo">
      <summary>Gets or sets a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.OkText">
      <summary>Gets or sets a caption for the OK button.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.GetLocation(System.Drawing.Rectangle)">
      <summary>Gets the location of the <see cref="T:FarPoint.Win.Spread.CellType.SpreadMonthCalendar" /> object.</summary>
      <param name="rect">Rectangle area in which to paint</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">SerializationInfo to populate with data.</param>
      <param name="context">Destination for this serialization.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.GetPreferredSize">
      <summary>Retrieves the size of a rectangular area into which a control fits.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.GetSubEditorControl">
      <summary>Gets the specified SpreadMonthCalendar object as a subeditor control.</summary>
      <returns>Control object that contains the subeditor control</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.GetValue">
      <summary>Gets the current value of <see cref="T:FarPoint.Win.Spread.CellType.SpreadMonthCalendar" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.SetMaxDate(System.DateTime)">
      <summary>Sets a maximum <see cref="T:System.DateTime" /> value.</summary>
      <param name="dt">Maximum value in DateTime</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.SetMinDate(System.DateTime)">
      <summary>Sets a minimum <see cref="T:System.DateTime" /> value.</summary>
      <param name="dt">Minimum value in DateTime</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.SetValue(System.Object)">
      <summary>Sets a current value for <see cref="T:FarPoint.Win.Spread.CellType.SpreadMonthCalendar" />.</summary>
      <param name="value" />
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.CloseUp">
      <summary>Occurs when the calendar has closed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.SpreadMonthCalendar.ValueChanged">
      <summary>Occurs when the value has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.TextCellType">
      <summary>Represents a text cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.#ctor">
      <summary>Creates a new text cell with default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new text cell from serialization.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.#ctor(FarPoint.Win.Spread.CellType.TextCellType)">
      <summary>Creates a new copy from the specified cell type ("Copy constructor").</summary>
      <param name="g">Specified text cell type from which to copy</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.CharacterCasing">
      <summary>Gets or sets the case of characters in the text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.CharacterSet">
      <summary>Gets or sets what characters to allow for the text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.HotkeyPrefix">
      <summary>Gets or sets whether the ampersand character underlines text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.MaxLength">
      <summary>Gets or sets the maximum number of characters allowed in the text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.Multiline">
      <summary>Gets or sets whether multiple lines of text are allowed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.PasswordChar">
      <summary>Gets or sets the character for masking data in the text cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.TextCellType.ScrollBars">
      <summary>Gets or sets which scroll bars to display for the text cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.CanOverflow">
      <summary>Determines whether the cell can overflow into adjacent cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Clone">
      <summary>Creates and returns a text cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Format(System.Object)">
      <summary>Formats the specified data into the format of the cell type and returns it as a string.</summary>
      <param name="obj">Object in the data model with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the edit control for this cell type with the specified appearance and scaling.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum needed) size of the cell for the editor control.</summary>
      <param name="editor">Name of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size needed</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.GetTextRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle@,System.String)">
      <summary>Gets the rectangle in which text is drawn.</summary>
      <param name="g">Graphics device interface for painting the text</param>
      <param name="r">Cell rectangle</param>
      <param name="f">Font</param>
      <param name="appearance">Appearance settings of the rectangle</param>
      <param name="rText">Text rectangle returned</param>
      <param name="paintString">String to be painted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Control</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>Checks if this celltype is reusable.</summary>
      <remarks>Button celltype is reusable only if its editor is FpButton. Any classes that inherit from button cell type should override this function and InitializeEditorControl in order to be reusable.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Specified value in the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell, when not in edit mode, to the specified graphics interface with the specified appearance settings.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Parse(System.String)">
      <summary>Parses the specified string to the data type of the cell type and returns it as an object.</summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.TextCellType.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of editor control (as object)</param>
      <exception cref="T:System.ArgumentException"> Specified value to set is not valid </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IAutoCompleteSupport">
      <summary>Interface that supports automatic completion (type ahead) for users typing text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IAutoCompleteSupport.AutoCompleteCustomSource">
      <summary>Gets or sets a custom System.Collections.Specialized.StringCollection when the AutoCompleteSource property is set to CustomSource.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IAutoCompleteSupport.AutoCompleteMode">
      <summary>Gets or sets how automatic completion works.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IAutoCompleteSupport.AutoCompleteSource">
      <summary>Gets or sets a value that specifies the source of complete strings used for automatic completion.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IAutoCompleteSupport.AutoFillAutoCompleteCustomSource">
      <summary>Gets or sets whether the AutoCompleteCustomSource is automatically filled with data from a column.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ICellType">
      <summary>Interface that defines the methods and properties required by objects used as cell types.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ICommonDialogSupport">
      <summary>Interface that specifies whether the cell type supports showing a common dialog.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ICommonDialogSupport.DialogShowing">
      <summary>Returns whether the CommonDialog SubEditor is currently open.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IDateTimeCellType">
      <summary>An interface that supports CellType objects that require data to be displayed as a <see cref="T:System.DateTime" /> type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.AMString">
      <summary>Gets or sets the AM string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.Calendar">
      <summary>Gets or sets a <see cref="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.Calendar" /> object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.DateSeparator">
      <summary>Gets or sets a date separator string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.DateTimeFormat">
      <summary>Gets or sets a <see cref="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.DateTimeFormat" /> object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.DayNames">
      <summary>Gets or sets an array of day names.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.MonthNames">
      <summary>Gets or sets an array of month names.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.PMString">
      <summary>Gets or sets the PM string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.TextOrientation">
      <summary>Gets or sets text orientation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.TextRotationAngle">
      <summary>Gets or sets a text rotation angle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.TimeSeparator">
      <summary>Gets or sets a time separator string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.UserDefinedFormat">
      <summary>Gets or sets a custom date format string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IDateTimeCellType.WordWrap">
      <summary>Gets or sets a value that indicates whether text is wrapped.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IDateTimeFormatSupport">
      <summary>Indicates that this cell type supports the standard date format.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IDateTimeFormatSupport.GetDateTimeFormatInfo">
      <summary>Gets the date format information of the date cell.</summary>
      <returns>The date format information of the date cell.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IDateTimeFormatSupport.GetFormatString">
      <summary>Gets the date format string of the date cell.</summary>
      <returns>The date format string of the date cell.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IDropDownEventSupport">
      <summary>Interface that defines the events that will be raised for a dropdown-like control</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IDropDownEventSupport.DropDownClosed">
      <summary>Occurs when the dropdown is closed</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IDropDownEventSupport.DropDownOpened">
      <summary>Occurs when the dropdown is opened</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IDropDownEventSupport.SelectedIndexChanged">
      <summary>Occurs when selected index is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IEditFormula">
      <summary>Interface implemented by cell type objects that defaults to editing formulas if there is a formula in the cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IEditor">
      <summary>Interface that defines the methods required by objects used as editors. Editors allow the user to edit the cell contents.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.CancelEditing">
      <summary>Cancels cell editing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the control associated with the editor.</summary>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetEditorValue">
      <summary>Gets the value in the editor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>Gets the preferred (maximum needed) size of the cell for the editor control.</summary>
      <param name="editor">Name of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.GetReservedCursor(System.Object)">
      <summary>Gets the cursor reserved for this editor.</summary>
      <param name="o">Object with the reserved cursor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.IsReservedKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Determines whether the specified key has special meaning to the editor control.</summary>
      <param name="e">Key the user pressed and whether any modifier keys (Ctrl, Alt, and Shift) are pressed at the same time</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Determines whether the specified cursor location has special meaning to the editor control.</summary>
      <param name="g">Graphics device interface for painting the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.IsValid(System.Object)">
      <summary>Determines whether the specified value is valid.</summary>
      <param name="value">Specified value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.SetEditorValue(System.Object)">
      <summary>Sets the value of the editor control.</summary>
      <param name="value">Value of the editor control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.ShowSubEditor">
      <summary>Shows the subeditor control associated with the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>Starts cell editing with the specified options.</summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select everything</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditor.StopEditing">
      <summary>Stops cell editing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IEditor.EditingCanceled">
      <summary>Occurs when editing (in the editor control) has been canceled by the user.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IEditor.EditingStopped">
      <summary>Occurs when editing (in the editor control) has been stopped by the user.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IEditorModifiedStatusSupport">
      <summary>Interface that provides property to check whether an editor has been modified or not</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IEditorSupport">
      <summary>Interface that defines the methods required by objects used as editors. Editors allow the user to edit the cell contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IEditorSupport.SelectionLength">
      <summary>Gets or sets the number of characters selected in the control.</summary>
      <value>The number of characters selected in the control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IEditorSupport.SelectionStart">
      <summary>Gets or sets the number of the character's position from which to start selecting.</summary>
      <value>The character position from which to start selecting.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IEditorSupport.SubEditor">
      <summary>Gets the subeditor in the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IEditorSupport.ShouldResentMouseEvent(System.Drawing.Point)">
      <summary>Get a value that indicates whether there is a need to resend the mouse event when the mouse button is pressed down on the component.</summary>
      <param name="location">Mouse down position.</param>
      <returns>
        <c>true</c> if the mouse event should be resent when there is a mouse down on the component; otherwise, <c>false</c>.</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IEditorSupport.AfterFocus">
      <summary>Occurs after the control receives the focus.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IEditorSupport.SubEditorClosed">
      <summary>Occurs when the subeditor for a cell closes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IEditorSupport.SubEditorOpening">
      <summary>Occurs when the subeditor for a cell opens.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IEditorSupport.UserError">
      <summary>Occurs when content is provided that cannot be processed or is invalid.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IEditorVerticaAlignSupport">
      <summary>Interface that specifies whether the cell type supports an editor vertical alignment property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IEditorVerticaAlignSupport.AllowEditorVerticalAlign">
      <summary>Gets or sets whether the cell type allows editor vertical alignment.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IErrorIconSupport">
      <summary>Interface implemented by a cell type object that supports error icon painting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IErrorIconSupport.GetErrorIconBound(System.Drawing.Graphics,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle,System.Single)">
      <summary>Gets a rectangle to draw the error icon in.</summary>
      <param name="g">A graphics object</param>
      <param name="appearance">Appearance settings</param>
      <param name="cellRectangle">Rectangle to paint cell in</param>
      <param name="zoomFactor">Zoom factor setting</param>
      <returns>A rectangle</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IFilterItemEditor">
      <summary>Interface that defines the methods and properties required to work with the IFilterItem interface.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFilterItemEditor.IgnoreFiringFilterItemValueChangedEvent">
      <summary>Gets or sets whether to fire the FilterItemValueChanged event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFilterItemEditor.Interval">
      <summary>Gets or sets the time, in milliseconds, before the FilterItemValueChanged event is raised relative to the last occurrence of the FilterItemValueChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IFilterItemEditor.IsValidFilterItem(FarPoint.Win.Spread.IFilterItem)">
      <summary>Determines whether the filter item is valid to apply to the sheetview.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.IFilterItemEditor.FilterItemValueChanged">
      <summary>Occurs when the filter value has been changed by the user.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IFormatter">
      <summary>Interface that defines the methods and properties required by objects used as formatters. Formatters are responsible for formatting cell contents.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IFormatter.Format(System.Object)">
      <summary>Formats the specified object as a string.</summary>
      <param name="o">Object with cell data to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IFormatter.Parse(System.String)">
      <summary>Parses the specified string into the desired object.</summary>
      <param name="s">String to parse</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IFormatter2">
      <summary>Interface that defines the methods required by objects used as special clipboard formatters.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFormatter2.CanEditFormula">
      <summary>Gets a value that indicates whether the cell type can edit the formula.</summary>
      <value>
        <c>true</c> if the cell type can edit the formula; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFormatter2.ContainsPassword">
      <summary>Gets a value that indicates whether the cell contains a password.</summary>
      <value>
        <c>true</c> if the cell type contains a password; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFormatter2.ShouldExportFormattedValue">
      <summary>Gets a value that indicates whether to export the formatted value when data is exported to Excel.</summary>
      <value>
        <c>true</c> if exporting the formatted value to Excel; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFormatter2.SupportStandardFormatString">
      <summary>Gets a value that indicates whether the cell supports the standard format string.</summary>
      <value>
        <c>true</c> if the cell type supports the standard format string; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IFormatter2.FormatToClipboard(System.Object)">
      <summary>Formats the specified object as a string.</summary>
      <param name="o">Object with cell data to format</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IFormatValueFlag">
      <summary>Marker interface for cell type objects that indicates that the value for the cell should always be formatted for display or sorting purposes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IFormulaEditor">
      <summary>Interface implemented by cell editors that supports editing formulas.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IFormulaEditor.IsFormulaValue">
      <summary>Determines whether the editor contains a formula.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IGeneralFormatSupport">
      <summary>Interface that supports the general formatting of date-time and numeric cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IGeneralFormatSupport.DateTimeFormat">
      <summary>Gets or sets the date-time format information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IGeneralFormatSupport.IsDateFormat">
      <summary>Gets or sets whether the format is date-time.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IGeneralFormatSupport.NumberFormat">
      <summary>Gets or sets the numeric format information.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IHeaderImages">
      <summary>Interface for supporting user modifiable images in headers.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IHeaderImages.Images">
      <summary>Gets or sets the images.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IMultilineSupport">
      <summary>Interface that specifies whether the cell type supports a Multiline property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IMultilineSupport.Multiline">
      <summary>Gets or sets whether the cell type supports multiple lines.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.INotifyEditorValueChanged">
      <summary>Interface implemented by cell editor objects that sends a notification when the value of the editor has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.INotifyEditorValueChanged.EditorValueChanged">
      <summary>Occurs when the editor value has been changed by the user.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IOOXmlSupport">
      <summary>Interface implemented by cell type objects that support export to Excel.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IOOXmlSupport.ExcelGetValue">
      <summary>Gets the Excel file get value.</summary>
      <value>Excel file get value</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IOOXmlSupport.ExcelNumberFormat">
      <summary>Gets the Excel file number format.</summary>
      <value>Excel file number format</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IOOXmlSupport.ExcelTextOrientation">
      <summary>Gets the Excel file text orientation.</summary>
      <value>Excel file text orientation</value>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IOOXmlSupport.ExcelTextRotationAngle">
      <summary>Gets the Excel file text rotation angle.</summary>
      <value>Excel file text rotation angle</value>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IOOXmlSupport.IsEquals(System.Object)">
      <summary>Determines whether the specified cell type is the same.</summary>
      <param name="cellType">Type of the cell</param>
      <returns>
        <c>true</c> if the specified cell type is the same; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IPdfSupport">
      <summary>Interface that supports printing to PDF.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IPdfSupport.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints (prints) to PDF when the cell is not in edit mode.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="r">Boundary rectangle to paint</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Value to paint</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IPluginCellTypeSetting">
      <summary>Interface implemented for plug-in cell type setting.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IPluginCellTypeSetting.CellType">
      <summary>Gets or sets the cell type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IPluginCellTypeSetting.CellTypeSettingControl">
      <summary>Gets the cell type setting control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IPluginCellTypeSetting.GetProperty(System.String)">
      <summary>Gets the property by name.</summary>
      <param name="name">Property name</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IPreventExportCustomizable">
      <summary>The object won't customize the exported cell value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IPropertyAllowedSupport">
      <summary>Interface that specifies whether the cell type supports specific properties.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IPropertyAllowedSupport.IsPropertySupported(System.String)">
      <summary>Gets whether the cell type supports the named property.</summary>
      <param name="propertyName">Name of the property</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IReadOnlySupport">
      <summary>Interface that specifies whether the cell type supports a ReadOnly property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IReadOnlySupport.ReadOnly">
      <summary>Gets or sets whether the cell type is read-only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IRenderAlignment">
      <summary>Interface that defines the methods required to specify the alignment of content that the renderer uses when rendering the content.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderAlignment.GetHorizontalAlignment(System.Object)">
      <summary>Gets the horizontal alignment.</summary>
      <param name="value">Value of the horizontal alignment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderAlignment.GetVerticalAlignment(System.Object)">
      <summary>Gets the vertical alignment.</summary>
      <param name="value">Value of the vertical alignment</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IRenderCellGridLine">
      <summary>Interface that allows handling of painting grid lines for a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderCellGridLine.PaintCellGridLine(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Appearance)">
      <summary>Paints the grid lines for the cell.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="x">
        <i>X</i>-coordinate of the cell</param>
      <param name="y">
        <i>Y</i>-coordinate of the cell</param>
      <param name="width">Width of the cell</param>
      <param name="height">Height of the cell</param>
      <param name="appearance">Appearance settings of the cell</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IRenderer">
      <summary>Interface that defines the methods and properties required by objects used as renderers. Renderers are responsible for painting cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderer.CanBeOverflown">
      <summary>Determines whether adjacent cells can overflow into this cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderer.CanOverflow">
      <summary>Determines whether this cell can overflow into an adjacent cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderer.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>Gets the preferred (maximum required) size of the cell for the renderer control.</summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum required size</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IRenderer.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the cell when not editing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IReuseEditorControl">
      <summary>Interface implemented by cell type objects that creates the cell editor once in each FpSpread using the cell type, to increase performance. This is obsolete and the control should implement IReuseEditorControl2 instead.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IReuseEditorControl.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Gets the control associated with the editor for the specified parent control.</summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
      <returns>Control</returns>
      <remarks>After creating the control the first time, add it to the parent. Returns the same instance when called again for that parent.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IReuseEditorControl.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>Initializes the editor control.</summary>
      <param name="control">Editor control to initialize</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IReuseEditorControl2">
      <summary>Interface implemented by cell type objects that creates the cell editor once in each FpSpread using the cell type, to increase performance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.IReuseEditorControl2.IsReusable(System.Windows.Forms.Control)">
      <summary>Indicates whether the control can be reused.</summary>
      <returns>
        <c>True</c> if this control can be reused; otherwise, <c>false</c></returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IShrinkToFitSupport">
      <summary>Interface that specifies whether the cell type supports a ShrinkToFit property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IShrinkToFitSupport.ShrinkToFit">
      <summary>Gets or sets whether the cell type supports shrink to fit.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IStaticSupport">
      <summary>Interface that specifies whether the cell type supports a Static property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IStaticSupport.Static">
      <summary>Gets or sets whether the cell type is static.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IStringTrimmingSupport">
      <summary>Interface that specifies whether the cell type supports string trimming.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IStringTrimmingSupport.StringTrim">
      <summary>Gets or sets how to trim characters that do not fit in the cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ISubEditor">
      <summary>Interface that defines the methods and properties required by objects used as editors within the editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetLocation(System.Drawing.Rectangle)">
      <summary>Gets the initial location of the subeditor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetPreferredSize">
      <summary>Gets the preferred (maximum required) size of the cell for the subeditor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetSubEditorControl">
      <summary>Gets the control associated with the subeditor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.GetValue">
      <summary>Gets the value from the subeditor control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ISubEditor.SetValue(System.Object)">
      <summary>Sets the value into the subeditor control.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.ISubEditor.CloseUp">
      <summary>Occurs when the subeditor control goes away.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.CellType.ISubEditor.ValueChanged">
      <summary>Occurs when the value in the subeditor changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ISubEditorParentInfo">
      <summary>Interface that supports the subeditor parent information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ISubEditorParentInfo.EditorControl">
      <summary>Gets or sets the subeditor control.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ITextAdjustmentSpacing">
      <summary>Interface implemented by cell type objects that support adjusting space when painting text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ITextAdjustmentSpacing.TextAdjustmentSpacing">
      <summary>Gets and sets the text adjustment spacing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ITextOrientationSupport">
      <summary>Interface that specifies whether the cell type supports text orientation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ITextOrientationSupport.TextOrientation">
      <summary>Gets or sets how text orients itself when painting the cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.ITextOrientationSupport.TextRotationAngle">
      <summary>Gets or sets the rotation angle of the text for the cell.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ITextOrientationSupport2">
      <summary>Interface that specifies whether the cell type supports cell diagonal line painting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ITextOrientationSupport2.PaintBackground(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paint back color.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that specifies filling area.</param>
      <param name="appearance">
        <see cref="!:Apperarance" /> that specifise painting setting.</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="isSelected">if set to <c>true</c>, the cell is in a selected state.</param>
      <param name="isLocked">if set to <c>true</c>, the cell is in a locked state.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ITextOrientationSupport2.PaintEnhancedConditionalFormat(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single,FarPoint.Win.Spread.ExtraRendererSettings,System.Drawing.RectangleF@,System.Boolean)">
      <summary>Extend paiting with an <see cref="!:extraRendererSettings" />.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Original boundary rectangle to paint.</param>
      <param name="appearance">
        <see cref="!:Apperarance" /> that specifise painting setting.</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="isSelected">if set to <c>true</c>, the cell is in a selected state.</param>
      <param name="isLocked">if set to <c>true</c>, the cell is in a locked state.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control.</param>
      <param name="extraRendererSettings">The extra renderer settings.</param>
      <param name="rText">Boundary rectangle to paint.</param>
      <param name="diagonalLine">if set to <c>true</c>, the cell is painting as a diagonal line cell.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.ITextOrientationSupport2.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single,FarPoint.Win.Spread.ExtraRendererSettings,System.Boolean,System.Int32)">
      <summary>Paint diagonal line rotated text.</summary>
      <param name="g">Graphics device interface for painting the cell.</param>
      <param name="r">Original boundary rectangle to paint.</param>
      <param name="appearance">
        <see cref="!:Apperarance" /> that specifise painting setting.</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="isSelected">if set to <c>true</c>, the cell is in a selected state.</param>
      <param name="isLocked">if set to <c>true</c>, the cell is in a locked state.</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control.</param>
      <param name="extraRendererSettings">The extra renderer settings.</param>
      <param name="diagonalLine">if set to <c>true</c>, the cell is painting as a diagonal line cell.</param>
      <param name="adjustTop">Adjusting value to scale the original bound rectangle to the diagonal line area.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IWordWrapSupport">
      <summary>Interface that specifies whether the cell type supports a WordWrap property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IWordWrapSupport.WordWrap">
      <summary>Gets or sets whether the cell type supports word wrap.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.IWordWrapSupport2">
      <summary>Interface implemented by cell type objects that provides information about word wrap support.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.IWordWrapSupport2.AllowGetPreferredRowHeigh">
      <summary>
        <c>true</c> if the component allows the row to get the preferred row height for word wrap; otherwise, <c>false</c>.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCodeDisplayMode">
      <summary>Specifies the display mode of the barcode.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCodeDisplayMode.Image">
      <summary>Displays the image of the barcode</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCodeDisplayMode.Text">
      <summary>Displays the value of the barcode in plain text</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CharacterSet">
      <summary>Specifies the character set for valid cell contents.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.Ascii">
      <summary>Accepts any of the ASCII characters</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.Alpha">
      <summary>Accepts letters (alphabetic characters) only</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.AlphaNumeric">
      <summary>Accepts letters (alphabetic characters) or numbers (numeric characters) only</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CharacterSet.Numeric">
      <summary>Accepts numbers (numeric characters) only</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ColorPickerStyle">
      <summary>Specifies how the color picker cell renders.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ColorPickerStyle.Fill">
      <summary>Fills the entire client area with the color</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ColorPickerStyle.FillWithText">
      <summary>Fills the entire client area with text overlay</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ColorPickerStyle.Boxed">
      <summary>Displays the color in a box in the client area</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ColorPickerStyle.BoxedWithText">
      <summary>Displays the color in a box in the client area with text displayed alongside the box</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat">
      <summary>Specifies the formatting of the currency symbol and negative sign in currency.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.UseRegional">
      <summary>[-1] Displays the currency symbol and the negative sign according to the Windows regional settings</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSymbolBefore">
      <summary>[0] Displays the currency symbol and the value within parentheses, as in ($1)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSymbolBefore">
      <summary>[1] Displays the negative sign and the currency symbol before the value, as in -$1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSignBefore">
      <summary>[2] Displays the currency symbol and the negative sign before the value, as in $-1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolBeforeSignAfter">
      <summary>[3] Displays the currency symbol before the value and the negative sign after, as in $1-</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSymbolAfter">
      <summary>[4] Displays the currency symbol after the value and within parentheses, as in (1$)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignBeforeSymbolAfter">
      <summary>[5] Displays the negative sign before the value and the currency symbol after, as in -1$</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSymbolAfter">
      <summary>[6] Displays the negative sign and the currency symbol after the value, as in 1-$</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSignAfter">
      <summary>[7] Displays the currency symbol and the negative sign after the value, as in 1$-</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignBeforeSpaceSymbolAfter">
      <summary>[8] Displays the negative sign before the value and a space with the currency symbol after the value, as in -1 $</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSymbolSpaceBefore">
      <summary>[9] Displays the negative sign and the currency symbol with a space before the value, as in -$ 1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SpaceSymbolSignAfter">
      <summary>[10] Displays the currency symbol and the negative sign with a space after the value, as in 1 $-</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSpaceBeforeSignAfter">
      <summary>[11] Displays the currency symbol with a space before the value and the negative sign after the value, as in $ 1-</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SymbolSpaceSignBefore">
      <summary>[12] Displays the currency symbol, space, and negative sign before the value, as in $ -1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.SignSpaceSymbolAfter">
      <summary>[13] Displays the negative sign, space, and currency symbol after the value, 1- $</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSymbolSpaceBefore">
      <summary>[14] Displays the currency symbol and space before the value and within parentheses, as in ($ 1)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyNegativeFormat.ParenthesesSpaceSymbolAfter">
      <summary>[15] Displays the currency symbol and a space after the value and within parentheses, as in (1 $)</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat">
      <summary>Specifies the formatting of the currency symbol and positive sign in a currency cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.UseRegional">
      <summary>[-1] Displays the currency symbol according to the Windows regional setting</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolBefore">
      <summary>[0] Displays the currency symbol before the value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolAfter">
      <summary>[1] Displays the currency symbol after the value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolBeforeWithSpace">
      <summary>[2] Displays the currency symbol with a space before the value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.CurrencyPositiveFormat.CurrencySymbolAfterWithSpace">
      <summary>[3] Displays the currency symbol with a space after the value</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.DateTimeEditorValue">
      <summary>Specifies what is written out to the data model for a date-time cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeEditorValue.String">
      <summary>[0] Writes the text value of the cell to the model</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeEditorValue.DateTime">
      <summary>[1] Writes the DateTime object of the cell to the model</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeEditorValue.DateSerial">
      <summary>[2] Writes the serial value (double-precision, floating-point) of the cell date to the model</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.DateTimeFormat">
      <summary>Specifies the formatting for date and time.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.ShortDate">
      <summary>Uses the abbreviated form for the date</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.LongDate">
      <summary>Uses the long form for the date</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.ShortDateWithTime">
      <summary>Uses the abbreviated form for the date and time</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.LongDateWithTime">
      <summary>Uses the long form for the date and time</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.TimeOnly">
      <summary>Uses the time only (no date)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.DateTimeFormat.UserDefined">
      <summary>Uses the user-defined date and time format</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EditorFocusCursorPosition">
      <summary>Specifies the position of the pointer when the edit control receives the focus.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorFocusCursorPosition.Inherit">
      <summary>Specifies that the position is determined by the editor type and selection policy</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorFocusCursorPosition.MouseLocation">
      <summary>Positions the pointer at the location of the pointer device, without any text selected</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorFocusCursorPosition.FirstInputPosition">
      <summary>Positions the pointer at the first input position in the control, without any text selected</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorFocusCursorPosition.End">
      <summary>Positions the pointer at the end of the text in the control, without any text selected</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorFocusCursorPosition.SelectAll">
      <summary>Positions the pointer at the beginning of the text in the control</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.EditorValue">
      <summary>Specifies what is written out to the data model for a selected item, from certain cell types that offer a selection of multiple values.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorValue.String">
      <summary>[0] Writes the text value of the selected item to the model</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorValue.Index">
      <summary>[1] Writes the index of the selected item to the model</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.EditorValue.ItemData">
      <summary>[2] Writes the corresponding data of the selected item to the model</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FilterBarContextMenuType">
      <summary>Sets the type of context menu supported for the IFilterItem.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FilterBarContextMenuType.Color">
      <summary>Specifies the icon and color context menu</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FilterBarContextMenuType.Number">
      <summary>Specifies the value context menu</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FilterBarContextMenuType.DateTime">
      <summary>Specifies the date and time context menu</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FilterBarContextMenuType.Text">
      <summary>Specifies the text context menu</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision">
      <summary>Specifies the precision of the fraction denominator for numeric cells that display as fractions.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Auto">
      <summary>Sets the precision automatically.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Halves">
      <summary>Sets the precision to halves.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Quarters">
      <summary>Sets the precision to quarters.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Eighths">
      <summary>Sets the precision to eighths.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Sixteenths">
      <summary>Sets the precision to sixteenths.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.ThirtySeconds">
      <summary>Sets the precision to thirty-seconds.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.SixtyFourths">
      <summary>Sets the precision to sixty-fourths.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Tenths">
      <summary>Sets the precision to tenths.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Hundredths">
      <summary>Sets the precision to hundredths.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Thousandths">
      <summary>Sets the precision to thousandths.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.FractionDenominatorPrecision.Custom">
      <summary>Sets the precision to a custom value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.LeadingZero">
      <summary>Specifies whether to display leading zeros in numeric cell types.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.LeadingZero.UseRegional">
      <summary>Displays leading zeros according to the Windows regional settings</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.LeadingZero.No">
      <summary>Does not display leading zeros</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.LeadingZero.Yes">
      <summary>Displays leading zeros</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.ListResizeColumns">
      <summary>Specifies how the columns in the drop-down list are sized when displayed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ListResizeColumns.None">
      <summary>[0] Does not size the columns</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ListResizeColumns.ByDataType">
      <summary>[1] Sizes columns based on their data type</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.ListResizeColumns.FitWidestItem">
      <summary>[2] Sizes the columns by fitting the widest item</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.NegativeFormat">
      <summary>Specifies the display of the negative sign in the cell contents.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.UseRegional">
      <summary>[-1] Displays the value according to the Windows regional settings</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.Parentheses">
      <summary>[0] Displays the value within parentheses, as in (1)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignBefore">
      <summary>Displays the negative sign (to the left) before the value, as in -1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignBeforeWithSpace">
      <summary>Displays the negative sign with a space (to the left) before the value, as in - 1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignAfter">
      <summary>Displays the negative sign (to the right) after the value, as in 1-</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.NegativeFormat.NegativeSignAfterWithSpace">
      <summary>Displays the negative sign with a space (to the right) after the value, as in 1 -</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.PercentFormat">
      <summary>Specifies the display of the percent symbol in the cell contents.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignBefore">
      <summary>[0] Displays the percent symbol immediately before the value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignAfter">
      <summary>[1] Displays the percent symbol immediately after the value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignBeforeWithSpace">
      <summary>[2] Displays the percent symbol with a single space before the value</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentFormat.PercentSignAfterWithSpace">
      <summary>[3] Displays the percent symbol with a single space after the value</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.PercentNegativeFormat">
      <summary>Specifies the display of negative values in a percent cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.UseRegional">
      <summary>[-1] Displays the negative percent value in the format set by the Windows regional settings</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.PercentAfterWithSpace">
      <summary>[0] Displays the negative percent value with a space and the percent symbol following the number</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.PercentAfter">
      <summary>[1] Displays the negative percent value with the percent symbol following the number</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentNegativeFormat.PercentBefore">
      <summary>[2] Displays the negative percent value with the percent symbol before the number</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.PercentPositiveFormat">
      <summary>Specifies the display of positive values in a percent cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.UseRegional">
      <summary>[-1] Displays the positive percent value in the format set by the Windows regional settings</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.PercentAfterWithSpace">
      <summary>[0] Displays the positive percent value with a space and the percent symbol following the number</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.PercentAfter">
      <summary>[1] Displays the positive percent value with the percent symbol following the number</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.PercentPositiveFormat.PercentBefore">
      <summary>[2] Displays the positive percent value with the percent symbol before the number</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate">
      <summary>Specifies the location coordinate on a four-quadrant graph.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.PositiveXAxis">
      <summary>Specifies the positive x-axis</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.FirstQuadrant">
      <summary>Specifies the first quadrant</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.PositiveYAxis">
      <summary>Specifies the positive y-axis</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.SecondQuadrant">
      <summary>Specifies the second quadrant</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.NegativeXAxis">
      <summary>Specifies the negative x-axis</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.ThirdQuadrant">
      <summary>Specifies the third quadrant</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.NegativeYAxis">
      <summary>Specifies the negative y-axis</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.RotationAngle.Coordinate.FourthQuadrant">
      <summary>Specifies the fourth quadrant</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.UnknownTextStyle">
      <summary>Specifies which text is displayed for an indeterminate color value in the color picker.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.UnknownTextStyle.Blank">
      <summary>Does not display any text</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.UnknownTextStyle.Name">
      <summary>Displays the color object name</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.UnknownTextStyle.Custom">
      <summary>Displays the custom value for unknown colors</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.FilterBarDropDownSelectionChangingEventHandler">
      <summary>Represents a defined method that handles the selection changing in the FilterBar editor.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorCancelEventHandler">
      <summary>Represents a defined method that handles the canceling of the <see cref="E:FarPoint.Win.Spread.CellType.GeneralEditor.SubEditorOpening" /> event for the component.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorCancelEventHandler">
      <summary>Represents a defined method that handles the canceling of the <see cref="E:FarPoint.Win.Spread.CellType.RichTextEditor.SubEditorOpening" /> event for the FpSpread component.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of RichTextEditor.SubEditorCancelEventArgs class that contains event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.BarAdjust">
      <summary>Represents the bar adjustment for the barcode. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.#ctor">
      <summary>Creates a new bar adjustment with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.#ctor(System.String,System.String)">
      <summary>Creates a new bar adjustment with specified string values.</summary>
      <param name="x">X adjustment</param>
      <param name="y">Y adjustment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new bar adjustment with specified numeric values.</summary>
      <param name="x">X adjustment</param>
      <param name="y">Y adjustment</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.X">
      <summary>Gets or sets the adjustment value in the horizontal (X) direction.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.Y">
      <summary>Gets or sets the adjustment value in the vertical (Y) direction.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarAdjust.op_Implicit(FarPoint.Win.Spread.CellType.BarCode.BarAdjust)~System.Drawing.Point">
      <summary>Implicit operators the specified object.</summary>
      <param name="obj">Object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper">
      <summary>Represents a barcode helper that provides some static convert methods.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.ConvertBitmap(System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color)">
      <summary>Converts the 24-bpp bitmap to a 1-bpp bitmap.</summary>
      <param name="bmp1">Input bitmap to convert</param>
      <param name="foreColor">Color of the foreground</param>
      <param name="backColor">Color of the background</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.ConvertMilliMetric(System.String,System.Int32)">
      <summary>Converts the value in another unit to an equivalent value in metric (millimeters).</summary>
      <param name="val">Value in another unit of measure</param>
      <param name="dpi">Resolution in dpi (dots per inch)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.ConvertParamToNumber(System.String,FarPoint.Win.Spread.CellType.BarCode.Unit)">
      <summary>Removes the unit of measure name from the parameter.</summary>
      <param name="param">Parameter string</param>
      <param name="unit">Unit of measure name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.ConvertToNewUnit(System.String,FarPoint.Win.Spread.CellType.BarCode.Unit,System.Int32)">
      <summary>Converts the parameter in one unit of measure to an equivalent value in another unit of measure.</summary>
      <param name="valInOldUnit">Value in old units</param>
      <param name="newUnit">New units</param>
      <param name="dpi">Resolution in dpi (dots per inch)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.ConvertUnit(System.Double,FarPoint.Win.Spread.CellType.BarCode.Unit,System.Int32)">
      <summary>Converts the value in metric (millimeters) to an equivalent value in another unit of measure.</summary>
      <param name="val">Value in millimeters</param>
      <param name="unit">New unit of measure</param>
      <param name="dpi">Resolution in dpi (dots per inch)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeHelper.CorrectParam(System.String,FarPoint.Win.Spread.CellType.BarCode.Unit)">
      <summary>Corrects the parameter, appending the correct name of the unit of measure to the value.</summary>
      <param name="val">Input value to correct</param>
      <param name="unit">Units name to append</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.BarCodeType">
      <summary>Represents the type of barcode. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
      <remarks>Users can use the derived classes of this class to create these barcode types: Code128, Code39, Code49, EAN128, ITF, JAN13, JAN8, JapanesePostal, NW7, PDF417, PostNet, QRCode, UPC.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.BarCode.BarCodeType" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeType.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarCodeType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.BarSize">
      <summary>Represents the size of the entire bar code. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarSize.#ctor">
      <summary>Creates a new barcode size with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarSize.#ctor(System.String,System.String)">
      <summary>Creates a new barcode size with the specified string values.</summary>
      <param name="width">Barcode width</param>
      <param name="height">Barcode height</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarSize.#ctor(System.Single,System.Single)">
      <summary>Creates a new barcode size with the specified numeric values.</summary>
      <param name="width">Barcode width</param>
      <param name="height">Barcode height</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.BarSize.Height">
      <summary>Gets or sets the height of the barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.BarSize.Width">
      <summary>Gets or sets the width of the barcode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarSize.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarSize.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.BarSize.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Code128">
      <summary>Represents the Code128 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code128.#ctor">
      <summary>Creates a new Code128 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code128.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Code128 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code128.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Code39">
      <summary>Represents the Code39 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Code39 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.#ctor">
      <summary>Creates a new Code39 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.#ctor(System.String)">
      <summary>Creates a new Code39 barcode with the specified ASCII settings.</summary>
      <param name="str">ASCII settings</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Code39.FullAscii">
      <summary>Gets or sets whether Code39 is in full ASCII mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.Equals(System.Object)">
      <summary>Determines whether the specified vlaue is equivalent to this barcode.</summary>
      <param name="val">Value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code39.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Code49">
      <summary>Represents Code49 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Code49 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.#ctor">
      <summary>Creates a new Code49 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.#ctor(System.String)">
      <summary>Creates a new Code39 barcode with the specified value.</summary>
      <param name="str">Input value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Code49.GroupNo">
      <summary>Gets or sets the group number.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Code49.Grouping">
      <summary>Gets or sets whether grouping is allowed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code49.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Code93">
      <summary>Represents the Code93 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code93.#ctor">
      <summary>Creates a new Code93 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code93.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new Code93 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Code93.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.EAN128">
      <summary>Represents the EAN128 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.EAN128.#ctor">
      <summary>Creates a new EAN128 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.EAN128.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new EAN128 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.EAN128.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.ITF">
      <summary>Represents the ITF barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new ITF barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.#ctor">
      <summary>Creates a new ITF barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.#ctor(System.String)">
      <summary>Creates a new ITF barcode with the specified value.</summary>
      <param name="str">Input value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.ITF.BearerBar">
      <summary>Gets or sets whether to display the ITF bearer bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.Equals(System.Object)">
      <summary>Returns whether the value equals a specified value.</summary>
      <param name="val">Value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ITF.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.JAN13">
      <summary>Represents the JAN13 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JAN13.#ctor">
      <summary>Initializes a new instance of the <see cref="T:JAN13" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JAN13.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:JAN13" /> class.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JAN13.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.JAN8">
      <summary>Represents the JAN8 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JAN8.#ctor">
      <summary>Creates a new JAN8 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JAN8.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new JAN8 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JAN8.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.JapanesePostal">
      <summary>Represents the Japanese Postal barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JapanesePostal.#ctor">
      <summary>Creates a new JapanesePostal barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JapanesePostal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new JapanesePostal barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.JapanesePostal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.ModuleSize">
      <summary>Represents the size of the bar module for the barcode. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.#ctor">
      <summary>Initializes a new instance of the <see cref="T:ModuleSize" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:ModuleSize" /> class.</summary>
      <param name="narrow">Size of the narrow module</param>
      <param name="broad">Size of the broad module</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.#ctor(System.Single,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:ModuleSize" /> class.</summary>
      <param name="narrow">Size of the narrow module</param>
      <param name="broad">Size of the broad module</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.Broad">
      <summary>Gets or sets the module size of the thick bar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.Narrow">
      <summary>Gets or sets the module size of the thin bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ModuleSize.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.NW7">
      <summary>Represents the NW7 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.NW7.#ctor">
      <summary>Creates a new NW7 barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.NW7.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new NW7 barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.NW7.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.PDF417">
      <summary>Represents the PDF417 barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new PDF417 barcode type from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.#ctor">
      <summary>Creates a new PDF417 barcode type with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.#ctor(System.String)">
      <summary>Creates a new PDF417 barcode type with the specified value.</summary>
      <param name="str">Input value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.PDF417.Column">
      <summary>Gets or sets the number of PDF417 columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.PDF417.ErrorLevel">
      <summary>Gets or sets the PDF417 error correction level.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.PDF417.Row">
      <summary>Gets or sets the number of PDF417 rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.PDF417.Type">
      <summary>Gets or sets the type of PDF417.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PDF417.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.PostNet">
      <summary>Represents the PostNet barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PostNet.#ctor">
      <summary>Creates a new PostNet barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PostNet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new PostNet barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.PostNet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.QRCode">
      <summary>Represents the QR Code barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new QR Code barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.#ctor">
      <summary>Creates a new QR Code barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.#ctor(System.String)">
      <summary>Creates a new QR Code barcode with the specified values.</summary>
      <param name="str">Input value string</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.QRCode.Connection">
      <summary>Gets or sets whether to use the connection function.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.QRCode.ConnectionNumber">
      <summary>Gets or sets the number of the connection function.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.QRCode.ErrorLevel">
      <summary>Gets or sets the QR Code error correction level.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.QRCode.Mask">
      <summary>Gets or sets the pattern used at the masking of QR Code.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.QRCode.Model">
      <summary>Gets or sets the model of QR Code.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.QRCode.Version">
      <summary>Gets or sets the version of QR Code.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.QRCode.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Quiet">
      <summary>Represents the left and right padding of the barcode. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Quiet.#ctor">
      <summary>Creates a new barcode padding with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Quiet.#ctor(System.String,System.String)">
      <summary>Creates a new barcode padding with the specified string values.</summary>
      <param name="left">Left padding</param>
      <param name="right">Right padding</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Quiet.#ctor(System.Single,System.Single)">
      <summary>Creates a new barcode padding with the specified numeric values.</summary>
      <param name="left">Left padding</param>
      <param name="right">Right padding</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Quiet.Left">
      <summary>Gets or sets the left padding of the barcode.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Quiet.Right">
      <summary>Gets or sets the right padding of the barcode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Quiet.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Quiet.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Quiet.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Resolution">
      <summary>Represents the resolution in dots per inch. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Resolution" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Resolution" /> class.</summary>
      <param name="dpiX">The dpi X.</param>
      <param name="dpiY">The dpi Y.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Resolution" /> class.</summary>
      <param name="dpiX">The dpi X.</param>
      <param name="dpiY">The dpi Y.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Resolution.DpiX">
      <summary>Gets or sets horizontal (X) resolution.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.Resolution.DpiY">
      <summary>Gets or sets vertical (Y) resolution.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.Resolution.op_Implicit(FarPoint.Win.Spread.CellType.BarCode.Resolution)~System.Drawing.Point">
      <summary>Implicit operators the specified object.</summary>
      <param name="obj">Object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.UPC">
      <summary>Represents the UPC barcode type and any particular settings of this type. This class cannot be inherited.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new UPC barcode from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.#ctor">
      <summary>Creates a new UPC barcode with default values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.#ctor(System.String)">
      <summary>Creates a new UPC barcode with the specified values.</summary>
      <param name="str">Input value string</param>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.UPC.AddValue">
      <summary>Gets or sets the value added for the UPC add-on version.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.CellType.BarCode.UPC.Type">
      <summary>Gets or sets the type of UPC.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="val">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" />.</param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.UPC.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.ValueBase">
      <summary>Represents the base class for the barcode value type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ValueBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.CellType.BarCode.ValueBase" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.CellType.BarCode.ValueBase.NotifyChangeValue">
      <summary>Notifies when the property changes value.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.ImageFormat">
      <summary>Specifies the file format of the image file.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.ImageFormat.Gif">
      <summary>[1] Indicates the image file is Graphics Interchange Format (GIF), an 8-bit-per-pixel bitmap image format</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.ImageFormat.Png">
      <summary>[2] Indicates the image file is Portable Network Graphics (PNG), a bitmapped image format that employs lossless data compression</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.ImageFormat.Jpeg">
      <summary>[3] Indicates the image file follows the the JPEG (Joint Photographic Experts) standard for file compression, also referred to as JPEG Interchange Format</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.MessagePosition">
      <summary>Specifies the position in the cell of the barcode message.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.MessagePosition.Default">
      <summary>[0] Indicates that the message appears in the default position</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.MessagePosition.Center">
      <summary>[1] Indicates that the message is centered in the cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.MessagePosition.Left">
      <summary>[2] Indicates that the message is left-justified in the cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.MessagePosition.Right">
      <summary>[3] Indicates that the message is right-justified in the cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.MessagePosition.Even">
      <summary>[4] Indicates that the message is full-justified (evenly spaced) in the cell</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.PDF417.PDF417Type">
      <summary>Specifies the PDF417 types.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.PDF417.PDF417Type.Normal">
      <summary>[0] Normal type of PDF417</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.PDF417.PDF417Type.Simple">
      <summary>[1] Simple type of PDF417</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeErrorLevel">
      <summary>Specifies the QR Code error levels.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeErrorLevel.L">
      <summary>[1] Error level low (7%)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeErrorLevel.M">
      <summary>[0] Error level middle (15%)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeErrorLevel.Q">
      <summary>[3] Error level normal (25%)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeErrorLevel.H">
      <summary>[2] Error level high (30%)</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask">
      <summary>Specifies the QR Code mask.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Auto">
      <summary>[-1] Auto</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask000">
      <summary>[0] Mask000</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask001">
      <summary>[1] Mask001</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask010">
      <summary>[2] Mask010</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask011">
      <summary>[3] Mask011</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask100">
      <summary>[4] Mask100</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask101">
      <summary>[5] Mask101</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask110">
      <summary>[6] Mask110</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeMask.Mask111">
      <summary>[7] Mask111</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeModel">
      <summary>Specifies the QR Code models.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeModel.Model1">
      <summary>[1] Model1</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.QRCode.QRCodeModel.Model2">
      <summary>[2] Model2</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Rotation">
      <summary>Specifies the rotation angle of the barcode.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Rotation.Rotation0">
      <summary>[0] Indicates that the barcode is rotated 0 degrees (not rotated)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Rotation.Rotation90">
      <summary>[90] Indicates that the barcode is rotated 90 degrees clockwise</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Rotation.Rotation180">
      <summary>[180] Indicates that the barcode is rotated 180 degrees clockwise</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Rotation.Rotation270">
      <summary>[270] Indicates that the barcode is rotated 270 degrees clockwise</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.Unit">
      <summary>Specifies the units of measure of the barcode dimensions.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Unit.Millimeter">
      <summary>[1] Indicates that the unit of measure is millimeters</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Unit.Inch">
      <summary>[2] Indicates that the unit of measure is inches</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Unit.Point">
      <summary>[3] Indicates that the unit of measure is points</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Unit.Twip">
      <summary>[4] Indicates that the unit of measure is twips</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.Unit.Pixel">
      <summary>[5] Indicates that the unit of measure is pixels</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.CellType.BarCode.UPC.UPCType">
      <summary>Specifies the UPC types.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.UPC.UPCType.UPC_A">
      <summary>[1] Indicates that UPC type is UPC-A</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.UPC.UPCType.UPC_E">
      <summary>[2] Indicates that UPC type is UPC-E</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.UPC.UPCType.UPC_Add2">
      <summary>[3] Indicates that UPC type is UPC Add-2</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.CellType.BarCode.UPC.UPCType.UPC_Add5">
      <summary>[4] Indicates that UPC type is UPC Add-5</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ArraySegmentData">
      <summary>Represents a segment which contains an array of double value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ArraySegmentData.#ctor(System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ArraySegmentData" /> class.</summary>
      <param name="array">The array.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ArraySegmentData.Count">
      <summary>Gets the count.</summary>
      <value>The count.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ArraySegmentData.DataType">
      <summary>Gets or sets the type of the data.</summary>
      <value>The type of the data.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ArraySegmentData.ContainStringValue">
      <summary>Indicates that whether the segment contains a string value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ArraySegmentData.GetValue(System.Int32)">
      <summary>Gets the value.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ArraySegmentData.DataChanged">
      <summary>Occurs when data is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.CellRangeSegmentData">
      <summary>Represents a segment which gets data from a cell range in SheetView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Chart.ChartDataSetting)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.CellRangeSegmentData" /> class.</summary>
      <param name="sheetName">Name of the sheet.</param>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="rowCount">The row count.</param>
      <param name="columnCount">The column count.</param>
      <param name="dataSetting">The data setting.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Chart.ChartDataSetting)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.CellRangeSegmentData" /> class.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="rowCount">The row count.</param>
      <param name="columnCount">The column count.</param>
      <param name="dataSetting">The data setting.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.CellRangeSegmentData.Count">
      <summary>Gets the number of items in this instance.</summary>
      <value>The count.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.CellRangeSegmentData.DataType">
      <summary>Gets or sets the type of the data.</summary>
      <value>The type of the data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.CellRangeSegmentData.ReferenceError">
      <summary>Gets a value that indicates whether the current cell range is an invalid reference.</summary>
      <value>
        <c>true</c> if the current cell range is an invalid reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.CellRangeSegmentData.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
      <value>The name of the sheet.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.CellRangeSegmentData.SheetView">
      <summary>Gets or sets the sheet view.</summary>
      <value>The sheet view.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.ContainStringValue">
      <summary>Indicates whether the segment contains a string value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.ContainsDateTimeOnly">
      <summary>Determines whether the segment contains date time only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:FarPoint.Win.Spread.Chart.CellRangeSegmentData" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.GetValue(System.Int32)">
      <summary>Gets the value.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.OnDataChanged(FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs)">
      <summary>Fires DataChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.CellRangeSegmentData.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.CellRangeSegmentData.DataChanged">
      <summary>Occurs when data of one cell in the cell range is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ChartDataSetting">
      <summary>Represents the data settings for SpreadChart.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartDataSetting.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ChartDataSetting" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartDataSetting.#ctor(FarPoint.Win.Spread.Chart.EmptyValueStyle,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ChartDataSetting" /> class.</summary>
      <param name="emptyValueStyle">The empty value style.</param>
      <param name="showHiddenData">if set to <c>true</c> [show hidden data].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartDataSetting.#ctor(FarPoint.Win.Spread.Chart.EmptyValueStyle,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ChartDataSetting" /> class.</summary>
      <param name="emptyValueStyle">The empty value style.</param>
      <param name="showHiddenData">if set to <c>true</c> [show hidden data].</param>
      <param name="notNumberValueStyle">The not number value style.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartDataSetting.EmptyValueStyle">
      <summary>Gets or sets the empty value style.</summary>
      <value>The empty value style.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartDataSetting.NotANumberAsZero">
      <summary>Gets or gets not number as zero.</summary>
      <value>
        <c>true</c> the not number value will be as zero; otherwise <c>false</c></value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartDataSetting.ShowHiddenData">
      <summary>Gets or sets a value that indicates whether the chart displays all hidden data.</summary>
      <value>
        <c>true</c> if chart displays all hidden data; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartDataSetting.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:PropertyChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartDataSetting.OnPropertyChanging(FarPoint.Win.Spread.Model.PropertyChangingEventArgs)">
      <summary>Raises the <see cref="E:PropertyChanging" /> event.</summary>
      <param name="e">The <see cref="T:System.ComponentModel.PropertyChangingEventArgs" /> instance that contains the event data.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartDataSetting.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartDataSetting.PropertyChanging">
      <summary>Occurs when a property value is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ChartIndicator">
      <summary>Represents the indicator for SpreadChart.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartIndicator.#ctor(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ChartIndicator" /> class.</summary>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartIndicatorAdapter.CanCombine(System.Boolean)">
      <summary>Rescans the data indicators.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartIndicatorAdapter.CombineData">
      <summary>Combines the data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartIndicatorAdapter.CreateIndicator">
      <summary>Creates the indicator.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ChartSelectDataSource">
      <summary>Represents SelectData dialog for SpreadChart.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ChartSelectDataSource" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.#ctor(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.ChartSelectDataSource" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.ActiveSheetView(System.String,FarPoint.Win.Spread.SheetView)">
      <summary>Actives the sheet view.</summary>
      <param name="formula">The formula.</param>
      <param name="defaultSheetView">The default sheet view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.Hide">
      <summary>Conceals the control from the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.OnSelectionChanged(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Called when user finished selecting cell range.</summary>
      <param name="cellRange">The cell range.</param>
      <param name="allSelectedCellRanges" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.OnShown(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes a dialog box key.</summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
      <returns>true if the keystroke was processed and consumed by the control; otherwise, false to allow further processing.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.ProcessMnemonic(System.Char)">
      <summary>Processes the mnemonic.</summary>
      <param name="charCode">The char code.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.ProcessTabKey(System.Boolean)">
      <param name="forward">true to cycle forward through the controls in the <see cref="T:System.Windows.Forms.ContainerControl" />; otherwise, false.</param>
      <returns>true if a control is selected; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.RestoreFromCompactMode">
      <summary>Restores from compact mode.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.Show">
      <summary>Displays the control to the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.UpdateSelectionCellRange(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Updates the selection cell range.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="allSelectedCellRanges">All selected cell ranges.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartSelectDataSource.WndProc(System.Windows.Forms.Message@)">
      <summary>This function handles all messages which is dispatched to the window.</summary>
      <param name="m">The m.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ChartShape">
      <summary>Represents an abstract class which contains the most basic behavior for SpreadChart. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.FpChart" /> class.</summary>
      <param name="info">The info.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.#ctor(FarPoint.Win.Chart.ChartViewType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.FpChart" /> class.</summary>
      <param name="viewType">Type of the view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.FpChart" /> class. The created chart will be displayed in 2D view.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.AlignHorz">
      <summary>Gets or sets the horizontal alignment of the contents of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.AlignText">
      <summary>Gets or sets the text alignment for the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.AlignVert">
      <summary>Gets or sets the vertical alignment of the contents of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.AllowBackgroundImageRotation">
      <summary>Gets or sets the background image rotation allowed flag of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.AlphaBlendBackColor">
      <summary>Gets or sets the alpha-blend value of the background color of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.AlphaBlendShadowColor">
      <summary>Gets the amount of transparency of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Anchor">
      <summary>Gets or sets whether the object is anchored.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.BackColor">
      <summary>Gets or sets the background color for the control.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.BackColorPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.BackgroundImage">
      <summary>Gets or sets the background image for the control.</summary>
      <example>
        <code lang="csharp">
            control.BackgroundImage = new FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"));
            control.MarginTop = 3;
            control.MarginBottom = 3;
            </code>
        <code lang="vb">
            control.BackgroundImage = New FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"))
            control.MarginTop = 3
            control.MarginBottom = 3
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.BackgroundImagePriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.BackgroundImageRotationAngle">
      <summary>Gets or sets the background image rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Border">
      <summary>Gets or sets the border for the element.</summary>
      <example>
        <code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText;
            element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false);
            </code>
        <code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText
            element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False)
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.CanRenderText">
      <summary>Gets or sets whether the shape renders its text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.CanRotate">
      <summary>Gets or sets whether the user is allowed to rotate the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.CancelMouse">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.CancelMousePriv">
      <summary>Internal use only. Cancel mouse.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ChartName">
      <summary>Gets or sets the name of the chart.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ContainedObjects">
      <summary>Gets or sets the contained objects of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.DesignMode">
      <summary>Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component" /> is currently in design mode.</summary>
      <value>true if the <see cref="T:System.ComponentModel.Component" /> is in design mode; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.DrawFocusRectangle">
      <summary>Gets or sets the focus rectangle drawing style in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.DrawFocusRectanglePriv">
      <summary>Internal use only. Draw focus rectangle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Elements">
      <summary>Gets the collection of IElement-derived objects that the current ElementWindowless object contains.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.FlipHorizontal">
      <summary>Gets or sets a value indicating whether the shape is flip horizontal.</summary>
      <value>
        <c>true</c> if the shape is flip horizontal; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.FlipVertical">
      <summary>Gets or sets a value indicating whether the shape is flip vertical.</summary>
      <value>
        <c>true</c> if the shape is flip vertical]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Font">
      <summary>Gets or sets the font for the element.</summary>
      <example>
        <code lang="csharp">
            Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold);
            element.Font = f;
            element.State = FarPoint.Win.ElementState.Inverted;
            </code>
        <code lang="vb">
            Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold)
            element.Font = f
            element.State = FarPoint.Win.ElementState.Inverted
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.FontPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ForeColor">
      <summary>Gets or sets the foreground color of the control.</summary>
      <value>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ForeColorPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ForegroundImage">
      <summary>Gets or sets the foreground image for the element.</summary>
      <example>
        <code lang="csharp">
            control.ForegroundImage = new FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"));
            control.MarginTop = 3;
            control.MarginBottom = 3;
            </code>
        <code lang="vb">
            control.ForegroundImage = New FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"))
            control.MarginTop = 3
            control.MarginBottom = 3
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ForegroundImagePriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Gradient">
      <summary>Gets or sets the gradient for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Left">
      <summary>Gets or sets the X-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginBottom">
      <summary>Gets or sets the margin between the bottom of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginBottomPriv">
      <summary>Internal use only. Bottom margin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginLeft">
      <summary>Gets or sets the margin between the left of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginLeftPriv">
      <summary>Internal use only. Left margin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginRight">
      <summary>Gets or sets the margin between the right of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginRightPriv">
      <summary>Internal use only. Right margin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginTop">
      <summary>Gets or sets the margin between the top of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.MarginTopPriv">
      <summary>Internal use only. Top margin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Model">
      <summary>Gets or sets the chart model.</summary>
      <value>The model.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Name">
      <summary>Gets or sets the name of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ParentPriv">
      <summary>Internal use only. Parent.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Picture">
      <summary>Gets or sets the picture for the element.</summary>
      <example>
        <code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            </code>
        <code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureMargin">
      <summary>Gets or sets the margin between the picture and the text in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureMarginPriv">
      <summary>Internal use only. Picture margin.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureOrientation">
      <summary>Gets or sets the orientation of the picture.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureOrientationPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PicturePriv">
      <summary>Internal use only. Picture.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureRotationAngle">
      <summary>Gets or sets the picture rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureTransparencyColor">
      <summary>Gets or sets the picture transparency color for the element.</summary>
      <example>
        <code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            </code>
        <code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.PictureTransparencyTolerance">
      <summary>Gets or sets the picture transparency tolerance for the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Rectangle">
      <summary>Gets the rectangular coordinates of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Redraw">
      <summary>Gets or sets whether the element is allowed to paint.</summary>
      <example>
        <code lang="csharp">
            private void button1_Click(object sender, System.EventArgs e)
            {
            element.Redraw = true;
            }
            </code>
        <code lang="vb">
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            element.Redraw = True
            End Sub
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.RegionPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.RotationAngle">
      <summary>Gets or sets the rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.SelectedObject">
      <summary>Gets or sets the selected object. Could be a plot area, legend area, label area or series info.</summary>
      <value>The selected object.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.SeriesContainsData">
      <summary>Gets all series which can contains data.</summary>
      <value>The series contains data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShadowColor">
      <summary>Gets or sets the color of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShadowDirection">
      <summary>Gets or sets the direction of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShadowOffset">
      <summary>Gets or sets the amount of offset of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShadowOffsetX">
      <summary>Gets or sets the amount of horizontal offset of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShadowOffsetY">
      <summary>Gets or sets the amount of vertical offset of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Shape">
      <summary>Gets or sets the shape of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShapeOutlineColor">
      <summary>Gets or sets the shape outline color for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShapeOutlineStyle">
      <summary>Gets or sets the shape outline style for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ShapeOutlineThickness">
      <summary>Gets or sets the shape outline thickness for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.SheetView">
      <summary>Gets or sets the sheet view.</summary>
      <value>The sheet view.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Site">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <value>The <see cref="T:System.ComponentModel.ISite" /> object associated with the component; or null, if the component does not have a site.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.State">
      <summary>Gets or sets the state of the element.</summary>
      <example>
        <code lang="csharp">
            Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold);
            element.Font = f;
            element.State = FarPoint.Win.ElementState.Inverted;
            </code>
        <code lang="vb">
            Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold)
            element.Font = f
            element.State = FarPoint.Win.ElementState.Inverted
            </code>
      </example>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.StateNotifyList">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Text">
      <summary>Gets or sets the text associated with this control.</summary>
      <value>The text associated with this control.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextOrientation">
      <summary>Gets or sets the orientation of the text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextOrientationPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextRotationAngle">
      <summary>Gets or sets the text rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextRotationAnglePriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextWrap">
      <summary>Gets or sets whether to wrap the text in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.TextWrapPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.Top">
      <summary>Gets or sets the Y-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ChartShape.ViewType">
      <summary>Gets or sets whether the chart is rendered in 2D or 3D.</summary>
      <value>The type of the view.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>Internal use only.</summary>
      <param name="fmt">String format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.AttachMouseListeners">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.BeginUpdate">
      <summary>Begins the update.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ChangingCancel">
      <summary>Changings the cancel.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Clone">
      <summary>Creates and returns a copy of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.CopyTo(System.Object)">
      <summary>Copies the properties of this object in presentation space (drawing space) to the target object.</summary>
      <param name="target">Target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.CreateNewInstance">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.Chart.ChartShape" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DeserializeObjectProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DeserializePositionAndSize(System.Xml.XmlNodeReader)">
      <summary>Deserializes the position and size.</summary>
      <param name="r">XmlNodeReader from which to read (load) the position and size</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DeserializeShapeProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DetachListeners">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoClick(System.Object,System.EventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoMouseEnter(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoMouseLeave(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoMove(System.Drawing.Point)">
      <summary>Allows the object to be moved.</summary>
      <param name="pt">Point location of object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoRotate(System.Drawing.Point)">
      <summary>Allows the object to rotate using the specified point to determine the rotation angle.</summary>
      <param name="pt">Point with which to determine rotation angle.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.DoSize(System.Int32,System.Drawing.Point)">
      <summary>Allows the object to be sized.</summary>
      <param name="resizeHandle">Index of the grab handle used to size the object</param>
      <param name="pt">Point from which to size the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.EndUpdate">
      <summary>Ends the update.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.FillBackgroundWithGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Fills the background of the object with a gradient.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.FireUIChangeComplete">
      <summary>Occurs when the User Interface (UI) change is complete.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.FlipShapeHorizontal">
      <summary>Flips the shape horizontally (along a horizontal axis).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.FlipShapeVertical">
      <summary>Flips the shape vertically (along a vertical axis).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetElementStyle">
      <summary>Gets the style for the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetFont">
      <summary>Gets the default font used by the element, if the Font property is null.</summary>
      <example>
        <code lang="csharp">
            Font f = element.GetFont();
            }
            </code>
        <code lang="vb">
            Font f = element.GetFont()
            </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
      <summary>Gets the grab handle rectangles.</summary>
      <param name="r">Rectangle</param>
      <param name="handleRects">Arrary of handle rectangles</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException"> The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetPictureRegion(System.Object)">
      <summary>Gets the region of the picture.</summary>
      <param name="picture">Picture</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetRotateAngle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>Gets the rotate angle.</summary>
      <param name="centerPt">Point containing the basepoint of rotation</param>
      <param name="pt1">Point containing the first endpoint</param>
      <param name="pt2">Point containing the second endpoint</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetRotateHandleRectangle(System.Drawing.Rectangle)">
      <summary>Gets the rotate handle rectangle.</summary>
      <param name="r">Rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>Gets the bounding rectangles for the text and the picture in the presentation space.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the shape</param>
      <param name="rPict">Bounding rectangle for the picture</param>
      <param name="rText">Bounding rectangle for the text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.GrabHandleFromPoint(System.Drawing.Point)">
      <summary>Returns the grab handle from the specified point.</summary>
      <param name="pt">Point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.HitTestTransparentShape(System.Drawing.Point,System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="pt" />
      <param name="setCursor" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.BackgroundImageChanged" /> event when the background picture has changed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnChanged">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.Chart.FpChart.Changed" /> event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.Changed" /> event when the element has changed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnChartActionComplete(System.Object,FarPoint.Win.Chart.UndoRedoEventArgs)">
      <summary>Called when user finish performing something in Chart control.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Chart.UndoRedoEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnChartActionPerforming(System.Object,FarPoint.Win.Chart.UndoRedoCancelEventArgs)">
      <summary>Called when user's performing something in Chart control.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Chart.UndoRedoCancelEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnChartSelectionChanged(System.Object,System.EventArgs)">
      <summary>Called when user select a different element in chart.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnDeserialization(System.Object)">
      <summary>Internal use only.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.FontChanged" /> event when the font in the control has changed.</summary>
      <param name="e">EventArgs object containing event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.ForegroundImageChanged" /> event when the foreground picture has changed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnGotFocus(System.EventArgs)">
      <summary>Internal use only.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseMove processing.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnOpeningContextMenuStrip(FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs)">
      <summary>Called when the context menu strip is opened.</summary>
      <param name="args">The <see cref="T:FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs" /> instance containing the event data.</param>
      <remarks>
        <b>pt</b> is the relative location in FpSpread. It represent the bottom-right corner of the chart.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint itself.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>Paints the background of the element using an overriding style.</summary>
      <param name="g">Graphics device</param>
      <param name="rectInput">Coordinates of the element</param>
      <param name="overrideStyle">Style to use when overriding</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint its background.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.PictureChanged" /> event when the picture has changed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.PropertyChanged" /> event when the property on an element has changed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the background color.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the background color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the background image.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Not supported for basic shapes.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Rectangle bounding the area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draw the drop shadow.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints elements.</summary>
      <param name="g">Graphics device</param>
      <param name="faceRect">Rectangle bounding the area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the foreground image.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintGrabHandles(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the handles for sizing.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintOutline(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the outline of a GraphicsPath shape.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Rectangle bounding the area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the picture inside the specified rectangle.</summary>
      <param name="g">Graphic device interface</param>
      <param name="rPict">Bounding rectangle for the picture</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintRotateHandle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the rotate handle.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Asks the control to repaint the background for the object.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints special foreground.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Rectangle bounding the area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the text for the shape.</summary>
      <param name="g">Graphics device</param>
      <param name="rText">Bounding rectangle for the text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the text and picture in the element.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Rectangle bounding both the text and picture</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PointInGrabHandle(System.Drawing.Point)">
      <summary>Gets whether the specified point is in a grab handle.</summary>
      <param name="pt">Point</param>
      <returns>true if in handle; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PointInRotateHandle(System.Drawing.Point)">
      <summary>Gets whether the specified point is in the rotate handle.</summary>
      <param name="pt">Point</param>
      <returns>true if in handle; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.PrepareForMovingResizing">
      <summary>Prepares for moving resizing. Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes the dialog key.</summary>
      <param name="keyData">The key data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ProcessMouseMove(System.Windows.Forms.MouseEventArgs,System.Boolean,System.Object@)">
      <summary>Processes when the mouse cursor is moving.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> instance containing the mouse event data.</param>
      <param name="containsMouse">if set to <c>true</c> the chart shape contains the mouse cursor.</param>
      <param name="selectedObject">The current selected element of chart shape.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp processing.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Refresh(System.Boolean)">
      <summary>Refreshes the specified force.</summary>
      <param name="force">if set to <c>true</c>, the whole chart will be re-painted regardless caching image.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Refresh">
      <summary>Forces the element to invalidate its client area and immediately repaint.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.RenderImage">
      <summary>Renders the chart's image to a bitmap and return this bitmap.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Reset">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAlignHorz">
      <summary>Resets the horizontal alignment of the element to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAlignText">
      <summary>Resets the text alignment of the element to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAlignVert">
      <summary>Resets the vertical alignment of the element to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAllowBackgroundImageRotation">
      <summary>Resets the background image rotation allowed flag to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAlphaBlendBackColor">
      <summary>Resets the alpha-blend value of the background color of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAlphaBlendShadowColor">
      <summary>Resets the amount of transparency for the shadow, which is 128.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetAnchor">
      <summary>Resets the object's anchored status.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetBackColor">
      <summary>Resets the background color to its default setting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetBackgroundImage">
      <summary>Resets the background image of the element to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetBackgroundImageRotationAngle">
      <summary>Resets the background image rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetBorder">
      <summary>Resets the border of the element to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetCanFocus">
      <summary>Resets to the default value whether the element can have the focus.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetCanMove">
      <summary>Resets whether the object can be moved by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetCanPrint">
      <summary>Resets whether the object can be printed by the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetCanRenderText">
      <summary>Resets whether the shape can render its text property.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetCanRotate">
      <summary>Resets whether the object can be rotated by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetCanSize">
      <summary>Resets whether the object can be resized by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetDynamicMove">
      <summary>Resets the dynamic move of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetDynamicSize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetElements">
      <summary>Resets the elements to their default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetEnabled">
      <summary>Resets to the default value whether the element is enabled.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetFont">
      <summary>Resets the font for the element to it default value.</summary>
      <example>
        <code lang="csharp">
            Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold);
            element.Font = f;
            element.State = FarPoint.Win.ElementState.Inverted;
            element.ResetFont();
            </code>
        <code lang="vb">
            Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold)
            element.Font = f
            element.State = FarPoint.Win.ElementState.Inverted
            element.ResetFont();
            </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetForeColor">
      <summary>Resets the text color for the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetForegroundImage">
      <summary>Resets the foreground image for the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetGradient">
      <summary>Resets the gradient style of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetLocked">
      <summary>Reset the object's locked status.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetMarginBottom">
      <summary>Resets the margin between the bottom of the element and its contents to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetMarginLeft">
      <summary>Resets the margin between the left side of the element and its contents to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetMarginRight">
      <summary>Resets the margin between the right side of the element and its contents to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetMarginTop">
      <summary>Resets the margin between the top of the element and its contents to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetName">
      <summary>Resets the name to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetPicture">
      <summary>Resets the image for the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetPictureMargin">
      <summary>Resets the margin between text and picture to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetPictureOrientation">
      <summary>Resets the orientation of the picture in the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetPictureRotationAngle">
      <summary>Resets the picture rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetPictureTransparencyColor">
      <summary>Resets the transparency of a picture in the element to its default value.</summary>
      <example>
        <code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            private void button1_Click(object sender, System.EventArgs e)
            {
            control.ResetPictureTransparencyColor()
            }
            </code>
        <code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            control.ResetPictureTransparencyColor()
            End Sub
            </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetPictureTransparencyTolerance">
      <summary>Resets the transparency tolerance for a picture in the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetRotationAngle">
      <summary>Resets the rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShadowColor">
      <summary>Resets the color of the shadow to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShadowDirection">
      <summary>Resets the direction of the shadow to the default, which is None.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShadowOffsetX">
      <summary>Resets the amount of offset of the shadow in the horizontal direction to the default value, which is 5.0F.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShadowOffsetY">
      <summary>Resets the amount of offset of the shadow in the vertical direction to the default value, which is 5.0F.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShape">
      <summary>Resets the shape of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShapeOutlineColor">
      <summary>Resets the shape outline color of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShapeOutlineStyle">
      <summary>Resets the shape outline style of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetShapeOutlineThickness">
      <summary>Resets the shape outline thickness of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetSizeProportional">
      <summary>Resets whether the object can be resized proportionally by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetTag">
      <summary>Resets the Tag object for the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetText">
      <summary>Resets the text in an element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetTextOrientation">
      <summary>Resets the orientation of text in an element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetTextRotationAngle">
      <summary>Resets the text rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ResetVisible">
      <summary>Resets to the default value whether an element is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Rotate(System.Single)">
      <summary>Rotates the object by the specified angle around the center of the object.</summary>
      <param name="angle">Angle to rotate the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Rotate(System.Drawing.Point,System.Single)">
      <summary>Rotates the object by the specified angle around the specified point.</summary>
      <param name="rotationCenterPoint">Point around which to rotate the object</param>
      <param name="angle">Angle to rotate the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Scale(System.Single,System.Single,System.Boolean)">
      <summary>Adjusts the size of the object by the specified amount.</summary>
      <param name="scaleX">Factor by which to scale the object in the horizontal dimension</param>
      <param name="scaleY">Factor by which to scale the object in the vertical dimension</param>
      <param name="repaint">Whether to re-draw the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Select(System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="selected" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SerializePositionAndSize(System.Xml.XmlTextWriter)">
      <summary>Serializes the position and size.</summary>
      <param name="w">XmlTextWriter to which to write (save) the position and size</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SerializeProps(System.Xml.XmlTextWriter)">
      <summary>Saves the object properties to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
      <param name="adjustRegion">Whether to adjust the region</param>
      <param name="recursive">Whether to check recursively for each element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>Sets the style for the element.</summary>
      <param name="style">ElementStyle object containing the style of the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SetElementStyle(FarPoint.Win.ElementStyle,System.Boolean)">
      <summary>Sets the style for the element and clears unset properties.</summary>
      <param name="style">ElementStyle object containing the style of the element</param>
      <param name="clearUnsetProps">Whether to reset properties that are not set in the element to their default settings</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SetRedraw(System.Boolean,System.Boolean)">
      <summary>Internal use only.</summary>
      <param name="redraw" />
      <param name="refresh" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SetState(FarPoint.Win.ElementState)">
      <summary>Sets the state of the element.</summary>
      <param name="eState">Enumerated state in which to place the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeAllowBackgroundImageRotation">
      <summary>Determines if the background image rotation allowed flag of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeAlphaBlendBackColor">
      <summary>Determines if the alpha-blend value of the background color of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeAlphaBlendShadowColor">
      <summary>Determines if the AlphaBlendShadowColor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeAnchor">
      <summary>Determines if the anchor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeBackColor">
      <summary>Indicates whether the BackColor property should be persisted.</summary>
      <returns>New backcolor</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeBackgroundImageRotationAngle">
      <summary>Determines if the background image rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeCanMove">
      <summary>Determines if the CanMove property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeCanPrint">
      <summary>Determines if the CanPrint property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeCanRenderText">
      <summary>Determines if the shape CanRenderText property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeCanRotate">
      <summary>Determines if the CanRotate property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeCanSize">
      <summary>Determines if the CanSize property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeContainedObjects">
      <summary>Determines if the ContainedObjects property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeDynamicMove">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeDynamicSize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeFont">
      <summary>Indicates whether the Font property should be persisted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeForeColor">
      <summary>Indicates whether the ForeColor property should be persisted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeGradient">
      <summary>Determines if the shape outline scaling should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeLocked">
      <summary>Determines if the locked property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeName">
      <summary>Determines if the name of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializePictureRotationAngle">
      <summary>Determines if the picture rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializePictureTransparencyColor">
      <summary>Indicates whether the PictureTransparencyColor property should be persisted.</summary>
      <returns>The transparency color</returns>
      <example>
        <code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            </code>
        <code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            </code>
      </example>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializePictureTransparencyTolerance">
      <summary>Indicates whether the PictureTransparencyTolerance property should be persisted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeRotationAngle">
      <summary>Determines if the rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShadowColor">
      <summary>Determines if the ShadowColor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShadowDirection">
      <summary>Determines if the ShadowDirection property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShadowOffset">
      <summary>Determines whether the shadow offset should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShadowOffsetX">
      <summary>Determines if the ShadowOffsetX property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShadowOffsetY">
      <summary>Determines if the ShadowOffsetX property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShape">
      <summary>Determines if the shape should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShapeOutlineColor">
      <summary>Determines if the shape outline color should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShapeOutlineStyle">
      <summary>Determines if the shape outline style should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeShapeOutlineThickness">
      <summary>Determines if the shape outline thickness should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeSizeProportional">
      <summary>Determines if the SizeProportional property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeTag">
      <summary>Indicates whether the Tag property should be persisted.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ShouldSerializeTextRotationAngle">
      <summary>Determines if the text rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.SizeRegion(System.Single,System.Single,System.Single,System.Single)">
      <summary>Resizes the region.</summary>
      <param name="newWidth">New width value in pixels</param>
      <param name="newHeight">New height value in pixels</param>
      <param name="oldWidth">Old width value in pixels</param>
      <param name="oldHeight">Old height value in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ChartShape.ToggleState">
      <summary>Toggles the state of the element.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.ActionDoing">
      <summary>Occurs when on performing actions such as move, resize, delete, cut and paste.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.ActionDone">
      <summary>Occurs when on actions done such as move, resize, delete, cut and paste.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.BackgroundImageChanged">
      <summary>Occurs when the background image changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.Click">
      <summary>Occurs when mouse clicked.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.Disposed">
      <summary>Adds an event handler to listen to the <see cref="E:FarPoint.Win.Spread.Chart.SpreadChart.Disposed" /> event on the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" />.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.FontChanged">
      <summary>Occurs when the font changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.ForegroundImageChanged">
      <summary>Occurs when the foreground image changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.MouseEnter">
      <summary>Occurs when mouse entered.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.MouseLeave">
      <summary>Occurs when mouse left.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.OpeningContextMenuStrip">
      <summary>Occurs when opening context menu strip.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.PictureChanged">
      <summary>Occurs when the picture changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.SelectionChanged">
      <summary>Occurs when the selection changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ChartShape.UIChangeComplete">
      <summary>Occurs when the User Interface (UI) change is complete.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs">
      <summary>Represent a data structure when the context menu is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs.#ctor(System.Drawing.Point)">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs" /> class.</summary>
      <param name="pt">The location</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs.Location">
      <summary>Gets the location.</summary>
      <value>The location.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs">
      <summary>Represents event data for <see cref="T:FarPoint.Win.Spread.Chart.DataFieldChangedEventHandler" /> events.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs" /> class.</summary>
      <param name="formulaChanged">if set to <c>true</c> [formula changed].</param>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs.Empty">
      <summary>Represents an event with no data event. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs.FormulaChanged">
      <summary>Gets a value that indicates whether [formula changed].</summary>
      <value>
        <c>true</c> if [formula changed]; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ExpandSeriesEventArgs">
      <summary>Provides data for the event of expanding series by UI .</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ExpandSeriesEventArgs.#ctor(FarPoint.Win.Chart.Series,System.Boolean)">
      <summary>Creates a new event arguments object</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ExpandSeriesEventArgs.#ctor">
      <summary>Creates a new event arguments object</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ExpandSeriesEventArgs.AppendOnExist">
      <summary>Gets or sets whether new series is added to the existing composite series</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ExpandSeriesEventArgs.Series">
      <summary>Gets or sets the series type will be added</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs">
      <summary>Represents event data for the IndicatorChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs.#ctor(FarPoint.Win.Spread.Chart.IIndicator,FarPoint.Win.Spread.Chart.IndicatorChangeType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs" /> class.</summary>
      <param name="indicator">The indicator.</param>
      <param name="changeType">Type of the change.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs.Category">
      <summary>Gets the category.</summary>
      <value>The category.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs.ChangeType">
      <summary>Gets the type of the change.</summary>
      <value>The type of the change.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs.Data">
      <summary>Gets the data.</summary>
      <value>The data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IndicatorChangedEventArgs.SeriesName">
      <summary>Gets the name of the series.</summary>
      <value>The name of the series.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.MoveChart">
      <summary>Represetns a form which is used to move chart to another SheetView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.MoveChart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.MoveChart" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.MoveChart.#ctor(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.MoveChart" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.MoveChart.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.MoveChart.OnShown(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs">
      <summary>Represents event data for ISegmentData.DataChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs" /> class.</summary>
      <param name="countChanged">if set to <c>true</c> [count changed].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.#ctor(System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs" /> class.</summary>
      <param name="countChanged">if set to <c>true</c> [count changed].</param>
      <param name="formulaChanged">if set to <c>true</c> [formula changed].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs" /> class.</summary>
      <param name="countChanged">if set to <c>true</c> [count changed].</param>
      <param name="formulaChanged">if set to <c>true</c> [formula changed].</param>
      <param name="sheetRemoved">if set to <c>true</c> [sheet removed].</param>
      <param name="rangeRemoved">if set to <c>true</c> [range removed].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs" /> class.</summary>
      <param name="countChanged">if set to <c>true</c> the data count is changed.</param>
      <param name="formulaChanged">if set to <c>true</c> the formula is changed.</param>
      <param name="sheetRemoved">if set to <c>true</c> the sheet is removed.</param>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.Empty">
      <summary>Represents an event with no event data. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.CountChanged">
      <summary>Gets a value that indicates whether [count changed].</summary>
      <value>
        <c>true</c> if [count changed]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.FormulaChanged">
      <summary>Gets a value that indicates whether [formula changed].</summary>
      <value>
        <c>true</c> if [formula changed]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.RangeRemoved">
      <summary>Gets a value that indicates whether [range removed].</summary>
      <value>
        <c>true</c> if [range removed]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SegmentDataChangedEventArgs.SheetRemoved">
      <summary>Gets a value that indicates whether the sheet is removed.</summary>
      <value>
        <c>true</c> if the sheet is removed; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SeriesDataField">
      <summary>Represents the series data source using a formula.</summary>
      <remarks>SeriesDataField is not a complete data source for the series. If a series needs more than one value (like HighLowBar series), it needs more than one SeriesDataField as a data source. Each SeriesDataField is bound as a data source of the corresponding value.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.#ctor(FarPoint.Win.Spread.FpSpread,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="name">The name.</param>
      <param name="formula">The formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.#ctor(FarPoint.Win.Spread.FpSpread,System.String,System.String,FarPoint.Win.Spread.Chart.SegmentDataType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="name">The name.</param>
      <param name="formula">The formula.</param>
      <param name="dataType">Type of the data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.#ctor(FarPoint.Win.Spread.FpSpread,System.String,System.String,FarPoint.Win.Spread.Chart.SegmentDataType,FarPoint.Win.Spread.Chart.ChartDataSetting)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="name">The name.</param>
      <param name="formula">The formula.</param>
      <param name="dataType">Type of the data.</param>
      <param name="dataSetting">The data setting</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.#ctor(FarPoint.Win.Spread.FpSpread,System.String,System.String,FarPoint.Win.Spread.Chart.SegmentDataType,FarPoint.Win.Spread.Chart.ChartDataSetting,FarPoint.Win.Spread.Chart.DataOrientation)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="name">The name.</param>
      <param name="formula">The formula.</param>
      <param name="dataType">Type of the data.</param>
      <param name="dataSetting">The data setting</param>
      <param name="dataOrientation">The data orientation</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.Count">
      <summary>Gets the count.</summary>
      <value>The count.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.DataOrientation">
      <summary>Gets a value that indicates whether the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> returns data vertically or horizontally.</summary>
      <value>
        <c>true</c> if vertical; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.DataSetting">
      <summary>Gets or sets the data setting.</summary>
      <value>The data setting.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.DataType">
      <summary>Gets the type of the data.</summary>
      <value>The type of the data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.FieldName">
      <summary>Indicates what the series is bound to.</summary>
      <value>The name of the field.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.Formula">
      <summary>Gets or sets the formula.</summary>
      <value>The formula.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.ReferenceError">
      <summary>Gets or sets a value indicating whether this SeriesDataField represents an invalid formula.</summary>
      <value>
        <c>true</c> if this SeriesDataField represents an invalid formula; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.Segments">
      <summary>Gets the segments.</summary>
      <value>The segments.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.Spread">
      <summary>Gets the spread.</summary>
      <value>The spread.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataField.Vertical">
      <summary>Gets whether the list's data orientation is vertical</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.GenerateSegmentDataList(FarPoint.Win.Spread.Chart.SeriesDataField)">
      <summary>Generates the segment data list.</summary>
      <param name="field" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.GenerateSegmentMatrix">
      <summary>Generates the segment data matrix.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.GetValue(System.Int32)">
      <summary>Gets the value.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.OnDataChanged(FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs)">
      <summary>Fires the DataChanged event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataField.SetValue(System.Int32,System.Object)">
      <summary>Sets the value.</summary>
      <param name="index">The index.</param>
      <param name="value">The value.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.SeriesDataField.DataChanged">
      <summary>Occurs when data changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection">
      <summary>Represents a set of SeriesDataField objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection.Count">
      <summary>Gets the count.</summary>
      <value>The count.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection.Item(System.String)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataField" /> with the specified field name.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataFieldCollection.AddRange(FarPoint.Win.Spread.Chart.SeriesDataField[])">
      <summary>Adds the range.</summary>
      <param name="data">The data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SeriesDataSource">
      <summary>Represents a data source for Series.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataSource" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataSource.#ctor(FarPoint.Win.Spread.Chart.ChartDataSetting,FarPoint.Win.Spread.Chart.SeriesDataField,FarPoint.Win.Spread.Chart.SeriesDataField,System.Collections.Generic.IEnumerable{FarPoint.Win.Spread.Chart.SeriesDataField})">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataSource" /> class.</summary>
      <param name="setting">The setting.</param>
      <param name="seriesName">Name of the series.</param>
      <param name="category">The category.</param>
      <param name="data">The data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataSource.#ctor(FarPoint.Win.Spread.Chart.ChartDataSetting,FarPoint.Win.Spread.Chart.SeriesDataField,FarPoint.Win.Spread.Chart.SeriesDataField,FarPoint.Win.Spread.Chart.SeriesDataField[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataSource" /> class.</summary>
      <param name="setting">The setting.</param>
      <param name="seriesName">Name of the series.</param>
      <param name="category">The category.</param>
      <param name="data">The data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataSource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SeriesDataSource" /> class.</summary>
      <param name="info">The info.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataSource.Category">
      <summary>Gets the category.</summary>
      <value>The category.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataSource.Data">
      <summary>Gets the data.</summary>
      <value>The data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataSource.DataSetting">
      <summary>Gets or sets the data setting.</summary>
      <value>The data setting.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SeriesDataSource.SeriesName">
      <summary>Gets the name of the series.</summary>
      <value>The name of the series.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SeriesDataSource.FireDataChanged(System.Boolean)">
      <summary>Fires the data changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SheetCellRange">
      <summary>Represents a cell range in a specified SheetView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SheetCellRange" /> class.</summary>
      <remarks>This constructor is needed for XML deserialization. You should not call it directly from code.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SheetCellRange" /> class.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="rowCount">The row count.</param>
      <param name="columnCount">The column count.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SheetCellRange" /> class.</summary>
      <param name="sheetName">Name of the sheet.</param>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="rowCount">The row count.</param>
      <param name="columnCount">The column count.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SheetCellRange" /> class.</summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SheetCellRange.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
      <value>The name of the sheet.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SheetCellRange.SheetView">
      <summary>Gets or sets the sheet view.</summary>
      <value>The sheet view.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.Clone">
      <summary>Clones this instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.Combine(FarPoint.Win.Spread.Chart.SheetCellRange)">
      <summary>Combines the specified cell range.</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.Equals(System.Object)">
      <summary>Determines whether the range of cells is the same as another specified range of cells.</summary>
      <param name="item">Object that contains a range of cells to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.ToString">
      <summary>Returns the string representation of the cell range.</summary>
      <returns>String that represents the cell range</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.op_Equality(FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Chart.SheetCellRange)">
      <summary>Implements the operator ==.</summary>
      <param name="obj1">The obj1.</param>
      <param name="obj2">The obj2.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRange.op_Inequality(FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Chart.SheetCellRange)">
      <summary>Implements the operator !=.</summary>
      <param name="obj1">The obj1.</param>
      <param name="obj2">The obj2.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SheetCellRangeCollection">
      <summary>Represents a strongly typed list of SheetCellRange that can be accessed by index. Provides methods to search, sort, and manipulate lists.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRangeCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SheetCellRangeCollection" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SheetCellRangeCollection.AddRange(FarPoint.Win.Spread.Chart.SheetCellRange[])">
      <summary>Adds the range.</summary>
      <param name="indicators">The indicators.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChart">
      <summary>Represent a chart instance in Spread.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.FpChart" /> class.</summary>
      <param name="seriesType">Type of the series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(FarPoint.Win.Chart.Series,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="series">The last modified series.</param>
      <param name="chartName">Name of the chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(FarPoint.Win.Chart.Series,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="series">The last modified series.</param>
      <param name="chartName">Name of the chart.</param>
      <param name="visible">State visible of chart.</param>
      <param name="row">start index row in range of chart.</param>
      <param name="column">start index column in range of chart.</param>
      <param name="row2">end index row in range of chart.</param>
      <param name="column2">end index column in range of chart.</param>
      <param name="pixcelRowOffset">offset of chart with start row.</param>
      <param name="pixcelColumnOffset">offset of chart with start column.</param>
      <param name="pixcelRow2Offset">offset of chart with end row.</param>
      <param name="pixcelColumn2Offset">offset of chart with end column.</param>
      <param name="canChangeVisibleProperty">flag state visible</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(FarPoint.Win.Chart.Series,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="series">The last modified series.</param>
      <param name="chartName">Name of the chart.</param>
      <param name="visible">State visible of chart.</param>
      <param name="row">start index row in range of chart.</param>
      <param name="column">start index column in range of chart.</param>
      <param name="row2">end index row in range of chart.</param>
      <param name="column2">end index column in range of chart.</param>
      <param name="pixcelRowOffset">offset of chart with start row.</param>
      <param name="pixcelColumnOffset">offset of chart with start column.</param>
      <param name="pixcelRow2Offset">offset of chart with end row.</param>
      <param name="pixcelColumn2Offset">offset of chart with end column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.Type,System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="seriesType">Type of the series.</param>
      <param name="percent">Indicates that whether the last modified series is 100% series.</param>
      <param name="chartName">Name of the chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.Type,FarPoint.Win.Chart.ChartViewType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="seriesType">Type of the series.</param>
      <param name="viewType">Type of the view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.Type,FarPoint.Win.Chart.ChartViewType,System.Drawing.Point,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="seriesType">Type of the series.</param>
      <param name="viewType">Type of the view.</param>
      <param name="location">The location.</param>
      <param name="size">The size.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="formula">The formula.</param>
      <param name="seriesType">Type of the series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.String,System.Type,System.Drawing.Point,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="formula">The formula.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="location">The location.</param>
      <param name="size">The size.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.String,System.Type,System.Drawing.Point,System.Drawing.Size,FarPoint.Win.Chart.ChartViewType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="formula">The formula.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="location">The location.</param>
      <param name="size">The size.</param>
      <param name="viewType">Type of the view.</param>
      <param name="showLegend">if set to <c>true</c> [show legend].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.String,System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="categoryFormula">The category formula.</param>
      <param name="nameFormula">The name formula.</param>
      <param name="dataFormula">The data formula.</param>
      <param name="seriesType">Type of the series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.String,System.String,System.String,System.Type,System.Drawing.Point,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="categoryFormula">The category formula.</param>
      <param name="nameFormula">The name formula.</param>
      <param name="dataFormula">The data formula.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="location">The location.</param>
      <param name="size">The size.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.String,System.String,System.String,System.Type,System.Drawing.Point,System.Drawing.Size,FarPoint.Win.Chart.ChartViewType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="categoryFormula">The category formula.</param>
      <param name="nameFormula">The name formula.</param>
      <param name="dataFormula">The data formula.</param>
      <param name="seriesType">Type of the series.</param>
      <param name="location">The location.</param>
      <param name="size">The size.</param>
      <param name="viewType">Type of the view.</param>
      <param name="showLegend">if set to <c>true</c> [show legend].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> class.</summary>
      <param name="info">The info.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.AllowShowIndicator">
      <summary>Gets or sets a value indicating whether Spread can show the chart indicator.</summary>
      <value>
        <c>true</c> if Spread can show indicator of this chart; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.CanChangeChartType">
      <summary>Gets a value indicating whether the chart type can be changed.</summary>
      <value>
        <c>true</c> if the chart type can be changed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.CanSwitchRowColumn">
      <summary>Gets a value indicating whether the user can switch the rows and columns of the chart.</summary>
      <value>
        <c>true</c> if user can switch rows and columns of the chart; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.CategoryFormula">
      <summary>Gets or sets the category formula. This action will re-build the chart's series.</summary>
      <value>The category formula.</value>
      <remarks>This property is not designed for persisting so you should save and re-use the value and access infrequently.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.ContextMenuStrip">
      <summary>Gets or sets the context menu strip for SpreadChart.</summary>
      <value>The context menu strip.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.DataFormula">
      <summary>Gets or sets the data formula. This action will re-build the chart's series.</summary>
      <value>The data formula.</value>
      <remarks>This property is not designed for persisting so you should save and re-use the value and access infrequently.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.DataSetting">
      <summary>Gets or sets the data setting of SpreadChart.</summary>
      <value>The data setting.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.Formula">
      <summary>Gets or sets the formula of chart. This action will re-build the chart's series.</summary>
      <value>The formula.</value>
      <remarks>This property is not designed for persisting so you should save and re-use the value and access infrequently.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.Model">
      <summary>Gets or sets the chart model.</summary>
      <value>The model.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.SeriesNameFormula">
      <summary>Gets or sets the series name formula. This action will re-build the chart's series.</summary>
      <value>The series name formula.</value>
      <remarks>This property is not designed for persisting so you should save and re-use the value and access infrequently.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
      <value>The name of the sheet.</value>
      <remarks>This property supported for undo/redo action in design-time. Assigning in run-time means nothing.</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChart.SheetView">
      <summary>Gets or sets the sheet view.</summary>
      <value>The sheet view.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.CanChangeSeriesType(FarPoint.Win.Chart.Series)">
      <summary>Determines whether this instance can change the series type of the specified source series.</summary>
      <param name="sourceSeries">The source series.</param>
      <returns>
        <c>true</c> if this instance can change the series type to the specified source series; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.ChangeChartType(FarPoint.Win.Chart.ChartModel)">
      <summary>Changes the type of the chart.</summary>
      <param name="targetModel">The target model.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.ChangeSeriesType(FarPoint.Win.Chart.Series,FarPoint.Win.Chart.Series)">
      <summary>Changes the type of the series.</summary>
      <param name="sourceSeries">The source series.</param>
      <param name="targetSeries">The target series.</param>
      <remarks>The targetSeries will be added to ChartModel.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.Clone">
      <summary>Creates and returns a copy of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.CreateNewInstance">
      <summary>Creates the new instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.DisableTooltip">
      <summary>Disables the tooltip.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.EnableTooltip">
      <summary>Enables the tooltip.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GenerateFromCellRanges(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[],System.Boolean)">
      <summary>Generates from cell ranges.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="cellRanges">The cell ranges.</param>
      <param name="autoSwitch">if set to <c>true</c>, the processing will switch rows and columns automatically if necessary.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GenerateFromCellRanges(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange,System.Boolean,System.Boolean)">
      <summary>Generates from cell ranges.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="category">The category.</param>
      <param name="seriesName">Name of the series.</param>
      <param name="data">The data.</param>
      <param name="autoSwitch">if set to <c>true</c>, the procesing will switch row and column automatically if it's necessary.</param>
      <param name="autoCreateCategory">if set to <c>true</c>, the generating process will auto detect and create category if the category cell range is NULL.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GenerateFromCellRanges(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange,System.Boolean)">
      <summary>Generates from cell ranges.</summary>
      <param name="sheetView">The sheet view.</param>
      <param name="category">The category.</param>
      <param name="seriesName">Name of the series.</param>
      <param name="data">The data.</param>
      <param name="autoSwitch">if set to <c>true</c>, the procesing will switch row and column automatically if it's necessary.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetDisplayLocationContextMenu(System.Windows.Forms.ContextMenuStrip,System.Drawing.Point)">
      <summary>Gets the preferred display location context menu.</summary>
      <param name="cm">The context menu which will be displayed.</param>
      <param name="p">The initialized location to display the context menu.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException"> The caller does not have the required permission. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetSeries(FarPoint.Win.Chart.ChartModel,System.Int32)">
      <summary>Gets the series at the specified index.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetSeriesContainer(FarPoint.Win.Chart.Series)">
      <summary>Gets the series container.</summary>
      <param name="series">The series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetSeriesContainer(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.Series)">
      <summary>Gets the series container.</summary>
      <param name="series">The series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetSeriesDataPointTooltip(FarPoint.Win.Chart.Series,System.Int32,System.Int32)">
      <summary>Gets the series tooltip value.</summary>
      <param name="series">The series.</param>
      <param name="index">The index of data point base on 0 (zero).</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.GetSeriesDataPointTooltip(FarPoint.Win.Chart.Series,System.Int32)">
      <summary>Gets the series tooltip value.</summary>
      <param name="series">The series.</param>
      <param name="index">The index of data point base on 0 (zero).</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.MoveToSheetView(System.String)">
      <summary>Moves the current chart to the new sheet view.</summary>
      <param name="sheetName">Name of the new sheet view.</param>
      <returns>
        <c>true</c> if moving is successful; otherwise, return <c>false</c></returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.MoveToSheetView(System.String,System.Boolean)">
      <summary>Moves the current chart to the new sheet view.</summary>
      <param name="sheetName">Name of the new sheet view.</param>
      <param name="activateNewSheetView">if set to <c>true</c> activate the new sheet view.</param>
      <returns>
        <c>true</c> if the move is successful; otherwise, return <c>false</c></returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnChartActionComplete(System.Object,FarPoint.Win.Chart.UndoRedoEventArgs)">
      <summary>Called when the user finishes performing an action in the Chart control.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:FarPoint.Win.Chart.UndoRedoEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnChartSelectionChanged(System.Object,System.EventArgs)">
      <summary>Called when the user selects an element in the chart.</summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnGotFocus(System.EventArgs)">
      <summary>Internal use only.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.OnOpeningContextMenuStrip(FarPoint.Win.Spread.Chart.ContextMenuStripEventArgs)">
      <summary>Called when the context menu strip is opening.</summary>
      <param name="pt">The location where the context menu will be displayed.</param>
      <remarks>
        <b>pt</b> is the relative location in FpSpread. It represent the bottom-right corner of the chart.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes the dialog key.</summary>
      <param name="keyData">The key data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.ProcessMouseMove(System.Windows.Forms.MouseEventArgs,System.Boolean,System.Object@)">
      <summary>Processes when the mouse cursor is moving.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> instance containing the mouse event data.</param>
      <param name="containsMouse">if set to <c>true</c> the chart shape contains the mouse cursor.</param>
      <param name="selectedObject">The current selected element of chart shape.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.ShowChartDesigner">
      <summary>Shows the chart designer.</summary>
      <returns>If the chart designer is shown successfully, this function will returns true. Otherwise, returns false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChart.SwitchRowColumn">
      <summary>Switches the row and column of the chart.</summary>
      <returns>If the switching process is successful, return <c>true</c>. Otherwise, return <c>false</c>.</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.SpreadChart.SeriesExpanded">
      <summary>Occurs when new series is added by expanding spreadchart data range on UI</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo">
      <summary>Represents a SpreadChart's data structure in the Clipboard.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo" /> class.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo.ChartIndexes">
      <summary>List of indexes of <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> objects.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo.Charts">
      <summary>List of <see cref="T:FarPoint.Win.Spread.Chart.SpreadChart" /> objects.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo.ClipboardFormat">
      <summary>Gets a Clipboard format type. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartClipboardInfo.ReActivate">
      <summary>Specifies whether the chart object should be set active.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartCollection">
      <summary>- Represents a collection of chart objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Initializes a new instance of the <see cref="!:FpChartCollection" /> class.</summary>
      <param name="owner">The owner.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChartCollection.Item(System.Int32)">
      <summary>Gets the <see cref="!:FarPoint.Win.Spread.FpChart" /> at the specified index.</summary>
      <value>The chart at specified index.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChartCollection.Item(System.String)">
      <summary>Gets the <see cref="!:FarPoint.Win.Spread.Chart.FpChart" /> with the specified chart name.</summary>
      <value>The chart at specified index.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.Add(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Adds an chart to the FpChartCollection.</summary>
      <param name="chart">The FpChart to add to the FpChartCollection.</param>
      <returns>The position into which the new chart was inserted.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.AddRange(FarPoint.Win.Spread.Chart.SpreadChart[])">
      <summary>Adds the range.</summary>
      <param name="charts">The charts.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.Contains(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Determines whether the chart collection contains a specified chart.</summary>
      <param name="chart">The chart to locate in the chart collection. The value can be null.</param>
      <returns>
        <c>true</c> if the chart is found in the chart collection; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.Contains(System.String)">
      <summary>Determines whether the chart collection contains the specified chart.</summary>
      <param name="chartName">Name of the chart.</param>
      <returns>
        <c>true</c> if the chart collection contains the specified chart; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.IndexOf(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Determines the index of a specific chart in the FpChartCollection.</summary>
      <param name="chart">The FpChart to locate in the FpChartCollection.</param>
      <returns>The index of value if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.Insert(System.Int32,FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Inserts a chart into the collection at the specified index.</summary>
      <param name="index">The specified index which the chart will be inserted.</param>
      <param name="chart">The chart will be inserted to the collection.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.OnClear">
      <summary>Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
      <param name="value">The value of the element to remove from <paramref name="index" />.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.Remove(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Removes the specified chart.</summary>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartCollection.RemoveInternal(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Removes the internal.</summary>
      <param name="chart">The chart.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip">
      <summary>Represent the default context menu for SpreadChart.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.Items">
      <summary>Gets all the items that belong to a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <value>An object of type <see cref="T:System.Windows.Forms.ToolStripItemCollection" />, representing all the elements contained by a <see cref="T:System.Windows.Forms.ToolStrip" />.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateChartSelectDataSourceForm(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Creates the chart select data source form.</summary>
      <param name="spread">The spread.</param>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateFormatChartAreaForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType)">
      <summary>Creates the chart select data source form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateFormatDataLabelForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Series)">
      <summary>Creates the format data label form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="series">The series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateFormatDataPointForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Series,System.Int32)">
      <summary>Creates the format data point form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="series">The series.</param>
      <param name="pointIndex">Index of the point.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateFormatLegendAreaForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.LegendArea)">
      <summary>Creates the format legend area form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="legendArea">The legend area.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateFormatPlotAreaForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.PlotArea)">
      <summary>Creates the format plot area form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="plotArea">The plot area.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateFormatSeriesForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.ICompositeSeries,FarPoint.Win.Chart.Series)">
      <summary>Creates the format series form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="series">The series.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateLabelAreaForm(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.LabelArea)">
      <summary>Creates the label area form.</summary>
      <param name="model">The model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="labelArea">The label area.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.CreateMoveChartForm(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Creates the move chart form.</summary>
      <param name="spread">The spread.</param>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnChangeChartTypeItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Change Chart Type" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnChangeChartViewTypeItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Change Chart View Type" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnChartDesignerItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Chart Designer" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnClosed(System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Closed" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ToolStripDropDownClosedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnCopyItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Copy" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnCutItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Cut" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnDeleteItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Delete" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatChartItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatChartItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatDataLabelItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatDataLabelItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatDataPointItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatDataPointItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatLabelAreaItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatLabelAreaItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatLegendAreaItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatLegendAreaItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatPlotAreaItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatPlotAreaItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnFormatSeriesItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:FormatSeriesItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ToolStrip.ItemClicked" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnMoveChartItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Move Chart" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnPasteItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Paste" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnSelectDataItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Select Data" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnSetTotalPointItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Raises the <see cref="E:SetTotalPointItemClicked" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.OnSwitchRowColumnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>Performs "Switch Row and Column" command from the context menu.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStrip.UpdateContextMenuItems">
      <summary>Updates the context menu items.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStripTypeConverter.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStripTypeConverter" /> class.</summary>
      <param name="type">A <see cref="T:System.Type" /> that represents the type to associate with this component converter.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStripTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the reference type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture used to represent the font.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <returns>An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException"> The conversion cannot be performed. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStripTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the reference type using the specified context and arguments.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture used to represent the font.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>The converted object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null. </exception>
      <exception cref="T:System.NotSupportedException"> The conversion cannot be performed. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartContextMenuStripTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a collection of standard values for the reference data type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction">
      <summary>This class represents the action which user delete the chart by press Delete or choose "Delete" from context menu.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender" />
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartDeleteUndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">object</param>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction">
      <summary>This class represents the action which user change a part of data indicator from SheetView</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.Series,FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Chart.SheetCellRange[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="indicator">The indicator.</param>
      <param name="dataCellRange">The data cell range.</param>
      <param name="titleCellRange">The title cell range.</param>
      <param name="legendCellRange">The legend cell range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender" />
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartSeriesIndicatorUndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">object</param>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction">
      <summary>This class repesents the action which user change chart data indicator from SheetView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.ChartModel)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newChartType">New type of the chart.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="targetModel">The target model.</param>
      <param name="viewType">Type of the view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.Series,FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newChartType">New type of the chart.</param>
      <param name="indicatorIndex">Index of the indicator.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Chart.SheetCellRange,FarPoint.Win.Spread.Chart.SheetCellRange)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="category">The category.</param>
      <param name="seriesName">Name of the series.</param>
      <param name="data">The data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.ChartModel,FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newModel">The new model.</param>
      <param name="actionType">Type of the action.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newModel">The new model.</param>
      <param name="viewType">Type of the view.</param>
      <param name="actionType">Type of the action.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.ChartModel,FarPoint.Win.Spread.Chart.ChartDataSetting,FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="oldModel">The old model.</param>
      <param name="newModel">The new model.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Chart.ChartViewType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="chartViewType">Type of the chart view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="isSwapRowColumn">if set to <c>true</c> [is swap row column].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.SpreadChart,System.String,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newSheetName">New name of the sheet.</param>
      <param name="createNew">if set to <c>true</c> [create new].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.Chart.ChartShape,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newBounds">The new bounds.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Chart.SpreadChart,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction" /> class.</summary>
      <param name="chart">The chart.</param>
      <param name="newBounds">The new bounds.</param>
      <param name="copyAction">if set to <c>true</c> [copy action].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender">null menas that the action will be performed directly but not from UndoManager.</param>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">object</param>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.StringSegmentData">
      <summary>Represents a segment which contains only one string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.StringSegmentData.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Chart.StringSegmentData" /> class.</summary>
      <param name="value">The value.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.StringSegmentData.Value">
      <summary>Gets the value of the string segment.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.StringSegmentData.ContainStringValue">
      <summary>Indicates that whether the segment contains a string value.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.StringSegmentData.DataChanged">
      <summary>Occurs when data is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.IIndicator">
      <summary>Represents a chart indicator which is displayed when a chart is activated.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IIndicator.Category">
      <summary>Gets or sets the category.</summary>
      <value>The category.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IIndicator.Data">
      <summary>Gets the data.</summary>
      <value>The data.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.IIndicator.SeriesName">
      <summary>Gets or sets the name of the series.</summary>
      <value>The name of the series.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.IIndicator.Intersects(FarPoint.Win.Spread.Chart.SheetCellRange)">
      <summary>Intersects the specified cell range.</summary>
      <param name="cellRange">The cell range.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.IIndicator.IndicatorChanged">
      <summary>Occurs when the indicator is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ISegmentData">
      <summary>Represents segment data which is used as a chart's data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ISegmentData.Count">
      <summary>Gets the count.</summary>
      <value>The count.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ISegmentData.ContainStringValue">
      <summary>Indicates whether the segment contains a string value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ISegmentData.GetValue(System.Int32)">
      <summary>Gets the value.</summary>
      <param name="index">The index.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ISegmentData.DataChanged">
      <summary>Occurs when data is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ISegmentData2">
      <summary>An enhancement of the <see cref="T:FarPoint.Win.Spread.Chart.ISegmentData" /> interface that represents segment data which is used as a chart's data source.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ISegmentData2.ContainsDateTimeOnly">
      <summary>Determines whether the segment contains date time only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ISegmentDataFormatSupport">
      <summary>Interface for SegmentData that support formatter information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ISegmentDataFormatSupport.GetFormatter(System.Int32)">
      <summary>Gets the formatter</summary>
      <param name="index">The index.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ISegmentMatrixData">
      <summary>Represent the cellrange data of values</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ISegmentMatrixData.ColumnCount">
      <summary>Gets column count of data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ISegmentMatrixData.RowCount">
      <summary>Gets count row of data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Chart.ISegmentMatrixData.GetValue(System.Int32,System.Int32)">
      <summary>Get the value.</summary>
      <param name="row" />
      <param name="column" />
    </member>
    <member name="E:FarPoint.Win.Spread.Chart.ISegmentMatrixData.DataChanged">
      <summary>Occurs when data is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ISupportChartDataSetting">
      <summary>Represents a class which supports the chart data setting concept.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ISupportChartDataSetting.DataSetting">
      <summary>Gets or sets the data setting.</summary>
      <value>The data setting.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ISupportDynamicDataSegment">
      <summary>Supports receiving different types of data from one segment. In FpChart model, series' data must be double, category's data must be string. So, some special segments (such as CellRangeSegmentData) must be able to provide different data based on the specified data type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Chart.ISupportDynamicDataSegment.DataType">
      <summary>Gets or sets the type of the data.</summary>
      <value>The type of the data.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.DataOrientation">
      <summary>Indicates whether the SeriesDataField property returns data vertically or horizontally.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.DataOrientation.Vertical">
      <summary>The SeriesDataField property returns data vertically.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.DataOrientation.Horizontal">
      <summary>The SeriesDataField property returns data horizontally.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.EmptyValueStyle">
      <summary>Specifies how to show empty worksheet cells in a data series in the chart.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.EmptyValueStyle.Gaps">
      <summary>Leaves gaps for empty worksheet cells in a data series, which results in a segmented line.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.EmptyValueStyle.Zero">
      <summary>Treats empty worksheet cells in a data series as zero values, so that the line drops to zero for zero-value data points.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.EmptyValueStyle.Connect">
      <summary>Instead of leaving gaps for empty worksheet cells in a data series, the gaps are filled with a connecting element.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.IndicatorChangeType">
      <summary>Represents which is the behavior and which part of the indicator has changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.IndicatorChangeType.Move">
      <summary>Represents the moving behavior</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.IndicatorChangeType.Resize">
      <summary>Represents the resizing behavior</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.IndicatorChangeType.Category">
      <summary>Specifies that the category has changed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.IndicatorChangeType.SeriesName">
      <summary>Specifies that the series name has changed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.IndicatorChangeType.Data">
      <summary>Specifies that the data has changed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SegmentDataType">
      <summary>Represents the data type of a segment.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SegmentDataType.Number">
      <summary>The segment will return numeric values.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SegmentDataType.Text">
      <summary>The segment will return string values.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SegmentDataType.AutoIndex">
      <summary>The segment will return numeric values if all its values are numeric; otherwise, it will return the index of the element.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType">
      <summary>Represents which kind of SpreadChart undoable action.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.DataIndicator">
      <summary>DataIndicator is changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.ChartType">
      <summary>ChartType is changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.SeriesChartType">
      <summary>SeriesChartType is changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.ChartViewType">
      <summary>User switch between 2D and 3D.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.SwitchRowColumn">
      <summary>User switch using Row as Column and vice versa.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.SelectData">
      <summary>ChartDataIndicator is changed. It's offen raised by SelectData form.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.MoveChart">
      <summary>User move SpreadChart to other SheetView.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.MoveResize">
      <summary>User move SpreadChart to other location or resize it.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.CopyMoveResize">
      <summary>User move and/or resize SpreadChart to other location and try to clone it.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.ChartModel">
      <summary>ChartModel is changed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.PasteChartToChart">
      <summary>Paste a chart's content to another chart</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.ChartDesigner">
      <summary>Change chart by opening FpChart Designer.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Chart.SpreadChartUndoAction.ActionType.None">
      <summary>Do nothing</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ContextMenuStripEventHandler">
      <summary>Represents a method which will be called when the context menu is displayed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.DataFieldChangedEventHandler">
      <summary>Handles the DataFieldChanged event.</summary>
      <param name="sender">The event source</param>
      <param name="e">A <see cref="T:FarPoint.Win.Spread.Chart.DataFieldChangedEventArgs" /> that contains event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.ExpandSeriesEventHandler">
      <summary>Represents the method that handles the event of expanding series by UI</summary>
      <param name="sender">The source of the event</param>
      <param name="e">FarPoint.Win.Spread.Chart.ExpandSeriesEventArgs that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.IndicatorChangedEventHandler">
      <summary>Represents the event handler for the IndicatorChanged event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Chart.SegmentDataChangedEventHandler">
      <summary>Represents an event handler for ISegmentData.DataChanged event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.DefaultSpreadDataViewDataFormatter">
      <summary>Represents the default behavior of data transfer between data model and Spread data view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewDataFormatter.#ctor(FarPoint.Win.Spread.Data.SpreadDataColumn)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.DefaultSpreadDataViewDataFormatter" /> class.</summary>
      <param name="ownerColumn">owner column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewDataFormatter.GetCellValue(FarPoint.Win.Spread.Cell)">
      <summary>Gets the cell value from the data model. Convert from cell value to the datatype of SpreadDataColumn. If success return the converted value, otherwise return DBNull.</summary>
      <param name="cell">Cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewDataFormatter.SetCellValue(FarPoint.Win.Spread.Cell,System.Object)">
      <summary>Sets the new cell value to the data model.</summary>
      <param name="cell">cell</param>
      <param name="value">value</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper">
      <summary>Represents the default coordinate mapper from Spread data view to its underlying sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.CellRange">
      <summary>Gets or sets the model data source range.</summary>
      <value>Model data source cell range</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.DataViewColumnCount">
      <summary>Gets the number of columns in the data view.</summary>
      <value>Number of columns in the data view</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.DataViewRowCount">
      <summary>Gets the number of rows in the data view.</summary>
      <value>Number of rows in the data view</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.GetDataViewColumnFromModelColumn(System.Int32)">
      <summary>Gets the data view column from model column.</summary>
      <param name="modelColumn">Model column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.GetDataViewRowFromModelRow(System.Int32)">
      <summary>Gets the data view row from model row.</summary>
      <param name="modelRow">Model row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.GetDataViewRowFromModelRowWhenAddNew(System.Int32)">
      <summary>Gets the data view row from the model row when a new row is added. This method is used only when a new row is added to a sheet.</summary>
      <param name="modelRow">Model row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.GetModelColumnFromDataViewColumn(System.Int32)">
      <summary>Gets the model column from the data view column.</summary>
      <param name="dataViewColumn">Data view column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.GetModelRowFromDataViewRow(System.Int32)">
      <summary>Gets the model row from data view row.</summary>
      <param name="dataViewRow">Data view row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.IsValid(FarPoint.Win.Spread.SheetView)">
      <summary>Determines whether this cell range is valid in the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
      <returns>
        <c>true</c> if [is valid mapper] [the specified sheet view]; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataModelRowInserted(System.Int32)">
      <summary>Occurs when a data model row is inserted.</summary>
      <param name="index">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataModelRowRemoved(System.Int32)">
      <summary>Occurs when a data model row is removed.</summary>
      <param name="index">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataReset(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when a data row is reset.</summary>
      <param name="newIndex">New row index</param>
      <param name="oldIndex">Old row index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataRowAdded(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when a data row is added.</summary>
      <param name="newIndex">New row index</param>
      <param name="oldIndex">Old row index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataRowChanged(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when a data row is changed.</summary>
      <param name="newIndex">New row index</param>
      <param name="oldIndex">Old row index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataRowDeleted(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when a data row is deleted.</summary>
      <param name="newIndex">New row index</param>
      <param name="oldIndex">Old row index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnDataRowMoved(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when a data row is moved.</summary>
      <param name="newIndex">New index</param>
      <param name="oldIndex">Old index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.OnPropertyChanged(System.String)">
      <summary>Occurs when a property is changed.</summary>
      <param name="propertyName">Name of the property</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Data.DefaultSpreadDataViewMapper.PropertyChanged">
      <summary>Occurs when a property changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.MapperInfo">
      <summary>Represents information of the mapper.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:MapperInfo" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:MapperInfo" /> class.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.MapperInfo.Column">
      <summary>Gets the column.</summary>
      <value>Column</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.MapperInfo.ColumnCount">
      <summary>Gets the number of columns.</summary>
      <value>Number of columns</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.MapperInfo.Row">
      <summary>Gets the row.</summary>
      <value>Row</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.MapperInfo.RowCount">
      <summary>Gets the number of rows.</summary>
      <value>Number of rows</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfo.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" nolink="true" /></param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" nolink="true" />; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfo.GetHashCode">
      <summary>Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.MapperInfoConverter">
      <summary>Represents a converter for mapper information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfoConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.MapperInfoConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from</param>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to</param>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture</param>
      <param name="value">
        <see cref="T:System.Object" /> to convert</param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.NotSupportedException">conversion cannot be performed. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.MapperInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed</param>
      <param name="value">
        <see cref="T:System.Object" /> to convert</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> to convert the value parameter to</param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <exception cref="T:System.NotSupportedException">conversion cannot be performed. </exception>
      <exception cref="T:System.ArgumentNullException">destinationType parameter is null. </exception>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SheetNameConverter">
      <summary>Represents a converter for the name of the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SheetNameConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SheetNameConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SheetNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SheetNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context</param>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; false if other values are possible.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SheetNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context</param>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter">
      <summary>Represents the Spread data binding adapter.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.#ctor">
      <summary>Creates a new Spread data binding adapter.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.AutoGenerateRow">
      <summary>Gets or sets whether a row or column is automatically generated when filling data.</summary>
      <value>
        <c>true</c> if [auto generate row and column]; otherwise, <c>false</c></value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.BindingContext">
      <summary>Gets or sets the collection of currency managers for the <see cref="T:System.Windows.Forms.IBindableComponent" />.</summary>
      <value>Collection of <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects for this <see cref="T:System.Windows.Forms.IBindableComponent" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.DataAutoCellTypes">
      <summary>Gets or sets whether the cell type is set automatically when filling data.</summary>
      <value>
        <c>true</c> if the cell type is set automatically when filling data; otherwise, <c>false</c></value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.DataBindings">
      <summary>Gets the collection of data-binding objects for this <see cref="T:System.Windows.Forms.IBindableComponent" />.</summary>
      <value>
        <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> for this <see cref="T:System.Windows.Forms.IBindableComponent" />.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.DataMember">
      <summary>Gets or sets the data member.</summary>
      <value>Data member</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.DataSource">
      <summary>Gets or sets the data source.</summary>
      <value>Data source</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.IsInitialized">
      <summary>Gets a value indicating whether the component is initialized.</summary>
      <value>true to indicate the component has completed initialization; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.MapperInfo">
      <summary>Gets or sets the mapper information.</summary>
      <value>Mapper information</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.SheetName">
      <summary>Gets or sets the name of the sheet.</summary>
      <value>Name of the sheet</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.Spread">
      <summary>Gets or sets the Spread.</summary>
      <value>Spread</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.BeginInit">
      <summary>Signals the object that initialization is starting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.EndInit">
      <summary>Signals the object that initialization is complete.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.FillSpreadDataByDataSource">
      <summary>Fills the Spread data with data from the data source.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.GetColumnCellType(System.Int32)">
      <summary>Gets the cell type of the column in the data source.</summary>
      <param name="colIndex">Index of the column in the data source</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.OnBindingContextChanged">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.OnInitialized">
      <summary>Raises the Initialized event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.Reset">
      <summary>Resets this instance according to the set properties.</summary>
      <remarks>When the data model is changed, this method should be called to ensure that all the functions of the SpreadDataAdapter work properly.</remarks>
    </member>
    <member name="E:FarPoint.Win.Spread.Data.SpreadDataBindingAdapter.Initialized">
      <summary>Occurs when this componet is initialized</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SpreadDataColumn">
      <summary>Represents the schema of a column in a <see cref="T:FarPoint.Win.Spread.Data.SpreadDataView" />.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumn.#ctor">
      <summary>Creates a new Spread data column (no name) where the data type of the column is string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumn.#ctor(System.String)">
      <summary>Creates a new Spread data column where the data type of the column is string.</summary>
      <param name="columnName">Name of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumn.#ctor(System.String,System.Type)">
      <summary>Creates a new Spread data column with the specified data type.</summary>
      <param name="dataColumnName">Name of the column</param>
      <param name="columnDataType">Type of the data</param>
    </member>
    <member name="F:FarPoint.Win.Spread.Data.SpreadDataColumn.DEFAULT_COLUMN_NAME">
      <summary>This is the default name of new column. When a column is initailized without column name parameter, this name is used as the default name. This field is constant and read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumn.AllowDBNull">
      <summary>Gets or sets whether null values are allowed in this column for rows that belong to the table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumn.Caption">
      <summary>Gets or sets the caption for the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumn.ColumnName">
      <summary>Gets the name of the column in the Spread data column collection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumn.DataType">
      <summary>Gets the type of data stored in the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumn.Formatter">
      <summary>Gets or sets the data formatter which is used to transfer data between the data model and the Spread data view.</summary>
      <value>Data transfer</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumn.Ordinal">
      <summary>Gets the position of the column in the Spread data column collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumn.OnPropertyChanged(System.String)">
      <summary>Occurs when a property is changed.</summary>
      <param name="propertyName">Name of the property</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Data.SpreadDataColumn.PropertyChanged">
      <summary>Occurs when a property changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SpreadDataColumnCollection">
      <summary>Represents a <see cref="T:FarPoint.Win.Spread.Data.SpreadDataColumn" /> collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataColumnCollection" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataColumn" /> at the specified index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.Item(System.String)">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataColumn" /> with the specified name.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.Add(FarPoint.Win.Spread.Data.SpreadDataColumn)">
      <summary>Adds the specified column.</summary>
      <param name="column">Column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.Contains(System.String)">
      <summary>Determines whether this collection contains the column with the specified name.</summary>
      <param name="name">Name</param>
      <returns>
        <c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.IndexOf(FarPoint.Win.Spread.Data.SpreadDataColumn)">
      <summary>Gets the index of the specified column.</summary>
      <param name="column">Column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.IndexOf(System.String)">
      <summary>Gets the index of the column with specified name</summary>
      <param name="columnName">Name of the column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.InsertAt(System.Int32,FarPoint.Win.Spread.Data.SpreadDataColumn)">
      <summary>Inserts the column at specified index.</summary>
      <param name="index">Index</param>
      <param name="column">Column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.OnClearComplete">
      <summary>Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
      <param name="index">zero-based index at which to insert value</param>
      <param name="value">new value of the element at index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
      <param name="index">Zero-based index at which value can be found</param>
      <param name="value">Value of the element to remove from index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
      <param name="index">Zero-based index at which oldValue can be found</param>
      <param name="oldValue">Value to replace with newValue</param>
      <param name="newValue">New value of the element at index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.Remove(FarPoint.Win.Spread.Data.SpreadDataColumn)">
      <summary>Removes the specified column.</summary>
      <param name="column">Column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnCollection.Remove(System.String)">
      <summary>Removes the column with specified name.</summary>
      <param name="name">Name</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor" /> class.</summary>
      <param name="propertyName">Name of the property</param>
      <param name="propertyType">Type of the property</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.ComponentType">
      <summary>When overridden in a derived class, gets the type of the component this property is bound to.</summary>
      <value>A <see cref="T:System.Type" /> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.IsReadOnly">
      <summary>When overridden in a derived class, gets a value indicating whether this property is read-only.</summary>
      <value>true if the property is read-only; otherwise, false.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.PropertyType">
      <summary>When overridden in a derived class, gets the type of the property.</summary>
      <value>A <see cref="T:System.Type" /> that represents the type of the property.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.CanResetValue(System.Object)">
      <summary>When overridden in a derived class, returns whether resetting an object changes its value.</summary>
      <param name="component">component to test for reset capability</param>
      <returns>true if resetting the component changes its value; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.GetValue(System.Object)">
      <summary>When overridden in a derived class, gets the current value of the property on a component.</summary>
      <param name="component">component with the property for which to retrieve the value</param>
      <returns>The value of a property for a given component.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.ResetValue(System.Object)">
      <summary>When overridden in a derived class, resets the value for this property of the component to the default value.</summary>
      <param name="component">component with the property value that is to be reset to the default value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>When overridden in a derived class, sets the value of the component to a different value.</summary>
      <param name="component">component with the property value that is to be set</param>
      <param name="value">new value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataColumnPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</summary>
      <param name="component">component with the property to be examined for persistence</param>
      <returns>true if the property should be persisted; otherwise, false.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SpreadDataRowView">
      <summary>Represents a row of data in a Spread data view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataRowView" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.#ctor(FarPoint.Win.Spread.Data.SpreadDataView)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataRowView" /> class.</summary>
      <param name="ownerDataView">Owner data view</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataRowView.Error">
      <summary>Gets an error message indicating what is wrong with this object.</summary>
      <value>An error message indicating what is wrong with this object. The default is an empty string ("").</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataRowView.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Object" /> with the specified property name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataRowView.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Object" /> at the specified index.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.BeginEdit">
      <summary>Begins an edit on an object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.CancelEdit">
      <summary>Discards changes since the last <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> call.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.EndEdit">
      <summary>Pushes changes since the last <see cref="M:System.ComponentModel.IEditableObject.BeginEdit" /> or <see cref="M:System.ComponentModel.IBindingList.AddNew" /> call into the underlying object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetAttributes">
      <summary>Returns a collection of custom attributes for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for this object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetClassName">
      <summary>Returns the class name of this instance of a component.</summary>
      <returns>The class name of the object, or null if the class does not have a name.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetComponentName">
      <summary>Returns the name of this instance of a component.</summary>
      <returns>The name of the object, or null if the object does not have a name.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetConverter">
      <summary>Returns a type converter for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter" nolink="true" /> for this object.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetDefaultEvent">
      <summary>Returns the default event for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for this object, or null if this object does not have events.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetDefaultProperty">
      <summary>Returns the default property for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for this object, or null if this object does not have properties.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for this instance of a component.</summary>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object</param>
      <returns>An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or null if the editor cannot be found.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetEvents(System.Attribute[])">
      <summary>Returns the events for this instance of a component using the specified attribute array as a filter.</summary>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter</param>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the filtered events for this component instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetEvents">
      <summary>Returns the events for this instance of a component.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for this component instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetProperties(System.Attribute[])">
      <summary>Returns the properties for this instance of a component using the attribute array as a filter.</summary>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter</param>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the filtered properties for this component instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetProperties">
      <summary>Returns the properties for this instance of a component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties for this component instance.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns an object that contains the property described by the specified property descriptor.</summary>
      <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found</param>
      <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataRowView.RaisePropertyChanged(System.String)">
      <summary>Raises the property changed.</summary>
      <param name="propertyName">Name of the property</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Data.SpreadDataRowView.PropertyChanged">
      <summary>Occurs when property changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.SpreadDataView">
      <summary>Represents a data view of a sheet in a Spread.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.#ctor(FarPoint.Win.Spread.FpSpread,System.String)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataView" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="sheetViewName">Name of the sheet view.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.#ctor(FarPoint.Win.Spread.FpSpread,System.String,FarPoint.Win.Spread.Data.ISpreadDataViewMapper)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Data.SpreadDataView" /> class.</summary>
      <param name="spread">The spread.</param>
      <param name="sheetViewName">Name of the sheet view.</param>
      <param name="mapper">The mapper.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataView.Columns">
      <summary>Gets the columns.</summary>
      <value>Columns</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataView.Mapper">
      <summary>Gets or sets the mapper of the Spread data view.</summary>
      <value>Mapper</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataView.RaiseListChangedEvents">
      <summary>Gets or set a value indicating whether adding or removing items within the list raises <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events.</summary>
      <value>true if adding or removing items raises <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> events; otherwise, false. The default is true. <remarks>This property will always return true</remarks></value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.SpreadDataView.SheetView">
      <summary>Gets the sheet.</summary>
      <value>Sheet (SheetView object)</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.AddNewCore">
      <summary>Adds a new item to the end of the collection.</summary>
      <returns>Item that was added to the collection</returns>
      <exception cref="T:System.InvalidCastException">new item is not the same type as the objects contained in the <see cref="T:System.ComponentModel.BindingList`1" />.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.ClearItems">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.EnsureDataBound">
      <summary>Validates this Spread data view.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.SpreadDataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.BindingList`1.ListChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.ISpreadDataViewDataFormatter">
      <summary>Interface that supports the class which transfers data up and down between DataModel and SpreadDataView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewDataFormatter.GetCellValue(FarPoint.Win.Spread.Cell)">
      <summary>Gets the cell value from the data model.</summary>
      <param name="cell">Cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewDataFormatter.SetCellValue(FarPoint.Win.Spread.Cell,System.Object)">
      <summary>Sets the new cell value to the data model.</summary>
      <param name="cell">Cell</param>
      <param name="value">Value</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Data.ISpreadDataViewMapper">
      <summary>Represents the coordinate mapper from Spread data view to its underlying sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.DataViewColumnCount">
      <summary>Gets the number of columns in the data view.</summary>
      <value>Number of columns</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.DataViewRowCount">
      <summary>Gets the number of rows in the data view.</summary>
      <value>Number of rows</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.GetDataViewColumnFromModelColumn(System.Int32)">
      <summary>Gets the data view column from model column.</summary>
      <param name="modelColumn">model column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.GetDataViewRowFromModelRow(System.Int32)">
      <summary>Gets the data view row from model row.</summary>
      <param name="modelRow">Model row index</param>
      <returns>Index of row in view.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.GetDataViewRowFromModelRowWhenAddNew(System.Int32)">
      <summary>Gets the data view row from model row when add new row. This method is only used when add a new row to sheetview</summary>
      <param name="modelRow">Model row index</param>
      <returns>Index of row in view</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.GetModelColumnFromDataViewColumn(System.Int32)">
      <summary>Gets the model column from data view column.</summary>
      <param name="dataViewColumn">Data view column index</param>
      <returns>Index of column in model.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.GetModelRowFromDataViewRow(System.Int32)">
      <summary>Gets the model row from data view row.</summary>
      <param name="dataViewRow">Data view row index</param>
      <returns>Index of row in model.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.IsValid(FarPoint.Win.Spread.SheetView)">
      <summary>Determines whether this mapper is valid in the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
      <returns>
        <c>true</c> if [is valid mapper] [the specified sheet view]; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataModelRowInserted(System.Int32)">
      <summary>Occurs when the data model row is inserted.</summary>
      <param name="index">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataModelRowRemoved(System.Int32)">
      <summary>Occurs when the data model row is removed.</summary>
      <param name="index">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataReset(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when the data is reset.</summary>
      <param name="newIndex">New index</param>
      <param name="oldIndex">Old index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataRowAdded(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when the data row is added.</summary>
      <param name="newIndex">New index</param>
      <param name="oldIndex">Old index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataRowChanged(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when the data row is changed.</summary>
      <param name="newIndex">New index</param>
      <param name="oldIndex">Old index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataRowDeleted(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when the data row is deleted.</summary>
      <param name="newIndex">New index</param>
      <param name="oldIndex">Old index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Data.ISpreadDataViewMapper.OnDataRowMoved(System.Int32,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Occurs when the data row is moved.</summary>
      <param name="newIndex">New index</param>
      <param name="oldIndex">Old index</param>
      <param name="propertyDescriptor">Property descriptor</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ArcShape">
      <summary>Represents an arc shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.#ctor">
      <summary>Creates a new arc shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new arc shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.#ctor(FarPoint.Win.Spread.DrawingSpace.ArcShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArcShape.SetInitialShape">
      <summary>Creates the initial arc shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ArrowShape">
      <summary>Represents an arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.#ctor">
      <summary>Creates a new arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.ArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.#ctor(System.Drawing.Point,System.Drawing.Point,System.Single)">
      <summary>Creates a new shape.</summary>
      <param name="startPoint">Start point of arrow shape.</param>
      <param name="endPoint">End point of arrow shape.</param>
      <param name="arrowTipWidth">The tip width of the arrow shape.</param>
      <exception cref="T:System.ArgumentException">Thrown when the arrowTipWidth value is less than or equal to zero</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ArrowShape.SetInitialShape">
      <summary>Creates the initial arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.BannerShape">
      <summary>Represents a banner shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.#ctor">
      <summary>Creates a new banner shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a banner shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.#ctor(FarPoint.Win.Spread.DrawingSpace.BannerShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BannerShape.SetInitialShape">
      <summary>Creates the initial banner shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.BentArrowShape">
      <summary>Represents a bent arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.#ctor">
      <summary>Creates a new bent arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new bent arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.BentArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BentArrowShape.SetInitialShape">
      <summary>Creates the initial bent arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.BurstShape">
      <summary>Represents a burst shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.#ctor">
      <summary>Creates a new burst shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new burst shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.#ctor(FarPoint.Win.Spread.DrawingSpace.BurstShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.BurstShape.SetInitialShape">
      <summary>Creates the initial burst shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape">
      <summary>Represents a square callout with arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.#ctor">
      <summary>Creates a new square callout with arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new square callout with arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CalloutArrowShape.SetInitialShape">
      <summary>Creates the initial square callout with arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape">
      <summary>Represents a caption balloon shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.#ctor">
      <summary>Creates a new caption balloon shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new caption balloon shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.#ctor(FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CaptionBalloonShape.SetInitialShape">
      <summary>Creates the initial caption balloon shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape">
      <summary>Represents a check mark shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.#ctor">
      <summary>Creates a new check mark shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new checkmark shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.#ctor(FarPoint.Win.Spread.DrawingSpace.CheckmarkShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CheckmarkShape.SetInitialShape">
      <summary>Creates the initial check mark shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ChevronShape">
      <summary>Represents a chevron shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.#ctor">
      <summary>Creates a new chevron shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new chevron shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.#ctor(FarPoint.Win.Spread.DrawingSpace.ChevronShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ChevronShape.SetInitialShape">
      <summary>Creates the initial chevron shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.CrescentShape">
      <summary>Represents a crescent shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.#ctor">
      <summary>Creates a new crescent shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new crescent shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.#ctor(FarPoint.Win.Spread.DrawingSpace.CrescentShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CrescentShape.SetInitialShape">
      <summary>Creates the initial crescent shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape">
      <summary>Represents a curved arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.#ctor">
      <summary>Creates a new curved arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CurvedArrowShape.SetInitialShape">
      <summary>Creates the initial curved arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.CustomShape">
      <summary>Represents a custom shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.#ctor">
      <summary>Creates a custom shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new custom shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.#ctor(FarPoint.Win.Spread.DrawingSpace.CustomShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.CustomShape.Shape">
      <summary>Gets or sets the shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.CustomShape.SetInitialShape">
      <summary>Creates the initial shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.DiamondShape">
      <summary>Represents a diamond shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.#ctor">
      <summary>Creates a new diamond shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new diamond shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.#ctor(FarPoint.Win.Spread.DrawingSpace.DiamondShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DiamondShape.SetInitialShape">
      <summary>Creates the initial diamond shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.DonutShape">
      <summary>Represents a donut shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.#ctor">
      <summary>Creates a new donut shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new donut shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.#ctor(FarPoint.Win.Spread.DrawingSpace.DonutShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DonutShape.SetInitialShape">
      <summary>Creates the initial donut shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.DrawingSurface">
      <summary>Represents the drawing surface that handles mouse input and draws graphics objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.#ctor">
      <summary>Creates a new drawing surface.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.BackColor">
      <summary>Gets or sets the background color for the control.</summary>
      <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.CloseFigures">
      <summary>Gets or sets whether figures are closed before a new figure is drawn.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.Owner">
      <summary>Gets or sets the control that owns this drawing surface.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.SelectionRectangle">
      <summary>Gets or sets the group selection rectangle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.SelectionRectangleVisible">
      <summary>Gets or sets whether the group selection rectangle is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.DrawGroupSelection(System.Drawing.Graphics)">
      <summary>Draws a group selection rectangle.</summary>
      <param name="g" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.Initialize(System.Object)">
      <summary>Initializes the drawing surface of the specified control.</summary>
      <param name="owner" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Handles mouse down processing.</summary>
      <param name="e">Mouse Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Handles mouse move processing.</summary>
      <param name="e">Mouse Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Handles mouse up processing.</summary>
      <param name="e">Mouse Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingSurface.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Draws graphic objects and group selection rectangle (if necessary).</summary>
      <param name="e">Paint Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar">
      <summary>Represents the toolbar for shapes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.#ctor">
      <summary>Creates a new drawing toolbar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.#ctor(System.Windows.Forms.Control,FarPoint.Win.Spread.DrawingSpace.PSContainer)">
      <summary>Creates a new drawing toolbar for the specified container in the specified control.</summary>
      <param name="control">Control</param>
      <param name="container">Container</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ContainerXOffset">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ContainerYOffset">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.OwningControl">
      <summary>Gets or sets the owner control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.OwnsFocus">
      <summary>Gets or sets whether the OwningControl receives focus after a toolbar action.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ShapeContainer">
      <summary>Gets or sets the shape container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ToolbarMain">
      <summary>Gets the main toolbar.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ToolbarPanel">
      <summary>Gets the toolbar panel.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ToolbarSupplement">
      <summary>Gets the supplementary toolbar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.AddShape(System.String)">
      <summary>Add a Shape by shape type.</summary>
      <param name="ShapeType">Shape type.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.GetChartLocationOffset(System.Int32,System.Int32)">
      <summary>Get the correct chart location in spread view.</summary>
      <param name="width">Chart width</param>
      <param name="height">Chart height</param>
      <returns>Correct chart location</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.SetShapeStyle(FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs)">
      <summary>Set the Shape Style.</summary>
      <param name="e">Argument object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.DrawingToolbar.ShowSymbolDialog">
      <summary>Show the symbol dialog.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape">
      <summary>Represents an editor's drawn highlight shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.#ctor">
      <summary>Creates a new bent arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new bent arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.#ctor(FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EditorCalloutShape.SetInitialShape">
      <summary>Creates the initial bent arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.EllipseShape">
      <summary>Represents an ellipse shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.#ctor">
      <summary>Creates a new ellipse shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new ellipse shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.#ctor(FarPoint.Win.Spread.DrawingSpace.EllipseShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.EllipseShape.SetInitialShape">
      <summary>Creates the initial ellipse shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape">
      <summary>Represents an exclamation balloon shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.#ctor">
      <summary>Creates a new exclamation balloon shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new exclamation balloon shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.#ctor(FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ExclamationBalloonShape.SetInitialShape">
      <summary>Creates the initial exclamation balloon shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape">
      <summary>Represents a five-pointed star shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.#ctor">
      <summary>Creates a new five-pointed star shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new five-pointed star shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.#ctor(FarPoint.Win.Spread.DrawingSpace.FivePointStarShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FivePointStarShape.SetInitialShape">
      <summary>Creates the initial five-pointed star shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.FontPicker">
      <summary>Represents the FarPoint presentation space font picker.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.#ctor">
      <summary>Creates a new font picker.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.#ctor(System.Boolean)">
      <summary>Creates a new font picker.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.#ctor(System.Boolean,System.Boolean)">
      <summary>Creates a new font picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.FontName">
      <summary>Gets or sets the name of the font.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.FontSize">
      <summary>Gets or sets the text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.SelectedFont">
      <summary>Gets or sets the font for selected text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPicker.TextString">
      <summary>Gets or sets the text.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPicker.Dispose(System.Boolean)">
      <summary>Internal use only. Clean up any resources being used.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.FontPicker.FontSelected">
      <summary>Handles the font selected event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.FontPickerWide">
      <summary>Represents the FarPoint presentation space wide font picker</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.#ctor">
      <summary>Creates a new wide font picker.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.FontName">
      <summary>Gets or sets the name of the font.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.FontSize">
      <summary>Gets or sets the text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.OriginalFont">
      <summary>Gets the original font assigned to the control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.SelectedFont">
      <summary>Gets or sets the font for selected text.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.Dispose(System.Boolean)">
      <summary>Internal use only. Clean up any resources being used.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.IsDirty">
      <summary>Gets whether the user changed the font or its properties.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.FontPickerWide.FontSelected">
      <summary>Occurs when font is selected.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape">
      <summary>Represents a four way arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.#ctor">
      <summary>Creates a new four way arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new four way arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.FourWayArrowShape.SetInitialShape">
      <summary>Creates the initial four way arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.GradientSection">
      <summary>Represents the sections of a color gradient, continuously smooth color transitions.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.#ctor(System.Drawing.Color,System.Int32,System.Int32)">
      <summary>Creates a new color gradient section with the specified parameters.</summary>
      <param name="color">Color</param>
      <param name="amount">Amount of the gradient</param>
      <param name="alphaBlend">Amount of alpha-blending (transparency)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.#ctor(System.Drawing.Color,System.Int32)">
      <summary>Creates a new color gradient section with the specified parameters.</summary>
      <param name="color">Color</param>
      <param name="amount">Amount of the gradient</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.#ctor(System.Drawing.Color)">
      <summary>Creates a new color gradient section with default settings.</summary>
      <param name="color">Color</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.GradientSection.AlphaBlend">
      <summary>Gets or sets the amount of alpha-blending of the gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.GradientSection.Amount">
      <summary>Gets or sets the amount of the gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.GradientSection.Color">
      <summary>Gets or sets the color of the gradient.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the gradient section from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the gradient</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.GradientSection.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the gradient section to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the gradient</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.HeartShape">
      <summary>Represents a heart shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.#ctor">
      <summary>Creates a new heart shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new heart shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.#ctor(FarPoint.Win.Spread.DrawingSpace.HeartShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.HeartShape.SetInitialShape">
      <summary>Creates the initial heart shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape">
      <summary>Represents a lightning bolt shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.#ctor">
      <summary>Creates a new lightning bolt shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new lightning bolt shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.#ctor(FarPoint.Win.Spread.DrawingSpace.LightningBoltShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LightningBoltShape.SetInitialShape">
      <summary>Creates the initial lightning bolt shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.LineShape">
      <summary>Represents a line shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.#ctor">
      <summary>Creates a new line shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.#ctor(System.Drawing.Point,System.Drawing.Point)">
      <summary>Creates a new line shape.</summary>
      <param name="startPoint">Start point of line</param>
      <param name="endPoint">End point of line</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new line shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.#ctor(FarPoint.Win.Spread.DrawingSpace.LineShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.EndCap">
      <summary>Gets or sets the ending cap for the line.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.Height">
      <summary>Gets or sets the height of the line shape.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.ShapeOutlineThickness">
      <summary>Gets or sets the shape outline thickness (line thickness) for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.StartCap">
      <summary>Gets or sets the starting cap for the line.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.Thickness">
      <summary>Gets or sets the thickness of the line.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.LineShape.Width">
      <summary>Gets or sets the width of the line shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.CopyTo(System.Object)">
      <summary>Copies the properties of this object to the target object.</summary>
      <param name="target">Target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Deserialize(System.Object,System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="obj">Object</param>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.DeserializeLineProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
      <summary>Gets the grab handle rectangles.</summary>
      <param name="r">Rectangle</param>
      <param name="handleRects">Array of handle rectangles</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.GetRotateHandleRectangle(System.Drawing.Rectangle)">
      <summary>Gets the rotate handle rectangle.</summary>
      <param name="r">Rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint itself.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the line to repaint its background.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the drop shadow.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.PaintRotateHandle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the rotate handle.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Asks the control to repaint the line shape.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the line shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Serialize(System.Object,System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="obj">Object</param>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.SerializeProps(System.Xml.XmlTextWriter)">
      <summary>Saves the object properties to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
      <param name="adjustRegion">Whether to adjust the region</param>
      <param name="recursive">Whether to check recursively for each element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.SetInitialShape">
      <summary>Creates the initial line shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.LineShape.SizeRegion(System.Single,System.Single,System.Single,System.Single)">
      <summary>Resizes the region.</summary>
      <param name="newWidth">New width value in pixels</param>
      <param name="newHeight">New height value in pixels</param>
      <param name="oldWidth">Old width value in pixels</param>
      <param name="oldHeight">Old height value in pixels</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.MultiSideShape">
      <summary>Represents a multi-side shape object (must be greater than 4 sides).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.#ctor">
      <summary>Creates a new multiple-sided shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new multiple-sided shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.#ctor(FarPoint.Win.Spread.DrawingSpace.MultiSideShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Sides">
      <summary>Gets or sets the number of sides in the shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.CopyTo(System.Object)">
      <summary>Copies the properties of this object to the target object.</summary>
      <param name="target">Target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Deserialize(System.Object,System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="obj">Object</param>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.DeserializeMultiSideProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Serialize(System.Object,System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="obj">Object</param>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.SerializeProps(System.Xml.XmlTextWriter)">
      <summary>Saves the object properties to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.SetInitialShape">
      <summary>Creates the initial multiple-sided shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.MultiSideShape.ShouldSerializeShape">
      <summary>Determines if the shape should be saved to XML.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.NewPaperSize">
      <summary>Represents the NewPaperSize.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.NewPaperSize.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Create a new NewPaperSize.</summary>
      <param name="sheet">sheetview object</param>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.NewPaperSize.PageHeight">
      <summary>Page height.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.NewPaperSize.PageWidth">
      <summary>Page width.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.NewPaperSize.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventArgs">
      <summary>Provides data for the object changed event.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventArgs.#ctor(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange,System.Object)">
      <summary>Occurs when the object has changed.</summary>
      <param name="oldLocator" />
      <param name="newLocator" />
      <param name="activeObject" />
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventArgs.ActiveObject">
      <summary>Gets or sets active object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.PSContainer">
      <summary>Represents the presentation space object container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.#ctor">
      <summary>Creates a new presentation space object container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new container object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ChildContains(System.Drawing.Point,System.Boolean)">
      <summary>Gets the child object in this container that contains the screen location.</summary>
      <param name="pt">Point on the screen</param>
      <param name="ignoreTransparency">Whether to ignore the transparency</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ClearObjects">
      <summary>Removes all the objects from the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ElementDeletedNotify(System.Object,System.Object)">
      <summary>Handles element deleted notification.</summary>
      <param name="o">Object</param>
      <param name="element">Object that contains the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.ElementNotify(System.Object,System.Object)">
      <summary>Handles element notification.</summary>
      <param name="o">Object</param>
      <param name="element">Object that contains the element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.Find(System.Int32)">
      <summary>Finds an object in the collection that matches the specified unique identifier.</summary>
      <param name="uniqueIdentifier">Unique identifier for the object in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.GetMaxExtent">
      <summary>Gets the size of the largest contained objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.GetPrintMaxExtent">
      <summary>Gets the size of the largest contained objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.IndexOf(System.Int32)">
      <summary>Get the index of an object in the collection.</summary>
      <param name="uniqueIdentifer">Unique identifier for the object in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.MoveChildren(System.Int32,System.Int32)">
      <summary>Moves the objects in the container by a specified amount.</summary>
      <param name="offsetX">Amount to offset object horizontally</param>
      <param name="offsetY">Amount to offset object vertically</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.OnDeserialization(System.Object)">
      <summary>Internal use only.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the object container.</summary>
      <param name="g">Graphics device interface</param>
      <param name="faceRect">Rectangle that bounds the container</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Prints the object container.</summary>
      <param name="g">Graphics device interface</param>
      <param name="faceRect">Rectangle that bounds the container</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the object container with zooming.</summary>
      <param name="g">Graphics device interface</param>
      <param name="faceRect">Rectangle that bounds the container</param>
      <param name="zoomFactor">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSContainer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the container object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.PSGradient">
      <summary>Represents a gradient.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.#ctor">
      <summary>Creates a new presentation space gradient object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.#ctor(System.Object)">
      <summary>Creates a new presentation space gradient object based on another object.</summary>
      <param name="cloneFrom">Object from which to clone the gradient</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSGradient.Name">
      <summary>Gets or sets the name for the appearance object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSGradient.Sections">
      <summary>Gets or sets the gradient sections for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSGradient.Style">
      <summary>Gets or sets the gradient style for the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Clone">
      <summary>Creates a new gradient object by copying the current object properties.</summary>
      <returns>Copy of the object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Reset">
      <summary>Resets the appearance object to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.ResetName">
      <summary>Resets the name to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.ResetSections">
      <summary>Resets the gradient sections of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.ResetStyle">
      <summary>Resets the gradient style of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSGradient.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to write (save) the object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.PSObject">
      <summary>Represents the windowless presentation space object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.#ctor">
      <summary>Creates a new instance of a presentation space object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.#ctor(System.Object)">
      <summary>Creates a new object based on the specified object.</summary>
      <param name="cloneFrom">Object from which to clone the new object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorAll">
      <summary>Anchors on all sides of object This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorBottom">
      <summary>Anchors on bottom side of object This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorLeft">
      <summary>Anchors on left side of object This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorNone">
      <summary>Applies no anchoring, so the object is allowed free movement This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorRight">
      <summary>Anchors on right side of object This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.AnchorTop">
      <summary>Anchors on top side of object This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject._currentRatio">
      <summary>Specifies the current ratio.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.alphaBackColor">
      <summary>Specifies the alpha-blending background color.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.bgImageAngle">
      <summary>Specifies the angle at which the background image is rotated.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.bgImageRotationAllowed">
      <summary>Specifies whether the background image rotates when the user rotates the shape.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.clickPt">
      <summary>Specifies the click point of the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.deserializing">
      <summary>Specifies whether the container is saving to XML.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.pictureAngle">
      <summary>Specifies the angle at which the picture is rotated.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.region">
      <summary>Specifies the region of the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.regionRect">
      <summary>Specifies the region rectangle.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.resizeHandle">
      <summary>Specifies the handle currently being used for resizing.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.rotatedAngle">
      <summary>Specifies the angle at which the object is rotated.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.rotating">
      <summary>Specifies the direction of object rotation, if at all, for the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.shapeColor">
      <summary>Specifies the color of the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.shapeStyle">
      <summary>Specifies the dashed-line style of the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.shapeThickness">
      <summary>Specifies the line thickness of the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.theShape">
      <summary>Internal use only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSObject.zoomedRectangle">
      <summary>Specifies the zoomed rectangle.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlignHorz">
      <summary>Gets or sets the horizontal alignment of the contents of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlignText">
      <summary>Gets or sets the text alignment for the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlignVert">
      <summary>Gets or sets the vertical alignment of the contents of the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AllowBackgroundImageRotation">
      <summary>Gets or sets the background image rotation allowed flag of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.AlphaBlendBackColor">
      <summary>Gets or sets the alpha-blend value of the background color of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Anchor">
      <summary>Gets or sets whether the object is anchored.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.BackgroundImageRotationAngle">
      <summary>Gets or sets the background image rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanMove">
      <summary>Gets or sets whether the user is allowed to move the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanPrint">
      <summary>Gets or sets whether the container is allowed to print the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanRotate">
      <summary>Gets or sets whether the user is allowed to rotate the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.CanSize">
      <summary>Gets or sets whether the user is allowed to resize the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ContainedObjects">
      <summary>Gets or sets the contained objects of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.DrawFocusRectangle">
      <summary>Gets or sets the focus rectangle drawing style in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Enabled">
      <summary>Gets or sets whether the object can receive focus and respond to user actions.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.FlipHorizontal">
      <summary>Gets or sets a value that indicates whether the shape has been flipped horizontally.</summary>
      <value>
        <c>true</c> if the shape has been flipped horizontally; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.FlipVertical">
      <summary>Gets or sets a value that indicates whether the shape has been flipped vertically.</summary>
      <value>
        <c>true</c> if the shape has been flipped vertically; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Gradient">
      <summary>Gets or sets the gradient for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Height">
      <summary>Gets or sets the height of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Left">
      <summary>Gets or sets the x-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Location">
      <summary>Gets or sets the location of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Locked">
      <summary>Gets or sets whether the object is marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginBottom">
      <summary>Gets or sets the margin between the bottom of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginLeft">
      <summary>Gets or sets the margin between the left of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginRight">
      <summary>Gets or sets the margin between the right of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.MarginTop">
      <summary>Gets or sets the margin between the top of the element and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.OriginalBounds">
      <summary>Gets the original bounds.</summary>
      <value>The original bounds.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Picture">
      <summary>Gets or sets an image for this element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.PictureMargin">
      <summary>Gets or sets the margin between the picture and the text in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.PictureOrientation">
      <summary>Gets or sets the orientation of the picture.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.PictureRotationAngle">
      <summary>Gets or sets the picture rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.RegionPriv">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.RotationAngle">
      <summary>Gets or sets the rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Selectable">
      <summary>Gets or sets whether can select.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Shape">
      <summary>Gets or sets the shape for the object.</summary>
      <exception cref="T:System.ArgumentException"> Invalid object type specified; must be a valid type (GraphicsPath, Region, FarPoint.Win.Picture, or Bitmap) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ShapeOutlineColor">
      <summary>Gets or sets the shape outline color for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ShapeOutlineStyle">
      <summary>Gets or sets the shape outline style for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ShapeOutlineThickness">
      <summary>Gets or sets the shape outline thickness for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Size">
      <summary>Gets or sets the size of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.SizeProportional">
      <summary>Gets or sets whether the user is allowed to resize the object proportionally.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Tag">
      <summary>Gets or sets the tag for the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.TextOrientation">
      <summary>Gets or sets the orientation of the text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.TextRotationAngle">
      <summary>Gets or sets the text rotation angle of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.TextWrap">
      <summary>Gets or sets whether to wrap the text in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Top">
      <summary>Gets or sets the y-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.UniqueIdentifier">
      <summary>Gets the unique identifier for the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Visible">
      <summary>Gets or sets whether the object is visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.Width">
      <summary>Gets or sets the width of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSObject.ZoomedRectangle">
      <summary>Gets the zoomed rectangle.</summary>
      <value>The zoomed rectangle.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.AttachParent(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Clone">
      <summary>Creates and returns a copy of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Contains(System.Drawing.Point)">
      <summary>Determines whether the container contains the specified point.</summary>
      <param name="pt">Point to check</param>
      <returns>true if the point is found in the collection; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Contains(System.Drawing.Point,System.Boolean)">
      <summary>Determines whether the container contains the specified point ignoring transparency.</summary>
      <param name="pt">Point to check</param>
      <param name="ignoreTransparency">Whether to ignore transparency</param>
      <returns>true if it contains the point; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.CopyTo(System.Object)">
      <summary>Copies the properties of this object in presentation space (drawing space) to the target object.</summary>
      <param name="target">Target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Deserialize(System.Object,System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="obj">Object</param>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DeserializeEntry(System.Runtime.Serialization.SerializationEntry)">
      <summary>Creates a new shape object from serialization. Serialize single entry. Should not overrides unless using base serialize for binary or item need combination might missing.</summary>
      <param name="entry" />
      <returns>TRUE if handled</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DeserializeObjectProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DeserializePositionAndSize(System.Xml.XmlNodeReader)">
      <summary>Deserializes the position and size.</summary>
      <param name="r">XmlNodeReader from which to read (load) the position and size</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Dispose(System.Boolean)">
      <summary>Internal use only. Cleans up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoClick(System.Object,System.EventArgs)">
      <summary>Fires click event.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>Fires double click event.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Object of EventArgs class that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseEnter(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseLeave(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoMove(System.Drawing.Point)">
      <summary>Allows the object to be moved.</summary>
      <param name="pt">Point location of object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoRotate(System.Drawing.Point)">
      <summary>Allows the object to rotate using the specified point to determine the rotation angle.</summary>
      <param name="pt">Point with which to determine rotation angle.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.DoSize(System.Int32,System.Drawing.Point)">
      <summary>Allows the object to be sized.</summary>
      <param name="resizeHandle">Index of the grab handle used to size the object</param>
      <param name="pt">Point from which to size the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FillBackgroundWithGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Fills the background with a gradient.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the gradient</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Finalize">
      <summary>The destructor method</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FireUIChangeComplete">
      <summary>Occurs when the User Interface (UI) change is complete.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FlipShapeHorizontal">
      <summary>Flips the shape horizontally (along a horizontal axis).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.FlipShapeVertical">
      <summary>Flips the shape vertically (along a vertical axis).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetClientRectangleF(System.Drawing.RectangleF)">
      <summary>Gets the coordinates of the element.</summary>
      <param name="rectInput">Rectangle object that contains the rectangle</param>
      <returns>Coordinates of the element</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
      <summary>Gets the grab handle rectangles.</summary>
      <param name="r">Rectangle</param>
      <param name="handleRects">Array of handle rectangles</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetPictureRegion(System.Object)">
      <summary>Gets the region of the picture.</summary>
      <param name="picture">Picture</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetRotateAngle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>Gets the rotate angle.</summary>
      <param name="centerPt">Point that contains the basepoint of rotation</param>
      <param name="pt1">Point that contains the first end point</param>
      <param name="pt2">Point that contains the second end point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GetRotateHandleRectangle(System.Drawing.Rectangle)">
      <summary>Gets the rotate handle rectangle.</summary>
      <param name="r">Rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.GrabHandleFromPoint(System.Drawing.Point)">
      <summary>Returns the grab handle from the specified point.</summary>
      <param name="pt">Point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.HitTestTransparentShape(System.Drawing.Point,System.Boolean)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnClick(System.EventArgs)">
      <summary>Click processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnDeserialization(System.Object)">
      <summary>Internal use only.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseEnter processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseLeave processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseMove processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint itself.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint its background.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the background color.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the background color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the background image.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the focus rectangle.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintGrabHandles(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the handles for sizing.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintOutline(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the outline of a GraphicsPath shape.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Rectangle bounding the area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the picture inside the specified rectangle.</summary>
      <param name="g">Graphic device interface</param>
      <param name="rPict">Bounding rectangle for the picture</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintRotateHandle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the rotate handle.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Asks the control to repaint the background for the object.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the text.</summary>
      <param name="g">Graphics device</param>
      <param name="rText">Bounding rectangle for the text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PointInGrabHandle(System.Drawing.Point)">
      <summary>Gets whether the specified point is in a grab handle.</summary>
      <param name="pt">Point</param>
      <returns>true if in handle; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.PointInRotateHandle(System.Drawing.Point)">
      <summary>Gets whether the specified point is in the rotate handle.</summary>
      <param name="pt">Point</param>
      <returns>true if in handle; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Print(FarPoint.PDF.PdfGraphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the shape objects.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="rectangle">Rectangle bounding the shape objects to print</param>
      <param name="zoomFactor">Scaling factor for zooming when printing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown processing.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp processing.</summary>
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Reset">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetAllowBackgroundImageRotation">
      <summary>Resets the background image rotation allowed flag to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetAlphaBlendBackColor">
      <summary>Resets the alpha-blend value of the background color of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetAnchor">
      <summary>Resets the object's anchored status.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetBackgroundImageRotationAngle">
      <summary>Resets the background image rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanMove">
      <summary>Resets whether the object can be moved by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanPrint">
      <summary>Resets whether the object can be printed by the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanRotate">
      <summary>Resets whether the object can be rotated by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetCanSize">
      <summary>Resets whether the object can be resized by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetGradient">
      <summary>Resets the gradient style of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetLocked">
      <summary>Reset the object's locked status.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetName">
      <summary>Resets the name to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetPictureRotationAngle">
      <summary>Resets the picture rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetRotationAngle">
      <summary>Resets the rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShape">
      <summary>Resets the shape of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShapeOutlineColor">
      <summary>Resets the shape outline color of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShapeOutlineStyle">
      <summary>Resets the shape outline style of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetShapeOutlineThickness">
      <summary>Resets the shape outline thickness of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetSizeProportional">
      <summary>Resets whether the object can be resized proportionally by the user.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetTextOrientation">
      <summary>Resets the text orientation for text in the element to its default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ResetTextRotationAngle">
      <summary>Resets the text rotation angle to its default settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Rotate(System.Single)">
      <summary>Rotates the object by the specified angle around the center of the object.</summary>
      <param name="angle">Angle to rotate the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Rotate(System.Drawing.Point,System.Single)">
      <summary>Rotates the object by the specified angle around the specified point.</summary>
      <param name="rotationCenterPoint">Point around which to rotate the object</param>
      <param name="angle">Angle to rotate the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Scale(System.Single,System.Single)">
      <summary>Adjusts the size of the object by the specified amount.</summary>
      <param name="scaleX">Factor by which to scale the object in the horizontal dimension</param>
      <param name="scaleY">Factor by which to scale the object in the vertical dimension</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Scale(System.Single,System.Single,System.Boolean)">
      <summary>Adjusts the size of the object by the specified amount.</summary>
      <param name="scaleX">Factor by which to scale the object in the horizontal dimension</param>
      <param name="scaleY">Factor by which to scale the object in the vertical dimension</param>
      <param name="repaint">Whether to re-draw the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Serialize(System.Object,System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="obj">Object to save to XML</param>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SerializePositionAndSize(System.Xml.XmlTextWriter)">
      <summary>Serializes the position and size.</summary>
      <param name="w">XmlTextWriter to which to write (save) the position and size</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SerializeProps(System.Xml.XmlTextWriter)">
      <summary>Saves the object properties to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
      <param name="adjustRegion">Whether to adjust the region</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
      <param name="adjustRegion">Whether to adjust the region</param>
      <param name="recursive">Whether to check recursively for each element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SetBoundsFloatInternal(System.Single,System.Single,System.Single,System.Single)">
      <summary>Set float bound.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeAllowBackgroundImageRotation">
      <summary>Determines if the background image rotation allowed flag of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeAlphaBlendBackColor">
      <summary>Determines if the alpha-blend value of the background color of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeAnchor">
      <summary>Determines if the anchor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeBackgroundImageRotationAngle">
      <summary>Determines if the background image rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanMove">
      <summary>Determines if the CanMove property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanPrint">
      <summary>Determines if the CanPrint property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanRotate">
      <summary>Determines if the CanRotate property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeCanSize">
      <summary>Determines if the CanSize property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeContainedObjects">
      <summary>Determines if the ContainedObjects property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeGradient">
      <summary>Determines if the shape outline scaling should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeLocked">
      <summary>Determines if the locked property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeName">
      <summary>Determines if the name of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializePictureRotationAngle">
      <summary>Determines if the picture rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeRotationAngle">
      <summary>Determines if the rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShape">
      <summary>Determines if the shape should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShapeOutlineColor">
      <summary>Determines if the shape outline color should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShapeOutlineStyle">
      <summary>Determines if the shape outline style should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeShapeOutlineThickness">
      <summary>Determines if the shape outline thickness should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeSizeProportional">
      <summary>Determines if the SizeProportional property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.ShouldSerializeTextRotationAngle">
      <summary>Determines if the text rotation angle of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SizeRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Resizes the region.</summary>
      <param name="newWidth">New width value in pixels</param>
      <param name="newHeight">New height value in pixels</param>
      <param name="oldWidth">Old width value in pixels</param>
      <param name="oldHeight">Old height value in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.SizeRegion(System.Single,System.Single,System.Single,System.Single)">
      <summary>Resizes the region.</summary>
      <param name="newWidth">New width value in pixels</param>
      <param name="newHeight">New height value in pixels</param>
      <param name="oldWidth">Old width value in pixels</param>
      <param name="oldHeight">Old height value in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObject.Update">
      <summary>Causes the control to redraw invalidated region.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.PSObject.MouseEnter">
      <summary>Internal use only.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.PSObject.MouseLeave">
      <summary>Internal use only.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.PSObject.UIChangeComplete">
      <summary>Occurs when the User Interface (UI) change is complete.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.PSObjects">
      <summary>Represents a collection of windowless presentation space objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSObjects.#ctor">
      <summary>Creates a new instance of a presentation space object collection.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.PSShape">
      <summary>Represents a shape object. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.#ctor">
      <summary>Creates a new shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.#ctor(FarPoint.Win.Spread.DrawingSpace.PSShape)">
      <summary>Creates a new shape object from PSShape object</summary>
      <param name="obj" />
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.PSShape.renderText">
      <summary>Internal use only. Whether to render the text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.AlphaBlendShadowColor">
      <summary>Gets or sets the amount of transparency of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.BackColor">
      <summary>Gets or sets the background color of the shape.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.CanRenderText">
      <summary>Gets or sets whether the shape renders its text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.DynamicMove">
      <summary>Gets or sets whether the object moves when hiding or showing, resizing, or moving rows or columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.DynamicSize">
      <summary>Gets or sets whether the size of the object changes when hiding or showing, resizing, or moving rows or columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowColor">
      <summary>Gets or sets the color of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowDirection">
      <summary>Gets or sets the direction of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowOffset">
      <summary>Gets or sets the amount of offset of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowOffsetX">
      <summary>Gets or sets the amount of horizontal offset of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.ShadowOffsetY">
      <summary>Gets or sets the amount of vertical offset of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.PSShape.Shape">
      <summary>Gets or sets the shape of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ChangingCancel">
      <summary>Changings the cancel.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.CopyTo(System.Object)">
      <summary>Copies the properties of this object in presentation space (drawing space) to the target object.</summary>
      <param name="target">Target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Deserialize(System.Object,System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="obj">Object</param>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.DeserializeShapeProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.DoMove(System.Drawing.Point)">
      <summary>Allows the object to be moved.</summary>
      <param name="pt">Point location of object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.DoSize(System.Int32,System.Drawing.Point)">
      <summary>Allows the object to be sized.</summary>
      <param name="resizeHandle">Index of the grab handle used to size the object</param>
      <param name="pt">Point from which to size the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.FillBackgroundWithGradient(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Fills the background of the object with a gradient.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>Gets the coordinates of the element.</summary>
      <param name="rectInput">Rectangle object that contains the rectangle</param>
      <returns>Coordinates of the element</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetClientRectangleF(System.Drawing.RectangleF)">
      <summary>Gets the coordinates of the element.</summary>
      <param name="rectInput">Rectangle object that contains the rectangle</param>
      <returns>Coordinates of the element</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>Gets the bounding rectangles for the text and the picture in the presentation space.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the shape</param>
      <param name="rPict">Bounding rectangle for the picture</param>
      <param name="rText">Bounding rectangle for the text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.OnChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.ElementWindowless.Changed" /> event when the element has changed.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Initiates a redraw for the object to repaint its background.</summary>
      <param name="g">Graphics device interface</param>
      <param name="rectInput">Rectangle to redraw</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Not supported for basic shapes.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Rectangle bounding the area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the drop shadow.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the foreground image.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the text for the shape.</summary>
      <param name="g">Graphics device</param>
      <param name="rText">Bounding rectangle for the text</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.PrepareForMovingResizing">
      <summary>Prepares for moving resizing. Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Reset">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetAlphaBlendShadowColor">
      <summary>Resets the amount of transparency for the shadow, which is 128.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetCanRenderText">
      <summary>Resets whether the shape can render its text property.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetDynamicMove">
      <summary>Resets the dynamic move of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetDynamicSize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowColor">
      <summary>Resets the color of the shadow to the default value.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowDirection">
      <summary>Resets the direction of the shadow to the default, which is None.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowOffsetX">
      <summary>Resets the amount of offset of the shadow in the horizontal direction to the default value, which is 5.0F.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ResetShadowOffsetY">
      <summary>Resets the amount of offset of the shadow in the vertical direction to the default value, which is 5.0F.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Serialize(System.Object,System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="obj">Object to save</param>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.SerializeProps(System.Xml.XmlTextWriter)">
      <summary>Saves the object properties to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.SetInitialShape">
      <summary>Creates the initial shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeAlphaBlendShadowColor">
      <summary>Determines if the AlphaBlendShadowColor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeCanRenderText">
      <summary>Determines if the shape CanRenderText property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeDynamicMove">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeDynamicSize">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowColor">
      <summary>Determines if the ShadowColor property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowDirection">
      <summary>Determines if the ShadowDirection property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowOffset">
      <summary>Determines whether the shadow offset should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowOffsetX">
      <summary>Determines if the ShadowOffsetX property should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.PSShape.ShouldSerializeShadowOffsetY">
      <summary>Determines if the ShadowOffsetX property should be serialized.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.RectangleShape">
      <summary>Represents a rectangle shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.#ctor">
      <summary>Creates a new rectangle shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new rectangle shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.#ctor(FarPoint.Win.Spread.DrawingSpace.RectangleShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RectangleShape.SetInitialShape">
      <summary>Creates the initial rectangle shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape">
      <summary>Represents a rounded rectangle shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.#ctor">
      <summary>Creates a new rounded rectangle shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new rounded rectangle shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.#ctor(FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.RoundedRectangleShape.SetInitialShape">
      <summary>Creates the initial rounded rectangle shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ShadowProps">
      <summary>Represents the shadow properties for floating objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShadowProps.#ctor">
      <summary>Creates a new set of shadow properties.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.ShadowProps.Shape">
      <summary>Gets or sets the shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShadowProps.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs">
      <summary>Represents the ShapeEventArgs.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.#ctor">
      <summary>Creates a new object with the SubEditorCancel event arguments.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.#ctor(System.String)">
      <summary>Creates a new object with the SubEditorCancel event arguments.</summary>
      <param name="type">Shape type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.#ctor(System.String,System.Drawing.Color)">
      <summary>Creates a new object with the SubEditorCancel event arguments.</summary>
      <param name="type">Shape type</param>
      <param name="shapecolor">Shape color</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.#ctor(System.String,System.String)">
      <summary>Creates a new object with the SubEditorCancel event arguments.</summary>
      <param name="type">Shape type</param>
      <param name="childType">Shape child type</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.ChildType">
      <summary>Get or set the ChildType</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.ShapeColor">
      <summary>Get or set the ShapeColor</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.ShapeEventArgs.ShapeType">
      <summary>Get or set the ShapeType</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ShapeProps">
      <summary>Represents the shape properties.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.#ctor">
      <summary>Creates a new set of shape properties.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.#ctor(System.Windows.Forms.Control)">
      <summary>Creates a new set of shape properties for the specified control.</summary>
      <param name="control">Control</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.ShapeProps.Shape">
      <summary>Gets or sets the shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ShapeProps.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape">
      <summary>Defines a shape that creates a mirror image of a cell range in a sheetview.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new SpreadCameraShape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.#ctor">
      <summary>Creates a default SpreadCameraShape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.#ctor(System.String)">
      <summary>Creates a new SpreadCameraShape object with a specific formula.</summary>
      <param name="formula">Refer to a cell range of a sheetView object to capture the content of the region</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Create a new SpreadCameraShape object.</summary>
      <param name="sheetView">The sheetView that contains the captured region</param>
      <param name="cellRange">The captured region of the sheetView</param>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.ColMax">
      <summary>Internal use only. This field is constant and read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.RowMax">
      <summary>Internal use only. This field is constant and read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Formula">
      <summary>Gets or sets a string formula that indicates the captured region.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Height">
      <summary>Gets or sets the height of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Left">
      <summary>Gets or sets the x-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Location">
      <summary>Gets or sets the location of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Size">
      <summary>Gets or sets the size of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Top">
      <summary>Gets or sets the y-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Width">
      <summary>Gets or sets the width of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.CopyTo(System.Object)">
      <summary>Copies the data and properties of this object in presentation space (drawing space) to the target object.</summary>
      <param name="target">Target object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.DeserializeObjectProps(System.Xml.XmlNodeReader)">
      <summary>Loads the object properties from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Dispose">
      <summary>Release object memory.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the SpreadCameraShape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Handles painting logic</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> context</param>
      <param name="rectInput">The painting rectangle</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.OnPropertyChanging(System.Object,FarPoint.Win.Spread.Model.PropertyChangingEventArgs)">
      <summary>Fires a property changing event.</summary>
      <param name="sender">The current <see cref="T:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape" /></param>
      <param name="e">A <see cref="T:FarPoint.Win.Spread.Model.PropertyChangingEventArgs" /> that containts event data.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Reset">
      <summary>Resets data and propeties of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.ResetShape">
      <summary>Resets the shape of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.Scale(System.Single,System.Single,System.Boolean)">
      <summary>Adjusts the size of the object by the specified amount.</summary>
      <param name="scaleX">Factor by which to scale the object in the horizontal dimension</param>
      <param name="scaleY">Factor by which to scale the object in the vertical dimension</param>
      <param name="repaint">Whether to re-draw the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.SerializeProps(System.Xml.XmlTextWriter)">
      <summary>Saves the object properties to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object properties</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>Sets the bounds of the object to the specified position and size.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
      <param name="adjustRegion">Whether to adjust the region</param>
      <param name="recursive">Whether to check recursively for each element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.SetInitialShape">
      <summary>Creates the initial SpreadCameraShape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.ShouldSerializeFormula">
      <summary>Determines if the formula allowed flag of the object should be serialized.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.ShowSelectDataForm(System.Windows.Forms.Form,FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape)">
      <summary>Shows select data dialog.</summary>
      <param name="parentForm" />
      <param name="spread" />
      <param name="cameraShape" />
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.SpreadCameraShape.PropertyChanging">
      <summary>Occurs when a property is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer">
      <summary>Represents the container for child controls.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new child control container for the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new container from serialization.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.clickPt">
      <summary>Specifies the click point of the object container.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.resizeHandle">
      <summary>Specifies the handle currently being used for resizing.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.BottomRow">
      <summary>Gets or sets the bottom row of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.ColumnPane">
      <summary>Gets or sets the column viewport of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.Count">
      <summary>Gets the number of children in the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DesignMode">
      <summary>Gets or sets the design mode of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.LeftColumn">
      <summary>Gets of sets the left column of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.LeftOffset">
      <summary>Gets or sets the left column offsetof the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.Name">
      <summary>Gets or sets the name of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.RightColumn">
      <summary>Gets or sets the right column of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.RowPane">
      <summary>Gets or sets the row viewport of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.TopOffset">
      <summary>Gets or sets the top row offset of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.TopRow">
      <summary>Gets or sets the top row of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.XOffset">
      <summary>Gets or sets the x-coordinate offset of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.YOffset">
      <summary>Gets or sets the y-coordinate offset of the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.AddChild(System.Windows.Forms.Control)">
      <summary>Adds a child control to the container.</summary>
      <param name="ctl">Child control to add</param>
      <exception cref="T:System.Exception"> Name of the child control already exists in the container; control names must be unique </exception>
      <exception cref="T:System.Exception"> No child control name specified or control name is null or empty; control names must be non-null and non-empty </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.AddChildLocator(System.Windows.Forms.Control)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.AdjustPointForViewport(System.Drawing.Point,System.Boolean)">
      <summary>Internal use only. Adjusts a point for offsets including viewports, frozen areas, and headers.</summary>
      <param name="pt">Point</param>
      <param name="useAbsoluteCoords">Whether to use absolute coordinates</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.ClearChildren">
      <summary>Removes all the child controls from the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DeactivateChildren">
      <summary>Deactivates child controls of the child control container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DoMove(System.Windows.Forms.Control,FarPoint.Win.Spread.DrawingSpace.Moving,System.Drawing.Point)">
      <summary>Moves the specified child control if design mode is enabled.</summary>
      <param name="ctl">Child control</param>
      <param name="movement">Movement of the child control</param>
      <param name="pt">Point location of the child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.DoSheetActivating(System.Object,FarPoint.Win.Spread.ActiveSheetChangingEventArgs)">
      <summary>Internal use only.</summary>
      <param name="sender">Source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetChild(System.String)">
      <summary>Gets a child control in the container.</summary>
      <param name="name">Name of child control</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetFocusChild">
      <summary>Gets the child with focus.</summary>
      <returns>Returns the child with the focus.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
      <summary>Gets the grab handle rectangles.</summary>
      <param name="r">Rectangle</param>
      <param name="handleRects">Array of handle rectangles</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetNextChildControl(System.Windows.Forms.Control)">
      <summary>Gets the next child control in the container.</summary>
      <param name="startChild">Name of child control to start</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the children of the container.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetPreviousChildControl(System.Windows.Forms.Control)">
      <summary>Gets the previous child control in the container.</summary>
      <param name="startChild">Name of child control to start</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GetXShift(FarPoint.Win.Spread.SpreadView)">
      <summary>Gets the horizontal (X-axis) shift.</summary>
      <param name="view">View</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.GrabHandleFromPoint(System.Drawing.Point)">
      <summary>Returns the grab handle from the specified point.</summary>
      <param name="pt">Point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.Invalidate">
      <summary>Forces a refresh on the owner control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.IsChildInView(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines if a control is currently within the view determined by the row and column parameters.</summary>
      <param name="child">Control to check for in view</param>
      <param name="topRow">Top row of view</param>
      <param name="leftColumn">Left column of view</param>
      <param name="bottomRow">Bottom row of view</param>
      <param name="rightColumn">Right column of view</param>
      <returns>Returns true if shape is in view; otherwise false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.OnDeserialization(System.Object)">
      <summary>Internal use only.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the child control container.</summary>
      <param name="g">Graphics context object</param>
      <param name="r">Rectangle for drawing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.PaintChildren(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints any children in the container.</summary>
      <param name="g">Graphics object</param>
      <param name="faceRect">Rectangle object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.PaintGrabHandles(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the handles for sizing.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.PointInGrabHandle(System.Drawing.Point)">
      <summary>Gets whether the specified point is in a grab handle.</summary>
      <param name="pt">Point</param>
      <returns>true if in handle; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.Print(FarPoint.PDF.PdfGraphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the elements of the child control container.</summary>
      <param name="gPdf">PDF graphics device interface</param>
      <param name="faceRect">Rectangle boundary of the elements to print</param>
      <param name="zoomFactor">Scaling factor for zooming when printing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the elements of the shapes in the container.</summary>
      <param name="g">Graphics device</param>
      <param name="rectangle">Rectangle boundary of the elements to print</param>
      <param name="zoom">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.PrintChildren(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
      <summary>Paints any children in the container.</summary>
      <param name="g">Graphics object</param>
      <param name="faceRect">Rectangle object</param>
      <param name="zoomF">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.RemoveChild(System.String)">
      <summary>Removes the child control from the container.</summary>
      <param name="name">Name of shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadChildControlContainer.RemoveChildLocator(System.Windows.Forms.Control)">
      <summary>Internal use only.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Serializes a container of notes on the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes a container of notes.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.AllowNoteEdit">
      <summary>Gets or sets whether the notes can be edited in place.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.BackColor">
      <summary>Gets or sets the background color.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.BackgroundImage">
      <summary>Gets or sets the background image.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.BottomRow">
      <summary>Gets or sets the bottom row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.CanFocus">
      <summary>Gets or sets whether the container can receive focus.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.CanMove">
      <summary>Gets or sets whether the container can be moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.CanSize">
      <summary>Gets or sets whether the container can be sized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.ColumnPane">
      <summary>Gets or sets the column pane (viewport).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Gradient">
      <summary>Gets or sets the gradient.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.LeftColumn">
      <summary>Gets or sets the left (near) column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.LeftOffset">
      <summary>Gets or sets the left offset (near) column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Parent">
      <summary>Gets or sets the parent control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.RightColumn">
      <summary>Gets or sets the right (far) column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.RowPane">
      <summary>Gets or sets the row pane (viewport).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Text">
      <summary>Gets or sets the text for the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.TopOffset">
      <summary>Gets or sets the top offset row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.TopRow">
      <summary>Gets or sets the top row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.XOffset">
      <summary>Gets or sets the offset in the horizontal (X) direction.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.YOffset">
      <summary>Gets or sets the offset in the vertical (Y) direction.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.ChildContains(System.Drawing.Point,System.Boolean)">
      <summary>Contains a child note.</summary>
      <param name="pt">Point</param>
      <param name="ignoreTransparency">Whether to ignore transparency</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to read (load) the object</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs when the mouse button is down.</summary>
      <param name="sender">Object source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Moves the mouse.</summary>
      <param name="sender">Object source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Handles mouse up.</summary>
      <param name="sender">Object source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.ElementDeletedNotify(System.Object,System.Object)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.ElementNotify(System.Object,System.Object)">
      <summary>Notifies element.</summary>
      <param name="o">Object</param>
      <param name="element">Object element</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a SerializationInfo object with the data needed to serialize the target object.</summary>
      <param name="info">Serialization information</param>
      <param name="context">Streaming context</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.GetXShift(FarPoint.Win.Spread.SpreadView)">
      <summary>Gets the shift in the horizontal (X) direction.</summary>
      <param name="view">View</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown processing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnNoteCreated(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.NoteCreated" /> event when a note has been created.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnNoteEditorKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a note editor key is down.</summary>
      <param name="sender">Object source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnNoteEditorKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>Occurs when a note editor key is pressed.</summary>
      <param name="sender">Object source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.OnNoteEditorLostFocus(System.Object,System.EventArgs)">
      <summary>Internal use only. Occurs when the note editor has lost focus.</summary>
      <param name="sender">Object source of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints elements.</summary>
      <param name="g">Graphic interface device</param>
      <param name="faceRect">Rectangle of the face</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Print(FarPoint.PDF.PdfGraphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the elements of the notes in the container.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="rectangle">Rectangular boundary of the elements to print</param>
      <param name="zoomFactor">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the specified area with the specified scaling.</summary>
      <param name="g">Graphic interface device</param>
      <param name="rectangle">Rectangular area to print</param>
      <param name="zoomFactor">Numeric scaling factor</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Prints the specified area.</summary>
      <param name="g">Graphic interface device</param>
      <param name="rectangle">Rectangular area to print</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.ResetBackColor">
      <summary>Resets the background color.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter to which to write (save) the object</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.ShouldSerializeBackColor">
      <summary>Determines whether to serialize the background color.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.NoteCreated">
      <summary>Occurs when a note is created.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.NoteMoved">
      <summary>Occurs when a note is moved.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.SpreadNotesContainer.NoteSized">
      <summary>Occurs when a note is sized.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer">
      <summary>Represents the presentation space object container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.#ctor(FarPoint.Win.Spread.SheetView)">
      <summary>Creates a new presentation space object container for the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new container object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BackColor">
      <summary>Gets or sets the background color for the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BackgroundImage">
      <summary>Gets or sets the background image for the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BottomRow">
      <summary>Gets or sets the bottom row of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.CanFocus">
      <summary>Gets or sets whether the container can receive focus.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.CanMove">
      <summary>Gets or sets whether the user is allowed to move the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.CanSize">
      <summary>Gets or sets whether the user is allowed to size the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ColumnPane">
      <summary>Gets or sets the column pane (viewport).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Count">
      <summary>Gets the number of children of the child control container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Gradient">
      <summary>Gets or sets the gradient for the shape container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.LeftColumn">
      <summary>Gets or sets the left column of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.LeftOffset">
      <summary>Gets or sets the left offset of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Location">
      <summary>Gets or sets the location of the shape container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Name">
      <summary>Gets or sets the name of the shape container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Parent">
      <summary>Gets or sets the parent control for the shape container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.RightColumn">
      <summary>Gets or sets the right column of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.RowPane">
      <summary>Gets or sets the row pane (viewport).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Size">
      <summary>Gets or sets the size of the shape container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Text">
      <summary>Gets or sets the text for the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.TopOffset">
      <summary>Gets or sets the top offset of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.TopRow">
      <summary>Gets or sets the top row of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.XOffset">
      <summary>Gets or sets the X-coordinate offset of the container.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.YOffset">
      <summary>Gets or sets the y-coordinate offset of the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.AddShape(FarPoint.Win.Spread.DrawingSpace.PSShape)">
      <summary>Adds a shape to the container.</summary>
      <param name="shape">Shape to add</param>
      <exception cref="T:System.Exception"> Shape name already exists in the container; shape names must be unique </exception>
      <exception cref="T:System.Exception"> No shape name specified or shape name is null or empty; shape names must be non-null and non-empty </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.AdjustPointForViewport(System.Drawing.Point)">
      <summary>Internal use only. Adjusts a point for offsets including viewports, frozen areas, and headers.</summary>
      <param name="pt">Point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.AdjustPointFromViewport(System.Drawing.Point)">
      <summary>Internal use only. Adjusts a point from viewports to a point in FpSpread.</summary>
      <param name="pt">The location should be adjusted.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.BringToFront(System.Object)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ChildContains(System.Drawing.Point,System.Boolean)">
      <summary>Gets the child object in this container that contains the screen location.</summary>
      <param name="pt">Point on the screen</param>
      <param name="ignoreTransparency">Whether to ignore the transparency</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ClearShapes">
      <summary>Removes all shapes from the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Occurs on mouse down.</summary>
      <param name="sender">Source object of event</param>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ElementDeletedNotify(System.Object,System.Object)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ElementNotify(System.Object,System.Object)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Find(System.Int32)">
      <summary>Finds an object in the collection that matches the specified unique identifier.</summary>
      <param name="uniqueIdentifier">Unique identifier for the object in the collection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shapes of the container.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetShape(System.String)">
      <summary>Gets a shape in the container.</summary>
      <param name="name">Name of shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.GetXShift(FarPoint.Win.Spread.SpreadView)">
      <summary>Internal use only. Gets the shift in the horizontal (X) direction.</summary>
      <param name="view">View</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.IsShapeInView(FarPoint.Win.Spread.DrawingSpace.PSShape,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines if a shape is currently within the view determined by the row and column parameters.</summary>
      <param name="shape">Shape to check for in view</param>
      <param name="topRow">Top row of view</param>
      <param name="leftColumn">Left column of view</param>
      <param name="bottomRow">Bottom row of view</param>
      <param name="rightColumn">Right column of view</param>
      <returns>Returns true if shape is in view; otherwise false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.JoinShapes(System.String,System.String)">
      <summary>Joins two shapes.</summary>
      <param name="destinationShapeName">Name of destination shape for merge</param>
      <param name="sourceShapeName">Name of source shape for merge</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.OnDeserialization(System.Object)">
      <summary>Internal use only.</summary>
      <param name="sender" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.OnLostFocus(System.EventArgs)">
      <summary>Occurs when focus is lost.</summary>
      <param name="e">Event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.OnShapeAdded(System.Object,FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventArgs)">
      <summary>Fires event when a shape is added into container.</summary>
      <param name="sender">Sender</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.OnShapeRemoved(System.Object,FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventArgs)">
      <summary>Fires event when a shape is removed from container.</summary>
      <param name="sender">Sender</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints any shapes in the container.</summary>
      <param name="g">Graphics object</param>
      <param name="faceRect">Rectangle object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Prints the elements of the shapes in the container.</summary>
      <param name="g">Graphics device</param>
      <param name="rectangle">Rectangle boundary of the elements to print</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Print(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the elements of the shapes in the container.</summary>
      <param name="g">Graphics device</param>
      <param name="rectangle">Rectangle boundary of the elements to print</param>
      <param name="zoomFactor">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Print(FarPoint.PDF.PdfGraphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the elements of the shapes in the container.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="faceRect">Rectangle boundary the elements to print</param>
      <param name="zoomFactor">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.PrintElements(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the object container with zooming.</summary>
      <param name="g">Graphics device interface</param>
      <param name="faceRect">Rectangle that bounds the container</param>
      <param name="zoom">Scaling factor for zooming</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.RemoveShape(System.String)">
      <summary>Removes the shape from the container.</summary>
      <param name="name">Name of shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.Reset">
      <summary>Resets the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ResetBackColor">
      <summary>Resets the background color for the container.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.SendToBack(System.Object)">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SpreadShapesContainer.ShouldSerializeBackColor">
      <summary>Gets whether to serialize the background color for the container.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape">
      <summary>Represents a square caption balloon shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.#ctor">
      <summary>Creates a new square caption balloon shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new square caption balloon shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.#ctor(FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SquareCaptionBalloonShape.SetInitialShape">
      <summary>Creates the initial square caption balloon shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo">
      <summary>Represents the customizable appearance settings of a cell note that stays visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.AlignHorz">
      <summary>Gets or sets the horizontal alignment of the contents for the cell note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.AlignVert">
      <summary>Gets or sets the vertical alignment of the contents for the cell note.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.MarginBottom">
      <summary>Gets or sets the margin between the bottom of the cell note and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.MarginLeft">
      <summary>Gets or sets the margin between the left of the cell note and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.MarginRight">
      <summary>Gets or sets the margin between the right of the cell note and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.MarginTop">
      <summary>Gets or sets the margin between the top of the cell note and its contents.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.TextWrap">
      <summary>Gets or sets whether to wrap the text in the element.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsAlignHorzSet">
      <summary>Determines whether the horizontal alignment of the contents for the cell note is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsAlignVertSet">
      <summary>Determines whether the vertical alignment of the contents for the cell note is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsMarginBottomSet">
      <summary>Determines whether the margin between the bottom of the cell note and its contents is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsMarginLeftSet">
      <summary>Determines whether the margin between the left of the cell note and its contents is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsMarginRightSet">
      <summary>Determines whether the margin between the right of the cell note and its contents is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsMarginTopSet">
      <summary>Determines whether the margin between the top of the cell note and its contents is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.IsTextWrapSet">
      <summary>Determines whether the text wrapping option is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.StickyNoteStyleInfo.Reset">
      <summary>Resets all properties to default state.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SymbolDataGridView">
      <summary>Represents the Symbol DataGridView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SymbolDataGridView.#ctor">
      <summary>Create a new SymbolDataGridView.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SymbolDataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown Event</summary>
      <param name="e">object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.SymbolDialog">
      <summary>Represents the SymbolDialog.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SymbolDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32)">
      <summary>Create a new SymbolDialog.</summary>
      <param name="spread">spread object</param>
      <param name="symbol">symbol index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SymbolDialog.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32,System.Int32)">
      <summary>Create a new SymbolDialog.</summary>
      <param name="spread">spread object</param>
      <param name="symbol">symbol index</param>
      <param name="selectStart">select item start index</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.SymbolDialog.InitSymbol">
      <summary>Get the InitSymbol.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.SymbolDialog.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.TextAndFont">
      <summary>Represents the text and font of the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.#ctor">
      <summary>Creates a new text and font for the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.#ctor(System.Boolean)">
      <summary>Creates a new text and font for the presentation space.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextAndFont.FontName">
      <summary>Gets or sets the name of the font of the text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextAndFont.SelectedFont">
      <summary>Gets or sets the font for selected text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextAndFont.TextString">
      <summary>Gets or sets the text string.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextAndFont.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.TextInput">
      <summary>Represents the text input for the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextInput.#ctor">
      <summary>Creates a new text input.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputCancelButton">
      <summary>Represents the Cancel button of the form.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputInputBox">
      <summary>Represents the input text box of the form.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputOkButton">
      <summary>Represents the OK button of the form.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.TextInput.TextInputPrompt">
      <summary>Represents the informational prompt label of the form.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.AllowNegativeNumbers">
      <summary>Gets or sets whether the numeric text input allows negative values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.HelpFileName">
      <summary>Gets or sets the help file name for the text input.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.HelpPath">
      <summary>Gets or sets the help path for the text input.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.HelpTopic">
      <summary>Gets or sets the help topic for the text input.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextInput.NumbersOnly">
      <summary>Gets or sets whether the text input is only numeric input.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextInput.Dispose(System.Boolean)">
      <summary>Internal use only. Clean up any resources being used.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.TextShape">
      <summary>Represents a text string shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.#ctor">
      <summary>Creates a new text string shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new text string shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.#ctor(FarPoint.Win.Spread.DrawingSpace.TextShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextShape.Font">
      <summary>Gets or sets the font.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextShape.FontPriv">
      <summary>Internal use only. Gets or sets the font.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.TextShape.Text">
      <summary>Gets or sets the text for the text string shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.OnFontChanged(System.EventArgs)">
      <summary>Returns event information when the font for the element has changed.</summary>
      <param name="e">Object with event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.ResetText">
      <summary>Resets the text to the default value, which is "abc".</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.SetInitialShape">
      <summary>Creates the initial text shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TextShape.SetShapeFromText(System.String)">
      <summary>Sets the shape of the text shape.</summary>
      <param name="shapeString">String</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape">
      <summary>Represents a thought balloon shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.#ctor">
      <summary>Creates a new thought balloon shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new thought balloon shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.#ctor(FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThoughtBalloonShape.SetInitialShape">
      <summary>Creates the initial thought balloon shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape">
      <summary>Represents a three way arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.#ctor">
      <summary>Creates a new three way arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new three way arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.ThreeWayArrowShape.SetInitialShape">
      <summary>Creates the initial three way arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.TriangleShape">
      <summary>Represents a triangle shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.#ctor">
      <summary>Creates a new triangle shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new triangle shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.#ctor(FarPoint.Win.Spread.DrawingSpace.TriangleShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TriangleShape.SetInitialShape">
      <summary>Creates the initial triangle shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape">
      <summary>Represents a two way arrow shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.#ctor">
      <summary>Creates a new two way arrow shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new two way arrow shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.#ctor(FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.TwoWayArrowShape.SetInitialShape">
      <summary>Creates the initial two way arrow shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape">
      <summary>Represents a universal "no" shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.#ctor">
      <summary>Creates a new universal "no" shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new universal "no" shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.#ctor(FarPoint.Win.Spread.DrawingSpace.UniversalNoShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.UniversalNoShape.SetInitialShape">
      <summary>Creates the initial universal "no" shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.XShape">
      <summary>Represents an X shape object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.#ctor">
      <summary>Creates a new X shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new X shape object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.#ctor(FarPoint.Win.Spread.DrawingSpace.XShape)">
      <summary>Creates a new shape that is a copy of the specified shape.</summary>
      <param name="shape">Shape to copy.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.Clone">
      <summary>Creates a copy of this shape.</summary>
      <returns>A copy of this shape.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape object.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.Initialize">
      <summary>Initializes the shape object in the presentation space.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.XShape.SetInitialShape">
      <summary>Creates the initial X shape.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Zoom">
      <summary>Represents the Zoom.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Zoom.#ctor(FarPoint.Win.Spread.FpSpread)">
      <summary>Create a new Zoom.</summary>
      <param name="spread" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Zoom.#ctor(FarPoint.Win.Spread.FpSpread,System.Int32)">
      <summary>Create a new Zoom.</summary>
      <param name="spread" />
      <param name="minZoom" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Zoom.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.IEmbeddedControlSupport">
      <summary>Interface that supports the rendering of embedded child controls on a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IEmbeddedControlSupport.ActivationPolicy">
      <summary>Gets or sets the activation behavior of the embedded child control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IEmbeddedControlSupport.CanMove">
      <summary>Gets or sets whether the user is allowed to move the embedded child control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IEmbeddedControlSupport.CanSize">
      <summary>Gets or sets whether the user is allowed to resize the embedded child control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.IEmbeddedControlSupport.ControlPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>Paints the embedded child control.</summary>
      <param name="g">Graphics device interface</param>
      <param name="r">Location and size of a rectangular region bounding the control</param>
      <param name="appearance">Appearance settings for the control</param>
      <param name="value">Object - name of the renderer</param>
      <param name="isSelected">Whether the control is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Scaling factor for zooming when painting the control</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.IHostChildControls">
      <summary>Interface supplied by objects that support embedded child controls.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IHostChildControls.ActiveChildControl">
      <summary>Gets or sets the active child control.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IHostChildControls.AllowChildControlDesign">
      <summary>Gets or sets whether to allow design of active child control.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.IPdfSupportPSObject">
      <summary>Interface that supports printing to PDF for control layer objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.IPdfSupportPSObject.Print(FarPoint.PDF.PdfGraphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints to PDF the control layer objects.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="rectangle">Rectangular boundary to print</param>
      <param name="zoomFactor">Numeric scaling factor</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.IPSObject">
      <summary>Internal use only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Anchor">
      <summary>Gets or sets the anchor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.CanMove">
      <summary>Gets or sets whether the object can be moved.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.CanSize">
      <summary>Gets or sets whether the object can be resized.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Height">
      <summary>Gets or sets the height of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Left">
      <summary>Gets or sets the left (near) of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Location">
      <summary>Gets or sets the location of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Size">
      <summary>Gets or sets the size of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.SizeProportional">
      <summary>Gets or sets whether the size is proportional.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Top">
      <summary>Gets or sets the top of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.IPSObject.Width">
      <summary>Gets or sets the width of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.IPSObject.DoMouseEnter(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Mouse enter.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.IPSObject.DoMouseLeave(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Mouse leave.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.IPSObject.GetGrabHandleRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle[]@)">
      <summary>Gets the grab handle rectangles.</summary>
      <param name="r">Rectangular area</param>
      <param name="handleRects">Array of grab handles</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.IPSObject.PaintGrabHandles(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the grab handles.</summary>
      <param name="g">Graphics device interface</param>
      <param name="r">Rectangular area</param>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.IPSObject.MouseEnter">
      <summary>Occurs when the mouse enters the object.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.DrawingSpace.IPSObject.MouseLeave">
      <summary>Occurs when the mouse leaves the object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ChildActivationPolicy">
      <summary>Specifies the activation behavior of an embedded child control.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ChildActivationPolicy.None">
      <summary>Does not allow user activation</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ChildActivationPolicy.Click">
      <summary>Allows user to activate the control with a single click</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ChildActivationPolicy.DoubleClick">
      <summary>Allows user to activate the control with a double-click</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.GradientStyle">
      <summary>Specifies the background gradient style.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.None">
      <summary>Displays no gradient fill</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearTopDown">
      <summary>Displays a linear gradient fill from top to bottom</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearBottomUp">
      <summary>Displays a linear gradient fill from bottom to top</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearLeftRight">
      <summary>Displays a linear gradient fill from left to right</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearRightLeft">
      <summary>Displays a linear gradient fill from right to left</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearTopRightBottomLeft">
      <summary>Displays a linear gradient fill from top right to bottom left</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.LinearTopLeftBottomRight">
      <summary>Displays a linear gradient fill from top left to bottom right</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.RadialFromCenter">
      <summary>Displays a radial gradient fill from center to outside edges</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.GradientStyle.RadialIntoCenter">
      <summary>Displays a radial gradient fill from outside edges into center</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Moving">
      <summary>Specifies the movement aspects of the object.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.None">
      <summary>Does not allow user movement</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.Horizontal">
      <summary>Allows the user to horizontally move the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.Vertical">
      <summary>Allows the user to vertically move the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Moving.HorizontalAndVertical">
      <summary>Allows the user to move the object both horizontally and vertically</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ShadowDirection">
      <summary>Specifies the direction of the drop shadow of the shape.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.None">
      <summary>Displays no shadow</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Right">
      <summary>Displays a shadow on the right of the object only</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.BottomRight">
      <summary>Displays a shadow on the bottom and right of the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Bottom">
      <summary>Displays a shadow on the bottom of the object only</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.BottomLeft">
      <summary>Displays a shadow on the bottom and left of the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Left">
      <summary>Displays a shadow on the left of the object only</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.TopLeft">
      <summary>Displays a shadow on the top and left of the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.Top">
      <summary>Displays a shadow on the top of the object only</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.ShadowDirection.TopRight">
      <summary>Displays a shadow on the top and right of the object</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Sizing">
      <summary>Specifies the sizing aspects of the object.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.None">
      <summary>Does not allow user sizing</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.Height">
      <summary>Allows user to size the height of the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.Width">
      <summary>Allows user to size the width of the object</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.DrawingSpace.Sizing.HeightAndWidth">
      <summary>Allows user to size both the height and width of the object</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventHandler">
      <summary>Represents the method that will handle the object changed event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:FarPoint.Win.Spread.DrawingSpace.ObjectChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter">
      <summary>Converts instances of gradient sections to and from other types.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether a gradient section can be converted to the specified type.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">Type</param>
      <returns>True if a GradientSection object can be converted to the specified type, and false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.GradientSectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the gradient section to the specified type.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">The object</param>
      <param name="destinationType">Type</param>
      <returns>Converted gradient section object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter">
      <summary>Converts instances of gradients to and from other types.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether a gradient can be converted to the specified type.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">Type</param>
      <returns>True if a PSGradient object can be converted to the specified type, and false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSGradientConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the gradient to the specified type.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">The object</param>
      <param name="destinationType">Type</param>
      <returns>Converted gradient object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter">
      <summary>Converts instances of PSObject objects to and from other types.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether a PSObject object can be converted to the specified type.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">Type</param>
      <returns>True if a PSObject object can be converted to the specified type, and false otherwise.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the PSObject object to the specified type.</summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">The object</param>
      <param name="destinationType">Type</param>
      <returns>Converted PSObject object.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo">
      <summary>Represents shape object customizable properties.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.AlphaBlendBackColor">
      <summary>Gets or sets the alpha-blend value of the background color of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.AlphaBlendShadowColor">
      <summary>Gets or sets the amount of transparency of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.BackColor">
      <summary>Gets or sets the background color for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.CanMove">
      <summary>Gets or sets whether the user is allowed to move the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.CanSize">
      <summary>Gets or sets whether the user is allowed to resize the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Font">
      <summary>Gets or sets the font for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ForeColor">
      <summary>Gets or sets the foreground color for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Gradient">
      <summary>Gets or sets the gradient for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Height">
      <summary>Gets or sets the height of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Left">
      <summary>Gets or sets the x-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Locked">
      <summary>Gets or sets whether the object is marked as locked.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowColor">
      <summary>Gets or sets the color of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowDirection">
      <summary>Gets or sets the direction of the shadow.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowOffsetX">
      <summary>Gets or sets the amount of horizontal offset of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShadowOffsetY">
      <summary>Gets or sets the amount of vertical offset of the shadow of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShapeOutlineColor">
      <summary>Gets or sets the shape outline color for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShapeOutlineStyle">
      <summary>Gets or sets the shape outline style for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.ShapeOutlineThickness">
      <summary>Gets or sets the shape outline thickness for the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Tag">
      <summary>Gets or sets the Tag object for the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.TextWrap">
      <summary>Gets or sets whether to wrap the text in the element.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Top">
      <summary>Gets or sets the y-coordinate of the object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Width">
      <summary>Gets or sets the width of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsAlphaBlendBackColorSet">
      <summary>Determines whether the alpha-blend background color is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsAlphaBlendShadowColorSet">
      <summary>Determines whether the alpha-blend shadow color is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsBackColorSet">
      <summary>Determines whether the background color is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsCanMoveSet">
      <summary>Determines whether the option for the user to move it is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsCanSizeSet">
      <summary>Determines whether the option for the user to resize it is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsFontSet">
      <summary>Determines whether the font is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsForeColorSet">
      <summary>Determines whether the text color is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsGradientSet">
      <summary>Determines whether the gradient is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsHeightSet">
      <summary>Determines whether the height is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsLeftSet">
      <summary>Determines whether the left is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsLockedSet">
      <summary>Determines whether it is marked as locked.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShadowColorSet">
      <summary>Determines whether the shadow color is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShadowDirectionSet">
      <summary>Determines whether the direction of the shadow is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShadowOffsetXSet">
      <summary>Determines whether the shadow offset (along x-axis) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShadowOffsetYSet">
      <summary>Determines whether the shadow offset (along y-axis) is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShapeOutlineColorSet">
      <summary>Determines whether the shape outline color is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShapeOutlineStyleSet">
      <summary>Determines whether the shape outline style is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsShapeOutlineThicknessSet">
      <summary>Determines whether the shape outline thickness is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsTagSet">
      <summary>Determines whether the tag is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsTextWrapSet">
      <summary>Determines whether the text wrapping option is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsTopSet">
      <summary>Determines whether the top is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.IsWidthSet">
      <summary>Determines whether the width is set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.PSShapeStyleInfo.Reset">
      <summary>Resets all properties to default state.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase">
      <summary>Represents a shape-based comment object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor">
      <summary>Creates a new shape-based comment.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(System.Drawing.Rectangle)">
      <summary>Creates a new shape-based comment in the specified bounds.</summary>
      <param name="rBounds">Rectangle bounds of the pop-up comment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(System.Drawing.Rectangle,System.Drawing.Point)">
      <summary>Creates a new shape-based comment in the specified bounds.</summary>
      <param name="rBounds">Rectangle bounds of the pop-up comment</param>
      <param name="anchorPt">Anchor point</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new shape-based comment from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.#ctor(FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase)">
      <summary>Creates a new shape-based comment from serialization.</summary>
      <param name="obj" />
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.AnchorPoint">
      <summary>Gets or sets the anchor point of the pop-up comment.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.CanRotate">
      <summary>Gets or sets whether the pop-up comment can rotate.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>Adjusts the string format.</summary>
      <param name="fmt" />
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the shape-based comment.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the drop shadow around the pop-up comment</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the pop-up comment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Paints the focus rectangle for the pop-up comment.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the pop-up comment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Asks the control to repaint the pop-up comment background.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounding rectangle for the pop-up comment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Causes the control to repaint the pop-up comment foreground.</summary>
      <param name="g">Graphics device</param>
      <param name="r">Bounded rectangle for the pop-up comment</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.PrintDropShadowPDF(FarPoint.PDF.PdfGraphics,System.Drawing.Rectangle,System.Single)">
      <summary>Prints the drop shadow around the pop-up comment.</summary>
      <param name="g">PDF graphics device interface</param>
      <param name="r">Rectangle bounding the notes to print</param>
      <param name="zoomFactor">Scaling factor for zooming when printing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Reset">
      <summary>Internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.ResetCanRenderText">
      <summary>Resets whether the shape can render its Text property.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the bounds for the pop-up comment.</summary>
      <param name="x">X-coordinate for bounding rectangle's top-left corner</param>
      <param name="y">Y-coordinate for bounding rectangle's top-left corner</param>
      <param name="width">Width of bounding rectangle in pixels</param>
      <param name="height">Height of bounding rectangle in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.DrawingSpace.Internal.StickyNoteCommentBase.ShouldSerializeCanRenderText">
      <summary>Determines if the shape CanRenderText property should be serialized.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.AggregateArgs">
      <summary>Represents the event data for the OnAggregate event of the data model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregateArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.AggregationType)">
      <summary>Creates a new Changed event arguments object for the data model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="aggregationType">Type of aggeration that occurred in the data model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.AggregationType">
      <summary>Gets the aggregation type.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.Column">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.Formula">
      <summary>Gets or sets the formula to be parsed to a string for aggregation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.Result">
      <summary>Gets or sets the result of aggregation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.Row">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregateArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.AggregationDataModel">
      <summary>Represents the aggregation data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.Model.AggregationDataModel" /> object from serialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contexual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.#ctor">
      <summary>Creates a new aggregation data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Creates a new aggregation data model for the specified sheet data model.</summary>
      <param name="targetModel">Sheet data model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.#ctor(FarPoint.Win.Spread.Model.Group)">
      <summary>Creates a new aggregation data model for the specified group.</summary>
      <param name="targetGroup" />
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.CanSerializeXml">
      <summary>Gets a value that indicates whether the specified <see cref="T:FarPoint.Win.Spread.Model.AggregationDataModel" /> object can serialize to XML.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.ColumnCount">
      <summary>Gets the number of columns in the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.Name">
      <summary>Gets or sets the name of the aggregation model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.NonEmptyColumnCount">
      <summary>Gets the number of columns in the model that contain data (bound or unbound).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.NonEmptyRowCount">
      <summary>Gets the number of rows in the model that contain data (bound or unbound).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.ReferenceStyle">
      <summary>Gets or sets the cell reference style for cells with formulas.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.RowCount">
      <summary>Gets or sets the number of rows in the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.TargetModel">
      <summary>Gets the sheet data model for the aggregation target.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.AggregationDataModel.UnionedChangeCellRange">
      <summary>Gets or sets whether the changed event occurs for each cell or for the union range. Works only if initialized from DefaultSheetDataModel. True if event occurs for union range.</summary>
      <exception cref="T:System.ArgumentException">Using this property when model is not intialized from DefaultSheetDataModel</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.AddColumns(System.Int32,System.Int32)">
      <summary>Adds one or more columns to the data model at the specified position.</summary>
      <param name="column">Index of column at which to add a new column</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.AddRows(System.Int32,System.Int32)">
      <summary>Adds rows to the data model at the specified position.</summary>
      <param name="row">Row index at which to add new rows</param>
      <param name="rowCount">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all the data and formulas from the specified range of cells.</summary>
      <param name="row">Row index of start of range to clear</param>
      <param name="column">Column index of start of range to clear</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="fromRow">Row index of start of range from which to copy</param>
      <param name="fromColumn">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the settings from XML.</summary>
      <param name="r">XmlNodeReader from which to read the settings</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Dispose">
      <summary>Disposes this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetCelAggregationType(System.Int32,System.Int32)">
      <summary>Gets the formula of the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="col">Column index of the cell in the model</param>
      <returns>Formula of cell</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetCellAggregationFormat(System.Int32,System.Int32)">
      <summary>Sets the format of the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="col">Column index of the cell in the model</param>
      <returns>Format of cell</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetExpression(System.Int32,System.Int32)">
      <summary>Gets the formula, as an expression value, for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetFormula(System.Int32,System.Int32)">
      <summary>Gets the formula, as a string value, for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetNote(System.Int32,System.Int32)">
      <summary>Gets a user-defined note value for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the AggregationDataModel to the SerializationInfo.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetTag(System.Int32,System.Int32)">
      <summary>Gets an application-defined tag value for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value from the cell in the group.</summary>
      <param name="row">Row index of the cell</param>
      <param name="col">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.IsEditable(System.Int32,System.Int32)">
      <summary>Determines whether the cell in the group is editable.</summary>
      <param name="row">Row index of the cell</param>
      <param name="col">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.IsEmpty">
      <summary>Determines whether the data model is empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.IsRowUsed(System.Int32)">
      <summary>Determines whether the specified row has data (is not empty).</summary>
      <param name="row">Index of row to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.LoadFormulas">
      <summary>Loads formulas that are deserialized but not parsed yet, to be used after all sheets have been created and deserialized or shared with the calculation controller.</summary>
      <remarks>This method enables formula parsing if it is not already enabled.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="fromRow">Row index of starting position of range to move</param>
      <param name="fromColumn">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row that contains data.</summary>
      <param name="row">Row index to search</param>
      <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next row that contains data.</summary>
      <param name="row">Row index after which to start searching (-1 to start at row 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes one or more columns starting with the column at the specified position.</summary>
      <param name="column">Index of first column to remove</param>
      <param name="columnCount">Number of columns to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes one or more rows, starting with the specified row.</summary>
      <param name="row">Index of first row to remove</param>
      <param name="rowCount">Number of rows to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.ResumeFormulaParsing">
      <summary>Resumes parsing of formulas and parses all formulas set while parsing was suspended.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the settings to XML.</summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetCellAggregationFormat(System.Int32,System.Int32,System.String)">
      <summary>Sets the format for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="col">Column index of the cell in the model</param>
      <param name="format">Format of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetCellAggregationType(System.Int32,System.Int32,FarPoint.Win.Spread.Model.AggregationType)">
      <summary>Sets the formula for the cell of the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="col">Column index of cell</param>
      <param name="aggType">Formula type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Sets the formula, as an expression value, for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be set as an expression</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetFormula(System.Int32,System.Int32,System.String)">
      <summary>Sets the formula, as a string value, for the cell of the specified row and column. If you pass null, it clears the expression from that cell.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be set, as a string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetNote(System.Int32,System.Int32,System.String)">
      <summary>Sets a user-defined note value for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="value">Note value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetTag(System.Int32,System.Int32,System.Object)">
      <summary>Sets an application-defined tag value for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="value">Tag value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the value of the cell in the group.</summary>
      <param name="row">Row index of the cell</param>
      <param name="col">Column index of the cell</param>
      <param name="value">Value to assign to the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.SuspendFormulaParsing">
      <summary>Suspends parsing of formulas.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.AggregationDataModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps the specified ranges of cells.</summary>
      <param name="fromRow">Row index of starting position of range to move</param>
      <param name="fromColumn">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.AggregationDataModel.NameChanged">
      <summary>Occurs when the name of the data model changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.BaseSheetAxisModel">
      <summary>Represents the partial (abstract) implementation of the ISheetAxisModel interface for an axis model for a sheet. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.BaseSheetAxisModel" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetAxisModel.Count">
      <summary>Gets the number of rows or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.FireChanged(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType)">
      <summary>Fires the Changed event.</summary>
      <param name="index">Row or column index</param>
      <param name="count">Number of rows or columns</param>
      <param name="type">Type of event that was raised</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.FireChanging(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Raises the Changing event.</summary>
      <param name="index">The index where the event happens</param>
      <param name="count">The number of items being affected</param>
      <param name="type">The event type</param>
      <param name="currentSize">The size of the current value.</param>
      <param name="currentVisible">The value that indicates whether the current value is visible.</param>
      <param name="newSize">The size of the new value</param>
      <param name="newVisible">The value that indicates whether the new value is visible</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.FireChanging(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType,System.Boolean)">
      <summary>Raises the Changing event.</summary>
      <param name="index">The index.</param>
      <param name="count">The count.</param>
      <param name="type">The type.</param>
      <param name="layoutChanged">if set to <c>true</c> layout has changed.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetAutoFilterIndex(System.Int32)">
      <summary>Gets the automatic filter index for the specified row or column. (This implementation always returns -1.)</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetAutoSortIndex(System.Int32)">
      <summary>Gets the automatic sort index for the specified row or column. (This implementation always returns -1.)</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetMergePolicy(System.Int32)">
      <summary>Gets the cell merge policy for the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetPageBreak(System.Int32)">
      <summary>Gets whether a page break occurs at the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetResizable(System.Int32)">
      <summary>Gets whether users can resize the specified row or column. (This implementation always returns true.)</summary>
      <param name="index">Row or column index</param>
      <returns>Always returns true</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetSize(System.Int32)">
      <summary>Gets the size of the specified row or column. (This implementation always returns 60.)</summary>
      <param name="index">Row or column index</param>
      <returns>Always returns 60</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetSortIndicator(System.Int32)">
      <summary>Gets the sort indicator for the specified row or column. (This implementation always returns None.)</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetTag(System.Int32)">
      <summary>Gets the data associated with the specified row or column. (This implementation always returns null.)</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.GetVisible(System.Int32)">
      <summary>Gets whether the control displays the specified row or column. (This implementation always returns true.)</summary>
      <param name="index">Row or column index</param>
      <returns>Always returns true</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.IsEmpty">
      <summary>Determines whether rows and columns do not exist in the model. (This implementation always returns false.)</summary>
      <returns>Always returns false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.IsPropertySet(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
      <summary>Determines whether a specified SheetAxisModel property is set. (This implementation always returns false.)</summary>
      <param name="index">Row or column index</param>
      <param name="prop">Property to evaluate</param>
      <returns>This implementation always returns false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.OnChanged(FarPoint.Win.Spread.Model.SheetAxisModelEventArgs)">
      <summary>Handles the Changed event in subclasses.</summary>
      <param name="e">SheetAxisModelEventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.OnChanging(FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs)">
      <summary>Handles the Changed event in subclasses.</summary>
      <param name="e">SheetAxisModelEventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.ResetProperty(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
      <summary>Resets a specified field of a SheetAxisProperty object to its default value. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="prop">Property to reset</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetAutoFilterIndex(System.Int32,System.Int32)">
      <summary>Sets the automatic filter index for the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">The automatic filter index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetAutoSortIndex(System.Int32,System.Int32)">
      <summary>Sets the automatic sort index for the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">The automatic filter index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetMergePolicy(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
      <summary>Sets the cell merge policy for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Value with merge policy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetPageBreak(System.Int32,System.Boolean)">
      <summary>Sets whether a page break occurs at the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Whether a page break occurs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetResizable(System.Int32,System.Boolean)">
      <summary>Sets whether users can resize the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">Whether users can resize the specified row or column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetSize(System.Int32,System.Int32)">
      <summary>Sets the size of the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">Size in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
      <summary>Sets the sort indicator for the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">Sort indicator value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetTag(System.Int32,System.Object)">
      <summary>Sets the data associated with the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">Object that contains data to associate with a specified row or column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetAxisModel.SetVisible(System.Int32,System.Boolean)">
      <summary>Sets whether the control displays the specified row or column. (This implementation does nothing.)</summary>
      <param name="index">Row or column index</param>
      <param name="value">Set to True to display the specified row or column</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.BaseSheetAxisModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the axis (row or column) of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.BaseSheetDataModel">
      <summary>Represents the partial (abstract) implementation of the ISheetDataModel interface for a data model for a sheet. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.BaseSheetDataModel" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.ColumnCount">
      <summary>Gets or sets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.NonEmptyColumnCount">
      <summary>Gets the number of columns that contain data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.NonEmptyRowCount">
      <summary>Gets the number of rows that contain data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetDataModel.RowCount">
      <summary>Gets or sets the number of rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.FireChanged(System.Int32,System.Int32)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetDataModelEventType)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="type">Type of event raised</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.GetNote(System.Int32,System.Int32)">
      <summary>Gets the note for a cell at a specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.GetTag(System.Int32,System.Int32)">
      <summary>Gets the application data for a cell at a specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value for a cell at a specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.IsEditable(System.Int32,System.Int32)">
      <summary>Determines whether the contents of a cell at a specified row and column are editable.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.IsEmpty">
      <summary>Determines whether the model is empty of data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.IsRowUsed(System.Int32)">
      <summary>Determines whether the specified row contains data.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row that contains data.</summary>
      <param name="row">Row index to search</param>
      <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next row that contains data.</summary>
      <param name="row">Row index after which to start searching (-1 to start at row 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.OnChanged(FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
      <summary>Raises the Changed event, and permits derived classes to handle the event without attaching a delegate.</summary>
      <param name="e">SheetSpanModelEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.SetNote(System.Int32,System.Int32,System.String)">
      <summary>Sets the note for a cell at a specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">String for note</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.SetTag(System.Int32,System.Int32,System.Object)">
      <summary>Sets the application data for a cell at a specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Data to associate with cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetDataModel.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets data for a cell at a specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Value to set in cell</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.BaseSheetDataModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the data of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.BaseSheetSelectionModel">
      <summary>Represents the partial (abstract) implementation of the ISheetSelectionModel interface for a selection model for a sheet. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.BaseSheetSelectionModel" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.AnchorColumn">
      <summary>Gets the column index of the first cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.AnchorRow">
      <summary>Gets the row index of the first cell selected in the range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.Count">
      <summary>Gets the number selections.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.Item(System.Int32)">
      <summary>Gets an item in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.LeadColumn">
      <summary>Gets the column index of the farthest cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.LeadRow">
      <summary>Gets the row index of the farthest cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SelectionPolicy">
      <summary>Gets or sets whether users can select ranges of items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SelectionUnit">
      <summary>Gets or sets whether users can select cells, rows, or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell or cells to the selection.</summary>
      <param name="row">Row index of first cell to add</param>
      <param name="column">Column index of the first cell to add</param>
      <param name="rowCount">Number of rows to add</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.ClearSelection">
      <summary>Removes all of the selections from the sheet so that cells are no longer selected.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.ExtendSelection(System.Int32,System.Int32)">
      <summary>Specifies the extent (or farthest cell) in the selection of cells.</summary>
      <param name="row">Row index of farthest cell in the selection</param>
      <param name="column">Column index of farthest cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Raises the selection changed event.</summary>
      <param name="row">Row index of start of selection</param>
      <param name="column">Column index of start of selection</param>
      <param name="rowCount">Number of rows in selection</param>
      <param name="columnCount">Number of columns in selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the selections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsAnyCellInColumnSelected(System.Int32)">
      <summary>Determines whether any cell in a specified column is in the selection.</summary>
      <param name="column">Column to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsAnyCellInRowSelected(System.Int32)">
      <summary>Determines whether any cell in a specified row is in the selection.</summary>
      <param name="row">Row to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsEmpty">
      <summary>Determines whether the model has no selections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.IsSelected(System.Int32,System.Int32)">
      <summary>Determines whether the specified cell is in the selection.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.OnChanged(FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs)">
      <summary>Handles the Changed event in subclasses.</summary>
      <param name="e">SheetSelectionModelEventArgs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes the specified selection range from the selection list, if one exists.</summary>
      <param name="row">Row index of the cell at which to start</param>
      <param name="column">Column index of the cell at which to start</param>
      <param name="rowCount">Number of rows to deselect</param>
      <param name="columnCount">Number of columns to deselect</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SetAnchor(System.Int32,System.Int32)">
      <summary>Specifies the anchor (or first cell) in the selection of cells.</summary>
      <param name="row">Row index of the first cell in the selection</param>
      <param name="column">Column index of the first cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Selects the specified cells.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
      <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.BaseSheetSelectionModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the selection of cells of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.BaseSheetSpanModel">
      <summary>Represents the partial (abstract) implementation of the ISheetSpanModel interface for a span model for a sheet. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.BaseSheetSpanModel" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell span to the collection.</summary>
      <param name="row">Row index at which to start span</param>
      <param name="column">Column index at which to start span</param>
      <param name="rowCount">Number of rows in span</param>
      <param name="columnCount">Number of columns in span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Clear">
      <summary>Removes all cell spans from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Find(System.Int32,System.Int32)">
      <summary>Finds the cell span in the collection that includes the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetSpanModelEventType)">
      <summary>Returns information about the cell span that has changed.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in span</param>
      <param name="columnCount">Number of columns in span</param>
      <param name="type">Returns the type of event that was raised</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.GetEnumerator(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the next cell span in the collection.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in cell span</param>
      <param name="columnCount">Number of columns in cell span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.IsEmpty">
      <summary>Determines whether the model is empty of cell spans.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.OnChanged(FarPoint.Win.Spread.Model.SheetSpanModelEventArgs)">
      <summary>Returns information about the event that was raised.</summary>
      <param name="e">SheetSpanModelEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Remove(System.Int32,System.Int32)">
      <summary>Removes all cell spans in the collection that cover the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.BaseSheetSpanModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the span of cells of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.BaseSheetStyleModel">
      <summary>Represents the partial (abstract) implementation of the ISheetStyleModel interface for a style model for a sheet. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.BaseSheetStyleModel" /> class.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetStyleModel.AltRowCount">
      <summary>Gets or sets the number of alternating row styles in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NonEmptyColumnCount">
      <summary>Gets the number of columns in the model that contain style settings.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NonEmptyRowCount">
      <summary>Gets the number of rows in the model that contain style settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetStyleModelEventType)">
      <summary>Creates a SheetStyleModelEventArgs with the specified event data and calls OnChanged to raise the Changed event.</summary>
      <param name="row">Row index where the event occurred, or -1 if all rows affected</param>
      <param name="column">Column index where the event occurred, or -1 if all columns affected</param>
      <param name="rowCount">Number of rows, or -1 if all rows affected</param>
      <param name="columnCount">Number of columns, or -1 if all columns affected</param>
      <param name="type">Type of event that occurred</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the style information as a composite of settings for the specified cell, column, row, or model default.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
      <param name="altIndex">Alternating row index of the cell, or -1 to skip composing any alternating style</param>
      <param name="destInfo">Destination StyleInfo object for composing the styles; if null, then a new StyleInfo should be created and used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.GetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the style information for the specified alternating row in the model.</summary>
      <param name="index">Index of the alternating row style to get; must be between 0 and AltRowCount-1</param>
      <param name="destInfo">Destination StyleInfo object for composing the styles; if null, then a new StyleInfo is created and used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.GetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the direct style information for the specified cell, column, row, or model default.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
      <param name="destInfo">Destination StyleInfo object for getting the style; if null, then a new StyleInfo is created and used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.IsEmpty">
      <summary>Determines whether the model has no style settings.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.IsRowUsed(System.Int32)">
      <summary>Gets whether the row contains style settings.</summary>
      <param name="row">Row index</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row that contains style settings.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index before the column to start looking (-1 to start at column 0)</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next non-empty row after the specified row index.</summary>
      <param name="row">Row index after which to start looking (-1 to start at row 0)</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.OnChanged(FarPoint.Win.Spread.Model.SheetStyleModelEventArgs)">
      <summary>Raises the Changed event.</summary>
      <param name="e">SheetStyleModelEventArgs object that contains the event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.SetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the specified alternating row style in the model.</summary>
      <param name="index">Index of the alternating row style to set; must be between 0 and AltRowCount-1</param>
      <param name="info">Source StyleInfo object that has style information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.BaseSheetStyleModel.SetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the direct style information for the specified cell, column, row, or model default.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
      <param name="info">Source StyleInfo object that has style information</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.BaseSheetStyleModel.Changed">
      <summary>Occurs when the user makes a change to the model that affects the style of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.CellRange">
      <summary>Represents a selected range of cells for a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a range of cells.</summary>
      <param name="row">Row index of first cell in the range</param>
      <param name="column">Column index of first cell in the range</param>
      <param name="rowCount">Number of rows in the range</param>
      <param name="columnCount">Number of columns in the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.#ctor(GrapeCity.CalcEngine.RangeReference)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.CellRange" /> class. Internal use only.</summary>
      <param name="range">The range.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new range of cells from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="c">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.CellRange.Column">
      <summary>Gets the column index of the first cell in the range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.CellRange.ColumnCount">
      <summary>Gets the number of columns in the range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.CellRange.Row">
      <summary>Gets the row index of the first cell in the range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.CellRange.RowCount">
      <summary>Gets the number of rows in the range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Contains(System.Int32,System.Int32)">
      <summary>Determines whether the range of cells contains the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Contains(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether the range of cells contains another specified range of cells.</summary>
      <param name="row">Row index of the first cell in the range</param>
      <param name="column">Column index of the first cell in the range</param>
      <param name="rowCount">Number of rows in the range</param>
      <param name="columnCount">Number of columns in the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Contains(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Determines whether the range of cells contains another specified range of cells.</summary>
      <param name="range">CellRange object that contains the other range of cells</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Equals(System.Object)">
      <summary>Determines whether the range of cells is the same as another specified range of cells.</summary>
      <param name="item">Object that contains the range of cells to compare</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Equals(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether the range of cells is the same as another specified range of cells.</summary>
      <param name="row">Row index of first cell in the range</param>
      <param name="column">Column index of first cell in the range</param>
      <param name="rowCount">Number of rows in the range</param>
      <param name="columnCount">Number of columns in the range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the settings of the range of cells.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contextual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.IntersectColumn(System.Int32)">
      <summary>Determines whether the range of cells intersects the specified column.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.IntersectRow(System.Int32)">
      <summary>Determines whether the range of cells intersects the specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.IntersectWith(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Intersects with the new cell range.</summary>
      <param name="newCellRange">The new cell range.</param>
      <returns>CellRange after intersecting</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Intersects(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether the range of cells intersects the specified range.</summary>
      <param name="row">Row index at beginning of range</param>
      <param name="column">Column index at beginning of range</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Intersects(FarPoint.Win.Spread.Model.CellRange)">
      <summary>Determines whether the range of cells intersects the specified range.</summary>
      <param name="cellRange">The specified range objectto check with</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.IsValidRange(FarPoint.Win.Spread.SheetView)">
      <summary>Determines whether this cell range is valid in the specified sheet.</summary>
      <param name="sheetView">SheetView object with the sheet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.IsValidRange(FarPoint.Win.Spread.SheetView,System.Boolean)">
      <summary>Determines whether this cell range is valid in the specified sheet and whether to treat as a span.</summary>
      <param name="sheetView">SheetView object with the sheet</param>
      <param name="isSpan">Whether to treat the cell range as a span (or else selection)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.Parse(System.String)">
      <summary>Converts a string to a cell range.</summary>
      <param name="s">String to be parsed</param>
      <exception cref="T:System.ArgumentNullException">s is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.FormatException">s does not represent a cell range.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.ToString">
      <summary>Returns the string representation of the cell range.</summary>
      <returns>String that represents the cell range</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.TryParse(System.String,FarPoint.Win.Spread.Model.CellRange@)">
      <summary>Converts a string to a cell range.</summary>
      <param name="s">String to be parsed</param>
      <param name="result">Cell range represented by the string. If the return value is false then result is set to null.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.op_Equality(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Determines whether two specified instances of <see cref="T:FarPoint.Win.Spread.Model.CellRange" /> are equal.</summary>
      <param name="obj1">The first cell range object</param>
      <param name="obj2">The second cell range object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRange.op_Inequality(FarPoint.Win.Spread.Model.CellRange,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Determines whether two specified instances of <see cref="T:FarPoint.Win.Spread.Model.CellRange" /> are not equal.</summary>
      <param name="obj1">The first cell range object</param>
      <param name="obj2">The second cell range object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.CellRangeConverter">
      <summary>Represents a data type converter for a range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRangeConverter.#ctor">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.Model.CellRangeConverter" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if the data type of the cell range can be converted from the specified source data.</summary>
      <param name="context">Data type descriptor context</param>
      <param name="sourceType">Source data type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if the data type of the cell range can be converted to the specified destination data.</summary>
      <param name="context">Data type descriptor context</param>
      <param name="destinationType">Destination data type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the data type of the cell range from the specified value.</summary>
      <param name="context">Data type descriptor context</param>
      <param name="culture">Culture</param>
      <param name="value">Value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the data type of the cell range to the specified value.</summary>
      <param name="context">Data type descriptor context</param>
      <param name="culture">Culture</param>
      <param name="value">Value</param>
      <param name="destinationType">Destination data type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.CellRangeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Creates an instance of the range of cells.</summary>
      <param name="context">Data type descriptor context</param>
      <param name="propertyValues">Property values</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ConvertTableToRangeEventArgs">
      <summary>Represents the add event data when converting a table to a range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ConvertTableToRangeEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Creates a ConvertTableToRangeEventArgs object.</summary>
      <param name="activeRowIndex" />
      <param name="activeColumnIndex" />
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ConvertTableToRangeEventArgs.ActiveColumnIndex">
      <summary>Gets the sheetview's active column index when converting a table to a range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ConvertTableToRangeEventArgs.ActiveRowIndex">
      <summary>Gets the sheetview's active row index when converting a table to a range.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetAxisModel">
      <summary>Represents the full (concrete) implementation of the ISheetAxisModel interface for an axis model for a sheet, which represents rows and columns on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor">
      <summary>Creates an axis model (DefaultSheetAxisModel object) with zero rows, zero columns, and no parent model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor(System.Int32,FarPoint.Win.Spread.Model.SheetAxisOrientation)">
      <summary>Creates an axis model (DefaultSheetAxisModel object) with the specified number of rows or columns, and no parent model.</summary>
      <param name="count">Number of rows or columns in the model</param>
      <param name="orientation">Orientation of the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor(System.Int32,FarPoint.Win.Spread.Model.SheetAxisOrientation,FarPoint.Win.Spread.Model.ISheetAxisModel)">
      <summary>Creates an axis model (DefaultSheetAxisModel object) with the specified parent model and number of rows or columns.</summary>
      <param name="count">Number of rows or columns in the model</param>
      <param name="orientation">Model orientation</param>
      <param name="parent">Parent ISheetAxisModel</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates an axis model (DefaultSheetAxisModel object) from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Count">
      <summary>Gets the number of rows or columns in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Orientation">
      <summary>Gets the axis orientation; whether the object is a row or a column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Parent">
      <summary>Gets or sets the parent sheet axis model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Clear(System.Int32,System.Int32)">
      <summary>Removes the values from the specified rows or columns.</summary>
      <param name="index">Index before which to clear the rows or columns</param>
      <param name="count">Number of rows or columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Copy(System.Int32,System.Int32,System.Int32)">
      <summary>Copies one or more rows or columns and pastes them at the specified location.</summary>
      <param name="fromIndex">Row or column index at which to start copying rows or columns</param>
      <param name="toIndex">Row or column index at which to paste rows or columns</param>
      <param name="count">Number of rows or columns to copy</param>
      <exception cref="T:System.IndexOutOfRangeException">Specified start index is not valid; must be between 0 and the total count</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified destination index is not valid; must be between 0 and the total count</exception>
      <exception cref="T:System.ArgumentException">Specified count is not valid; must be between 1 and the total count</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads an object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.FireChanged(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType)">
      <summary>Fires the Changed event.</summary>
      <param name="index">Row or column index</param>
      <param name="count">Number of rows or columns</param>
      <param name="type">Type of event that was raised</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetAutoFilterIndex(System.Int32)">
      <summary>Gets the automatic filter index for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <returns>The automatic filter index</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetAutoSortIndex(System.Int32)">
      <summary>Gets the automatic sort index for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <returns>The automatic sort index</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetMergePolicy(System.Int32)">
      <summary>Gets the cell merge policy for the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the DefaultSheetAxisModel to the SerializationInfo object.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetPageBreak(System.Int32)">
      <summary>Gets whether a page break occurs at the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetResizable(System.Int32)">
      <summary>Gets whether users can resize the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetSize(System.Int32)">
      <summary>Gets the size of the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetSortIndicator(System.Int32)">
      <summary>Gets the sort indicator for the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetTag(System.Int32)">
      <summary>Gets the data associated with the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.GetVisible(System.Int32)">
      <summary>Gets whether the control displays the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.IsEmpty">
      <summary>Determines whether there are no rows and columns in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.IsPropertySet(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
      <summary>Determines whether the specified SheetAxisModel property is set.</summary>
      <param name="index">Row or column index</param>
      <param name="prop">Property to evaluate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Move(System.Int32,System.Int32,System.Int32)">
      <summary>Moves one or more rows or columns and pastes them at the specified location.</summary>
      <param name="fromIndex">Row or column index at which to start moving rows or columns</param>
      <param name="toIndex">Row or column index at which to paste rows or columns</param>
      <param name="count">Number of rows or columns to move</param>
      <exception cref="T:System.IndexOutOfRangeException">Specified start index is not valid; must be between 0 and the total count</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified destination index is not valid; must be between 0 and the total count</exception>
      <exception cref="T:System.ArgumentException">Specified count is not valid; must be between 1 and the total count</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.NextNonEmptyIndex(System.Int32)">
      <summary>Returns the index of the next non-empty element.</summary>
      <param name="index">Index to start searching</param>
      <returns>Index of the next non-empty element</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.NextRowVisible(System.Int32)">
      <summary>Gets whether the specified row is visible.</summary>
      <param name="index">Index of start row</param>
      <returns>Index of visible row if true</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.ResetProperty(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
      <summary>Resets the specified SheetAxisModel property to its default value.</summary>
      <param name="index">Row or column index</param>
      <param name="prop">Property to reset</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the Spread to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the Spread</param>
      <returns>True if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetAutoFilterIndex(System.Int32,System.Int32)">
      <summary>Sets the automatic filter index for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">The automatic filter index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetAutoSortIndex(System.Int32,System.Int32)">
      <summary>Sets the automatic sort index for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">The automatic sort index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetMergePolicy(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
      <summary>Sets the cell merge policy for the row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Value with merge policy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetPageBreak(System.Int32,System.Boolean)">
      <summary>Sets whether a page break occurs at the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Whether the page break occurs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetResizable(System.Int32,System.Boolean)">
      <summary>Sets whether users can resize the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Whether the specified row or column can be resized</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetSize(System.Int32,System.Int32)">
      <summary>Sets the size of the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Size in pixels</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified size is not valid; must be greater than or equal to zero </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
      <summary>Sets the sort indicator for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Value with the SortIndicator enumeration</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetTag(System.Int32,System.Object)">
      <summary>Sets the data associated with the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Object that contains data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.SetVisible(System.Int32,System.Boolean)">
      <summary>Sets whether the control displays the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Whether the control displays the specified row or column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetAxisModel.Swap(System.Int32,System.Int32,System.Int32)">
      <summary>Swaps one or more rows or columns.</summary>
      <param name="fromIndex">Row or column index at which to start swapping rows or columns</param>
      <param name="toIndex">Row or column index at which to swap rows or columns</param>
      <param name="count">Number of rows or columns to swap</param>
      <exception cref="T:System.IndexOutOfRangeException">Specified start index is not valid; must be between 0 and the total count</exception>
      <exception cref="T:System.IndexOutOfRangeException">Specified destination index is not valid; must be between 0 and the total count</exception>
      <exception cref="T:System.ArgumentException">Specified count is not valid; must be between 1 and the total count</exception>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel">
      <summary>Represents the full (concrete) implementation of the ISheetDataModel interface for a data model for a sheet, which represents tabular data on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor">
      <summary>Creates a default data model with zero rows and columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Int32,System.Int32)">
      <summary>Creates a default data model with the specified number of rows and columns.</summary>
      <param name="columnCount">Number of columns in the model</param>
      <param name="rowCount">Number of rows in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new DefaultSheetDataModel from the SerializationInfo object.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Data.DataTable)">
      <summary>Creates a default data model with the specified data table.</summary>
      <param name="dataSource">Data source to be used for this model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Data.DataSet)">
      <summary>Creates a default data model with the specified data set.</summary>
      <param name="dataSource">Data source to be used for this model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Data.DataSet,System.String)">
      <summary>Creates a default data model with the specified data set.</summary>
      <param name="dataSource">Data source to be used for this model</param>
      <param name="dataMember">Data table name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.ComponentModel.IListSource,System.Type)">
      <summary>Creates a default data model with the specified data set (IListSource object).</summary>
      <param name="dataSource">Data source to be used</param>
      <param name="itemType">Element type in the data source</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.#ctor(System.Collections.IList,System.Type)">
      <summary>Creates a default data model with the specified data set (IList object).</summary>
      <param name="dataSource">Data source to be used</param>
      <param name="itemType">Element type in the data source</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AutoCalculation">
      <summary>Gets or sets whether the control automatically recalculates each formula in the sheet when the contents of dependent cells change.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AutoGenerateColumns">
      <summary>Gets or sets whether to generate the columns automatically based on the data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CanSerializeXml">
      <summary>Gets whether the object in its entirety can be rendered with XML without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ChildRelationCount">
      <summary>Gets the number of the child data relations for a hierarchical display of data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ColumnCount">
      <summary>Gets or sets the number of columns in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataMember">
      <summary>Gets or sets the data member (table name) to use for data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataSource">
      <summary>Gets or sets the data source.</summary>
      <exception cref="T:System.ArgumentException">Data source is empty</exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumErrorText">
      <summary>Internal use only. Specifies the enumerator error text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumFormulas">
      <summary>Internal use only. Specifies the enumerator formulas.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumNotes">
      <summary>Internal use only. Specifies the enumerator notes.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumRowErrorText">
      <summary>Internal use only. Specifies the enumerator row error text.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumRowFormulas">
      <summary>Internal use only. Specifies the enumerator row formulas.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumTags">
      <summary>Internal use only. Specifies the enumerator tags.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EnumValues">
      <summary>Internal use only. Specifies the enumerator values.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IgnoreFormula">
      <summary>Gets or sets a value that indicates whether to ignore the formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ItemType">
      <summary>Gets or sets the type of the object in the list for the list data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Iteration">
      <summary>Gets or sets whether circular references are evaluated.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.MaximumChange">
      <summary>Gets or sets the maximum amount of change below which to stop iterating for caclulations with circular references.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified amount is out of range; must be zero or more </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.MaximumIterations">
      <summary>Gets or sets the maximum number of iterations for calculations with circular references.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of iterations is out of range; must be an integer between 1 and 32767 </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Name">
      <summary>Gets or sets the name of the data model.</summary>
      <exception cref="T:System.ArgumentNullException"> No name is specified; name is a null reference (Nothing in Visual Basic) </exception>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NonEmptyColumnCount">
      <summary>Gets the number of columns in the model that contain data (bound or unbound).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NonEmptyRowCount">
      <summary>Gets the number of rows in the model that contain data (bound or unbound).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Parent">
      <summary>Gets or sets the parent data source support object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ParentRelationName">
      <summary>Gets the name of the data relation being used for a hierarchical display of data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ParentRowIndex">
      <summary>Gets the index of the row in the parent data model associated with this child data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ReferenceStyle">
      <summary>Gets or sets the cell reference style for cells with formulas.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowCount">
      <summary>Gets or sets the number of rows in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.UnionedChangeCellRange">
      <summary>Gets or sets whether the changed event occurs for each cell or for the union range. True fires the event for the union range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddColumn">
      <summary>Adds a column to the data model after the last column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddColumn(System.Int32)">
      <summary>Adds a column to the data model at the specified position.</summary>
      <param name="column">Index of column at which to add a new column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddColumns(System.Int32,System.Int32)">
      <summary>Adds one or more columns to the data model at the specified position.</summary>
      <param name="column">Index of column at which to add a new column</param>
      <param name="count">Number of columns to add</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column index is out of range; must be between zero and the number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of columns is out of range; must be greater than zero </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
      <summary>Adds a new user-defined custom function to the model for use in formulas.</summary>
      <param name="functionInfo">FunctionInfo object that contains the user-defined function to add</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentNullException"> No function specified; function is a null reference (Nothing in Visual Basic) </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
      <summary>Adds a named expression to the model for use in formulas.</summary>
      <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
      <param name="value">Value of the expression (used in formulas for evaluation)</param>
      <param name="baseRow">Base row index for computing relative cell references</param>
      <param name="baseColumn">Base column index for computing relative cell references</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
      <summary>Adds a named expression to the model for use in formulas.</summary>
      <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
      <param name="value">Expression object to add</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomName(System.String,System.String,System.Int32,System.Int32,System.String)">
      <summary>Adds a new user-defined name to the model using the specified string value.</summary>
      <param name="name">Name to add</param>
      <param name="value">Value for name, as string</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
      <param name="comment">Comment for the custom name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddCustomName(System.String,FarPoint.CalcEngine.Expression,System.String)">
      <summary>Adds a new user-defined name to the model using the specified expression value.</summary>
      <param name="name">Name to add</param>
      <param name="value">Value for name, as expression</param>
      <param name="comment">Comment for the custom name</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddModelScopeCustomName(System.String,System.String,System.Int32,System.Int32,System.String)">
      <summary>Adds a custom name to the model scope.</summary>
      <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
      <param name="value">Value of the expression (used in formulas for evaluation)</param>
      <param name="baseRow">Base row index for computing relative cell references</param>
      <param name="baseColumn">Base column index for computing relative cell references</param>
      <param name="comment">Comment of the expression (used in formulas to display information)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddModelScopeCustomName(System.String,FarPoint.CalcEngine.Expression,System.String)">
      <summary>Adds a named expression to the model scope for use in formulas.</summary>
      <param name="name">Name of the expression to add (used in formulas to reference the value)</param>
      <param name="value">Expression object to add</param>
      <param name="comment">Comment of custom name to add</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRow">
      <summary>Adds a row to the data model after the last row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRow(System.Int32)">
      <summary>Adds a row to the data model at the specified position.</summary>
      <param name="row">Row index at which to add a new row</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>Adds the unbound row to the data source.</summary>
      <param name="row">Row index at which to add a row</param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddRows(System.Int32,System.Int32)">
      <summary>Adds rows to the data model at the specified position.</summary>
      <param name="row">Row index at which to add new rows</param>
      <param name="count">Number of rows to add</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified index of row is out of range; must be between zero and the number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of rows is out of range; must be greater than zero </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.AddUnboundRows(System.Int32,System.Int32)">
      <summary>Adds unbound rows to the data model.</summary>
      <param name="row">Row index at which to add the new rows</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CheckModelScopeName(System.String)">
      <summary>Checks if the specified name is one of the model scope custom names of this data model and returns the name of the custom name in the data model.</summary>
      <param name="name">The specified name</param>
      <returns>The name of the custom name in the data model if the specified name is one of the model scope custom names of this data model; otherwise, returns null.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CheckName(System.String)">
      <summary>Checks if the specified name is one of the common scope custom names of this data model and returns the name of the custom name in the data model.</summary>
      <param name="name">The specified name</param>
      <returns>The name of the custom name in the data model if the specified name is a common scope custom name in this data model; otherwise, returns null.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all the data and formulas from the specified range of cells.</summary>
      <param name="row">Row index of start of range to clear</param>
      <param name="column">Column index of start of range to clear</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearCustomFunctions">
      <summary>Removes all user-defined custom functions from the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearCustomNames">
      <summary>Removes all named expressions from the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearData(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all the data from the specified range of cells.</summary>
      <param name="row">Row index of start of range to clear</param>
      <param name="column">Column index of start of range to clear</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearFormulas(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all of the formulas from the specified range of cells.</summary>
      <param name="row">Row index of start of range to clear</param>
      <param name="column">Column index of start of range to clear</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ClearModelScopeCustomName">
      <summary>Removes all named expressions from the model scope.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CompareExpression(FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
      <summary>Gets whether two expressions are equal.</summary>
      <param name="firstExpr">The first expression.</param>
      <param name="secondExpr">The second expression.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="fromRow">Row index of start of range from which to copy</param>
      <param name="fromColumn">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <exception cref="T:System.ArgumentException"> Specified starting and ending row or row count is not valid </exception>
      <exception cref="T:System.ArgumentException"> Specified starting and ending column or column count is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.EvaluateExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Evaluates the expression in the cell at the specified row and column and returns the resulting object.</summary>
      <param name="row">Row index of the base cell</param>
      <param name="column">Column index of the base cell</param>
      <param name="expression">Expression to be evaluated</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetDataModelEventType)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="type">Type of event raised</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.FireChanged(System.Int32,System.Int32)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetAggregationResult(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.AggregationType,System.String)">
      <summary>Calculates the value based on the aggregation type and formats the value with the aggregation format.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="aggType">Aggregation type</param>
      <param name="aggformula">Aggregation formula</param>
      <returns>The calculated value in form of the aggregation format</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetAggregationType(System.Int32)">
      <summary>Gets the AggregationType, as a string value, at the specified column.</summary>
      <param name="column">Column index</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets an object array from a specified range of cells.</summary>
      <param name="row">Row index of the cell from which to read into the array</param>
      <param name="column">Column index of the cell from which to read into the array</param>
      <param name="rowCount">Number of rows in the array</param>
      <param name="columnCount">Number of columns in the array</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetArray(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Gets an object array from a specified range of cells.</summary>
      <param name="row">Row index of the cell from which to read into the array</param>
      <param name="column">Column index of the cell from which to read into the array</param>
      <param name="rowCount">Number of rows in the array</param>
      <param name="columnCount">Number of columns in the array</param>
      <param name="formula">If true, return formulas; otherwise, return values.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCellErrorText(System.Int32,System.Int32)">
      <summary>Gets a user-defined note value for the cell of the specified row and column.</summary>
      <param name="row">Row index of cell (in model)</param>
      <param name="column">Column index of cell (in model)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetChildDataModel(System.Int32,System.String)">
      <summary>Gets the data model (ISheetDataModel object) for the specified row and data relation.</summary>
      <param name="row">Row whose child data model is to be returned</param>
      <param name="relation">Data relation name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetChildRelation(System.Int32)">
      <summary>Gets the name of the child data relation at the specified position.</summary>
      <param name="index">Index of the child data relation</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetColumnIndex(System.String)">
      <summary>Gets the index of the column specified by name.</summary>
      <param name="columnName">Column name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomFunction(System.String)">
      <summary>Gets a user-defined custom function from the model.</summary>
      <param name="name">Name of the user-defined custom function to get</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomFunctionEnumerator">
      <summary>Gets an IEnumerator that enumerates through the names of the custom functions in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomName(System.String,System.Int32,System.Int32)">
      <summary>Gets a named expression from the model with the specified base index for relative cell references.</summary>
      <param name="name">Custom name to get</param>
      <param name="baseRow">Base row index for computing relative cell references</param>
      <param name="baseColumn">Base column index for computing relative cell references</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomName(System.String)">
      <summary>Gets a named expression from the model.</summary>
      <param name="name">Custom name to get</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomNameComment(System.String)">
      <summary>Gets a comment for a common custom name.</summary>
      <param name="name">The name of the custom name to get</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetCustomNameEnumerator">
      <summary>Gets an IEnumerator that enumerates through the names of the named expressions in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataColumnCaption(System.Int32)">
      <summary>Gets the column caption at the specified position.</summary>
      <param name="column">Column index for which caption is requested</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataColumnFromModelColumn(System.Int32)">
      <summary>Gets the data source column index for the specified column in the model.</summary>
      <param name="column">Index of the column in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataColumnName(System.Int32)">
      <summary>Gets the column name at the specified position.</summary>
      <param name="column">Column index for which name is requested</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataColumnType(System.Int32)">
      <summary>Gets the column data type at the specified position.</summary>
      <param name="column">Column index for which type is requested</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataRow(System.Int32)">
      <summary>Gets the view of a specified row of data.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataRowFromModelRow(System.Int32)">
      <summary>Gets the data source row index for the specified row in the model.</summary>
      <param name="row">Row index in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataTable">
      <summary>Gets the data table associated with this model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataView">
      <summary>Gets the DataView object associated with this model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetDataView(System.Boolean)">
      <summary>Gets the DataView object associated with this model.</summary>
      <param name="create">Whether to recreate the DataView</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetExpression(System.Int32,System.Int32)">
      <summary>Gets the formula, as an expression value, for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetFormula(System.Int32,System.Int32)">
      <summary>Gets the formula, as a string value, for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetItem(System.Int32)">
      <summary>Returns the IEditableObject from a row that is data bound to a DataView or ListSource.</summary>
      <param name="row">Row in the data model to query</param>
      <returns>The IEditable object, if data bound</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetListSource">
      <summary>Returns the IList data source for this model or null if the data source is not an IList.</summary>
      <returns>IList object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelColumnFromDataColumn(System.Int32)">
      <summary>Gets the column in the model for the specified data source column.</summary>
      <param name="datacolumn">Index of the column in the data source</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelRowFromDataRow(System.Int32)">
      <summary>Gets the row in the model for the specified data source row.</summary>
      <param name="row">Row index of data source</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelScopeCustomName(System.String,System.Int32,System.Int32)">
      <summary>Gets a named expression from the model with the specified base index for relative cell references.</summary>
      <param name="name">Custom name to get</param>
      <param name="baseRow">Base row index for computing relative cell references</param>
      <param name="baseColumn">Base column index for computing relative cell references</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelScopeCustomName(System.String)">
      <summary>Gets a named expression from the model with the specified base index for relative cell references.</summary>
      <param name="name">Custom name to get</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelScopeCustomNameComment(System.String)">
      <summary>Gets the comment from a custom name.</summary>
      <param name="name" />
      <returns>Returns the comment of the custom name</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetModelScopeNameEnumerator">
      <summary>Gets an IEnumerator that enumerates through the names of the named expressions in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNonEmptyErrorTextsColumnCount">
      <summary>Gets the number of columns that contain notes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNonEmptyErrorTextsRowCount">
      <summary>Gets the number of rows that contain notes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNonEmptyNotesColumnCount">
      <summary>Gets the number of columns that contain notes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNonEmptyNotesRowCount">
      <summary>Gets the number of rows that contain notes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetNote(System.Int32,System.Int32)">
      <summary>Gets a user-defined note value for the cell of the specified row and column.</summary>
      <param name="row">Row index of cell (in model)</param>
      <param name="column">Column index of cell (in model)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the DefaultSheetDataModel to the SerializationInfo object.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetRowErrorText(System.Int32)">
      <summary>Gets a user-defined error value for the cell of the specified row.</summary>
      <param name="row">Row index of cell (in model)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetTag(System.Int32,System.Int32)">
      <summary>Gets an application-defined tag value for the cell of the specified row and column.</summary>
      <param name="row">Row index of cell in model</param>
      <param name="column">Column index of cell in model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetUnboundValue(System.Int32,System.Int32)">
      <summary>Gets the unbound value for the cell for the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value of the cell for the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.GoalSeek(System.Int32,System.Int32,FarPoint.Win.Spread.Model.DefaultSheetDataModel,System.Int32,System.Int32,System.Double)">
      <summary>Attempts to find a value for one cell that produces the desired formula result in another cell.</summary>
      <param name="variableRow">Row index of cell that contains value to adjust</param>
      <param name="variableColumn">Column index of cell that contains value to adjust</param>
      <param name="formulaDataModel">Data model of cell that contains formula</param>
      <param name="formulaRow">Row index of cell that contains formula</param>
      <param name="formulaColumn">Column index of cell that contains formula</param>
      <param name="desiredResult">Formula result you wish to achieve</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsColumnBound(System.Int32)">
      <summary>Determines whether the specified column is bound to a data source column.</summary>
      <param name="column">Column index to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsEditable(System.Int32,System.Int32)">
      <summary>Determines whether the value in the cell of the specified row and column can be edited.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsEmpty">
      <summary>Determines whether the data model is empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsRowBound(System.Int32)">
      <summary>Determines whether the specified row is bound to a data source row.</summary>
      <param name="row">Index of row to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsRowUsed(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Specifies whether the row uses a formula, tag, or note.</summary>
      <param name="row">Model row index</param>
      <param name="includeFormula">Includes row with formulas</param>
      <param name="includeTag">Includes row with tags</param>
      <param name="includeNote">Includes row with notes</param>
      <returns>Whether row has data, formula, tag, or note</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.IsRowUsed(System.Int32)">
      <summary>Determines whether the specified row is not empty.</summary>
      <param name="row">Index of row to check</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.LoadFormulas(System.Boolean)">
      <summary>Loads formulas that are deserialized, but not parsed yet, to be used after all sheets have been created and deserialized.</summary>
      <param name="recalculate">Whether to recalculate all the formulas in cells that have changed</param>
      <remarks>This method enables formula parsing if it is not already enabled.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ModifyCustomName(System.String,System.String)">
      <summary>Changes the name of the shared custom name.</summary>
      <param name="name">The current name.</param>
      <param name="newName">The new name.</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ModifyModelScopeCustomName(System.String,System.String)">
      <summary>Modifies the name of a model scope custom name.</summary>
      <param name="name">Name of the custom name to modify</param>
      <param name="newName">New name of the custom name to modify</param>
      <returns>true if name is modified; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="fromRow">Row index of starting position of range to move</param>
      <param name="fromColumn">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <exception cref="T:System.ArgumentException"> Specified starting and ending row or row count is not valid </exception>
      <exception cref="T:System.ArgumentException"> Specified starting and ending column or column count is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyColumnFormula(System.Int32)">
      <summary>Returns the next non-empty column with a formula.</summary>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row that contains data.</summary>
      <param name="row">Row index to search</param>
      <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Gets the next non-empty column in the row.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="excludeContents">The contents to exclude.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next non-empty row after the specified row index.</summary>
      <param name="row">Row index to start searching after (-1 to start at row 0)</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyRow(System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Returns the index of the next row that has data.</summary>
      <param name="row">Index of the row at which to start looking</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NextNonEmptyRowFormula(System.Int32)">
      <summary>Returns the next non-empty row with a formula.</summary>
      <param name="row">The row.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.OnAggregate(FarPoint.Win.Spread.Model.AggregateArgs)">
      <summary>Raises the Changed event, and permits derived classes to handle the event without attaching a delegate.</summary>
      <param name="e">AggregateArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.OnChanged(FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
      <summary>Raises the Changed event, and permits derived classes to handle the event without attaching a delegate.</summary>
      <param name="e">SheetDataModelEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ParseFormula(System.Int32,System.Int32,System.String)">
      <summary>Parses the string value and returns the expression for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be parsed to a string</param>
      <exception cref="T:FarPoint.Win.Spread.Model.ParseException"> Specified value is not a valid formula </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.PreviousNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the previous non-empty column in the row.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.PreviousNonEmptyColumnInRow(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Gets the previous non-empty column in the row.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="excludeContents">The contents to exclude.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.PreviousNonEmptyRow(System.Int32)">
      <summary>Returns the previous non-empty row.</summary>
      <param name="row">The row.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.PreviousNonEmptyRow(System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Gets the previous nonempty row.</summary>
      <param name="row">The row.</param>
      <param name="excludeContents">The contents to exclude.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Recalculate">
      <summary>Evaluates the formulas in the sheet that have changed since the last calculation cycle.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RecalculateAll">
      <summary>Evaluates all the formulas in the entire sheet (including those that have not changed since the last calculation cycle).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveColumn(System.Int32)">
      <summary>Removes a column at the specified position.</summary>
      <param name="column">Index of column to remove</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column is out of range; must be between 0 and total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes one or more columns starting with the column at the specified position.</summary>
      <param name="column">Index of first column to remove</param>
      <param name="count">Number of columns to remove</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified column is out of range; must be between 0 and total number of columns </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of columns is out of range; must be between 1 and total number of columns beyond the specified starting column </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveCustomFunction(System.String)">
      <summary>Removes a user-defined custom function from the model.</summary>
      <param name="name">Name of the user-defined custom function to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveCustomName(System.String)">
      <summary>Removes a named expression from the model.</summary>
      <param name="name">User-defined custom name to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveModelScopeCustomName(System.String)">
      <summary>Removes a custom name in the model scope.</summary>
      <param name="name">Name of the custom name to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveRow(System.Int32)">
      <summary>Removes a row at the specified position.</summary>
      <param name="row">Index of row to remove</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row is out of range; must be between 0 and total number of rows </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes one or more rows, starting with the specified row.</summary>
      <param name="row">Index of first row to remove</param>
      <param name="count">Number of rows to remove</param>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified row is out of range; must be between 0 and total number of rows </exception>
      <exception cref="T:System.ArgumentOutOfRangeException"> Specified number of rows is out of range; must be between 1 and total number of rows beyond the specified starting row </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ResumeFormulaParsing">
      <summary>Resumes parsing of formulas and parses all formulas set while parsing was suspended.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Serialize(System.Xml.XmlTextWriter,System.Boolean)">
      <summary>Saves the object to XML and specifies whether to save the data source and bound data.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
      <param name="saveDataSource">Whether to save the data source and bound data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetAggregationType(System.Int32,FarPoint.Win.Spread.Model.AggregationType)">
      <summary>Sets the AggregationType, as an enumeration value, at the specified column. If you pass null, it clears the AggregationType from that column.</summary>
      <param name="column">Column index</param>
      <param name="value">AggregationType to be set, as an enumeration value</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:FarPoint.Win.Spread.Model.ParseException"> Specified value is not a valid AggregationType </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="value">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetArray(System.Int32,System.Int32,System.Object[0:,0:],System.Boolean)">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="value">Two-dimensional object array[row,column] that contains the values</param>
      <param name="formula">If true, set formulas; otherwise, set values.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetArray(System.Int32,System.Int32,System.Object[0:,0:],System.Boolean,FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="value">Two-dimensional object array[row,column] that contains the values</param>
      <param name="formula">If true, set formulas; otherwise, set values.</param>
      <param name="referenceStyle">The reference style of formulas</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetCellErrorText(System.Int32,System.Int32,System.String)">
      <summary>Sets a user-defined note value for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell in the model</param>
      <param name="column">Column index of cell in the model</param>
      <param name="value">Note value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetCustomNameComment(System.String,System.String)">
      <summary>Sets a comment for a common custom name.</summary>
      <param name="name">Name of the custom name</param>
      <param name="comment">Comment of the custom name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Sets the formula, as an expression value, for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be set as an expression</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetFormula(System.Int32,System.Int32,System.String)">
      <summary>Sets the formula, as a string value, for the cell of the specified row and column. If you pass null, it clears the expression from that cell.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be set, as a string</param>
      <exception cref="T:FarPoint.Win.Spread.Model.ParseException"> Specified value is not a valid formula </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetModelDataColumn(System.Int32,System.String)">
      <summary>Binds a model column to a specified data source column.</summary>
      <param name="column">Index of column in the model</param>
      <param name="columnName">Name of the data source column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetModelDataColumn(System.Int32,System.Int32)">
      <summary>Binds the model column to a specified data source column.</summary>
      <param name="column">Column index in the model</param>
      <param name="value">Data source column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetModelScopeCustomNameComment(System.String,System.String)">
      <summary>Sets a custom name comment.</summary>
      <param name="name">The name of the custom name to set</param>
      <param name="comment">The comment for the custom name</param>
      <returns>true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetNote(System.Int32,System.Int32,System.String)">
      <summary>Sets a user-defined note value for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell in the model</param>
      <param name="column">Column index of cell in the model</param>
      <param name="value">Note value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetRowErrorText(System.Int32,System.String)">
      <summary>Internal method to set row expression without triggering auto calculation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetTag(System.Int32,System.Int32,System.Object)">
      <summary>Sets an application-defined tag value for the cell of the specified row and column.</summary>
      <param name="row">Row index of cell in model</param>
      <param name="column">Column index of cell in model</param>
      <param name="value">Value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the value for the cell of the specified row and column.</summary>
      <param name="row">Row index of cell in model</param>
      <param name="column">Column index of cell in model</param>
      <param name="value">Value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.SuspendFormulaParsing">
      <summary>Suspends parsing of formulas.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps the specified ranges of cells.</summary>
      <param name="fromRow">Row index of starting position of range to move</param>
      <param name="fromColumn">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <exception cref="T:System.ArgumentException"> Specified starting and ending row or row count is not valid </exception>
      <exception cref="T:System.ArgumentException"> Specified starting and ending column or column count is not valid </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.UnparseFormula(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Gets the formula, as a string value, from the specified expression for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="expression">Expression to be unparsed</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.Aggregate">
      <summary>Occurs when the data model aggregates.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CellErrorTextChanged">
      <summary>Occurs when the user makes a change to the model that affects the data of the sheet.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CustomNameChanged">
      <summary>Occurs when the custom name of the data model changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NameChanged">
      <summary>Occurs when the name of the data model changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.NameChanging">
      <summary>Occurs when the name of the data model is changing.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.ReferenceStyleChanged">
      <summary>Occurs when the reference style of the data model changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowErrorTextChanged">
      <summary>Occurs when the user makes a change to the model that affects the data of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CellEventArgs">
      <summary>/// Provides data for the Cell event of the FpSpread control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CellEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CellEventArgs" /> class.</summary>
      <param name="columnIndex">Column index</param>
      <param name="rowIndex">Row index</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CellEventArgs.ColumnIndex">
      <summary>Index of the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.CellEventArgs.RowIndex">
      <summary>Index of the row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DefaultSheetDataModelEnumerator">
      <summary>Internal use only. Represents the object enumerator for the default sheet data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DefaultSheetDataModelEnumerator.#ctor(FarPoint.Win.Spread.Model.DefaultSheetDataModel,FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType)">
      <summary>Internal use only. Creates a new default sheet data model enumerator.</summary>
      <param name="model">Sheet data model</param>
      <param name="type">Enumerator type</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DefaultSheetDataModelEnumerator.IsRowUsed(System.Int32)">
      <summary>Determines whether the specified row is not empty.</summary>
      <param name="row">Index of row to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DefaultSheetDataModelEnumerator.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row that contains data.</summary>
      <param name="row">Row index to search</param>
      <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DefaultSheetDataModelEnumerator.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next non-empty row after the specified row index.</summary>
      <param name="row">Row index to start searching after (-1 to start at row 0)</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowEventArgs">
      <summary>Provides data for the Row event of the FpSpread control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowEventArgs.#ctor(System.Int32)">
      <summary>Creates a new instance of <see cref="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowEventArgs" /> class.</summary>
      <param name="rowIndex">Row index</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetDataModel.RowEventArgs.RowIndex">
      <summary>Index of the row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel">
      <summary>Represents the full (concrete) implementation of the ISheetSelectionModel interface for a selection model for a sheet, which represents cell selections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.#ctor">
      <summary>Creates a default selection model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a default selection model with data from the specified serialization and stream objects.</summary>
      <param name="info">Data needed to serialize or deserialize an object</param>
      <param name="context">Source and destination of a given serialized stream</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.AnchorColumn">
      <summary>Gets the column index of the first cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.AnchorRow">
      <summary>Gets the row index of the first cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Count">
      <summary>Gets the number of selections.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Item(System.Int32)">
      <summary>Gets an item in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.LeadColumn">
      <summary>Gets the column index of the farthest cell of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.LeadRow">
      <summary>Gets the row index of the farthest cell of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SelectionPolicy">
      <summary>Gets or sets whether users can select ranges of items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SelectionUnit">
      <summary>Gets or sets whether users can select cells, rows, or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell or cells to the selection.</summary>
      <param name="row">Row index of the first cell to add</param>
      <param name="column">Column index of the first cell to add</param>
      <param name="rowCount">Number of rows to add</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.ClearSelection">
      <summary>Removes the selection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the selection from XML.</summary>
      <param name="r">XmlNodeReader object from which to load the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.ExtendSelection(System.Int32,System.Int32)">
      <summary>Specifies the extent (or farthest cell) in the selection of cells.</summary>
      <param name="extendRow">Row index of the farthest cell in the selection</param>
      <param name="extendColumn">Column index of the farthest cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the selections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetExtendedSelection(System.Int32,System.Int32)">
      <summary>Gets the cell range that would be selected if you extended the current selection to the specified row and column indexes.</summary>
      <param name="extendRow">Row index to which to extend the selection</param>
      <param name="extendColumn">Column index to which to extend the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the default selection model to the SerializationInfo object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.GetSelections(System.Int32,System.Int32)">
      <summary>Returns an ordered array of CellRange objects, from largest to smallest, containing the selected cells with minimal overlap between the ranges.</summary>
      <param name="rowCount">Specifies the number of rows in the sheet in which to look</param>
      <param name="columnCount">Specifies the number of columns in the sheet in which to look</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsAnyCellInColumnSelected(System.Int32)">
      <summary>Determines whether any cell in a specified column is in the selection.</summary>
      <param name="column">Column to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsAnyCellInRowSelected(System.Int32)">
      <summary>Determines whether any cell in a specified row is in the selection.</summary>
      <param name="row">Row to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsEmpty">
      <summary>Determines whether the model has no selections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.IsSelected(System.Int32,System.Int32)">
      <summary>Determines whether the specified cell is in the selection.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes the specified selection range from the selection list, if one exists.</summary>
      <param name="row">Row index of the cell at which to start</param>
      <param name="column">Column index of the cell at which to start</param>
      <param name="rowCount">Number of rows to deselect</param>
      <param name="columnCount">Number of columns to deselect</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves a selection to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SetAnchor(System.Int32,System.Int32)">
      <summary>Specifies the anchor (or first cell) in the selection of cells.</summary>
      <param name="row">Row index of the first cell in the selection</param>
      <param name="column">Column index of the first cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSelectionModel.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Selects the cells in the specified range.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
      <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetSpanModel">
      <summary>Represents the full (concrete) implementation of the ISheetSpanModel interface for a span model for a sheet, which represents cell spans.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.#ctor">
      <summary>Creates a default span model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a default span model from deserialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="c">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Importing">
      <summary>Indicates that the importing excel logic is occurring.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell span to the collection.</summary>
      <param name="row">Row index of cell at which to start span</param>
      <param name="column">Column index of cell at which to start span</param>
      <param name="rowCount">Number of rows in span</param>
      <param name="columnCount">Number of columns in span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Clear">
      <summary>Removes all cell spans from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes cell spans from the collection within the specified area.</summary>
      <param name="row">Row index from which to start clearing cell spans</param>
      <param name="column">Column index from which to start clearing cell spans</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies a cell span and pastes it at the specified location.</summary>
      <param name="fromRow">Row index from which to begin copying</param>
      <param name="fromColumn">Column index from which to begin copying</param>
      <param name="toRow">Row index at which to paste the cell span</param>
      <param name="toColumn">Column index at which to paste the cell span</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.CopyColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Copies columns and pastes them at the specified location.</summary>
      <param name="fromColumn">Column index at which to start copying</param>
      <param name="toColumn">Column index at which to paste columns</param>
      <param name="count">Number of columns to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.CopyRows(System.Int32,System.Int32,System.Int32)">
      <summary>Copies rows and pastes them at the specified location.</summary>
      <param name="fromRow">Row index at which to start copying</param>
      <param name="toRow">Row index at which to paste columns</param>
      <param name="count">Number of rows to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the span object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Find(System.Int32,System.Int32)">
      <summary>Finds the cell span in the collection that includes the cell at specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.GetEnumerator(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets an enumerator for iterating to the next cell span in the collection after the specified span.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in span</param>
      <param name="columnCount">Number of columns in span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.GetEnumerator">
      <summary>Gets an enumerator for iterating to the next cell span in the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the SerializationInfo class with information about the default sheet span model settings.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contextual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.IsEmpty">
      <summary>Determines whether the model is empty of cell spans.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves a cell span and pastes it at the specified location.</summary>
      <param name="fromRow">Row index from which to begin the move</param>
      <param name="fromColumn">Column index from which to begin the move</param>
      <param name="toRow">Row index at which to paste the cell span</param>
      <param name="toColumn">Column index at which to paste the cell span</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.MoveColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Moves columns and pastes them at the specified location.</summary>
      <param name="fromColumn">Column index at which to start the move</param>
      <param name="toColumn">Column index at which to paste columns</param>
      <param name="count">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.MoveRows(System.Int32,System.Int32,System.Int32)">
      <summary>Moves rows and pastes them at the specified location.</summary>
      <param name="fromRow">Row index at which to start the move</param>
      <param name="toRow">Row index at which to paste rows</param>
      <param name="count">Number of rows to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Remove(System.Int32,System.Int32)">
      <summary>Removes all cell spans in the collection that include the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the span object to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps cell spans.</summary>
      <param name="fromRow">Row index from which to begin swap</param>
      <param name="fromColumn">Column index from which to begin swap</param>
      <param name="toRow">Row index at which to get cell span to swap</param>
      <param name="toColumn">Column index at which to get cell span to swap</param>
      <param name="rowCount">Number of rows to swap</param>
      <param name="columnCount">Number of columns to swap</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.SwapColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Swaps a range of columns with another range of columns.</summary>
      <param name="fromColumn">Column index at which to start swap</param>
      <param name="toColumn">Column index at which to swap columns</param>
      <param name="count">Number of columns to swap</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.SwapRows(System.Int32,System.Int32,System.Int32)">
      <summary>Swaps a range of rows with another range of rows.</summary>
      <param name="fromRow">Row index at which to start swap</param>
      <param name="toRow">Row index at which to swap rows</param>
      <param name="count">Number of rows to swap</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.DefaultSheetSpanModel.Changing">
      <summary>Occurs when the user makes a change to the model that affects the span of cells of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetStyleModel">
      <summary>Represents the full (concrete) implementation of the ISheetSpanModel interface for a style model for a sheet, which represents cell styles.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor">
      <summary>Creates a style model (DefaultSheetStyleModel object) with 0 rows, 0 columns, no parent style model, and a private named styles collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32)">
      <summary>Creates a style model (DefaultSheetStyle model object) with the specified number of rows and columns.</summary>
      <param name="rowCount">Number of rows in the model</param>
      <param name="columnCount">Number of columns in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyleCollection)">
      <summary>Creates a style model (DefaultSheetStyle model object) with the specified number of rows and columns and named styles collection.</summary>
      <param name="rowCount">Number of rows in the model</param>
      <param name="columnCount">Number of columns in the model</param>
      <param name="namedStyles">NamedStyleCollection collection for the style model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ISheetStyleModel)">
      <summary>Creates a style model (DefaultSheetStyle model object) with the specified parent style model and number of rows and columns.</summary>
      <param name="rowCount">Number of rows in the model</param>
      <param name="columnCount">Number of columns in the model</param>
      <param name="parent">Parent style model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ISheetStyleModel,FarPoint.Win.Spread.NamedStyleCollection)">
      <summary>Creates a style model (DefaultSheetStyle model object) with the specified parent style model, named styles collection, and number of rows and columns.</summary>
      <param name="rowCount">Number of rows in the model</param>
      <param name="columnCount">Number of columns in the model</param>
      <param name="parent">Parent style model</param>
      <param name="namedStyles">NamedStyleCollection collection for the style model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new default sheet style model from deserialization.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contextual information about the source of the deserialization</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.AltRowCount">
      <summary>Gets or sets the number of alternating rows in the style model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.CanSerializeXml">
      <summary>Gets whether the object in its entirety can be rendered with XML without losing any information.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ColumnCount">
      <summary>Gets the number of columns in the style model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NamedStyles">
      <summary>Gets or sets the named styles collection for the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NonEmptyColumnCount">
      <summary>Gets the number of columns in the model that contain style settings.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NonEmptyRowCount">
      <summary>Gets the number of rows in the model that contain style settings.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Parent">
      <summary>Gets or sets the parent style model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.RowCount">
      <summary>Gets the number of rows in the style model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all of the direct styles from the specified range.</summary>
      <param name="row">Starting model row index to clear</param>
      <param name="column">Starting model column index to clear</param>
      <param name="rowCount">Number of rows to clear</param>
      <param name="columnCount">Number of columns to clear</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ClearConditionalFormats(System.Int32,System.Int32)">
      <summary>Removes all of the conditional formats from the cell at the specified row and column in the model.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ClearFilterRowFormats">
      <summary>Removes all of the formats for the filtered row in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatInvalidateCell(System.Int32,System.Int32)">
      <summary>Invalidates the cell at the specified row and column for conditional formatting.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatInvalidateColumn(System.Int32)">
      <summary>Invalidates the specified column for conditional formatting.</summary>
      <param name="column">Column index</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatInvalidateRow(System.Int32)">
      <summary>Invalidates the specified row for conditional formatting.</summary>
      <param name="row">Row index</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatIsRowUsed(System.Int32)">
      <summary>Gets whether the row in the model contains style settings.</summary>
      <param name="row">Row index</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.ConditionalFormatNextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Returns the index of the next non-empty column in a row in the model.</summary>
      <param name="row">Row index to search</param>
      <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies the direct styles from one specified range of cells to another.</summary>
      <param name="fromRow">Row index of cell from which to begin copying</param>
      <param name="fromColumn">Column index of cell from which to begin copying</param>
      <param name="toRow">Row index at which to paste cell styles</param>
      <param name="toColumn">Column index at which to paste cell styles</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets an object array from a specified range of cells in the model.</summary>
      <param name="row">Index of the starting row in the model</param>
      <param name="column">Index of the starting column in the model</param>
      <param name="rowCount">Number of rows in the model to copy</param>
      <param name="columnCount">Number of columns in the model to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetCellConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
      <summary>Gets the conditional formats for the cells starting at the specified row and column in the model.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="findNext">Whether to continue to find cells with conditional formats</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetColumnConditionalFormats(System.Int32@,System.Boolean)">
      <summary>Gets the conditional formats for the columns starting at the specified column in the model.</summary>
      <param name="column">Column index of the first cell</param>
      <param name="findNext">Whether to continue to find cells with conditional formats</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the composite style for the specified cell, column, row, or model default.</summary>
      <param name="row">Model row index of the cell, or -1 to specify a column or model default</param>
      <param name="column">Model column index of the cell, or -1 to specify a row or model default</param>
      <param name="altIndex">Alternating row index of the cell, or -1 to skip composing any alternating style</param>
      <param name="destInfo">Specifies a StyleInfo object to use for composing the styles</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is not valid; must be between 0 and the total number of styles </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetConditionalFormats">
      <summary>Returns all conditional formats.</summary>
      <returns>Returns all conditional formats</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetConditionalFormats(System.Int32,System.Int32)">
      <summary>Gets the conditional formats for the cell at the specified row and column in the model.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetConditionalFormats(System.Int32@,System.Int32@,System.Boolean)">
      <summary>Gets the conditional formats for the cells starting at the specified row and column in the model.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="findNext">Whether to continue to find cells with conditional formats</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the specified alternating row style in the model.</summary>
      <param name="index">Index of the alternating row style to get</param>
      <param name="destInfo">StyleInfo object to use for composing the styles</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified style index is not valid; must be between 0 and the total number of styles </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectAltRowName(System.Int32)">
      <summary>Gets the style name for an alternating row style.</summary>
      <param name="index">Index of the alternating row style to set</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is not valid; must be between 0 and the total number of styles </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the direct style for the specified cell, column, row, or model default.</summary>
      <param name="row">Model row index of the cell, or -1 to specify a column or model default</param>
      <param name="column">Model column index of the cell, or -1 to specify a row or model default</param>
      <param name="destInfo">StyleInfo object to use for getting the style</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetDirectName(System.Int32,System.Int32)">
      <summary>Gets the name of the direct style assigned to a cell, column, row, or model default.</summary>
      <param name="row">Model row index of the cell, or -1 to specify a column or model default</param>
      <param name="column">Model column index of the cell, or -1 to specify a row or model default</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets information about the default sheet style model.</summary>
      <param name="info">Object that holds the serialized object data</param>
      <param name="context">Contextual information about the source or destination of the serialization</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetParseFormat(System.Int32,System.Int32,System.String@,System.IFormatProvider@)">
      <summary>Gets the parse format for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="formatString">Format string</param>
      <param name="info">IFormatProvider to handle the formatting</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetRowConditionalFormats(System.Int32@,System.Boolean)">
      <summary>Gets the conditional formats for the rows starting at the specified row in the model.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="findNext">Whether to continue to find cells with conditional formats</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.GetValidConditionalFormat(System.Int32,System.Int32,System.Object,FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Returns the style information for the first valid condition for the cell at the specified row and column in the model.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="value">Object that contains the cell value</param>
      <param name="dm">ISheetDataModel object that contains the sheet data model</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.HaveOldConditionalFormat">
      <summary>Checks for the existance of conditional formats (old style) in Sheetview. This function is for internal use only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.IsEmpty">
      <summary>Determines whether the model is empty of data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.IsRowUsed(System.Int32)">
      <summary>Determines whether the row in the model contains style settings.</summary>
      <param name="row">Index of row in the model</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves the specified range of direct styles from one location to another.</summary>
      <param name="fromRow">Row index from which to begin the move</param>
      <param name="fromColumn">Column index from which to begin the move</param>
      <param name="toRow">Row index at which to paste cell styles</param>
      <param name="toColumn">Column index at which to paste cell styles</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row in the model that contains style settings.</summary>
      <param name="row">Index of row in the model to search</param>
      <param name="column">Index of column in the model before the column to start searching (-1 to start at column 0)</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next row that contains a style setting in the model.</summary>
      <param name="row">Row index to start searching after (-1 to start at row 0)</param>
      <returns>Row index of next non-empty row</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.RemoveFilterRowFormats(System.Int32)">
      <summary>Removes the filtered row formats from the style model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>Sets an object array into a specified range of cells in the model.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="value">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String)">
      <summary>Sets a conditional format for a cell in the model with the specified value.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the specified value</param>
      <param name="value">String with the specified value</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat)">
      <summary>SetConditionalFormat - internal use!</summary>
      <param name="row" />
      <param name="column" />
      <param name="cf" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat[])">
      <summary>Sets conditional format(s) for the cell at the specified row and column.</summary>
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="conditionalFormats">Conditional format(s)</param>
      <returns>Whether the conditional format is set.</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,System.String,System.String)">
      <summary>Sets a conditional format for a cell in the model with the specified values.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the parameter values</param>
      <param name="firstCondition">First specified value</param>
      <param name="lastCondition">Last specified value</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentNullException">No condition is specified or specified condition is empty</exception>
      <exception cref="T:System.ArgumentException">Specified condition is not valid; must be a string</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression)">
      <summary>Sets a conditional format for a cell in the model with the specified expressions.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="style">Style to be applied to the cell if the condition is satisfied</param>
      <param name="op">Comparison operator to apply to the cell value and the specified value</param>
      <param name="firstCondition">First specified expression</param>
      <param name="lastCondition">Last specified expression</param>
      <remarks>This method is deprecated</remarks>
      <exception cref="T:System.ArgumentNullException"> No condition is specified or specified condition is empty </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the specified alternating row style in the model.</summary>
      <param name="index">Index of the alternating row style to set</param>
      <param name="info">Style object set</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified style index is not valid; must be between 0 and the total number of styles </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectAltRowName(System.Int32,System.String)">
      <summary>Sets the name of the specified alternating row style in the model to the specified named style.</summary>
      <param name="index">Index of the alternating row style to set</param>
      <param name="styleName">Name of the style to set</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is not valid; must be between 0 and the total number of styles </exception>
      <exception cref="T:System.ArgumentNullException">No style is specified or specified style is null</exception>
      <exception cref="T:System.ArgumentException">No style is specified or specified style is empty</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the direct style for the specified cell, column, row, or model default.</summary>
      <param name="row">Model row index of the cell, or -1 to specify a column or model default</param>
      <param name="column">Model column index of the cell, or -1 to specify a row or model default</param>
      <param name="info">Style object set (StyleInfo or NamedStyle)</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetDirectName(System.Int32,System.Int32,System.String)">
      <summary>Sets the name of the direct style for the specified cell, column, row, or model default to the specified style name.</summary>
      <param name="row">Model row index of the cell, or -1 to specify a column or model default</param>
      <param name="column">Model column index of the cell, or -1 to specify a row or model default</param>
      <param name="styleName">Name of the style to set</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetFilteredRowFormat(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the format for the filtered row in the model.</summary>
      <param name="row">Index of the row in the model</param>
      <param name="style">Style information that defines the format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetFormulaConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.NamedStyle,System.String)">
      <summary>Sets a formula conditional format for a cell in the model.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="style">Style to be applied to the cell if the formula evaluates to true</param>
      <param name="formula">Formula to evaluate for the condition</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.SetParseFormat(System.Int32,System.Int32,System.String,System.IFormatProvider)">
      <summary>Sets the parse format for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="formatString">Format string</param>
      <param name="info">IFormatProvider to handle the formatting</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified row index is not valid; must be between -1 and the total number of rows </exception>
      <exception cref="T:System.IndexOutOfRangeException"> Specified column index is not valid; must be between -1 and the total number of columns </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps the direct styles in the specified range with the direct styles from another specified range.</summary>
      <param name="fromRow">Row index of first cell from which to begin swap</param>
      <param name="fromColumn">Column index of first cell from which to begin swap</param>
      <param name="toRow">Row index of first cell of destination of the swap</param>
      <param name="toColumn">Column index of first cell of destination of the swap</param>
      <param name="rowCount">Number of rows to swap</param>
      <param name="columnCount">Number of columns to swap</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.DefaultSheetStyleModel.UnshareConditionalFormatCalculations(System.String,FarPoint.Win.Spread.Model.DefaultSheetDataModel)">
      <summary>Unshare calculations</summary>
      <param name="SheetName" />
      <param name="dataModel" />
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.FormulaDependentInfos">
      <summary>Represents the result which contains the information of all dependent formula containers in a sheetview that have formula references to cells in a cell range or a table.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.#ctor(System.String)">
      <summary>Represents the FormulaDependentInfos constructor.</summary>
      <param name="modelName">Sheetview's name.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.DependentCells">
      <summary>Gets the collection of dependent cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.DependentColumns">
      <summary>Gets the collection of dependent columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.DependentCommonNames">
      <summary>Gets a list of dependent common names.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.DependentObjects">
      <summary>Gets the dictionary of dependent epression consumer objects. Each dependent epression consumer object has a corresponding boolean array that indicates if the formulas of that object refer to cells in a cell range or a table.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.DependentRows">
      <summary>Gets the collection of dependent rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.DependentScopeNames">
      <summary>Gets a list of dependent scope names.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.FormulaDependentInfos.ModelName">
      <summary>Gets the sheetview's name.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddCell(System.Int32,System.Int32)">
      <summary>Adds a dependent cell.</summary>
      <param name="row">Cell's row index.</param>
      <param name="column">Cell's column index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddColumn(System.Int32)">
      <summary>Adds a dependent column.</summary>
      <param name="column">Column index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddCommonName(System.String)">
      <summary>Adds a common name.</summary>
      <param name="name">The name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddObject(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Int32)">
      <summary>Adds a specified index of the dependent expression consumer object.</summary>
      <param name="consumer">The dependent expression consumer object.</param>
      <param name="formulaIndex">The formula index of the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddObject(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Boolean[])">
      <summary>Adds a dependent expression consumer object.</summary>
      <param name="consumer">The dependent expression consumer object.</param>
      <param name="dependents">The boolean array that indicates if the formulas of that object refer to cells in a cell range or a table.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddRow(System.Int32)">
      <summary>Adds a dependent row.</summary>
      <param name="row">Row index.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.AddScopeName(System.String)">
      <summary>Adds a scope name.</summary>
      <param name="name">The name</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.GeneralFormatter">
      <summary>Represents the formatter object for parsing and formatting values for the general cell type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor">
      <summary>Creates a new formatter with null FormatString and default NumberFormatInfo and DateTimeFormatInfo (copied from the current culture).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.String,System.Boolean)">
      <summary>Creates a new formatter with the specified format and default formatting information (copied from the current culture).</summary>
      <param name="formatString">String with format information</param>
      <param name="isDateFormat">Whether to consider the number as a date and format it as such</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.GeneralFormatter" /> class.</summary>
      <param name="formatString">The format string.</param>
      <param name="isDateFormat">if set to <c>true</c> [is date format].</param>
      <param name="chartMode">if set to <c>true</c> [chart mode].</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.String,System.IFormatProvider)">
      <summary>Creates a new formatter with the specified format and formatting information (copied from the current culture).</summary>
      <param name="formatString">String with format information</param>
      <param name="formatInfo">IFormatProvider interface with number and date-time format information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new formatter from serialization.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.DateTimeFormat">
      <summary>Gets or sets the format for displaying dates and times.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.FormatString">
      <summary>Gets or sets the format string used to format the date value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.IsDateFormat">
      <summary>Gets whether the format string being used is a date-time format string.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GeneralFormatter.NumberFormat">
      <summary>Gets or sets the format for displaying currency values.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.Format(System.Object)">
      <summary>Formats the object to a string.</summary>
      <param name="obj">Object to format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the formatter to the SerializationInfo object.</summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.Parse(System.String)">
      <summary>Parses the string to an object and returns the result.</summary>
      <param name="s">String to be parsed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.Parse(System.String,System.IFormatProvider@,System.String@)">
      <summary>Parses the string to an object and returns the result.</summary>
      <param name="s">String</param>
      <param name="formatInfo">IFormatProvider</param>
      <param name="formatString">String</param>
      <returns>Results of the parsing</returns>
      <exception cref="T:FarPoint.Win.Spread.Model.ParseException">Not a valid hexidecimal number.</exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GeneralFormatter.SetFormatString(System.String,System.Boolean)">
      <summary>Sets the format string used to format values.</summary>
      <param name="value">Format string</param>
      <param name="isDateFormat">Whether to consider a number as a date and time</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.Group">
      <summary>Represents the group of rows for the grouping display (also called Outlook-style grouping).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Group.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.Group" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Group.#ctor(FarPoint.Win.Spread.Model.GroupDataModel,FarPoint.Win.Spread.Model.Group,System.Int32,System.Boolean)">
      <summary>Creates a new group of rows with the specified display settings.</summary>
      <param name="target">Group data model target</param>
      <param name="parent">Group parent</param>
      <param name="column">Column index</param>
      <param name="ascending">Whether items are shown in ascending order</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Group.#ctor(FarPoint.Win.Spread.Model.GroupDataModel,FarPoint.Win.Spread.Model.Group,System.String,System.Int32,System.Boolean)">
      <summary>Creates a new group of rows with the specified diplay settings and the specified text.</summary>
      <param name="target">Group data model target</param>
      <param name="parent">Group parent</param>
      <param name="text">Text string to display</param>
      <param name="column">Column index</param>
      <param name="ascending">Whether items are shown in ascending order</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Ascending">
      <summary>Gets whether the rows in the group are displayed in ascending order.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Column">
      <summary>Gets the index of the column by which to perform the grouping.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Expanded">
      <summary>Gets or sets whether the rows in the group are expanded.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.GroupFooter">
      <summary>Gets and sets the group footer that corresponds with this group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Parent">
      <summary>Gets the parent of the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Rows">
      <summary>Gets the array of rows in the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Target">
      <summary>Gets the data model of this group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Group.Text">
      <summary>Gets or sets the text string for the group.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.GroupDataModel">
      <summary>Represents the group data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.#ctor">
      <summary>Creates a new group data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Creates a new group data model for the specified sheet data model.</summary>
      <param name="model">Sheet data model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.#ctor(FarPoint.Win.Spread.Model.ISheetDataModel,System.Boolean,FarPoint.Win.Spread.DefaultGroupFooterCollection)">
      <summary>Creates a new group data model for the specified sheet data model.</summary>
      <param name="model">Sheet data model</param>
      <param name="groupFooterVisible">Determines whether group footers are displayed</param>
      <param name="defaultGroupFooter">Default setting for group footers</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.CanSerializeXml">
      <summary>Gets whether the entire object can be saved to XML and successfully loaded again.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.ColumnCount">
      <summary>Gets the number of columns in the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.GroupComparer">
      <summary>Gets the group comparer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.GroupFooterVisible">
      <summary>Gets or sets whether the group footer is displayed.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.Groups">
      <summary>Gets the list of top-level group objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.NonEmptyColumnCount">
      <summary>Gets the number of columns in the model that contain data (bound or unbound).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.NonEmptyRowCount">
      <summary>Gets the number of rows in the model that contain data (bound or unbound).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.RowCount">
      <summary>Gets the number of rows in the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.SortInfo">
      <summary>Gets the sorting information for the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.SuspendGrouping">
      <summary>Gets or sets whether the grouping is suspended.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupDataModel.TargetModel">
      <summary>Gets the sheet data model for the group target.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.Deserialize(System.Xml.XmlNodeReader)">
      <summary>Loads the object from XML.</summary>
      <param name="r">XmlNodeReader from which to load the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.Dispose">
      <summary>Disposes this object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.FireChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.FireChanged(System.Int32,System.Int32)">
      <summary>Raises the Changed event.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetColumnName(System.Int32)">
      <summary>Gets the name of the specified column in the group.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetGroup(System.Int32)">
      <summary>Gets the group associated with the specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetGroupFooter(System.Int32)">
      <summary>Gets a group footer for a specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetIndex(System.Int32)">
      <summary>Gets the model index of the group data model from the specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetItem(System.Int32)">
      <summary>Gets the item in the specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetModelIndexFromTargetIndex(System.Int32)">
      <summary>Gets the group data model index from the target index.</summary>
      <param name="row">Row index</param>
      <returns>The model index</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetNote(System.Int32,System.Int32)">
      <summary>Gets a user-defined note value for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetTag(System.Int32,System.Int32)">
      <summary>Gets an application-defined tag value for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value from the cell in the group.</summary>
      <param name="row">Row index of the cell</param>
      <param name="col">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.Group(FarPoint.Win.Spread.SortInfo[])">
      <summary>Groups the rows with the specified sort information.</summary>
      <param name="sortInfo">Sort information</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.Group(FarPoint.Win.Spread.SortInfo[],System.Collections.IComparer)">
      <summary>Groups the rows with the specified sort information and specified comparer.</summary>
      <param name="sortInfo">Sort information</param>
      <param name="groupComparer">Comparer</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.IsEditable(System.Int32,System.Int32)">
      <summary>Determines whether the cell in the group is editable.</summary>
      <param name="row">Row index of the cell</param>
      <param name="col">Column index of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.IsEmpty">
      <summary>Determines whether the data model is empty.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.IsGroup(System.Int32)">
      <summary>Determines whether the specified row is a group header (also called group node).</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.IsGroupFooter(System.Int32)">
      <summary>Determines if the specified row is a group footer.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.IsRowUsed(System.Int32)">
      <summary>Determines whether the specified row has data (is not empty).</summary>
      <param name="row">Index of row to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Gets the index of the next column in a specified row that contains data.</summary>
      <param name="row">Row index to search</param>
      <param name="column">Column index before the column to start searching (-1 to start at column 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.NextNonEmptyRow(System.Int32)">
      <summary>Gets the index of the next row that contains data.</summary>
      <param name="row">Row index after which to start searching (-1 to start at row 0)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.OnChanged(FarPoint.Win.Spread.Model.SheetDataModelEventArgs)">
      <summary>Raises the Changed event, and permits derived classes to handle the event without attaching a delegate.</summary>
      <param name="e">SheetDataModelEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.OnDeserialization(System.Object)">
      <summary>Runs when the entire object graph has been deserialized.</summary>
      <param name="sender">The object that initiated the callback.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.OnMapperUpdating(FarPoint.Win.Spread.Model.MapperUpdatingEventArgs)">
      <summary>Raises the mapper updating event.</summary>
      <param name="e">SheetDataModelEventArgs object that contains event data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.Serialize(System.Xml.XmlTextWriter)">
      <summary>Saves the object to XML.</summary>
      <param name="w">XmlTextWriter object to which to save the object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.SetNote(System.Int32,System.Int32,System.String)">
      <summary>Sets a user-defined note value for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="value">Note value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.SetTag(System.Int32,System.Int32,System.Object)">
      <summary>Sets an application-defined tag value for the cell of the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="value">Tag value to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the value of the cell in the group.</summary>
      <param name="row">Row index of the cell</param>
      <param name="col">Column index of the cell</param>
      <param name="value">Value to assign to the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupDataModel.Sort(FarPoint.Win.Spread.SortInfo[])">
      <summary>Sorts the rows (after the Grouped event) according to the specified sorting information.</summary>
      <param name="sortInfo">Sort information</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.GroupDataModel.MapperUpdating">
      <summary>Occurs when the user makes a change to the target model that causes the mapper to be updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.GroupFooter">
      <summary>Represents the group footer of rows in the grouping display (also called Outlook-style grouping).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupFooter.#ctor">
      <summary>Constructor of the GroupFooter object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.GroupFooter.#ctor(FarPoint.Win.Spread.Model.Group)">
      <summary>Constructor of the GroupFooter object.</summary>
      <param name="group">Group corresponds with GroupFooter</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupFooter.DataModel">
      <summary>Gets or sets the data model for the group footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.GroupFooter.Group">
      <summary>Gets and sets the group that corresponds with this group footer.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.GroupFooter.changed">
      <summary>Occurs when the user makes a change to the group footer that affects the data of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.InvalidExternalReferenceParseException">
      <summary>Represents the exception that is thrown when an error is encountered which is caused by an invalid external reference during the parsing of a text representation of an expression.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidExternalReferenceParseException.#ctor">
      <summary>Constructs a new instance of the InvalidExternalReferenceParseException class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidExternalReferenceParseException.#ctor(System.String)">
      <summary>Constructs a new instance of the InvalidExternalReferenceParseException class with the specified message.</summary>
      <param name="message">Message that describes this exception</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidExternalReferenceParseException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the InvalidExternalReferenceParseException class with the specified message and inner exception.</summary>
      <param name="message">Message that describes this exception</param>
      <param name="innerException">Earlier exception that causes this exception</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidExternalReferenceParseException.#ctor(System.String,System.Int32)">
      <summary>Constructs a new instance of the InvalidExternalReferenceParseException class with the specified message and offset.</summary>
      <param name="message">Message that describes this exception</param>
      <param name="errorOffset">Position where the error is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidExternalReferenceParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the ParseException class with serialized data.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.InvalidNameException">
      <summary>/// Represents the exception that is thrown when an error is encountered.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidNameException.#ctor">
      <summary>Constructs a new instance of the InvalidNameException class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidNameException.#ctor(System.String)">
      <summary>Constructs a new instance of the InvalidNameException class with the specified message.</summary>
      <param name="message">Message that describes this exception</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidNameException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the InvalidNameException class with the specified message and inner exception.</summary>
      <param name="message">Message that describes this exception</param>
      <param name="innerException">Earlier exception that causes this exception</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.InvalidNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the InvalidNameException class with serialized data.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs">
      <summary>Represents the event data for the mapper updating event of the mapper.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.MapperUpdatingEventType)">
      <summary>Creates a new Changed event arguments object for the data model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="type">Type of change that occurred in the data model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs.Column">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs.Row">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.MapperUpdatingEventArgs.Type">
      <summary>Gets the event type.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ParseException">
      <summary>Represents the exception that is thrown when an error is encountered during the parsing of a text representation of an expression.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor">
      <summary>Constructs a new instance of the ParseException class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.String)">
      <summary>Constructs a new instance of the ParseException class with the specified message.</summary>
      <param name="message">Message that describes this exception</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.String,System.Exception)">
      <summary>Constructs a new instance of the ParseException class with the specified message and inner exception.</summary>
      <param name="message">Message that describes this exception</param>
      <param name="innerException">Earlier exception that causes this exception</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.String,System.Int32)">
      <summary>Constructs a new instance of the ParseException class with the specified message and offset.</summary>
      <param name="message">Message that describes this exception</param>
      <param name="errorOffset">Position where the error is found</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new instance of the ParseException class with serialized data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ParseException.ErrorOffset">
      <summary>Gets the position were the error was found.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ParseException.Message">
      <summary>Gets a message that describes the current exception.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the SerializationInfo object with information about the exception.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.Parser">
      <summary>Converts strings to or from Expressions objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.#ctor">
      <summary>Default constructor.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.Parser.Default">
      <summary>Gets the default instance of the Parser class. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.Parser.Excel12">
      <summary>Gets the default instance for Excel12. This field is read-only.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Parser.ColumnHeaderRowCount">
      <summary>Gets or sets the column header row count.</summary>
      <value>The column header row count.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Parser.ContainCustomRowOrColumnHeaders">
      <summary>Gets or sets a value that indicates whether custom row or column headers are contained.</summary>
      <value>
        <c>true</c> if contains custom row or column headers; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Parser.IsExcel12">
      <summary>Gets or sets a value that indicates whether this instance is excel12.</summary>
      <value>
        <c>true</c> if this instance is excel12; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Parser.RowHeaderColumnCount">
      <summary>Gets or sets the row header column count.</summary>
      <value>The row header column count.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.Parser.Source">
      <summary>Gets or sets the source.</summary>
      <value>The source.</value>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.CheckName(System.Collections.IEnumerator,System.String)">
      <summary>Checks for the name.</summary>
      <param name="enumerator" />
      <param name="name" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.CorrectFormulaExpresstion(System.String)">
      <summary>Corrects the formula expression for end parenthesis.</summary>
      <param name="formula">The formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.HasCommonName(System.Object,System.String)">
      <summary>Checks if the specified custom name is one of the common scope custom names of the specified data model.</summary>
      <param name="dataModel">The specified data model.</param>
      <param name="name">The specified custom name.</param>
      <returns>true if the specified custom name is one of the common custom names of the specified data model.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.HasScopeName(System.Object,System.String)">
      <summary>Checks if the specified custom name is one of the model scope custom names of the specified data model.</summary>
      <param name="dataModel">The specified data model.</param>
      <param name="name">The specified custom name.</param>
      <returns>true if the specified custom name is one of the model scope custom names of the specified data model.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.IsCustomName(System.String,System.Boolean)">
      <summary>Determines whether the string represents a custom name.</summary>
      <param name="s">The input string to check</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.IsName(System.String)">
      <summary>Determines whether the string represents a name.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList,System.Collections.Hashtable)">
      <summary>Converts the string to an Expression object.</summary>
      <param name="text">String to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
      <param name="customFunctions">Table of custom functions</param>
      <param name="customNames">Table of custom names</param>
      <param name="dataModels">Array list of data models</param>
      <param name="tables">Table of table data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList)">
      <summary>Converts the string to an Expression object.</summary>
      <param name="text">String to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
      <param name="customFunctions">Table of custom functions</param>
      <param name="customNames">Table of custom names</param>
      <param name="dataModels">Array list of data models</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList,System.Boolean,System.Collections.Hashtable)">
      <param name="tables">Table of table data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList,System.Boolean@)">
      <summary>Converts the string to an Expression object.</summary>
      <param name="text">String to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
      <param name="customFunctions">Table of custom functions</param>
      <param name="customNames">Table of custom names</param>
      <param name="dataModels">Array list of data models</param>
      <param name="isChanged">Indicates if the parsed formula is changed when parsing</param>
      <returns>An <see cref="T:FarPoint.CalcEngine.Expression" /></returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList,System.Collections.Hashtable,System.Boolean@)">
      <summary>Converts the string to an Expression object.</summary>
      <param name="text">String to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
      <param name="customFunctions">Table of custom functions</param>
      <param name="customNames">Table of custom names</param>
      <param name="dataModels">Array list of data models</param>
      <param name="tables">Table of table data</param>
      <param name="isChanged">Indicates if the parsed formula is changed when parsing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Parse(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList,System.Boolean,System.Collections.Hashtable,System.Boolean@)">
      <summary>Converts the string to an Expression object.</summary>
      <param name="text">String to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
      <param name="customFunctions">Table of custom functions</param>
      <param name="customNames">Table of custom names</param>
      <param name="dataModels">Array list of data models</param>
      <param name="isChartDataSource">Indicates if the parsed formula is for a chart data source.</param>
      <param name="tables">Table of table data</param>
      <param name="isChanged">Indicates if the parsed formula is changed when parsing</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.ParseChartDataSource(System.String,System.Int32,System.Int32,System.Boolean,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList)">
      <summary>Converts the string to an Expression object.</summary>
      <param name="text">String to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
      <param name="customFunctions">Table of custom functions</param>
      <param name="customNames">Table of custom names</param>
      <param name="dataModels">Array list of data models</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.ParseExpression(System.String,System.Collections.Hashtable,System.Collections.Hashtable)">
      <summary>Parses the expression. Only parses the expression.</summary>
      <param name="text">The text.</param>
      <param name="customFunctions">The custom functions.</param>
      <param name="customNames">The custom names.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.Parser.Unparse(FarPoint.CalcEngine.Expression,System.Int32,System.Int32,System.Boolean)">
      <summary>Converts an Expression object to a string.</summary>
      <param name="expr">Expression to convert</param>
      <param name="baseRow">Base row position</param>
      <param name="baseColumn">Base column position</param>
      <param name="useR1C1">Whether to use R1C1 notation</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.PropertyChangingEventArgs">
      <summary>Represents the event data for the PropertyChanging event of the object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.PropertyChangingEventArgs.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.PropertyChangingEventArgs" /> class.</summary>
      <param name="propName">The property name</param>
      <param name="newValue">The new value</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.PropertyChangingEventArgs.Cancel">
      <summary>Gets or sets whether to cancel changing the property value.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.PropertyChangingEventArgs.NewValue">
      <summary>Gets the new value to be set by the property.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.PropertyChangingEventArgs.PropertyName">
      <summary>The name of the property whose value is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventArgs">
      <summary>Represents the event data for the RequestRowVisibleStates event of the object.</summary>
      <remarks>This class is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventArgs" /> class.</summary>
      <param name="row">First row index of the row range for finding the rows' visible states.</param>
      <param name="rowCount">Number of row range where to find rows' visible states.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventArgs.Row">
      <summary>Gets the first row index of the row range for finding the rows visible states.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventArgs.RowCount">
      <summary>Gets the number of the row range of where to find the rows visible states.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventArgs.RowVisibleStates">
      <summary>Gets the dictionary that contains information about rows' visible states. When handling the RequestRowVisibleStates, the handler adds the rows' visible states into this dictionary.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs">
      <summary>Represents the event data for the Changing event of the axis model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new Changing event arguments object for the axis model of the sheet.</summary>
      <param name="index">The index where the event happens</param>
      <param name="count">The number of items being affected</param>
      <param name="type">The event type</param>
      <param name="currentSize">The size of the current value.</param>
      <param name="currentVisible">The value indicates whether current value is visible.</param>
      <param name="newSize">The size of the new value</param>
      <param name="newVisible">The value indicates whether new value is visible</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs" /> class.</summary>
      <param name="index">The index.</param>
      <param name="count">The count.</param>
      <param name="type">The type.</param>
      <param name="layoutChanged">if set to <c>true</c> layout has changed.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.CurrentSize">
      <summary>Gets the current value of the Axis instance's Size property.</summary>
      <value>The current size.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.CurrentVisible">
      <summary>Gets the current value of the Axis instance's Visible property.</summary>
      <value>
        <c>true</c> if current value is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.LayoutChanged">
      <summary>Gets a value that indicates whether the row layout or column layout has changed.</summary>
      <value>
        <c>true</c> if the row layout or column layout has changed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.NewSize">
      <summary>Gets the current value of the Axis instance's Size property.</summary>
      <value>The new size.</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventArgs.NewVisible">
      <summary>Gets the new value of the Axis instance's Visible property.</summary>
      <value>
        <c>true</c> if new value is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs">
      <summary>Represents the event data for the Changed event of the axis model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.#ctor(System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetAxisModelEventType)">
      <summary>Creates a new Changed event arguments object for the axis model of the sheet.</summary>
      <param name="index">Gets the index where the event happens</param>
      <param name="count">Gets the number of items being affected</param>
      <param name="type">Gets the event type</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.Count">
      <summary>Gets the number of items being affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.Index">
      <summary>Gets the index where the event happens.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.Type">
      <summary>Gets the event type.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetAxisModelEventArgs.ToString">
      <summary>Gets the string representation of the event.</summary>
      <returns>String representation of event</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisProperty">
      <summary>Represents the properties for the axis model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetAxisProperty.#ctor(System.String)">
      <summary>Creates a new axis model property.</summary>
      <param name="text">String with name</param>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Any">
      <summary>Represents any of the axis model properties. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.AutoFilterIndex">
      <summary>Represents the axis model AutoFilterIndex property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.AutoSortIndex">
      <summary>Represents the axis model AutoSortIndex property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.MergePolicy">
      <summary>Represents the axis model MergePolicy property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.PageBreak">
      <summary>Represents the axis model PageBreak property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Resizable">
      <summary>Represents the axis model Resizable property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Size">
      <summary>Represents the axis model Size property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.SortIndicator">
      <summary>Represents the axis model SortIndicator property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Tag">
      <summary>Represents the axis model Tag property. This field is read-only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisProperty.Visible">
      <summary>Represents the axis model Visible property. This field is read-only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetAxisProperty.ToString">
      <summary>Returns the property name.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetDataModelEventArgs">
      <summary>Represents the event data for the Changed event of the data model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetDataModelEventType)">
      <summary>Creates a new Changed event arguments object for the data model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="type">Type of change that occurred in the data model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.Column">
      <summary>Gets the column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.Row">
      <summary>Gets the row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetDataModelEventArgs.Type">
      <summary>Gets the event type.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetGroupDataModelEventArgs">
      <summary>Specifies the type of Change event that has occurred in the group footer.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetGroupDataModelEventArgs.#ctor(FarPoint.Win.Spread.Model.GroupFooter,System.Int32)">
      <summary>The SheetGroupDataModelEventArgs constructor.</summary>
      <param name="groupFooter">Group footer</param>
      <param name="column">Column index</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetGroupDataModelEventArgs.GroupFooter">
      <summary>Group footer has been changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs">
      <summary>Represents the event data for the Changed event of the selection model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new Changed event arguments object for the selection model for the sheet.</summary>
      <param name="row">Row index of the start of the selection</param>
      <param name="column">Column index of the start of the selection</param>
      <param name="rowCount">Number of rows in the selection</param>
      <param name="columnCount">Number of columns in the selection</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.Column">
      <summary>Gets the column index of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.ColumnCount">
      <summary>Gets the number of columns in the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.Row">
      <summary>Gets the row index of the selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.RowCount">
      <summary>Gets the number of rows in the selection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetSelectionModelEventArgs.ToString">
      <summary>Returns a string that represents the current SheetSelectionModelEventArgs object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs">
      <summary>Represents the event data for the Changing event of the span model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetSpanModelChangingEventType)">
      <summary>Creates a new Changing event arguments object for the span model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in the span</param>
      <param name="columnCount">Number of columns in the span</param>
      <param name="type">Type of change that is going to occur in the span model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs.Column">
      <summary>Gets the column index where the event is going to occur.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs.ColumnCount">
      <summary>Gets the number of columns affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs.Row">
      <summary>Gets the row index where the event is going to occur.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs.RowCount">
      <summary>Gets the number of rows affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventArgs.Type">
      <summary>Gets the type of event that is going to occur.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs">
      <summary>Represents the event data for the Changed event of the span model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetSpanModelEventType)">
      <summary>Creates a new Changed event arguments object for the span model for the sheet.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in the span</param>
      <param name="columnCount">Number of columns in the span</param>
      <param name="type">Type of change that occurred in the span model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.Column">
      <summary>Gets the column index where the event occurred.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.ColumnCount">
      <summary>Gets the number of columns affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.Row">
      <summary>Gets the row index where the event occurred.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.RowCount">
      <summary>Gets the number of rows affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetSpanModelEventArgs.Type">
      <summary>Gets the type of event that occurred.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs">
      <summary>Represents the event data for the Changed event of the style model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.SheetStyleModelEventType)">
      <summary>Creates a new Changed event arguments object for the style model for the sheet.</summary>
      <param name="row">Row index where the event occurred, or -1 if all rows were affected</param>
      <param name="column">Column index where the event occurred, or -1 if all columns were affected</param>
      <param name="rowCount">Number of rows, or -1 if all rows were affected</param>
      <param name="columnCount">Number of columns, or -1 if all columns were affected</param>
      <param name="type">Type of change that occurred in the style model</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.Column">
      <summary>Gets the column index where the event occurred, or -1 if all columns were affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.ColumnCount">
      <summary>Gets the number of columns, or -1 if all columns were affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.Row">
      <summary>Gets the row index where the event occurred, or -1 if all rows were affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.RowCount">
      <summary>Gets the number of rows, or -1 if all rows were affected.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.SheetStyleModelEventArgs.Type">
      <summary>Gets the type of event that occurred.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SpreadSerializer">
      <summary>Represents the serializer object for opening from and saving to a file, the entire Spread component and all its data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.Model.SpreadSerializer" /> class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.IsSpreadXmlFile(System.String)">
      <summary>Determines whether the specified file contains a top-level Spread XML node.</summary>
      <param name="fileName">Path and file name to consider as a source of Spread XML</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.IsSpreadXmlFile(System.IO.Stream)">
      <summary>Determines whether the specified stream contains a top-level Spread XML node.</summary>
      <param name="stream">Stream to consider as a source of Spread XML</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="flags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding of the file</param>
      <param name="flags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.String,FarPoint.Win.Spread.TextFileFlags)">
      <summary>Loads the text (string) data with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="data">String that contains data to load</param>
      <param name="flags">Specifies how to process the data when loading from a text file</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="loadFormulas">Whether to load formulas</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.String,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Loads the text file with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="fileName">Path and name of file from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding</param>
      <param name="loadFormulas">Whether to load formulas</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding of the file</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String,System.Text.Encoding)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding of the file</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding of the file</param>
      <param name="loadFormulas">Whether to load formula values</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
      <summary>Loads the text from a stream with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="stream">Stream from which to load text</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="encoding">Encoding of the file</param>
      <param name="loadFormulas">Whether to load formula values</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.String)">
      <summary>Loads the text (string) data with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="data">String that contains data to load</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>Loads the text (string) data with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="data">String that contains data to load</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Loads the text (string) data with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="data">String that contains data to load</param>
      <param name="loadFormulas">Whether to load formulas</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.LoadTextFile(FarPoint.Win.Spread.SheetView,System.Boolean,FarPoint.Win.Spread.Model.IncludeHeaders,System.Boolean,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Loads the text (string) data with the specified formatting.</summary>
      <param name="sheetView">Sheet into which to load the text data</param>
      <param name="unformatted">Whether to bypass formatting</param>
      <param name="includeHeaders">Whether headers are handled as data</param>
      <param name="includeFooter">Whether footers are handled as data</param>
      <param name="rowDelimiter">Row delimiter string</param>
      <param name="columnDelimiter">Column delimiter string</param>
      <param name="cellDelimiter">Cell delimiter string</param>
      <param name="data">String that contains data to load</param>
      <param name="loadFormulas">Whether to load formulas</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.OpenXml(FarPoint.Win.Spread.SheetView,System.IO.Stream)">
      <summary>Loads the specified XML data (for a sheetview) from a stream into a sheetview.</summary>
      <param name="sheetView">The sheet view to load the XML data</param>
      <param name="stream">Stream from which to load the XML data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.OpenXml(FarPoint.Win.Spread.FpSpread,System.String)">
      <summary>Loads the specified XML data (for an entire Spread component) from a file into a Spread component.</summary>
      <param name="spread">Spread component into which to load the XML data</param>
      <param name="fileName">Path and name of the file from which to load the XML data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.OpenXml(FarPoint.Win.Spread.FpSpread,System.IO.Stream)">
      <summary>Loads the specified XML data (for an entire Spread component) from a stream into a Spread component.</summary>
      <param name="spread">Spread component into which to load the XML data</param>
      <param name="stream">Stream from which to load the XML data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveHtml(FarPoint.Win.Spread.SheetView,System.String)">
      <summary>Saves the specified SheetView to the specified file as an HTML table.</summary>
      <param name="sheetView">SheetView</param>
      <param name="filename">The string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveHtml(FarPoint.Win.Spread.SheetView,System.IO.Stream)">
      <summary>Saves the specified SheetView to the specified stream as an HTML table.</summary>
      <param name="sheetView">SheetView</param>
      <param name="stream">Stream</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveHtmlRange(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
      <summary>Saves the specified range in the specified SheetView to the specified file as an HTML table.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Starting row index of range to save</param>
      <param name="column">Starting column index of range to save</param>
      <param name="rowCount">Number of rows in range to save</param>
      <param name="columnCount">Number of columns in range to save</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="filename">string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveHtmlRange(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>Saves the specified range in the specified SheetView to the specified file as an HTML table.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Starting row index of range to save</param>
      <param name="column">Starting column index of range to save</param>
      <param name="rowCount">Number of rows in range to save</param>
      <param name="columnCount">Number of columns in range to save</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="columnFooter">True to include column footers</param>
      <param name="filename">The string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveHtmlRange(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.IO.Stream)">
      <summary>Saves the specified range in the specified SheetView to the specified stream as an HTML table.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Starting row index of range to save</param>
      <param name="column">Starting column index of range to save</param>
      <param name="rowCount">Number of rows in range to save</param>
      <param name="columnCount">Number of columns in range to save</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="stream">Stream</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveHtmlRange(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IO.Stream)">
      <summary>Saves the specified range in the specified SheetView to the specified stream as an HTML table.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Starting row index of range to save</param>
      <param name="column">Starting column index of range to save</param>
      <param name="rowCount">Number of rows in range to save</param>
      <param name="columnCount">Number of columns in range to save</param>
      <param name="rowHeaders">True to include row headers</param>
      <param name="columnHeaders">True to include column headers</param>
      <param name="columnFooter">True to include column footers</param>
      <param name="stream">Stream</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.FpSpread,System.String,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves an entire Spread component to an XML file.</summary>
      <param name="spread">Spread component to save</param>
      <param name="fileName">Path and name of file to which to save the Spread component as XML</param>
      <param name="saveOption">Whether to save to XML options</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.FpSpread,System.String,System.Boolean)">
      <summary>Saves an entire Spread component to an XML file.</summary>
      <param name="spread">Spread component to save</param>
      <param name="fileName">Path and name of file to which to save the Spread component as XML</param>
      <param name="dataOnly">Whether to save only the data in the Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.FpSpread,System.IO.Stream,System.Boolean)">
      <summary>Saves an entire Spread component to an XML stream.</summary>
      <param name="spread">Spread component to save</param>
      <param name="stream">Stream to which to save the Spread component as XML</param>
      <param name="dataOnly">Whether to save only the data in the Spread component</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.FpSpread,System.IO.Stream,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves an entire Spread component to an XML stream.</summary>
      <param name="spread">Spread component to save</param>
      <param name="stream">Stream to which to save the Spread component as XML</param>
      <param name="saveOption">Whether to save to XML options</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.SheetView,System.IO.Stream,FarPoint.Win.Spread.SaveXMLOptions)">
      <summary>Saves an entire sheet view to an XML stream.</summary>
      <param name="sheetView">The sheet view to save</param>
      <param name="stream">Stream to which to save the sheet view as XML</param>
      <param name="saveOption">Whether Saving xml options</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.SpreadSerializer.SaveXml(FarPoint.Win.Spread.SheetView,System.IO.Stream,System.Boolean)">
      <summary>Saves an entire sheet view to an XML stream.</summary>
      <param name="sheetView">The sheet view to save</param>
      <param name="stream">Stream to which to save the sheet view as XML</param>
      <param name="dataOnly">Whether to save only the data in the sheet view</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableChangedEventArgs">
      <summary>Presents changed table data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableChangedEventArgs.#ctor(FarPoint.Win.Spread.Model.ITableRange,FarPoint.Win.Spread.Model.TableChangeType)">
      <summary>Creates an instance of the <see cref="T:FarPoint.Win.Spread.Model.TableChangedEventArgs" /> object.</summary>
      <param name="table">The <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> object.</param>
      <param name="type">The <see cref="T:FarPoint.Win.Spread.Model.TableChangeType" />.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableChangedEventArgs.Table">
      <summary>Gets an <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableChangedEventArgs.Type">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.TableChangeType" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemChangedEventArgs">
      <summary>Represents the event data for the Changed event of the data model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.ITableRange,FarPoint.Win.Spread.Model.TableItemChangeEventType,FarPoint.Win.Spread.Model.ConvertTableToRangeEventArgs)">
      <summary>Creates a new instance of the <see cref="T:FarPoint.Win.Spread.Model.TableItemChangedEventArgs" /> object.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Number of rows.</param>
      <param name="columnCount">Number of columns.</param>
      <param name="table">Table</param>
      <param name="type">Table change type.</param>
      <param name="convertingToRange">Convert table to range arguments.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.ITableRange,FarPoint.Win.Spread.Model.TableItemChangeEventType)">
      <summary>Creates a new instance of the <see cref="T:FarPoint.Win.Spread.Model.TableItemChangedEventArgs" /> object.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Number of rows.</param>
      <param name="columnCount">Number of columns.</param>
      <param name="table">Table</param>
      <param name="type">Table change type.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.Column">
      <summary>Gets the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.ConvertingToRange">
      <summary>Gets the added event data when converting a table to a range.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.Row">
      <summary>Gets the row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.Table">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangedEventArgs.Type">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.TableItemChangeEventType" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemChangingEventArgs">
      <summary>Represents the event data for the Changed event of the data model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.ITableRange,FarPoint.Win.Spread.Model.TableItemChangeEventType)">
      <summary>Creates an instance of the <see cref="T:FarPoint.Win.Spread.Model.TableItemChangingEventArgs" /> object.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Row count.</param>
      <param name="columnCount">Column count.</param>
      <param name="table">Table</param>
      <param name="type">Table item changed type.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.Column">
      <summary>Gets the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.ColumnCount">
      <summary>Gets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.Row">
      <summary>Gets the row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.RowCount">
      <summary>Gets the number of rows.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.Table">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> object.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemChangingEventArgs.Type">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.TableItemChangeEventType" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemNameChangedEventArgs">
      <summary>Presents changed table item data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableItemNameChangedEventArgs.#ctor(FarPoint.Win.Spread.Model.ITableRange,System.String,System.String)">
      <summary>Creates a new TableCollectionItemNameChangedEventArgs.</summary>
      <param name="table">Table.</param>
      <param name="oldName">Old name.</param>
      <param name="name">New name.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemNameChangedEventArgs.Name">
      <summary>Gets the name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemNameChangedEventArgs.OldName">
      <summary>Gets the old name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemNameChangedEventArgs.Table">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemNameChangingEventArgs">
      <summary>Represents the changing table collection data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableItemNameChangingEventArgs.#ctor(FarPoint.Win.Spread.Model.ITableRange,System.String)">
      <summary>Creates a new TableCollectionItemNameChangingEventArgs instance.</summary>
      <param name="table">Table.</param>
      <param name="newName">New name.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemNameChangingEventArgs.NewName">
      <summary>Gets the new name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableItemNameChangingEventArgs.Table">
      <summary>Gets the <see cref="T:FarPoint.Win.Spread.Model.ITableRange" /> object.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableNameChangedEventArgs">
      <summary>Presents changed table name data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableNameChangedEventArgs.#ctor(System.String)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.Model.TableNameChangedEventArgs" /> instance.</summary>
      <param name="oldName">Old name.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableNameChangedEventArgs.OldName">
      <summary>Gets the old name.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableNameChangingEventArgs">
      <summary>Presents changing table name data.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableNameChangingEventArgs.#ctor(System.String)">
      <summary>Creates a <see cref="T:FarPoint.Win.Spread.Model.TableNameChangingEventArgs" /> instance.</summary>
      <param name="newName">New name.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableNameChangingEventArgs.NewName">
      <summary>Gets the new name.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs">
      <summary>Represents the changed table data range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.TableChangeEventType)">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs" /> instance.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Row count.</param>
      <param name="columnCount">Column count.</param>
      <param name="type">Table change type.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs.Column">
      <summary>Gets the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs.ColumnCount">
      <summary>Gets the column count.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs.Row">
      <summary>Gets the row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs.RowCount">
      <summary>Gets the row count.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangedEventArgs.Type">
      <summary>Gets the table changed type.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs">
      <summary>Represents the event data for the Changed event of the data model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.Model.TableChangeEventType)">
      <summary>Creates a new <see cref="T:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs" /> instance.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Row count.</param>
      <param name="columnCount">Column count.</param>
      <param name="type">Table changed type.</param>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs.Column">
      <summary>Gets the column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs.ColumnCount">
      <summary>Gets the column count.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs.Row">
      <summary>Gets the row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs.RowCount">
      <summary>Gets the row count.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.TableRangeChangingEventArgs.Type">
      <summary>Gets table changed type.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell">
      <summary>Represents a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.#ctor(System.Int32,System.Int32)">
      <summary>Represents the cell constructor.</summary>
      <param name="row">Cell's row index.</param>
      <param name="column">Cell's column index.</param>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.Column">
      <summary>Specifies the column index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.Row">
      <summary>Specifies the row index.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.CompareTo(System.Object)">
      <summary>Compares the current object with another object of the same type.</summary>
      <param name="obj">An object to compare with this object.</param>
      <returns>A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.CompareTo(FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell)">
      <summary>Compares the current object with another <see cref="T:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell" /> object.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.Equals(System.Object)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="obj">An object to compare with this object.</param>
      <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.Equals(FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell)">
      <summary>Indicates whether the current <see cref="T:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell" /> object is equal to another <see cref="T:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell" nolink="true" /> object.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:FarPoint.Win.Spread.Model.FormulaDependentInfos.Cell" /> structure.</summary>
      <returns>A hash code for the current variable</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IAggregationSupport">
      <summary>Interface that supports the Aggregate functionality on ranges of cells in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAggregationSupport.GetCelAggregationType(System.Int32,System.Int32)">
      <summary>Gets the cell aggregation type.</summary>
      <param name="row">Cell row</param>
      <param name="col">Cell column</param>
      <returns>Aggregation type of cell</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAggregationSupport.GetCellAggregationFormat(System.Int32,System.Int32)">
      <summary>Gets the cell aggregation format string.</summary>
      <param name="row">Cell row</param>
      <param name="col">Cell column</param>
      <returns>Cell aggregation format string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAggregationSupport.SetCellAggregationFormat(System.Int32,System.Int32,System.String)">
      <summary>Sets the aggregation format for the cell.</summary>
      <param name="row">Cell row</param>
      <param name="col">Cell column</param>
      <param name="format">Aggregation format</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAggregationSupport.SetCellAggregationType(System.Int32,System.Int32,FarPoint.Win.Spread.Model.AggregationType)">
      <summary>Sets the aggregation type for the cell.</summary>
      <param name="row">Cell row</param>
      <param name="col">Cell column</param>
      <param name="type">Aggregation type</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IArraySupport">
      <summary>Interface that supports arrays of values in a range of cells in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IArraySupport.GetArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets an object array from a specified range of cells.</summary>
      <param name="row">Starting model row index</param>
      <param name="column">Starting model column index</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <returns>Two-dimensional object array[row,column] that contains tabular data</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IArraySupport.SetArray(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Starting model row index</param>
      <param name="column">Starting model column index</param>
      <param name="value">Two-dimensional object array[row,column] that contains tabular data</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IAutoFilterIndexSupport">
      <summary>Interface for supporting setting a specific column header row index in which to display the column automatic filter indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAutoFilterIndexSupport.GetAutoFilterIndex(System.Int32)">
      <summary>Gets the column header row index in which to display the column automatic filter indicator.</summary>
      <param name="columnIndex">Column index</param>
      <returns>The column header row index (-1 to display in last row of column headers).</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAutoFilterIndexSupport.SetAutoFilterIndex(System.Int32,System.Int32)">
      <summary>Sets the column header row index in which to display the column automatic filter indicator (-1 to display in last row of column headers).</summary>
      <param name="index">The column index</param>
      <param name="value">The column header row index</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IAutoSortIndexSupport">
      <summary>Interface for supporting setting a specific column header row index in which to display the column automatic sort indicator.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAutoSortIndexSupport.GetAutoSortIndex(System.Int32)">
      <summary>Gets the column header row index in which to display the column automatic sort indicator.</summary>
      <param name="index">The column index</param>
      <returns>The column header row index (-1 to display in last row of column headers).</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IAutoSortIndexSupport.SetAutoSortIndex(System.Int32,System.Int32)">
      <summary>Sets the column header row index in which to display the column automatic sort indicator (-1 to display in last row of column headers).</summary>
      <param name="index">The column index</param>
      <param name="value">The column header row index</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ICalculationSupport">
      <summary>Interface that supports recalculation of formulas in the cells in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ICalculationSupport.AutoCalculation">
      <summary>Gets or sets whether the control automatically recalculates each formula in the sheet when the contents of dependent cells change.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICalculationSupport.Recalculate">
      <summary>Evaluates the formulas in the sheet that have changed since the last calculation cycle.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICalculationSupport.RecalculateAll">
      <summary>Evaluates all the formulas in the sheet (including those that have not changed since the last calculation cycle).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IChartSupport">
      <summary>Interface that supports notifying that the data model has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IChartSupport.AfterChanged">
      <summary>Occurs after the Changed event is performed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IChildModelSupport">
      <summary>Interface that supports a child data model in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.ChildRelationCount">
      <summary>Gets the number of child data relations.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.Parent">
      <summary>Gets or sets the parent data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.ParentRelationName">
      <summary>Gets or sets the name of the data relation.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IChildModelSupport.ParentRowIndex">
      <summary>Gets or sets the index of the parent row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IChildModelSupport.GetChildDataModel(System.Int32,System.String)">
      <summary>Gets the child data model for the specified row and data relation.</summary>
      <param name="row">Row whose child data model is to be returned</param>
      <param name="relation">Data relation name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IChildModelSupport.GetChildRelation(System.Int32)">
      <summary>Gets the name of the child data relation at the specified position.</summary>
      <param name="index">Index to the child relation</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IClearDataSupport">
      <summary>Interface that supports clearing data from the specified range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IClearDataSupport.ClearData(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Clears the data from the specified range.</summary>
      <param name="row">The row</param>
      <param name="column">The column</param>
      <param name="rowCount">The row count</param>
      <param name="columnCount">The column count</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IClearFormulasSupport">
      <summary>Interface that supports clearing formulas from the specified range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IClearFormulasSupport.ClearFormulas(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Clears the formulas from the specified range.</summary>
      <param name="row">The row</param>
      <param name="column">The column</param>
      <param name="rowCount">The row count</param>
      <param name="columnCount">The column count</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ICustomFunctionSupport">
      <summary>Interface that supports user-defined functions in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.AddCustomFunction(FarPoint.CalcEngine.FunctionInfo)">
      <summary>Adds a new user-defined function to the model for use in formulas.</summary>
      <param name="functionInfo">Function to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.GetCustomFunction(System.String)">
      <summary>Gets a user-defined function from the model.</summary>
      <param name="name">Name of function</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.GetCustomFunctionEnumerator">
      <summary>Gets an IEnumerator that enumerates through the names of the user-defined functions in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport.RemoveCustomFunction(System.String)">
      <summary>Removes a user-defined function from the model.</summary>
      <param name="name">Name of function to remove</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ICustomFunctionSupport2">
      <summary>Interface that supports user-defined functions in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomFunctionSupport2.ClearCustomFunctions">
      <summary>Removes all user-defined functions from the model.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ICustomNameSupport">
      <summary>Interface that supports user-defined names in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.AddCustomName(System.String,System.String,System.Int32,System.Int32)">
      <summary>Adds a new user-defined name for the specified value, as string, to the model.</summary>
      <param name="name">Name to add</param>
      <param name="value">Value for name, as string</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.AddCustomName(System.String,FarPoint.CalcEngine.Expression)">
      <summary>Adds a new user-defined name for the specified value, as an expression, to the model.</summary>
      <param name="name">Name to add</param>
      <param name="value">Value for name, as expression</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.GetCustomName(System.String,System.Int32,System.Int32)">
      <summary>Gets the user-defined name, as a string, from the model.</summary>
      <param name="name">Name, as a string</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.GetCustomName(System.String)">
      <summary>Gets the user-defined name, as an expression, in the model.</summary>
      <param name="name">Name, as an expression</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.GetCustomNameEnumerator">
      <summary>Gets an IEnumerator that enumerates through the custom names defined in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport.RemoveCustomName(System.String)">
      <summary>Removes a user-defined name from the model.</summary>
      <param name="name">Name to remove</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ICustomNameSupport2">
      <summary>Interface that supports user-defined names in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport2.ClearCustomNames">
      <summary>Removes all user-defined names from the model.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ICustomNameSupport3">
      <summary>Interface that supports user-defined names in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ICustomNameSupport3.CheckName(System.String)">
      <summary>Checks if the specified name is one of the common scope custom names of this data model and returns the custom name in the data model.</summary>
      <param name="name">The specified name</param>
      <returns>The name of the custom name in the data model if the specified name is one of the common scope custom names of this data model; otherwise, returns null.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IDataSourceSupport">
      <summary>Interface that supports data binding and data relations in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport.AutoGenerateColumns">
      <summary>Gets or sets whether to generate the columns automatically based on the data source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport.DataMember">
      <summary>Gets or sets the data member (table name).</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport.DataSource">
      <summary>Gets or sets the data source.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataColumnFromModelColumn(System.Int32)">
      <summary>Converts the model column index to the data source column index.</summary>
      <param name="column">Model column index to be converted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataColumnName(System.Int32)">
      <summary>Gets the column name at the specified position.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataRowFromModelRow(System.Int32)">
      <summary>Converts the model row index to the data source row index.</summary>
      <param name="row">Model row index to be converted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetDataView(System.Boolean)">
      <summary>Gets the DataView object.</summary>
      <param name="create">Whether to recreate the DataView</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetModelColumnFromDataColumn(System.Int32)">
      <summary>Converts the data source column index to the model column index.</summary>
      <param name="column">Data source column index to be converted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.GetModelRowFromDataRow(System.Int32)">
      <summary>Converts the data source row index to the model row index.</summary>
      <param name="row">Data source row index to be converted</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.IsColumnBound(System.Int32)">
      <summary>Determines whether the column is bound to a data source column.</summary>
      <param name="column">Index of a column in the model for which to return the status</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDataSourceSupport.SetModelDataColumn(System.Int32,System.String)">
      <summary>Binds the model column with the data source column.</summary>
      <param name="column">Model column to be bound</param>
      <param name="columnName">Data source column name of the column to which to bind</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IDataSourceSupport1">
      <summary>Interfaces that support ignore data source position changed event.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IDataSourceSupport1.IgnorePositionChange">
      <summary>Gets whether the position changed event is ignored.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IDisjointSelections">
      <summary>Interface that supports an ordered array of cell ranges, from largest to smallest, containing the selected cells with minimal overlap between the ranges.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IDisjointSelections.GetSelections(System.Int32,System.Int32)">
      <summary>Gets an ordered array of cell ranges, from largest to smallest, containing the selected cells with minimal overlap between the ranges.</summary>
      <param name="rowCount">Number of rows in the sheet</param>
      <param name="columnCount">Number of columns in the sheet</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IEditableObjectSupport">
      <summary>Defines the interface for objects that are editable data rows in a data set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEditableObjectSupport.GetItem(System.Int32)">
      <summary>Gets an editable data row item at the specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport">
      <summary>Interface that supports enhanced methods for user-defined names in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.AddCustomName(System.String,System.String,System.Int32,System.Int32,System.String)">
      <summary>Adds a new user-defined name for the specified value, as a string, to the model.</summary>
      <param name="name">Name to add</param>
      <param name="value">Value for name, as a string</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.AddCustomName(System.String,FarPoint.CalcEngine.Expression,System.String)">
      <summary>Adds a new user-defined name for the specified value, as an expression, to the model.</summary>
      <param name="name">Name to add</param>
      <param name="value">Value for name, as expression</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.AddModelScopeCustomName(System.String,System.String,System.Int32,System.Int32,System.String)">
      <summary>Adds a new user-defined name for the specified value, as string, to the model.</summary>
      <param name="name">The name of custom name to add</param>
      <param name="value">The value of custom name to add</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
      <param name="comment">The comment of the custom name</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.AddModelScopeCustomName(System.String,FarPoint.CalcEngine.Expression,System.String)">
      <summary>Adds a new user-defined name for the specified value, as an expression, to the model.</summary>
      <param name="name">The name of custom name to add</param>
      <param name="value">The value of custom name to add</param>
      <param name="comment">The comment of the custom name to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.ClearModelScopeCustomName">
      <summary>Clears the model scope custom name.</summary>
      <param name="includeModelScope" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.GetCustomNameComment(System.String)">
      <summary>Gets the comment of the custom name.</summary>
      <param name="name" />
      <returns>The comment of the custom name</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.GetModelScopeCustomName(System.String,System.Int32,System.Int32)">
      <summary>Gets a named expression from the model with the specified base index for relative cell references.</summary>
      <param name="name">The name of the custom name to get</param>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.GetModelScopeCustomName(System.String)">
      <summary>Gets the user-defined name, as an expression, in the model.</summary>
      <param name="name">Name, as an expression</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.GetModelScopeCustomNameComment(System.String)">
      <summary>Gets the comment of the custom name.</summary>
      <param name="name">The name of the custom name to get</param>
      <returns>Returns the comment of the custom name</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.GetModelScopeNameEnumerator">
      <summary>Gets an IEnumerator that enumerates through the custom names defined in the model.</summary>
      <param name="baseRow">Base row index for calculating relative row references in the value</param>
      <param name="baseColumn">Base column index for calculating relative column references in the value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.ModifyCustomName(System.String,System.String)">
      <summary>Modifies the name of the custom name.</summary>
      <param name="name">The name of the custom name</param>
      <param name="newName">The new name</param>
      <returns>If true modification is successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.ModifyModelScopeCustomName(System.String,System.String)">
      <summary>Modifies the name of the custom name.</summary>
      <param name="name">The name of the custom name</param>
      <param name="newName">New name of custom name to modify</param>
      <returns>Returns true if name is modified; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.RemoveModelScopeCustomName(System.String)">
      <summary>Removes a user-defined name from the model.</summary>
      <param name="name">The name of the custom name to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.SetCustomNameComment(System.String,System.String)">
      <summary>Sets the comment for a custom name.</summary>
      <param name="name" />
      <returns>If true comment is set; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.SetModelScopeCustomNameComment(System.String,System.String)">
      <summary>Sets a custom name comment for the scope.</summary>
      <param name="name">The name of the custom name to get</param>
      <param name="comment">The comment of the custom name to add</param>
      <returns>If true comment is set; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.CustomNameChanged">
      <summary>Occurs when the custom name of the data model changes.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport.ReferenceStyleChanged">
      <summary>Occurs when the reference style of the data model changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport2">
      <summary>Interface that supports enhanced methods for user-defined names in formulas in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IEnhancedCustomNameSupport2.CheckModelScopeName(System.String)">
      <summary>Checks if the specified name is one of the model scope custom names of this data model and returns the name of the custom name in the data model.</summary>
      <param name="name">The specified name</param>
      <returns>The name of the custom name in the data model if the specified name is one of the model scope custom names of this data model; otherwise, returns null.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IErrorTextSupport">
      <summary>Interface that supports creating a model that represents the error icon.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IErrorTextSupport.GetCellErrorText(System.Int32,System.Int32)">
      <summary>Gets the error text of the cell.</summary>
      <param name="row">The row index</param>
      <param name="column">The column index</param>
      <returns>The string value error text of the cell</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IErrorTextSupport.GetRowErrorText(System.Int32)">
      <summary>Gets the error text of the row.</summary>
      <param name="row">The row index</param>
      <returns>The string value error text of the row</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IErrorTextSupport.SetCellErrorText(System.Int32,System.Int32,System.String)">
      <summary>Sets the error text for the cell.</summary>
      <param name="row">The row index</param>
      <param name="column">The column index</param>
      <param name="value">The error text of the cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IErrorTextSupport.SetRowErrorText(System.Int32,System.String)">
      <summary>Sets the error text for the row.</summary>
      <param name="row">The row index</param>
      <param name="value">The error text of the row</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IErrorTextSupport.CellErrorTextChanged">
      <summary>Occurs when the cell error text is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IErrorTextSupport.RowErrorTextChanged">
      <summary>Occurs when the row error text is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IExpressionConsumer">
      <summary>Interface that supports a class to bind its formulas to the data model.</summary>
      <remarks>This interface is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IExpressionConsumer.FormulaCount">
      <summary>Gets the formula count used by the consumer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IExpressionConsumer.ObjectExpressionProvider">
      <summary>Gets or sets IObjectExpressionSupport to IExpressionConsumer.</summary>
      <remarks>In case the IExpressionConsumer is added into the ConditionalFormatting, the property that detaches the custom setting is automatically set</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.GetBaseColumn">
      <summary>Gets the base column of the relative formula.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.GetBaseRow">
      <summary>Gets the base row of the relative formula.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.GetCellRanges">
      <summary>Gets the cell ranges where the object is in effect.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.GetFormula(System.Int32)">
      <summary>Gets the formula, as a string, of the object at the specified index.</summary>
      <param name="index">The index of the formula.</param>
      <remarks>This API supports the Spread infrastructure and is not intended to be used directly from your code.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.GetRestrictions(System.Int32)">
      <summary>Gets the restrictions of the formula at the specified index.</summary>
      <param name="index">The index of the formula.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.NotifyChanged(System.Int32,FarPoint.Win.Spread.Model.FormulaChangedType)">
      <summary>Notifies that a change related to the formula of the IExpressionConsumer occurred.</summary>
      <param name="index">The index of the formula.</param>
      <param name="changeType">Type of change.</param>
      <remarks>This API supports the Spread infrastructure and is not intended to be used directly from your code.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.NotifyNotSatisfied(System.Int32,FarPoint.Win.Spread.Model.FormulaRestrictedCondition)">
      <summary>Notifies that the formula at the specified index does not meet the restricted conditions.</summary>
      <param name="index">The index of the formula.</param>
      <param name="notSatisfiedConditions">The restricted conditions that the formula does not meet</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionConsumer.SetFormula(System.Int32,System.String)">
      <summary>Sets the formula of the object at the specified index.</summary>
      <param name="index">The index of the formula.</param>
      <param name="formula">The setting formula</param>
      <remarks>This method is intented to be used when it is necessary to change the formula at the specified index of the IExpressionConsumer</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IExpressionSupport">
      <summary>Interface that supports formulas as values and as expressions in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IExpressionSupport.ReferenceStyle">
      <summary>Gets or sets the cell reference style.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.GetExpression(System.Int32,System.Int32)">
      <summary>Gets the formula, as an expression, in the cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.GetFormula(System.Int32,System.Int32)">
      <summary>Gets the formula, as a string, in the cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.SetExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Sets the formula, as an expression, in the cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Formula</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport.SetFormula(System.Int32,System.Int32,System.String)">
      <summary>Sets the formula, as a string, in the cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Formula</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IExpressionSupport2">
      <summary>Interface that supports additional formula functionality in the data model including conditional cell formats.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport2.EvaluateExpression(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Evaluates the expression and returns the resulting object for the cell at the specified row and column.</summary>
      <param name="row">Row index of the base cell</param>
      <param name="column">Column index of the base cell</param>
      <param name="expression">Expression to be evaluated</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport2.ParseFormula(System.Int32,System.Int32,System.String)">
      <summary>Parses the string value and returns the expression for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be parsed to a string</param>
      <exception cref="T:FarPoint.Win.Spread.Model.ParseException"> Value is not a valid formula. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IExpressionSupport2.UnparseFormula(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Gets the formula, as a string value, for the specified expression for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="expression">Expression to be unparsed</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IFindRowsVisibleStateSupport">
      <summary>Interface that supports getting the row's visible state.</summary>
      <remarks>This interface is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IFindRowsVisibleStateSupport.GetRowVisibleState(System.Int32)">
      <summary>Gets the visible state of the specified row.</summary>
      <param name="row">Index of specified row.</param>
      <returns>true if row is visbile and has a size greater than 0; otherwise, returns false.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IGroupFooterSupport">
      <summary>Interface that supports the footer.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IGroupFooterSupport.GroupFooterVisible">
      <summary>Gets or sets whether the group footer is displayed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupFooterSupport.GetGroupFooter(System.Int32)">
      <summary>Gets a group footer for a specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupFooterSupport.IsGroupFooter(System.Int32)">
      <summary>Determines if the specified row is a group footer.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IGroupSupport">
      <summary>Interface that supports grouping.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IGroupSupport.GroupComparer">
      <summary>Gets the comparer for the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IGroupSupport.SortInfo">
      <summary>Gets the sort information for the group.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IGroupSupport.TargetModel">
      <summary>Gets the target sheet data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupSupport.Dispose">
      <summary>Internal use only. Disposes.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupSupport.GetColumnName(System.Int32)">
      <summary>Gets the name of the specified column.</summary>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupSupport.GetGroup(System.Int32)">
      <summary>Gets a group for a specified row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupSupport.Group(FarPoint.Win.Spread.SortInfo[],System.Collections.IComparer)">
      <summary>Groups the rows by the specified sort information.</summary>
      <param name="sortInfo">Sort information</param>
      <param name="groupComparer">Comparer for the group</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IGroupSupport.IsGroup(System.Int32)">
      <summary>Determines if the specified row is a group header (also called group node).</summary>
      <param name="row">Row index</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IGroupSupport2">
      <summary>Interface that supports grouping.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IGroupSupport2.SuspendGrouping">
      <summary>Gets or sets whether the grouping is suspended.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IItemTypeSupport">
      <summary>Interface that supports data binding to collections.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IItemTypeSupport.ItemType">
      <summary>Gets or sets the type of the object in the list for the list data source.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IIterationSupport">
      <summary>Interface that supports recursive formulas (with circular references) in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IIterationSupport.Iteration">
      <summary>Gets or sets whether circular references are evaluated.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IIterationSupport.MaximumChange">
      <summary>Gets or sets the maximum amount of change below which iterations stop.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IIterationSupport.MaximumIterations">
      <summary>Gets or sets the maximum number of iterations.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IMapper">
      <summary>Interface that supports mapping between the group view and target model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMapper.GetIndex(System.Int32)">
      <summary>Gets the model index of the group data model from the specified row.</summary>
      <param name="row">Row index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMapper.GetModelIndexFromTargetIndex(System.Int32)">
      <summary>Gets the group data model index from the target index</summary>
      <param name="row">Row index</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IMapper.MapperUpdating">
      <summary>Occurs when the user makes a change to the target model that causes the mapper to be updated.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IMapperSupport">
      <summary>Provides an interface that allows mapping</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IMapperSupport.Mapper">
      <summary>Gets the mapper object</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IMapperSupport.Target">
      <summary>Gets the target object</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IMovable">
      <summary>Interface that supports arranging the items in an object in the data model.</summary>
      <remarks>Internal use only</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IMovable.Count">
      <summary>Gets the number of items.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMovable.Add(System.Int32,System.Int32)">
      <summary>Adds items at the specified location.</summary>
      <param name="index">Location at which to start adding items</param>
      <param name="count">Number of items to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMovable.Clear(System.Int32,System.Int32)">
      <summary>Removes all of the items from the specified location.</summary>
      <param name="index">Location at which to start clearing values</param>
      <param name="count">Number of items from which to clear values</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMovable.Copy(System.Int32,System.Int32,System.Int32)">
      <summary>Copies items from one specified location to another.</summary>
      <param name="fromIndex">Location from which to begin copying</param>
      <param name="toIndex">Location at which to paste copied items</param>
      <param name="count">Number of items to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMovable.Move(System.Int32,System.Int32,System.Int32)">
      <summary>Moves items from one specified location to another.</summary>
      <param name="fromIndex">Location from which to begin the move</param>
      <param name="toIndex">Location at which to paste moved items</param>
      <param name="count">Number of items to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMovable.Remove(System.Int32,System.Int32)">
      <summary>Removes items from the specified location.</summary>
      <param name="index">Location at which to start removing items</param>
      <param name="count">Number of items to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IMovable.Swap(System.Int32,System.Int32,System.Int32)">
      <summary>Swaps items from one specified location to another.</summary>
      <param name="fromIndex">Location at which to begin the swap</param>
      <param name="toIndex">Location at which to swap items</param>
      <param name="count">Number of items to swap</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.INamedStyleSupport">
      <summary>Interface that supports collections of custom styles in the style model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.INamedStyleSupport.NamedStyles">
      <summary>Gets or sets the collection of styles used by the style model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.GetDirectAltRowName(System.Int32)">
      <summary>Gets the style name for an alternating row style.</summary>
      <param name="index">Index of the alternating row style to set; must be between 0 and AltRowCount-1</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.GetDirectName(System.Int32,System.Int32)">
      <summary>Gets the name of the direct style assigned to a cell, column, row, or model default.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.SetDirectAltRowName(System.Int32,System.String)">
      <summary>Sets the specified alternating row style in the model to the specified named style.</summary>
      <param name="index">Index of the alternating row style to set; must be between 0 and AltRowCount-1</param>
      <param name="styleName">Name of the style to set</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INamedStyleSupport.SetDirectName(System.Int32,System.Int32,System.String)">
      <summary>Sets the direct style for the specified cell, column, row, or model default to the specified style name.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify a column or model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify a row or model default</param>
      <param name="styleName">Name of the style to set</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.INameSupport">
      <summary>Interface that supports a name of a data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.INameSupport.Name">
      <summary>Gets or sets the name of the data model.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.INameSupport.NameChanged">
      <summary>Occurs when the name of the data model changes.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.INameSupport2">
      <summary>Interface that supports a name of a data model. Notifies the NameChanging event.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.INameSupport2.NameChanging">
      <summary>Occurs when the name of the data model is changing.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.INonEmptyCells">
      <summary>Interface that supports determining the number of columns and rows with data in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.INonEmptyCells.NonEmptyColumnCount">
      <summary>Gets the number of columns with data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.INonEmptyCells.NonEmptyRowCount">
      <summary>Gets the number of rows with data.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.INotifySelectionChanged">
      <summary>Represents a selection model with group operations, that returns a result indicating whether the selection has changed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INotifySelectionChanged.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell or cells to the selection.</summary>
      <param name="row">Row index of the first cell to add</param>
      <param name="column">Column index of the first cell to add</param>
      <param name="rowCount">Number of rows to add</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INotifySelectionChanged.ClearSelection">
      <summary>Removes the selection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INotifySelectionChanged.ExtendSelection(System.Int32,System.Int32)">
      <summary>Specifies the extent (or farthest cell) in the selection of cells.</summary>
      <param name="extendRow">Row index of the farthest cell in the selection</param>
      <param name="extendColumn">Column index of the farthest cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INotifySelectionChanged.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes the specified selection range from the selection list, if one exists.</summary>
      <param name="row">Row index of the cell at which to start</param>
      <param name="column">Column index of the cell at which to start</param>
      <param name="rowCount">Number of rows to deselect</param>
      <param name="columnCount">Number of columns to deselect</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.INotifySelectionChanged.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Selects the cells in the specified range.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
      <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.INotifySheetAxisModelChanging">
      <summary>Interface that supports notifying that the axis model is going to change.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.INotifySheetAxisModelChanging.Changing">
      <summary>Occurs before the axis model is changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IObjectExpressionSupport">
      <summary>Interface that enables the class to support objects to bind their formulas to its instance.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.AttachObjectExpression(FarPoint.Win.Spread.Model.IExpressionConsumer)">
      <summary>Attaches the expression consumer to the data model.</summary>
      <param name="obj">The object consumer</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.DetachObjectExpression(FarPoint.Win.Spread.Model.IExpressionConsumer)">
      <summary>Detaches the expression consumer from the data model.</summary>
      <param name="obj">The object consumer</param>
      <returns>true if detaches the expression consumer successfully, otherwise, false</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.GetAdjustingFormulaInfo(FarPoint.Win.Spread.Model.IExpressionConsumer)">
      <summary>Gets the information about how the consumer formulas have changed.</summary>
      <param name="obj">The object consumer</param>
      <returns>List of RangeElement that contains the information about how the consumer formulas have changed</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.GetExpression(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Int32)">
      <summary>Gets the expression, as a Expression, of the object at the specified index.</summary>
      <param name="obj">The object consumer.</param>
      <param name="index">The index of the formula.</param>
      <returns>The expression of the object at the specified index</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.GetFormula(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Int32,FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Gets the formula, as a string, of the object at the specified index.</summary>
      <param name="obj">The object consumer.</param>
      <param name="index">The index of the formula.</param>
      <param name="referenceStyle">The reference style of the formula.</param>
      <returns>The formula of the object at the specified index</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.GetFormulaContextType(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Int32)">
      <summary>Gets the formula context information of the object consumer.</summary>
      <param name="obj">The object consumer</param>
      <param name="index">The index of specified formula</param>
      <returns>FormulaContextType value that specifies the formula context</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.GetValue(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the value of a specified formula of the object consumer at the specified cell.</summary>
      <param name="obj">The object consumer</param>
      <param name="index">The index of specified formula</param>
      <param name="row">The row index of specified cell</param>
      <param name="column">The column index of specified cell</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.ModifyObjectExpression(FarPoint.Win.Spread.Model.IExpressionConsumer,System.Int32)">
      <summary>Notifies the IObjectExpressionSupport that the consumer formula at the specified index has been modified.</summary>
      <param name="obj">The object consumer</param>
      <param name="index">The index of specified formula</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.ParseFormula(System.Int32,System.Int32,System.String)">
      <summary>Parses the string value and returns the expression for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="value">Formula to be parsed to a string</param>
      <exception cref="T:FarPoint.Win.Spread.Model.ParseException"> Value is not a valid formula. </exception>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.UnparseFormula(System.Int32,System.Int32,FarPoint.CalcEngine.Expression)">
      <summary>Gets the formula, as a string value, for the specified expression for the cell at the specified row and column.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="expression">Expression to be unparsed</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IObjectExpressionSupport.UpdateFormulasWhenModelChanged(FarPoint.Win.Spread.Model.ISheetDataModel,FarPoint.Win.Spread.Model.ISheetDataModel)">
      <summary>Updates all formulas of all the IExpressionConsumer objects when changing the data model of a sheet in Spread.</summary>
      <param name="newModel">The old data model</param>
      <param name="oldModel">The new data model</param>
      <remarks>This method is intended to be used when it is necessary to update the formula at the specified index of the IExpressionConsumer. This API supports the Spread infrastructure and is not intended to be used directly from your code. This API is deprecated.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport">
      <summary>Interface that supports optimization for retrieval of data in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport.IsRowUsed(System.Int32)">
      <summary>Determines whether a row had data in any of the cells in that row.</summary>
      <param name="row">Row index</param>
      <returns>true if the row has data; otherwise, false</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Returns the index of the next column in this row that has data.</summary>
      <param name="row">Index of the row through which to look</param>
      <param name="column">Index of the column at which to start looking</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport2">
      <summary>Interface that supports additional optimization for retrieval of data in the data model beyond IOptimizedEnumerationSupport.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport2.NextNonEmptyRow(System.Int32)">
      <summary>Returns the index of the next row that has data.</summary>
      <param name="row">Index of the row at which to start looking</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport3">
      <summary>Interface that supports additional optimization for retrieval of data in the data model beyond IOptimizedEnumerationSupport2.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport3.IgnoreFormula">
      <summary>Gets or sets a value that indicates whether to ignore formulas.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport5">
      <summary>Interface that supports additional optimization for retrieval of data in the data model beyond IOptimizedEnumerationSupport3.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport5.IsRowUsed(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Specifies whether a row uses a formula, tag, or note.</summary>
      <param name="row">Model row index</param>
      <param name="includeFormula">Includes row with formulas</param>
      <param name="includeTag">Includes row with tags</param>
      <param name="includeNote">Includes row with notes</param>
      <returns>Whether row has data, formulas, tags, or notes</returns>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6">
      <summary>Interface that supports additional optimization for retrieval of data in the data model beyond IOptimizedEnumerationSupport5.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.NextNonEmptyColumnFormula(System.Int32)">
      <summary>Specifies the next non-empty column formula.</summary>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.NextNonEmptyColumnInRow(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Specifies the next non-empty column in the row.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="excludeContents">The contents to exclude.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.NextNonEmptyRow(System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Returns the index of the next row that has data.</summary>
      <param name="row">Index of the row at which to start looking</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.NextNonEmptyRowFormula(System.Int32)">
      <summary>Specifies the next non-empty row formula.</summary>
      <param name="row">The row.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.PreviousNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>Specifies the previous non-empty column in the row.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.PreviousNonEmptyColumnInRow(System.Int32,System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Specifies the previous non-empty column in the row.</summary>
      <param name="row">The row.</param>
      <param name="column">The column.</param>
      <param name="excludeContents">The contents to exclude.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.PreviousNonEmptyRow(System.Int32)">
      <summary>Specifies the previous non-empty row.</summary>
      <param name="row">The row.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport6.PreviousNonEmptyRow(System.Int32,FarPoint.Win.Spread.Model.ExcludeContents)">
      <summary>Specifies the previous non-empty row.</summary>
      <param name="row">The row.</param>
      <param name="excludeContents">The contents to exclude.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport7">
      <summary>Interface that supports additional optimization for retrieval of data in the data model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IOptimizedEnumerationSupport7.ExcludeContents">
      <summary>Gets or sets the contents to exclude.</summary>
      <value>The excluded contents.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport">
      <summary>Interface that supports optimizing for axis model to return visible element count.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport.GetVisibleCount(System.Int32)">
      <summary>Gets the visible row or column count.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport2">
      <summary>Interface that supports optimizing for axis model to return visible element count.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport2.SetDirty">
      <summary>Indicates that the row count and/or column count in the models has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport3">
      <summary>Interface that supports optimizing for axis model to return index visible element .</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport3.NextRowVisible(System.Int32)">
      <summary>Index of row visible = true.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport4">
      <summary>Interface that supports optimizing for axis model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IOptimizedSheetAxisModelSupport4.NextNonEmptyIndex(System.Int32)">
      <summary>Returns the index of the next non-empty element.</summary>
      <param name="index">Index to start searching</param>
      <returns>Index of the next non-empty element</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IParentStyleModelSupport">
      <summary>Interface that supports a parent style model for composing styles.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IParentStyleModelSupport.Parent">
      <summary>Gets or sets the parent style model.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IParseFormatSupport">
      <summary>Interface that supports format strings and providers for the style model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IParseFormatSupport.GetParseFormat(System.Int32,System.Int32,System.String@,System.IFormatProvider@)">
      <summary>Gets the parse format for the cell at the specified row and column.</summary>
      <param name="row">Row index of specified cell</param>
      <param name="column">Column index of specified cell</param>
      <param name="formatString">Format string built by the parser</param>
      <param name="info">IFormatProvider built by parser</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IParseFormatSupport.SetParseFormat(System.Int32,System.Int32,System.String,System.IFormatProvider)">
      <summary>Sets the parse format for the cell at the specified row and column.</summary>
      <param name="row">Row index of specified cell</param>
      <param name="column">Column index of specified cell</param>
      <param name="formatString">Format string built by the parser</param>
      <param name="info">IFormatProvider built by parser</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IQuerySelection">
      <summary>Interface that supports querying an extended selection in the selection model for the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IQuerySelection.GetExtendedSelection(System.Int32,System.Int32)">
      <summary>Gets the cell range that would be selected if you extended the current selection to the specified row and column indexes.</summary>
      <param name="row">Row index to which to extend the selection</param>
      <param name="column">Column index to which to extend the selection</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IRangeSupport">
      <summary>Interface that supports operations on ranges of cells in the data model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.AddColumns(System.Int32,System.Int32)">
      <summary>Adds columns of cells after the specified column.</summary>
      <param name="column">Column index of column after which to add columns</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.AddRows(System.Int32,System.Int32)">
      <summary>Adds rows of cells after the specified row.</summary>
      <param name="row">Row index of row after which to add rows</param>
      <param name="rowCount">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes all of the contents from the cells in the specified range of cells.</summary>
      <param name="row">Row index of first row in selected range</param>
      <param name="column">Column index of first column in selected range</param>
      <param name="rowCount">Number of rows in selected range</param>
      <param name="columnCount">Number of columns in selected range</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Copies a range of cells and pastes it into a range of cells at the specified location.</summary>
      <param name="fromRow">Row index from which to begin copying</param>
      <param name="fromColumn">Column index from which to begin copying</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Moves a range of cells and pastes it into a range of cells at the specified location.</summary>
      <param name="fromRow">Row index from which to begin the move</param>
      <param name="fromColumn">Column index from which to begin the move</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes columns from the specified starting position.</summary>
      <param name="column">Column index at which to start removing columns</param>
      <param name="columnCount">Number of columns to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes rows from the specified starting position.</summary>
      <param name="row">Row index at which to start removing rows</param>
      <param name="rowCount">Number of rows to remove</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IRangeSupport.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Swaps a range of cells from one specified location to another.</summary>
      <param name="fromRow">Row index from which to begin the swap</param>
      <param name="fromColumn">Column index from which to begin the swap</param>
      <param name="toRow">Row index of the destination range</param>
      <param name="toColumn">Column index of the destination range</param>
      <param name="rowCount">Number of rows to swap</param>
      <param name="columnCount">Number of columns to swap</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IReceiveRowsVisibleStateChangedNotificationSupport">
      <summary>Interface that supports the data model receiving notification about the change of the rows visible state and supports the data model getting the rows' visible states with the RequestRowVisibleStates event.</summary>
      <remarks>This interface is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IReceiveRowsVisibleStateChangedNotificationSupport.InformRowsVisibleStateChanged(FarPoint.Win.Spread.Model.IFindRowsVisibleStateSupport,System.Collections.Generic.List{FarPoint.Win.Spread.LinearRange})">
      <summary>Informs the data model about the change of the rows visible states.</summary>
      <param name="findRowsVisibleStateSupport">Object that supports getting the row visible state.</param>
      <param name="changingVisibleRangeIndex">List of row index ranges with a changed visible state.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.IReceiveRowsVisibleStateChangedNotificationSupport.RequestRowVisibleStates">
      <summary>Occurs when the data model gets the rows' visible states.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISheetAxisModel">
      <summary>Interface that supports creating a model that represents column and row information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetMergePolicy(System.Int32)">
      <summary>Gets the cell merge policy for the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetPageBreak(System.Int32)">
      <summary>Gets whether a page break occurs at the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetResizable(System.Int32)">
      <summary>Gets whether users can resize the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetSize(System.Int32)">
      <summary>Gets the size of the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetSortIndicator(System.Int32)">
      <summary>Gets the sort indicator for the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetTag(System.Int32)">
      <summary>Gets the data associated with the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.GetVisible(System.Int32)">
      <summary>Gets whether the control displays the specified row or column.</summary>
      <param name="index">Row or column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.IsEmpty">
      <summary>Determines whether there are no rows and columns in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.IsPropertySet(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
      <summary>Determines whether the specified SheetAxisModel property is set.</summary>
      <param name="index">Row or column index</param>
      <param name="prop">Property to evaluate</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.ResetProperty(System.Int32,FarPoint.Win.Spread.Model.SheetAxisProperty)">
      <summary>Resets the specified SheetAxisModel property to its default value.</summary>
      <param name="index">Row or column index</param>
      <param name="prop">Property to reset</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetMergePolicy(System.Int32,FarPoint.Win.Spread.Model.MergePolicy)">
      <summary>Sets the cell merge policy for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Value with the merge policy</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetPageBreak(System.Int32,System.Boolean)">
      <summary>Sets whether a page break occurs at the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Whether a page break occurs</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetResizable(System.Int32,System.Boolean)">
      <summary>Sets whether users can resize the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Set to True to let users resize the specified row or column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetSize(System.Int32,System.Int32)">
      <summary>Sets the size of the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">New size in pixels</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetSortIndicator(System.Int32,FarPoint.Win.Spread.Model.SortIndicator)">
      <summary>Sets the sort indicator for the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Sort indicator value</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetTag(System.Int32,System.Object)">
      <summary>Sets the data associated with the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Object that contains the date to associate with the row or column</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetAxisModel.SetVisible(System.Int32,System.Boolean)">
      <summary>Sets whether the control displays the specified row or column.</summary>
      <param name="index">Row or column index</param>
      <param name="value">Set to True to display the specified row or column</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ISheetAxisModel.Changed">
      <summary>Occurs when the axis model has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISheetDataModel">
      <summary>Interface that supports creating a model that represents tabular data.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetDataModel.ColumnCount">
      <summary>Gets or sets the number of columns.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetDataModel.RowCount">
      <summary>Gets or sets the number of rows.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.GetNote(System.Int32,System.Int32)">
      <summary>Gets the note for a cell of the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>String with the note text</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.GetTag(System.Int32,System.Int32)">
      <summary>Gets the application data for a cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Object with application data</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value in a cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Object with value in cell</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.IsEditable(System.Int32,System.Int32)">
      <summary>Determines whether the contents of the cell at the specified row and column are editable.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <returns>True if the cell contents can be edited; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.IsEmpty">
      <summary>Determines whether the model is empty of data.</summary>
      <returns>True if the cell has no data; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.IsRowUsed(System.Int32)">
      <summary>Determines whether the specified row contains data.</summary>
      <param name="row">Row index</param>
      <returns>True if the row contains data; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.SetNote(System.Int32,System.Int32,System.String)">
      <summary>Sets the note for a cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">String for note</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.SetTag(System.Int32,System.Int32,System.Object)">
      <summary>Sets the application data associated with the cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Data to associate with cell</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetDataModel.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets data in a cell at the specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="value">Object that contains data to set in cell</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ISheetDataModel.Changed">
      <summary>Occurs when the data model has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISheetSelectionModel">
      <summary>Interface that supports creating a model that represents cell selection.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.AnchorColumn">
      <summary>Gets the column index of the first cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.AnchorRow">
      <summary>Gets the row index of the first cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.Count">
      <summary>Gets the number of selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.Item(System.Int32)">
      <summary>Gets an item in the model.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.LeadColumn">
      <summary>Gets the column index of the farthest cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.LeadRow">
      <summary>Gets the row index of the farthest cell in the selection of cells.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.SelectionPolicy">
      <summary>Gets or sets whether users can select ranges of items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetSelectionModel.SelectionUnit">
      <summary>Gets or sets whether users can select cells, rows, or columns.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell or cells to the selection.</summary>
      <param name="row">Row index of the first cell to add</param>
      <param name="column">Column index of the first cell to add</param>
      <param name="rowCount">Number of rows to add</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.ClearSelection">
      <summary>Removes the selection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.ExtendSelection(System.Int32,System.Int32)">
      <summary>Specifies the extent (or farthest cell) in the selection of cells.</summary>
      <param name="row">Row index of farthest cell in the selection</param>
      <param name="column">Column index of farthest cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.GetEnumerator">
      <summary>Gets an enumerator that can iterate through the selections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsAnyCellInColumnSelected(System.Int32)">
      <summary>Determines whether any cell in a specified column is in the selection.</summary>
      <param name="column">Index of column to check</param>
      <returns>True if any cell in specified column is selected; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsAnyCellInRowSelected(System.Int32)">
      <summary>Determines whether any cell in a specified row is in the selection.</summary>
      <param name="row">Index of row to check</param>
      <returns>True if any cell in specified row is selected; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsEmpty">
      <summary>Determines whether the model has no selections.</summary>
      <returns>True if the model contains no selections; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.IsSelected(System.Int32,System.Int32)">
      <summary>Determines whether the specified cell is in the selection.</summary>
      <param name="row">Row index of the cell</param>
      <param name="column">Column index of the cell</param>
      <returns>True if cell is in selection; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.RemoveSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Removes the specified selection range from the selection list, if one exists.</summary>
      <param name="row">Row index of the cell at which to start</param>
      <param name="column">Column index of the cell at which to start</param>
      <param name="rowCount">Number of rows to deselect</param>
      <param name="columnCount">Number of columns to deselect</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.SetAnchor(System.Int32,System.Int32)">
      <summary>Specifies the anchor (or first cell) in the selection of cells.</summary>
      <param name="row">Row index of the first cell in the selection</param>
      <param name="column">Column index of the first cell in the selection</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSelectionModel.SetSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Selects the specified cells.</summary>
      <param name="row">Row index of the first cell</param>
      <param name="column">Column index of the first cell</param>
      <param name="rowCount">Number of rows to add to the first cell to define the selection</param>
      <param name="columnCount">Number of columns to add to the first cell to define the selection</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ISheetSelectionModel.Changed">
      <summary>Occurs when the selection model has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISheetSpanModel">
      <summary>Interface that supports creating a model that represents cell spans.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cell span to the collection.</summary>
      <param name="row">Row index at which to start span</param>
      <param name="column">Column index at which to start span</param>
      <param name="rowCount">Number of rows in span</param>
      <param name="columnCount">Number of columns in span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Clear">
      <summary>Removes all cell spans from the collection.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Find(System.Int32,System.Int32)">
      <summary>Finds the cell span with the specified cell in the collection.</summary>
      <param name="row">Row index of the cell.</param>
      <param name="column">Column index of cell.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.GetEnumerator(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets an enumerator for iterating to the next cell span in the collection after the specified span.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows in cell span</param>
      <param name="columnCount">Number of columns in cell span</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.IsEmpty">
      <summary>Determines whether the model is empty of cell spans.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetSpanModel.Remove(System.Int32,System.Int32)">
      <summary>Removes the cell span with the specified anchor cell from the collection.</summary>
      <param name="row">Row index of anchor cell for span (at which spanned cells started)</param>
      <param name="column">Column index of anchor cell for span (at which spanned cells started)</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ISheetSpanModel.Changed">
      <summary>Occurs when the span model has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISheetSpanModelChangingEventSupport">
      <summary>Interface that supports the Changing event in span model.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ISheetSpanModelChangingEventSupport.Changing">
      <summary>Occurs when the span model is going to change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISheetStyleModel">
      <summary>Interface that supports creating a model that represents cell style information for a sheet.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ISheetStyleModel.AltRowCount">
      <summary>Gets or sets the number of alternating row styles in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.GetCompositeInfo(System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the style information for a cell, column, row, or model as a composite of settings.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
      <param name="altIndex">Alternating row index of the cell in the model, or -1 to skip composing any alternating style</param>
      <param name="destInfo">Style set (StyleInfo object) to use for composing the styles; if destInfo is null then a new StyleInfo is created and used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.GetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the specified alternating row style in the model.</summary>
      <param name="index">Index of the alternating row style to get; must be between 0 and AltRowCount-1</param>
      <param name="destInfo">Style set (StyleInfo object) to use for composing the styles; if destInfo is null then a new StyleInfo is created and used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.GetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Gets the direct style for the specified cell, column, row, or model default.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
      <param name="destInfo">Style set (StyleInfo object) to use for getting the style; if destInfo is null then a new StyleInfo is created and used</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.IsEmpty">
      <summary>Determines whether any styles are set in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.IsRowUsed(System.Int32)">
      <summary>Gets whether the row in the model contains style settings.</summary>
      <param name="row">Row index in the model</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.SetDirectAltRowInfo(System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the specified alternating row style in the model.</summary>
      <param name="index">Index of the alternating row style to set; must be between 0 and AltRowCount-1</param>
      <param name="info">Style set (StyleInfo object)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISheetStyleModel.SetDirectInfo(System.Int32,System.Int32,FarPoint.Win.Spread.StyleInfo)">
      <summary>Sets the direct style for the specified cell, column, row, or model default.</summary>
      <param name="row">Row index of the cell in the model, or -1 to specify an entire column or the model default</param>
      <param name="column">Column index of the cell in the model, or -1 to specify an entire row or the model default</param>
      <param name="info">Style set (StyleInfo object)</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ISheetStyleModel.Changed">
      <summary>Occurs when the style model has changed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISupportFindFormulaDependent">
      <summary>Interface that enables the class to find all the formula containers that have formula references to cells or tables.</summary>
      <remarks>This interface is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISupportFindFormulaDependent.GetDependents(System.Collections.Generic.Dictionary{System.String,FarPoint.Win.Spread.Model.FormulaDependentInfos},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets all the formula containers that have formulas referring to cells in a specified cell range.</summary>
      <param name="infoDict">Dictionary of FormulaDependentInfos objects that contains all the infomation of all the dependent formula containers. The key using the dictionary is the data model name that has dependent formula containers.</param>
      <param name="row">Row index of the specified range.</param>
      <param name="column">Column index of the specified range.</param>
      <param name="rowCount">Number of rows of the specified range.</param>
      <param name="columnCount">Number of columns of the specified range.</param>
      <param name="getCells">Indicates whether to get all dependent cells.</param>
      <param name="getRows">Indicates whether to get all dependent rows.</param>
      <param name="getColumns">Indicates whether to get all dependent columns.</param>
      <param name="getObjects">Indicates whether to get all dependent expression consumer objects.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISupportFindFormulaDependent.GetDependents(System.Collections.Generic.Dictionary{System.String,FarPoint.Win.Spread.Model.FormulaDependentInfos},System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets all the formula containers that have formulas referring to the specified table when params tableColumnStartIndex and tableColumnEndIndex are both equal to -1, or gets all the formula containers that have formulas explicitly referring to the table columns in the specified range limit by params tableColumnStartIndex and tableColumnEndIndex.</summary>
      <param name="infoDict">Dictionary of FormulaDependentInfos objects that contains all the infomation of all the dependent formula containers. The key in using the dictionary is the data model name that has dependent formula containers.</param>
      <param name="tableName">Name of the specified table.</param>
      <param name="tableColumnStartIndex">Table column start index.</param>
      <param name="tableColumnEndIndex">Table column end index.</param>
      <param name="getCells">Indicates whether to get all dependent cells.</param>
      <param name="getRows">Indicates whether to get all dependent rows.</param>
      <param name="getColumns">Indicates whether to get all dependent columns.</param>
      <param name="getObjects">Indicates whether to get all dependent expression consumer objects.</param>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ISuspendFormulaParsing">
      <summary>Interface that supports suspension of formula parsing during deserialization.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISuspendFormulaParsing.ResumeFormulaParsing">
      <summary>Resumes formula parsing and parses all formulas set while parsing was suspended.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ISuspendFormulaParsing.SuspendFormulaParsing">
      <summary>Suspends formula parsing until ResumeFormulaParsing is called.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableColumn">
      <summary>Provides an interface for a table column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumn.Source">
      <summary>Gets the column data source.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableColumnCollection">
      <summary>Interface that supports iterating through <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumnCollection.Count">
      <summary>Number of <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> items.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumnCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> item located by index.</summary>
      <param name="index">Index of the <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> item</param>
      <value>An instance of the <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> item</value>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumnCollection.Item(System.String)">
      <summary>Gets an <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> item by name.</summary>
      <param name="name">Name of the <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> item</param>
      <value>An instance of the <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> item</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableColumnExpressionConsumer">
      <summary>Interface that supports a table that binds its formulas to the data model.</summary>
      <remarks>This interface is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumnExpressionConsumer.ColumnIndex">
      <summary>Gets the column index of the table column that contain the formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumnExpressionConsumer.IsDataFormula">
      <summary>Indicates if the formula is column data formula.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableColumnExpressionConsumer.Table">
      <summary>Gets the table which contains the formula needed to bind to the data model.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableDataColumn">
      <summary>Provides an interface that presents data for a table column.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.DataCellRange">
      <summary>Gets the data cell range. The values do not include header cell and total cell.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.DataFormula">
      <summary>Gets or sets data formula. Internal use to sync data from <see cref="T:FarPoint.Win.Spread.Model.IExpressionSupport" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.DataFormulaProvider">
      <summary>Gets or sets the data formula provider. Internal use to sync data from <see cref="T:FarPoint.Win.Spread.Model.IExpressionSupport" />.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.Name">
      <summary>Gets or sets the name. Internal use to sync data from <see cref="!:ISheetDataMode" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.TotalFormula">
      <summary>Gets or sets the total formula. Internal use to sync data from <see cref="T:FarPoint.Win.Spread.Model.IExpressionSupport" />.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.TotalFormulaProvider">
      <summary>Gets or sets the total formula provider. Internal use to sync data from <see cref="T:FarPoint.Win.Spread.Model.IExpressionSupport" />.</summary>
      <remarks>This property is deprecated</remarks>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableDataColumn.TotalLabel">
      <summary>Gets or sets the total label. Internal use to sync data from <see cref="!:ISheetDataMode" />.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableModelSupport">
      <summary>Represent an ITableModelSupport interface.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableModelSupport.TableRangeManager">
      <summary>Gets or sets the table range collections.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableModelSupport.AdjustExpressionWhenCopyRange(FarPoint.CalcEngine.Expression,System.Collections.Generic.Dictionary{System.String,FarPoint.Win.Spread.Model.ITableRange},System.Collections.Generic.Dictionary{System.String,FarPoint.Win.Spread.Model.ITableRange})">
      <summary>Adjusts expressions when copying a range.</summary>
      <param name="oldExpr">The adjusting expression.</param>
      <param name="lstTable" />
      <param name="removeTables" />
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableModelSupport.AdjustFormulaOnClipboardPaste(System.String,System.Collections.Generic.Dictionary{System.String,FarPoint.Win.Spread.Model.ITableRange},System.Collections.Generic.Dictionary{System.String,FarPoint.Win.Spread.Model.ITableRange},System.Int32,System.Int32,FarPoint.Win.Spread.Model.ReferenceStyle)">
      <summary>Adjusts formulas when pasting from the Clipboard.</summary>
      <param name="formula">The formula that is being adjusted</param>
      <param name="addTables">The added tables list.</param>
      <param name="removeTables">Dictionary of removed tables.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="referenceStyle">Reference style of the formula.</param>
      <returns>A <see cref="T:System.String" /> object</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableModelSupport.GetAllTableData">
      <summary>Gets all tables in the model.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableModelSupport.GetTable(System.String)">
      <summary>Gets the table range.</summary>
      <param name="name">Name of table</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableModelSupport.VerifyTableCellRangeAndRowOrColumnFormula(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Verifies the table cell range with row and column formula.</summary>
      <param name="headerRowIndex">Index of table header row or -1 if no need to check.</param>
      <param name="totalRowIndex">Index of table total row or -1 if no need to check.</param>
      <param name="firstColumn">First index of column range to check or -1 if no need to check the column range.</param>
      <param name="lastColumn">Last index of column range to check or -1 if no need to check the column range</param>
      <returns>true if the row and column formula are not in the checked index and range; otherwise, false.</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableRange">
      <summary>Represents an ITableRange interface.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.Columns">
      <summary>Gets a collection of <see cref="T:FarPoint.Win.Spread.Model.ITableColumn" /> objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.Comment">
      <summary>Gets or sets the table comment.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.DataRange">
      <summary>Gets the data range of the ITableRange.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.DataSource">
      <summary>Gets the IRange table source.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.FirstColumnIndex">
      <summary>Gets the first column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.FirstRowIndex">
      <summary>Gets the first row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.HeaderRowIndex">
      <summary>Gets the row index of the header row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.HeaderRowVisible">
      <summary>Gets or sets whether the header is visible.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.LastColumnIndex">
      <summary>Get the last column index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.LastRowIndex">
      <summary>Gets the last row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.Name">
      <summary>Gets or sets the ITableRange name.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.TotalRowIndex">
      <summary>Gets the total row index.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.ITableRange.TotalRowVisible">
      <summary>Gets or sets whether the total row is visible.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.GetColumnIndex(System.String)">
      <summary>Gets the column index by name.</summary>
      <param name="ColumnName" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.GetColumnName(System.Int32)">
      <summary>Gets the name of the column</summary>
      <param name="index" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.GetDataColumnFormula(System.Int32)">
      <summary>Gets data fomula from a special column.</summary>
      <param name="columnIndex" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.GetUniqueColumnName(System.String,System.Int32)">
      <summary>Gets a unique name for a table column.</summary>
      <param name="name">Initial name</param>
      <param name="baseTableColumnIndex">Table column base index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.OnAddColumns(System.Int32,System.Int32)">
      <summary>Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.OnAddRows(System.Int32,System.Int32)">
      <summary>Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.OnRemoveColumns(System.Int32,System.Int32)">
      <summary>Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.OnRemoveRows(System.Int32,System.Int32)">
      <summary>Internal use only</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.SetDataColumnFormula(System.Int32,System.String)">
      <summary>Sets data formula to a special column.</summary>
      <param name="columnIndex" />
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRange.SyncDataInRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Synchronizes table data in a specific range.</summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="rowCount">Row count.</param>
      <param name="columnCount">Column count.</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRange.NameChanged">
      <summary>Occurs when the table name is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRange.NameChanging">
      <summary>Occurs when the table name is about to change.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRange.TableRangeChanged">
      <summary>Occurs when the table range is changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRange.TableRangeChanging">
      <summary>Occurs when the table range is about to change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ITableRangeManager">
      <summary>Represent an ITableRangeManager interface.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.AddRangeObject(FarPoint.Win.Spread.Model.ITableRange)">
      <summary>Adds an ITableRange object into the manager.</summary>
      <param name="obj">ITableRange object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.CanAddColumns(System.Int32)">
      <summary>Checks whether columns can be added at a specific column index.</summary>
      <param name="column">Column index</param>
      <returns>True if columns can be added</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.CanAddRows(System.Int32)">
      <summary>Checks whether rows can be added at the specific row index.</summary>
      <param name="row">Row index</param>
      <returns>True if rows can be added</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.CanRemoveColumns(System.Int32,System.Int32)">
      <summary>Checks whether columns can be removed.</summary>
      <param name="column">Column index</param>
      <param name="columnCount">Column count</param>
      <returns>True if columns can be removed</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.CanRemoveRows(System.Int32,System.Int32)">
      <summary>Checks whether rows can be removed.</summary>
      <param name="row">Row index</param>
      <param name="rowCount">Row count</param>
      <returns>True if rows can be removed</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.ClearTableFromRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Clears ITableRange objects from the range.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Row count</param>
      <param name="columnCount">Column count</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.Find(System.String)">
      <summary>Finds an ITableRange by its name.</summary>
      <param name="tableName">Table's name</param>
      <returns>An ITableRange object. Null if not found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.Find(System.Int32,System.Int32)">
      <summary>Finds an ITableRange from specified row and column.</summary>
      <param name="row">Row index</param>
      <param name="column">Column Index</param>
      <returns>An ITableRange object. Null if not found</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.Find(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets a list of ITableRange objects from a specific cell range.</summary>
      <param name="row">Row index</param>
      <param name="col">Column index</param>
      <param name="rowCount">Row count</param>
      <param name="colCount">Column count</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.GetTables">
      <summary>Gets a hash table of ITableRange objects.</summary>
      <returns>Hashtable of ITableRange objects</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.ITableRangeManager.RemoveRangeObject(System.String)">
      <summary>Removes an ITableRange object from the manager.</summary>
      <param name="name">Name of the object</param>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRangeManager.ItemChanged">
      <summary>Occurs when an item has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRangeManager.ItemChanging">
      <summary>Occurs when an item is going to change.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRangeManager.ItemNameChanged">
      <summary>Occurs when an item's name has changed.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.Model.ITableRangeManager.ItemNameChanging">
      <summary>Occurs when an item's name is going to change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IUnboundRowAddNewRowSupport">
      <summary>Supports the operation on DataAddNew for an unbound row.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.Model.IUnboundRowAddNewRowSupport.UnBoundNewRowIndex">
      <summary>Gets or sets the index of the unbound new row.</summary>
      <value>The index of the unbound new row.</value>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IUnboundRowSupport">
      <summary>Interface that supports unbound rows when the model is bound to a data source.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>Adds the unbound row to the data source.</summary>
      <param name="row">Index of unbound row</param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.AddUnboundRows(System.Int32,System.Int32)">
      <summary>Adds unbound rows to the data model.</summary>
      <param name="row">Start index to add the new rows</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.GetUnboundValue(System.Int32,System.Int32)">
      <summary>Gets the unbound value for the cell.</summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
    </member>
    <member name="M:FarPoint.Win.Spread.Model.IUnboundRowSupport.IsRowBound(System.Int32)">
      <summary>Determines whether the row is bound.</summary>
      <param name="row">Row to check</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.AggregationType">
      <summary>Specifies the type of aggregation on ranges of cells.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.None">
      <summary>Indicates that aggregation for the sheet is not supported.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Custom">
      <summary>Specifies custom aggregation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Avg">
      <summary>Returns the average of cells in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Count">
      <summary>Counts the number of cells in a range that contain numbers.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.CountA">
      <summary>Counts the number of cells in a range that are not empty.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Max">
      <summary>Returns the maximum value of cells in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Min">
      <summary>Indicates the row count of the cells in the specified range of cells.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Product">
      <summary>Multiplies all the cells in a range and returns the product.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.StDev">
      <summary>Returns the standard deviation for a set of cells in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.StDevP">
      <summary>Calculates standard deviation based on the entire population given as cells in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Sum">
      <summary>Sums values of cells in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.Var">
      <summary>Calculates variance based on a sample of a population.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.VarP">
      <summary>Calculates variance based on the entire population.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.AvgIgnoreHidden">
      <summary>Returns the average of cells (ignores hidden values) in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.CountIgnoreHidden">
      <summary>Counts the number of cells (ignores hidden values) in a range that contain numbers.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.CountAIgnoreHidden">
      <summary>Counts the number of cells (ignores hidden values) in a range that are not empty.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.MaxIgnoreHidden">
      <summary>Returns the maximum value of cells (ignores hidden values) in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.MinIgnoreHidden">
      <summary>Indicates the row count of the cells (ignores hidden values) in the specified range of cells.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.ProductIgnoreHidden">
      <summary>Multiplies all the cells (ignores hidden values) in a range and returns the product.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.StDevIgnoreHidden">
      <summary>Returns the standard deviation for a set of cells (ignores hidden values) in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.StDevPIgnoreHidden">
      <summary>Calculates standard deviation based on the entire population given as cells (ignores hidden values) in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.SumIgnoreHidden">
      <summary>Sums values of cells (ignores hidden values) in a range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.VarIgnoreHidden">
      <summary>Calculates variance based on a sample (ignores hidden values) of a population.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.AggregationType.VarPIgnoreHidden">
      <summary>Calculates variance based on the entire population (ignores hidden values).</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType">
      <summary>Internal use only. Specifies the type of data model enumerator.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.OldStorages">
      <summary>For looping on old storages: Notes, Tags, ErrorText</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.Values">
      <summary>Enumerates values.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.Formulas">
      <summary>Enumerates formulas.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.RowFormulas">
      <summary>Enumerates row formulas.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.Notes">
      <summary>Enumerates cell notes.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.Tags">
      <summary>Enumerates application tags.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.ErrorTexts">
      <summary>Enumerates cell error text.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelEnumeratorType.RowErrorTexts">
      <summary>Enumerates cell row error text.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ExcludeContents">
      <summary>Specifies a value that indicates whether a property is ignored when iterating through rows via the next non-empty logic.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ExcludeContents.None">
      <summary>No object is ignored</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ExcludeContents.Formula">
      <summary>Ignores formulas</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ExcludeContents.Tag">
      <summary>Ignores tags</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ExcludeContents.Note">
      <summary>Ignores notes</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ExcludeContents.ErrorText">
      <summary>Ignores error text</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.FormulaChangedType">
      <summary>Provides information about change related to the formula of the IExpressionConsumer.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaChangedType.Formula">
      <summary>Specifies that formula text in the IExpressionConsumer needs to be changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaChangedType.Data">
      <summary>Specifies that evaluated data of the formula in the IExpressionConsumer needs to be recalculated.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaChangedType.Splitting">
      <summary>Specifies that the IExpressionConsumer has to get the RangeElement information from the IObjectExpressionSupport to successfully support the formula synchronizing action.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.FormulaContextType">
      <summary>Specifies the type of a formula.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaContextType.General">
      <summary>Specifies general type</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaContextType.RelativeReference">
      <summary>Specifies relative type</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaContextType.SemiRelativeReference">
      <summary>Specifies semi-relative type</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaContextType.SensitiveContext">
      <summary>Specifies context sensitive type</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaContextType.IsMultiRangeExpression">
      <summary>Specifies context multi-range type</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaContextType.IsArrayExpression">
      <summary>Specifies context array type</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.FormulaRestrictedCondition">
      <summary>Specifies the formula restrictions.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.None">
      <summary>Specifies no restrictions.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.RelativeFormula">
      <summary>Specifies relative formulas only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.CustomName">
      <summary>Specifies custom names only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.RangeResult">
      <summary>Specifies formulas that directly refer to a cell range or a custom name that directly refers to a cell range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.MultiRangeExpression">
      <summary>Specifies multi-range formulas.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.Table">
      <summary>Specifies formulas that directly refer to a table.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.SuppressCustomName">
      <summary>Indicates that the expression, referred to by a custom name, will not be restricted.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.FormulaRestrictedCondition.ArrayExpression">
      <summary>Specifies array formulas.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.GroupingPolicy">
      <summary>Specifies a grouping policy to collapse or expand rows when grouping occurs in the Spread component.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.GroupingPolicy.NotSet">
      <summary>Does not set the grouping policy, this is the default setting for the GroupingPolicy property.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.GroupingPolicy.ExpandAll">
      <summary>Spread expands all rows when the grouping action occurs.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.GroupingPolicy.CollapseAll">
      <summary>Spread collapses all rows when the grouping action occurs.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.GroupingPolicy.ExpandParents">
      <summary>Spread expands all parent rows and collapses just the lowest level when grouping occurs.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.IncludeHeaders">
      <summary>Specifies which spreadsheet headers should be included.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.None">
      <summary>Includes neither column nor row headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.ColumnHeadersCustomOnly">
      <summary>Includes only custom column headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.RowHeadersCustomOnly">
      <summary>Includes only custom row headers</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.IncludeHeaders.BothCustomOnly">
      <summary>Includes both custom column and custom row headers, custom headers only</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.MapperUpdatingEventType">
      <summary>Specifies the type of mapper updating event that has occurred for the mapper.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MapperUpdatingEventType.TargetCellsUpdated">
      <summary>Indicates that cells with cell data have been updated</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MapperUpdatingEventType.TargetRowsAdded">
      <summary>Indicates that rows have been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MapperUpdatingEventType.TargetRowsRemoved">
      <summary>Indicates that rows have been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MapperUpdatingEventType.TargetColumnsAdded">
      <summary>Indicates that columns have been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MapperUpdatingEventType.TargetColumnsRemoved">
      <summary>Indicates that columns have been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MapperUpdatingEventType.TargetUpdated">
      <summary>Indicates that the sheet data model has been updated</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.MergePolicy">
      <summary>Specifies how the control handles automatic merging of cells based on the values in the cells.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MergePolicy.None">
      <summary>Never automatically merges cells</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MergePolicy.Always">
      <summary>Always automatically merges neighboring cells with identical values</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.MergePolicy.Restricted">
      <summary>Automatically merges cells neighboring cells with identical values if the corresponding cells in another row or column are similarly merged</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ReferenceStyle">
      <summary>Specifies the reference style in formulas and custom names in the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ReferenceStyle.A1">
      <summary>Uses letters and numbers for column and row coordinates; uses dollar sign ($) for absolute coordinates</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.ReferenceStyle.R1C1">
      <summary>Uses "R" and number for row, "C" and number for column coordinates; uses brackets [ ] for relative coordinates</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SelectionPolicy">
      <summary>Specifies how users can select items in the control.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SelectionPolicy.Single">
      <summary>[0] Allows users to select only single items</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SelectionPolicy.Range">
      <summary>[1] Allows users to select single items and ranges of items, but not multiple ranges</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SelectionPolicy.MultiRange">
      <summary>[2] Allows users to select single items and ranges of items, including multiple ranges</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SelectionUnit">
      <summary>Specifies the smallest unit users or the application can select.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SelectionUnit.Cell">
      <summary>[0] Indicates that the smallest unit that can be selected is a cell</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SelectionUnit.Row">
      <summary>[1] Indicates that the smallest unit that can be selected is a row</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SelectionUnit.Column">
      <summary>[2] Indicates that the smallest unit that can be selected is a column</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelEventType">
      <summary>Specifies the type of Change event that has occurred for an axis model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.LayoutItemsUpdated">
      <summary>Indicates that items have changed in a way that may affect the layout (for example, the size or visible state has changed)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.AppearanceItemsUpdated">
      <summary>Indicates that items have changed in a way that does not affect the layout (for example, the label or the sort indicator has changed)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.ItemsAdded">
      <summary>Indicates that items have been added to the model</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.ItemsRemoved">
      <summary>Indicates that items have been removed from the model</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisModelEventType.ModelUpdated">
      <summary>Indicates that the entire model has changed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisOrientation">
      <summary>Specifies the orientation for the layout information, whether by row or column, for the axis model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisOrientation.Horizontal">
      <summary>Orients the layout by column (along the horizontal axis)</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetAxisOrientation.Vertical">
      <summary>Orients the layout by row (along the vertical axis)</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetDataModelEventType">
      <summary>Specifies the type of Change event that has occurred for an axis model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.CellsUpdated">
      <summary>Indicates that cells with cell data have been updated</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.RowsAdded">
      <summary>Indicates that rows have been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.RowsRemoved">
      <summary>Indicates that rows have been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.ColumnsAdded">
      <summary>Indicates that columns have been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.ColumnsRemoved">
      <summary>Indicates that columns have been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.ModelUpdated">
      <summary>Indicates that the sheet data model has been updated</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetDataModelEventType.AggregationUpdate">
      <summary>Indicates that the aggregation data model has been updated</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventType">
      <summary>Specifies the type of Changing event that is going to occur for a span model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventType.SpanAdding">
      <summary>Indicates that an individual span is going to be added.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventType.SpanRemoving">
      <summary>Indicates that an individual span is going to be removed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventType.SpanUpdating">
      <summary>Indicates that a span setting in a particular range is going to change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventType.ModelUpdating">
      <summary>Indicates that the entire model is going to change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelEventType">
      <summary>Specifies the type of Change event that has occurred for a span model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.SpanAdded">
      <summary>Indicates that an individual span has been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.SpanRemoved">
      <summary>Indicates that an individual span has been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.SpanUpdated">
      <summary>Indicates that an individual span has changed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetSpanModelEventType.ModelUpdated">
      <summary>Indicates that the entire model has changed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetStyleModelEventType">
      <summary>Specifies the type of Change event that has occurred for a style model for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.CellsUpdated">
      <summary>Indicates that the style of one or more cells has changed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.RowsAdded">
      <summary>Indicates that the style of one or more rows has been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.RowsRemoved">
      <summary>Indicates that the style of one or more rows has been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.ColumnsAdded">
      <summary>Indicates that the style of one or more columns has been added</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.ColumnsRemoved">
      <summary>Indicates that the style of one or more columns has been removed</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SheetStyleModelEventType.ModelUpdated">
      <summary>Indicates that the model has been updated such that all styles may have changed</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SortIndicator">
      <summary>Specifies the display of the sort indicator.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SortIndicator.None">
      <summary>Displays no sort indicator</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SortIndicator.Ascending">
      <summary>Displays the ascending sort indicator</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.SortIndicator.Descending">
      <summary>Displays the descending sort indicator</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableChangeEventType">
      <summary>Specifies the table changed type.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.ShowHideHeader">
      <summary>Shows or hides the header row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.ShowHideTotal">
      <summary>Shows or hides the total row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.AddColumn">
      <summary>Adds a table column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.RemoveColumn">
      <summary>Removes a table column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.AddRow">
      <summary>Adds a table data row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.RemoveRow">
      <summary>Removes a table data row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.Move">
      <summary>Moves a table.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.MoveColumn">
      <summary>Moves a table column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeEventType.MoveRow">
      <summary>Moves a table data row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableChangeType">
      <summary>Specifies the table change type.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeType.Range">
      <summary>Specifies a range change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeType.Style">
      <summary>Specifies a style change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableChangeType.Name">
      <summary>Specifies a name change.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemChangeEventType">
      <summary>Specifies the table item change type.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.ShowHideHeader">
      <summary>Shows or hides the header row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.ShowHideTotal">
      <summary>Shows or hides the total row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.AddColumn">
      <summary>Adds a table column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.RemoveColumn">
      <summary>Removes a table column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.AddRow">
      <summary>Adds a table data row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.RemoveRow">
      <summary>Removes a table data row.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.Move">
      <summary>Moves a table.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.AddItem">
      <summary>Adds a table into the table collection.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.RemoveItem">
      <summary>Removes a table from the collection.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.MoveColumn">
      <summary>Moves a table column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.Model.TableItemChangeEventType.MoveRow">
      <summary>Moves a table data row.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.AggregateEventHandler">
      <summary>Handles the data aggregate in the data model of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelCellErrorTextEventHandler">
      <summary>Represents a defined method that handles the ErrorTextChange event for the Spread component.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.Model.DefaultSheetDataModel.DataModelRowErrorTextEventHandler">
      <summary>Represents a defined method that handles the RowErrorTextChange event for the Spread component.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.Model.GroupFooterEventHandler">
      <summary>Handles the Changed event in the data model of the group footer.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.MapperUpdatingEventHandler">
      <summary>Handles the updating event of the mapper.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.PropertyChangingEventHandler">
      <summary>Handles the Changed event in the data model of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.ReferenceStyleEventHandle">
      <summary>Handles the changed ReferenceStyleEventHandle event in the data model of the sheet.</summary>
      <param name="sender" />
    </member>
    <member name="T:FarPoint.Win.Spread.Model.RequestRowVisibleStatesEventHandler">
      <summary>Handles RequestRowVisibleStates event.</summary>
      <param name="sender">The event sender.</param>
      <param name="e">RequestRowVisibleStates event parameter.</param>
      <remarks>This delegate is deprecated</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelChangingEventHandler">
      <summary>Handles the Changing event for the axis model for the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetAxisModelEventHandler">
      <summary>Handles the Changed event for the axis model for the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetDataModelEventHandler">
      <summary>Handles the Changed event in the data model of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSelectionModelEventHandler">
      <summary>Handles the Changed event in the selection model of the sheet.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event data (SheetSelectionModelEventArgs class)</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelChangingEventHandler">
      <summary>Handles the Changing event in the span model of the sheet.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetSpanModelEventHandler">
      <summary>Handles the Changed event in the span model of the sheet.</summary>
      <param name="sender">Object that raised the event</param>
      <param name="e">Event arguments</param>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.SheetStyleModelEventHandler">
      <summary>Handles the Changed event in the style model of the sheet.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableChangedEventHandler">
      <summary>Handles the TableChanged event.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemChangedEventHandler">
      <summary>Handles the TableCollectionItemChanged event in the ITableRangeManager.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemChangingEventHandler">
      <summary>Handles the table item changed event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemNameChangedEventHandler">
      <summary>Handles the TableCollectionItemNameChanged event.</summary>
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableItemNameChangingEventHandler">
      <summary>Handles the TableCollectionItemNameChanging event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableNameChangedEventHandler">
      <summary>Handles the TableNameChanged event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableNameChangingEventHandler">
      <summary>Handles the TableNameChanging event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableRangeChangedEventHandler">
      <summary>Represents the event data for the Changed event of the table data.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.Model.TableRangeChangingEventHandler">
      <summary>Handles the TableRangeChanging event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction">
      <summary>Represents the undo actions for adding a child object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Object)">
      <summary>Creates a new AddChildUndoAction object.</summary>
      <param name="sheetView">SheetView</param>
      <param name="child">The object</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.child">
      <summary>Specifies the child being added.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.sheetView">
      <summary>Specifies the sheet on which the sorting is done.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the add child action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.SaveUndoState">
      <summary>Saves the undo state.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>This implementation does nothing, since undo state is specified in the constructor.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AddChildUndoAction.Undo(System.Object)">
      <summary>Undoes the add child action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction">
      <summary>Represents the undo actions for an automatic sorting of rows in a sheet based on values in a column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32)">
      <summary>Creates a new undo action for automatic sorting of rows.</summary>
      <param name="sheetView">Sheet</param>
      <param name="column">Index of column being automatically sorted</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.column">
      <summary>Specifies the index of the column being automatically sorted.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.prevAscending">
      <summary>Specifies whether the previous column was sorted in ascending order.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.prevColumn">
      <summary>Specifies the previous column that was automatically sorted (-1 if none).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.sheetView">
      <summary>Specifies the sheet on which the sorting is done.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.viewRowIndexes">
      <summary>Specifies the row index mapping before sort.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the automatic sorting action.</summary>
      <param name="sender">Object on which the action occurred</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.SaveUndoState">
      <summary>Saves the undo state of this automatic sorting action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.AutoSortColumnUndoAction.Undo(System.Object)">
      <summary>Performs the undo automatic sorting action.</summary>
      <param name="sender">Object on which the action occurred</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction">
      <summary>Represents the undo actions for dragging and dropping a range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a new undo action for a cell for the drag and drop operation.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Row index of start of range to drag and drop</param>
      <param name="column">Column index of start of range to drag and drop</param>
      <param name="rowCount">Number of rows in range to drag and drop</param>
      <param name="columnCount">Number of columns in range to drag and drop</param>
      <param name="targetRow">Target row index</param>
      <param name="targetColumn">Target column index</param>
      <param name="copy">True to copy, false to move</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.cellInfo">
      <summary>Specifies the previous contents of the target range (before the drag and drop).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.cellInfoSource">
      <summary>Specifies the previous contents of the source range (before the drag and drop), if copy is false.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.column">
      <summary>Specifies the starting column index of the range to drag and drop.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.columnCount">
      <summary>Specifies the number of columns to drag and drop.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.columnInfo">
      <summary>Specifies the column-level contents of the target range (before the drag and drop).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.columnInfoSource">
      <summary>Specifies the column-level contents of source range (before the drag and drop), if copy is false.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.copy">
      <summary>Specifies whether to copy the range (true to copy; false to move).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.rangeGroupInfosSource">
      <summary>The source <see cref="T:FarPoint.Win.Spread.RangeGroupInfo" /> objects in drag drop range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.rangeGroupInfosTarget">
      <summary>The target <see cref="T:FarPoint.Win.Spread.RangeGroupInfo" /> objects in drag drop range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.row">
      <summary>Specifies the starting row index of the range to drag and drop.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.rowCount">
      <summary>Specifies the number of rows to drag and drop.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.rowInfo">
      <summary>Specifies the row-level contents of the target range (before the drag and drop).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.rowInfoSource">
      <summary>Specifies the row-level contents of source range (before the drag and drop), if copy is false.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.sheetView">
      <summary>Specifies the sheet that contains column resizing.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.targetColumn">
      <summary>Specifies the destination column index for the drag and drop.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.targetRow">
      <summary>Specifies the destination row index for the drag and drop.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the cell drag-drop.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.SaveUndoState">
      <summary>This implemenation does nothing, since undo state is passed to the constructor.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragDropUndoAction.Undo(System.Object)">
      <summary>Undoes the cell drag-drop.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction">
      <summary>Represents the undo actions for dragging and filling a range of cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.FillDirection,System.Boolean)">
      <summary>Creates a new undo action for a cell drag and fill operation.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Row index of start of range to drag and fill</param>
      <param name="column">Column index of start of range to drag and fill</param>
      <param name="rowCount">Number of rows in range to drag and fill</param>
      <param name="columnCount">Number of columns in range to drag and fill</param>
      <param name="fillCount">Number of rows or columns to fill</param>
      <param name="fillDirection">Direction for fill</param>
      <param name="dataOnly">True to fill data only</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.cellInfo">
      <summary>Specifies the previous contents of the target range (before the drag and fill).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.column">
      <summary>Specifies the starting column index of the range to drag and fill.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.columnCount">
      <summary>Specifies the number of columns in the range to drag and fill.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.columnInfo">
      <summary>Specifies the previous column-level settings of the target range (before drag and fill).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.dataOnly">
      <summary>Specifies whether to fill data only.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.fillCount">
      <summary>Specifies the number of rows or columns to fill.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.fillDirection">
      <summary>Specifies the direction of the fill operation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.row">
      <summary>Specifies the starting row index of the range to drag and fill.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.rowCount">
      <summary>Specifies the number of rows in the range to drag and fill.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.rowInfo">
      <summary>Specifies the previous row-level settings of the target range (before drag and fill).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.sheetView">
      <summary>Specifies the sheet that contains column resizing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.GetTargetCellRange">
      <summary>Calculates the target CellRange object for the drag-fill operation based on the source range and fill direction.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the cell drag and fill operation.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.SaveUndoState">
      <summary>Saves undo state information before drag-fill.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellDragFillUndoAction.Undo(System.Object)">
      <summary>Undoes the cell drag and fill.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction">
      <summary>Represents the undo actions for editing a cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Object,System.Boolean)">
      <summary>Creates a new cell edit undo action.</summary>
      <param name="sheetView">Sheet</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="newValue">Object with new value</param>
      <param name="isFormula">Whether the cell content is a formula</param>
      <remarks>This constructor is deprecated</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Object,System.Boolean,System.String,System.IFormatProvider,System.String,System.IFormatProvider,System.Boolean)">
      <summary>Creates a new cell edit undo action.</summary>
      <param name="sheetView">Sheet</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="newValue">Object with new value</param>
      <param name="isFormula">Whether the cell content is a formula</param>
      <param name="oldFormatString">Previous format string of cell</param>
      <param name="oldInfo">Previous IFormatProvider of cell</param>
      <param name="currentFormatString">Current Format string of cell</param>
      <param name="currentInfo">Current IFormatProvider of cell</param>
      <param name="needToSetFormatStringWhenRedo">Specifies whether the format string is restore when redo</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.column">
      <summary>Specifies the index of the column that contains the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.currentFormatString">
      <summary>Specifies the current format string of the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.currentInfo">
      <summary>Specifies the current format provider of the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.needToSetFormatStringWhenRedo">
      <summary>Specifies whether the format string is restore when redo</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.newIsFormula">
      <summary>Specifies whether the new value is a formula.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.newValue">
      <summary>Specifies the new value in the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.oldFormatString">
      <summary>Specifies the original format string of the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.oldInfo">
      <summary>Specifies the original format provider of the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.oldIsFormula">
      <summary>Specifies whether the old value is a formula.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.oldValue">
      <summary>Specifies the original value in the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.row">
      <summary>Specifies the index of the column that contains the cell.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.sheetView">
      <summary>Specifies the sheet that contains the cell.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the cell editing action.</summary>
      <param name="sender">object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.SaveUndoState">
      <summary>Saves the undo state of this cell editing action.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>Undo state for this object is saved on construction.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.CellEditUndoAction.Undo(System.Object)">
      <summary>Undoes the cell editing action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction">
      <summary>Represents the undo action for changing a shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.ElementWindowless)">
      <summary>Creates a new undo action for moving or sizing a child control.</summary>
      <param name="sheetView" />
      <param name="shape" />
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.ElementWindowless,System.Boolean)">
      <summary>Creates a new undo action for changing the specified shape or cell note in the specified SheetView.</summary>
      <param name="sheetView">SheetView</param>
      <param name="shape">ElementWindowless</param>
      <param name="attachUIChangeCompleteHandler">True to attach a handler to the UIChangeComplete event to the shape (when shape is PSShape only)</param>
      <remarks>This object saved undo state on construction, rather than during PerformUndoAction, since the shape object implements the user interface to make changes to itself. The SpreadView will call PerformUndoAction when the shape's UIChangeComplete event fires and edit mode is off (if the shape is a cell note).</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
      <summary>Creates a new undo action for moving a shape or cell note in the specified direction, changing its width and height, and rotation angle (for shapes only).</summary>
      <param name="dx">Horizontal change</param>
      <param name="dy">Vertical change</param>
      <param name="dw">Width change</param>
      <param name="dh">Height change</param>
      <param name="dr">Rotation angle change</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.#ctor(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>Creates a new undo action for moving or sizing a child control.</summary>
      <param name="ctl">Control</param>
      <param name="oldBounds">Rectangle</param>
      <param name="newBounds">Rectangle</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.ctl">
      <summary>Specifies the child control.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.dh">
      <summary>Specifies the height change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.dr">
      <summary>Specifies the rotation angle change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.dw">
      <summary>Specifies the width change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.dx">
      <summary>Specifies the horizontal change in position.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.dy">
      <summary>Specifies the vertical change in position.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.index">
      <summary>Specifies the index of the shape in the shape container before the change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.newBounds">
      <summary>Specifies the new boundary for the child control</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.oldBounds">
      <summary>Specifies the old boundary for the child control.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.shape">
      <summary>Specifies the shape to be changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.sheetView">
      <summary>Specifies the sheet that contains the shape being changed.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.spreadView">
      <summary>Specifies the view that contains the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.xmlAfter">
      <summary>Specifies the XML serialized state of the shape after the change.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.xmlBefore">
      <summary>Specifies the XML serialized state of the shape before the change.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the shape change action.</summary>
      <param name="sender">The object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.SaveUndoState">
      <summary>Saves the undo state before the change.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>This object saves undo state on construction, rather than during PerformUndoAction, since the shape object implements the user interface to make the changes to itself. The SpreadView will call PerformUndoAction when the shape's UIChangeComplete event fires and edit mode is off (if the shape is a cell note).</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.Undo(System.Object)">
      <summary>Undoes the shape change action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="E:FarPoint.Win.Spread.UndoRedo.ChildChangeUndoAction.UIChangeComplete">
      <summary>Occurs when the shape object raises its UIChangeComplete event.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormattingUndoAction">
      <summary>Represents the undo actions for clearing conditional formatting of specified ranges.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormattingUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Initializes a new instance of the <see cref="T:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormattingUndoAction" /> class.</summary>
      <param name="sheetview">The sheetview where the action happens</param>
      <param name="range">The cell ranges where the clearing conditional formatting action happens. If this parameter is null, clears conditional formatting of entire sheet.</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormattingUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender" />
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormattingUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormattingUndoAction.Undo(System.Object)">
      <summary>Undoes the clear action.</summary>
      <param name="sender">The object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction">
      <summary>Represents the undo actions for the ClearConditionalFormatUnDoAction class.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction.#ctor">
      <summary>Creates a new undo action for clear conditional formatting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Creates a new undo action for a clear conditional format of the specified range in the specified sheet.</summary>
      <param name="sheetView" />
      <param name="cellRanges" />
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange)">
      <summary>Creates a new ClearConditionalFormatUndoAction object.</summary>
      <param name="sheetView" />
      <param name="cellRange" />
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction.PerformUndoAction(System.Object)">
      <summary>Peforms the clear conditional formatting action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to get the undo state (active sheet, selection, and so on.) and raise events during the operation. If its AutoClipboard property is false, then this action fails.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>String</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClearConditionalFormatUndoAction.Undo(System.Object)">
      <summary>Peforms the undo ClearConditionalFormat action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClipboardCutActiveSheetUndoAction">
      <summary>Represents the action for Clipboard cut of the active sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutActiveSheetUndoAction.#ctor">
      <summary>Creates a new ClipboardCutActiveSheetUndoAction.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutActiveSheetUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the action.</summary>
      <param name="sender">The object</param>
      <returns>true if successful, false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutActiveSheetUndoAction.SaveUndoState">
      <summary>Saves the undo state before performing the action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutActiveSheetUndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">The object</param>
      <returns>true if successful, false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction">
      <summary>Represents the undo actions for a Clipboard cut operation that involves data only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.#ctor">
      <summary>Creates a new undo action for a Clipboard cut operation that involves data only.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new undo action for a Clipboard cut of the specified range in the specified sheet that involves data only.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.cellInfo">
      <summary>Specifies the cell Clipboard information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.cellRange">
      <summary>Specifies the cell range of the Clipboard operation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.sheetView">
      <summary>Specifies the sheet that contains the cell range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.text">
      <summary>Specifies the text.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the Clipboard operation action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to get the undo state (active sheet, selection, and so on.) and raise events during the operation. If its AutoClipboard property is false, then this action fails.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.SaveUndoState">
      <summary>Saves the undo state of this Clipboard operation action.</summary>
      <remarks>This implementation does nothing; the undo state is saved by getting the Clipboard objects after the cut.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutDataOnlyUndoAction.Undo(System.Object)">
      <summary>Performs the undo Clipboard operation action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction">
      <summary>Represents the undo actions for a Clipboard cut.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.#ctor">
      <summary>Creates a new undo action for a Clipboard cut.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.#ctor(FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Creates a new undo action for a Clipboard cut using the specified copy options.</summary>
      <param name="copyOptions">ClipboardCopyOptions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.ClipboardCopyOptions)">
      <summary>Creates a new undo action for a Clipboard cut of the specified range in the specified sheet.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="copyOptions">ClipboardCopyOptions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a new undo action for a Clipboard cut of the specified range in the specified sheet.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.cellInfo">
      <summary>Specifies the cell Clipboard information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.cellRange">
      <summary>Specifies the cell range of the Clipboard operation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.chartInfo">
      <summary>Specifies the chart information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.columnInfo">
      <summary>Specifies the column Clipboard information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.columnRangeGroupInfo">
      <summary>Specifies the outline (range group) information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.copyOptions">
      <summary>Specifies the ClipboardCopyOptions for the cut action.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.rowInfo">
      <summary>Specifies the row Clipboard information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.rowRangeGroupInfo">
      <summary>Specifies the outline (range group) information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.shapeInfo">
      <summary>Specifies the shape Clipboard information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.shapeName">
      <summary>Specifies the name of the shape being cut.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.sheetCornerStyle">
      <summary>Specifies the sheet corner style included if the entire sheet is cut</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.sheetView">
      <summary>Specifies the view of the Clipboard operation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.tableInfo">
      <summary>Specifies the cell range of the Clipboard operation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.text">
      <summary>Specifies the text if copyOptions is AsString or AsStringSkipHidden</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.PerformUndoAction(System.Object)">
      <summary>Peforms the Clipboard cut action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to get the undo state (active sheet, selection, and so on.) and raise events during the operation. If its AutoClipboard property is false, then this action fails.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.SaveUndoState">
      <summary>Saves the undo state of this Clipboard cut action.</summary>
      <remarks>This implementation does nothing; the undo state is saved by getting the Clipboard objects after the cut.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>String</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardCutUndoAction.Undo(System.Object)">
      <summary>Peforms the undo Clipboard cut action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClipboardPasteSheetUndoAction">
      <summary>Represents the action for Clipboard paste of a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteSheetUndoAction.#ctor">
      <summary>Creates a new ClipboardPasteSheetUndoAction.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteSheetUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the action.</summary>
      <param name="sender">The object</param>
      <returns>true if successful, false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteSheetUndoAction.SaveUndoState">
      <summary>Saves the undo state before performing the action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteSheetUndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">The object</param>
      <returns>true if successful, false otherwise</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction">
      <summary>Represents the undo actions for a Clipboard paste operation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.#ctor">
      <summary>Creates a new undo action for a Clipboard paste operation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.#ctor(FarPoint.Win.Spread.ClipboardPasteOptions)">
      <summary>Creates a new undo action for a Clipboard paste operation using the specified paste option.</summary>
      <param name="pasteOption">ClipboardPasteOptions</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.ElementWindowless)">
      <summary>Creates a new undo action for a Clipboard paste of the specified shape to the specified sheet.</summary>
      <param name="sheetView">Sheet</param>
      <param name="shape">Shape</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,FarPoint.Win.Spread.ClipboardPasteOptions)">
      <summary>Creates a new undo action for a Clipboard paste to the specified range in the specified sheet using the specified SheetView, cell range, and paste option.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <param name="rowCount">Number of rows</param>
      <param name="columnCount">Number of columns</param>
      <param name="pasteOption">ClipboardPasteOptions</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.cellInfo">
      <summary>Specifies the previous contents of the range (before the paste).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.cellRange">
      <summary>Specifies the cell range of the Clipboard operation.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.clipCellInfo">
      <summary>Specifies the cell information to be pasted (retrieved from the Clipboard).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.clipColumnInfo">
      <summary>Specifies the column information to be pasted (retrieved from the Clipboard).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.clipRangeGroupInfos">
      <summary>Specifies the outline (range group) information for the Clipboard.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.clipRowInfo">
      <summary>Specifies the row information to be pasted (retrieved from the Clipboard).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.clipSheetCornerStyle">
      <summary>Specifies the sheet corner style to be pasted (retrieved from the Clipboard).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.clipText">
      <summary>Specifies the text pasted (retrieved from the Clipboard).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.columnInfo">
      <summary>Specifies the column level contents of the range (before paste).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.columnRangeGroupInfo">
      <summary>Specifies the outline (range group) information for columns.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.pasteOption">
      <summary>Specifies the Clipboard paste options.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.pasteToFill">
      <summary>Specifies whether the paste operation was performed with ClipboardPasteToFill</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.previewRowInfo">
      <summary>Specifies preview row information for the Clipboard.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.rowInfo">
      <summary>Specifies the row level contents of the range (before paste).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.rowRangeGroupInfo">
      <summary>Specifies the outline (range group) information for rows.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.shape">
      <summary>Specifies the shape object pasted (retrieved from the Clipboard).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.sheetCornerStyle">
      <summary>Specifies the sheet corner style of the range (before paste).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.sheetView">
      <summary>Specifies the sheet that contains the cell range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.text">
      <summary>Specifies the previous text contents of the range (before the paste).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.undoStateSaved">
      <summary>Specifies whether undo state information has been saved.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the Clipboard paste action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to get the undo state (active sheet, selection, and so on) and fire events during the operation. If its AutoClipboard property is false, then this action fails.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.SaveUndoState">
      <summary>Saves the undo state of this Clipboard operation action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ClipboardPasteUndoAction.Undo(System.Object)">
      <summary>Undoes the paste from the Clipboard.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction">
      <summary>Represents the undo actions for moving a column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a new ColumnMoveUndoAction action.</summary>
      <param name="sheetView">Sheet</param>
      <param name="column">Sheet source column index</param>
      <param name="movedToColumn">Sheet destination column index</param>
      <param name="moveContent">Whether to move content in models (or reorder columns)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a new ColumnMoveUndoAction action.</summary>
      <param name="sheetView">Sheet</param>
      <param name="column">Sheet source column index</param>
      <param name="movedToColumn">Sheet destination column index</param>
      <param name="movedColumnCount">Number of columns to move</param>
      <param name="moveContent">Whether to move content in models or reorder columns</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.actualMovedColumnCount">
      <summary>Specifies the actual number of columns that are moved successfully.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.column">
      <summary>Specifies the source column index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.count">
      <summary>Specifies the number of columns to move.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.moveContent">
      <summary>Specifies whether to move the content.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.movedToColumn">
      <summary>Specifies the destination column index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.sheetView">
      <summary>Specifies the sheet that contains the column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the column moving action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>This implementation does nothing, since undo state is specified in the constructor.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnMoveUndoAction.Undo(System.Object)">
      <summary>Undoes the column moving action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction">
      <summary>Represents the undo actions for resizing a column on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.ColumnWidthChangeExtents[],System.Int32,System.Boolean)">
      <summary>Creates a new undo action for column resizing.</summary>
      <param name="sheetView">Sheet</param>
      <param name="columns">ColumnWidthChangeExtents[]</param>
      <param name="size">Size</param>
      <param name="rowHeader">Whether the column being resized is in the row header area</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.columns">
      <summary>Specifies the column width change extents</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.oldsizes">
      <summary>Specifies the old sizes.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.rowHeader">
      <summary>Specifies whether the row header is involved.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.sheetView">
      <summary>Specifies the sheet that contains column resizing.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.size">
      <summary>Specifies the size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the column resizing action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.SaveUndoState">
      <summary>Saves undo information.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ColumnResizeUndoAction.Undo(System.Object)">
      <summary>Undoes the column resizing action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction">
      <summary>Represents the undo actions for conditional formatting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.#ctor">
      <summary>Creates a new undo action for conditional formatting.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[],FarPoint.Win.Spread.NamedStyle,FarPoint.Win.Spread.ComparisonOperator,FarPoint.CalcEngine.Expression,FarPoint.CalcEngine.Expression,System.String,System.String)">
      <summary>Creates a new undo action for a conditional formatting action of the specified range in the specified sheet.</summary>
      <param name="sheetView">sheetview object</param>
      <param name="cellRanges">cellrange object</param>
      <param name="nameStyle">namestyle object</param>
      <param name="comparisonOperator">comparisonOperator object</param>
      <param name="firstExpression">firstExpression object</param>
      <param name="lastExpression">lastExpression object</param>
      <param name="firstCondition">firstCondition object</param>
      <param name="lastCondition">lastCondition object</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.comparisonOperator">
      <summary>Specifies the comparisonOperator</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.firstCondition">
      <summary>Specifies the firstCondition</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.firstExpression">
      <summary>Specifies the firstExpression</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.lastCondition">
      <summary>Specifies the lastCondition</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.lastExpression">
      <summary>Specifies the lastExpression</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.nameStyle">
      <summary>Specifies the nameStyle</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.PerformUndoAction(System.Object)">
      <summary>Peforms the conditional formatting action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>If sender is a SpreadView object, it will be used to get the undo state (active sheet, selection, and so on.) and raise events during the operation. If its AutoClipboard property is false, then this action fails.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.SetConditionalFormat(System.Int32,System.Int32,FarPoint.Win.Spread.ConditionalFormat)">
      <summary>Sets conditional format(s) for the cell at the specified row and column.</summary>
      <param name="view" />
      <param name="row">Row index of cell</param>
      <param name="column">Column index of cell</param>
      <param name="conditionalFormats">Conditional format(s)</param>
      <returns>Whether the conditional format is set.</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>String</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoAction.Undo(System.Object)">
      <summary>Peforms the undo conditional formatting action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase">
      <summary>Represents the undo actions for the ConditionalFormattingBase class. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.#ctor">
      <summary>Creates a new ConditionalFormatUndoActionBase action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.Model.CellRange[])">
      <summary>Creates a new ConditionalFormatUndoActionBase action.</summary>
      <param name="sheetView">The sheetview object</param>
      <param name="cellRanges">The cellRange object</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.cellRanges">
      <summary>Specifies the cell range of the Clear Conditional Formatting</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.sheetView">
      <summary>Specifies the view of the Clear Conditional Formatting</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.ClearConditionalFormat">
      <summary>Clears the conditional format information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.GetCorrectConditionString(System.String)">
      <summary>Gets the correct condition format string.</summary>
      <param name="value">Condition format string</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.PerformUndoAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender">The object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.RestoreConditionalFormat">
      <summary>Restores the conditional format infomation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.SaveConditionalFormat">
      <summary>Saves the conditional format infomation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.SaveUndoState">
      <summary>Saves undo state information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConditionalFormatUndoActionBase.Undo(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender">The object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ConvertTableToRangeUndoAction">
      <summary>Represents the action that converts a table to a range.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConvertTableToRangeUndoAction.#ctor(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView,System.String)">
      <summary>Creates a new ConvertTableToRangeUndoAction object.</summary>
      <param name="sheetView">The sheetview that contains the table</param>
      <param name="tableView">Table to convert</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConvertTableToRangeUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the action.</summary>
      <param name="sender">The object</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConvertTableToRangeUndoAction.SaveUndoState">
      <summary>Creates a new AddTableUndoAction object.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ConvertTableToRangeUndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">The object</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction">
      <summary>Represents the undo action for deleting a shape or child control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.#ctor">
      <summary>Creates a new undo action for deleting a shape.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Object)">
      <summary>Creates a new undo action for deleting the specified shape in the specified SheetView.</summary>
      <param name="sheetView">SheetView</param>
      <param name="child">The child object</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.bounds">
      <summary>Specifies the boundary of the child area</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.child">
      <summary>Specifies the child to be deleted.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.index">
      <summary>Specifies the index of the child in its container before deleting.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.sheetView">
      <summary>Specifies the sheet that contains the shape being deleted.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.spreadView">
      <summary>Specifies the view that contains the sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.PerformUndoAction(System.Object)">
      <summary>Deletes the child.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.SaveUndoState">
      <summary>Saves the child object and its index (if it is a shape) before deletion.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.DeleteChildObjectUndoAction.Undo(System.Object)">
      <summary>Undoes deletion of a child object.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction">
      <summary>Represents the undo actions for entering a formula in the formula editor.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Creates a new instance of FormulaEditorUndoAction.</summary>
      <param name="sheetView">SheetView</param>
      <param name="row">The row index</param>
      <param name="column">The column index</param>
      <param name="rowCount">The row count</param>
      <param name="columnCount">The column count</param>
      <param name="formula">The formula string</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.actions">
      <summary>Specifies the array of cell edit actions handling the formula changes.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.cellRange">
      <summary>Specifies the cell range.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.formula">
      <summary>Specifies the formula being set.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.sheetView">
      <summary>Specifies the sheet that contains the cells.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.PerformUndoAction(System.Object)">
      <summary>Sets the formulas.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.FormulaEditorUndoAction.Undo(System.Object)">
      <summary>Undoes the formulas.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction">
      <summary>Represents the undo actions for clicking a column in the grouping bar to reverse sorting for that column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32)">
      <summary>Creates a new GroupClickUndoAction object.</summary>
      <param name="sheetView">SheetView</param>
      <param name="column">Index of column clicked</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.column">
      <summary>Specifies the index of the column clicked in the grouping bar.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.sheetView">
      <summary>Specifies the sheet that contains the column.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.ClickGroup(FarPoint.Win.Spread.SpreadView)">
      <summary>Helper function that reverses the sort in the clicked group (called by PerformUndoAction and Undo).</summary>
      <param name="spreadView">The object</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.PerformUndoAction(System.Object)">
      <summary>Reverses the sort in the clicked group.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.SaveUndoState">
      <summary>Saves undo state.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>This implementation does nothing, since undo state is specified in the constructor.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupClickUndoAction.Undo(System.Object)">
      <summary>Reverses the sort in the clicked group.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction">
      <summary>Represents the undo actions for drag-drop of a column to the grouping bar.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean)">
      <summary>Creates a new undo action for drag-drop of a column to the grouping bar.</summary>
      <param name="sheetView">SheetView</param>
      <param name="column">The column index</param>
      <param name="append">Whether to append</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean,System.Boolean,System.Int32)">
      <summary>Creates a new undo action for drag-drop of a column to the grouping bar.</summary>
      <param name="sheetView">Sheet index</param>
      <param name="column">Column index</param>
      <param name="append">Whether to append</param>
      <param name="dragFromGroupBar">Whether to drag from the grouping bar</param>
      <param name="targetColumn">Target column index</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.append">
      <summary>Specifies whether to append this column to the existing grouping or to create a new grouping.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.column">
      <summary>Specifies the index of the column dropped on the grouping bar.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.dragFromGroupBar">
      <summary>Specifies whether the user drags a box from the group bar.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.prevDataModel">
      <summary>Specifies the previous data model.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.prevSortInfo">
      <summary>Specifies the previous sort information.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.sheetView">
      <summary>Specifies the sheet that contains the column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.targetColumn">
      <summary>Specifies the target column location, if dragFromGroupBar is true.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.PerformUndoAction(System.Object)">
      <summary>Adds the column to the grouping bar.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.SaveUndoState">
      <summary>Saves the undo state.</summary>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.GroupColumnUndoAction.Undo(System.Object)">
      <summary>Undoes the grouping.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction">
      <summary>Represents the undo actions for a group button click action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.#ctor">
      <summary>Creates a new undo action for a range group.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Boolean)">
      <summary>Creates a new undo action for an outline (range group) for a specified sheet.</summary>
      <param name="sheetView">Sheet</param>
      <param name="activeLevel">Level</param>
      <param name="isRowGroup">Whether the outline (range group) is of rows</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.activeLevel">
      <summary>Specifies the level on which the action occurs.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.collapsedIndexList">
      <summary>Specifies the collection of collapsed indexes inside groups.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.isRowGroup">
      <summary>Specifies whether the action applies to an outline (range group) of rows.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.sheetView">
      <summary>Specifies the view of the Clipboard operation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.PerformUndoAction(System.Object)">
      <summary>Peforms the Clipboard cut action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to get the undo state (active sheet, selection, and so on.) and raise the events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.SaveUndoState">
      <summary>Saves the undo state of an outline (range group) button click action.</summary>
      <remarks>This implementation does nothing; undo state is saved by grouping or ungrouping after ungrouping or grouping.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupButtonClickUndoAction.Undo(System.Object)">
      <summary>Peforms the undo Clipboard cut action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction">
      <summary>Represents the undo actions for a collapse or expand action for range groups.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.#ctor">
      <summary>Creates a new undo action for the state of an outline (range group).</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.RangeGroupInfo,System.Boolean)">
      <summary>Creates a new undo action for the state of a specified outline (range group).</summary>
      <param name="sheetView">Sheet that contains the outline (range group)</param>
      <param name="group">Whether the action is for an outline (range group)</param>
      <param name="isRowGroup">Whether the action is an outline (range group) of rows</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.collapsedIndexList">
      <summary>Specifies the collection of collapsed indexes inside an outline (range group).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.group">
      <summary>Specifies the outline (range group) to expand or collapse.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.isRowGroup">
      <summary>Specifies whether the action applies to an outline (range group) of rows (or columns).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.sheetView">
      <summary>Specifies the view of the Clipboard operation.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.PerformUndoAction(System.Object)">
      <summary>Peforms the Clipboard cut action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If the sender is a SpreadView object, it is used to get the undo state (active sheet, selection, and so on.) and raise the events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.SaveUndoState">
      <summary>Saves the undo state of this range group.</summary>
      <remarks>This implementation does nothing; undo state is saved by grouping or ungrouping after ungrouping or grouping.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RangeGroupStateChangeUndoAction.Undo(System.Object)">
      <summary>Peforms the undo Clipboard cut action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction">
      <summary>Represents the undo actions for moving a row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a new undo action for row moving.</summary>
      <param name="sheetView">Sheet</param>
      <param name="row">Row index</param>
      <param name="movedToRow">Destination row index</param>
      <param name="moveContent">true to move content in SheetView.Models, false to reorder rows</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates a new undo action for row moving.</summary>
      <param name="sheetView">Sheet</param>
      <param name="row">Row index</param>
      <param name="movedToRow">Destination row index</param>
      <param name="movedRowCount">Number of rows to move</param>
      <param name="moveContent">true to move content in SheetView.Models, false to reorder rows</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.actualMovedRowCount">
      <summary>Specifies the actual number of columns that are moved successfully.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.count">
      <summary>Specifies the number of rows to move.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.moveContent">
      <summary>Specifies whether to move the content.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.movedToRow">
      <summary>Specifies the destination row index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.row">
      <summary>Specifies the source row index.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.sheetView">
      <summary>Specifies the sheet that contains the row.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the rows moving action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>This implementation does nothing, since undo state is specified in the constructor.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowMoveUndoAction.Undo(System.Object)">
      <summary>Performs the undo row moving action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction">
      <summary>Represents the undo actions for resizing a column on a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.RowHeightChangeExtents[],System.Int32,System.Boolean)">
      <summary>Creates a new undo action for row resizing.</summary>
      <param name="sheetView">Sheet</param>
      <param name="rows">Array of row height change extents</param>
      <param name="size">Size</param>
      <param name="columnHeader">Whether the row being resized is in the column header area</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.#ctor(FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.RowHeightChangeExtents[],System.Int32,System.Boolean,System.Boolean)">
      <summary>Creates a new undo action for row resizing.</summary>
      <param name="sheetView">Sheet</param>
      <param name="rows">Array of row height change extents</param>
      <param name="size">Size</param>
      <param name="columnHeader">Whether the row being resized is in the column header area</param>
      <param name="columnFooter">Whether the row being resized is in the column footer area</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.columnFooter">
      <summary>Specifies whether the column footer is involved.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.columnHeader">
      <summary>Specifies whether the column header is involved.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.oldsizes">
      <summary>Specifies the old sizes.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.rows">
      <summary>Specifies the row height change extents.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.sheetView">
      <summary>Specifies the sheet that contains the row resizing.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.size">
      <summary>Specifies the size.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the row resizing action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.SaveUndoState">
      <summary>Saves undo information.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.RowResizeUndoAction.Undo(System.Object)">
      <summary>Undoes the row resizing action.</summary>
      <param name="sender">Object on which the action occurred</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction">
      <summary>Represents the undo actions for renaming a sheet.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.String)">
      <summary>Creates a new SheetRenameUndoAction.</summary>
      <param name="sheetView">SheetView</param>
      <param name="newName">The string</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.newName">
      <summary>Specifies the new name for the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.oldName">
      <summary>Specifies the old name of the sheet.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.sheetView">
      <summary>Specifies the sheet being renamed.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the sheet rename action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.SaveUndoState">
      <summary>Saves the undo state.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetRenameUndoAction.Undo(System.Object)">
      <summary>Undoes the sheet rename action.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction">
      <summary>Represents the undo action for dragging and dropping a sheet tab to reorder the sheets in the control.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.#ctor(System.Int32,System.Int32)">
      <summary>Undoes the sheet tab drag-drop.</summary>
      <param name="from">From sheet tab index</param>
      <param name="to">To sheet tab index</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.from">
      <summary>Specifies the index of the sheet that is dragged and dropped.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.to">
      <summary>Specifies the new index of the sheet that is dragged and dropped.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.PerformUndoAction(System.Object)">
      <summary>Moves the sheet to the new index.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.SaveUndoState">
      <summary>Saves the undo state.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
      <remarks>This implementation does nothing since undo state is specified in the contstructor.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.SheetTabDragDropUndoAction.Undo(System.Object)">
      <summary>Moves the sheet back to its original index.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.TableResizeUndoAction">
      <summary>Represents the undo actions for table resizing.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.TableResizeUndoAction.#ctor(FarPoint.Win.Spread.FpSpread,FarPoint.Win.Spread.SheetView,FarPoint.Win.Spread.TableView,System.Int32,System.Int32)">
      <summary>Creates an instance of <see cref="T:FarPoint.Win.Spread.UndoRedo.TableResizeUndoAction" /></summary>
      <param name="fpSpread">The <see cref="T:FarPoint.Win.Spread.FpSpread" /> object.</param>
      <param name="sheetView">The <see cref="T:FarPoint.Win.Spread.SheetView" /> object.</param>
      <param name="tableView">The <see cref="T:FarPoint.Win.Spread.TableView" /> object.</param>
      <param name="newRowCount">New row count to resize.</param>
      <param name="newColumnCount">New column count to resize.</param>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.UndoAction">
      <summary>Represents the actions in the component for which the user can perform an undo or redo. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoAction.#ctor">
      <summary>Creates a new undo action.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoAction.Clone">
      <summary>Clones the object.</summary>
      <returns>New copy of this UndoAction</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoAction.PerformAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender">object</param>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoAction.PerformUndoAction(System.Object)">
      <summary>Performs the undo action.</summary>
      <param name="sender" />
      <returns>Boolean: true if successful; otherwise, false</returns>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoAction.SaveUndoState">
      <summary>Saves undo state information.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoAction.Undo(System.Object)">
      <summary>Undoes the action.</summary>
      <param name="sender">object</param>
      <remarks>If sender is a SpreadView object, it will be used to fire events during the operation.</remarks>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.UndoManager">
      <summary>Represents the manager of the undo actions for the Spread component.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.#ctor(FarPoint.Win.Spread.SpreadView,System.Int32)">
      <summary>Creates a new undo action manager.</summary>
      <param name="spreadView">View</param>
      <param name="maxLength">Maximum number of actions to remember for undo or redo, or -1 for no limit</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.actionCancelled">
      <summary>Specifies whether the pending action has been cancelled.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.actionIsRedo">
      <summary>Specifies whether actionInProcess is being redone</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.actionIsUndo">
      <summary>Specifies whether actionInProcess is being undone</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.actionPending">
      <summary>Specifies whether an action is in progress (to prevent recursion).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.maxLength">
      <summary>Specifies the maximum number of UndoAction objects to keep on the undo or redo stacks.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.mredoList">
      <summary>Specifies the redo stack (last element is on top).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.mundoList">
      <summary>Specifies the undo stack (last element is on top).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.UndoManager.spreadView">
      <summary>Specifies the view passed to the constructor.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.UndoRedo.UndoManager.CanRedo">
      <summary>Gets whether Redo can redo an action.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.UndoRedo.UndoManager.CanUndo">
      <summary>Gets whether Undo can undo an action.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.UndoRedo.UndoManager.RedoList">
      <summary>Gets the list of UndoAction objects.</summary>
    </member>
    <member name="P:FarPoint.Win.Spread.UndoRedo.UndoManager.UndoList">
      <summary>Gets the list of UndoAction objects.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.CancelAction">
      <summary>Cancels the current action in progress.</summary>
      <remarks>This method is intended to be used in event handlers when an UndoAction raises an event that permits cancelling of the action. You can call this method and then use PerformUndoAction to do another UndoAction instead, but you must be sure to cancel the default processing in the event handler to prevent the original UndoAction that raised the event from doing its processing too.</remarks>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.GetActionPending">
      <summary>Gets the current UndoAction pending completion.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.PerformUndoAction(FarPoint.Win.Spread.UndoRedo.UndoAction)">
      <summary>Performs the specified action (it can then be undone with Undo).</summary>
      <param name="action">UndoAction</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.PopRedo">
      <summary>Pops the top action from the redo stack.</summary>
      <returns>UndoAction</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.PopUndo">
      <summary>Pops the top action from the undo stack.</summary>
      <returns>UndoAction</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.PushRedo(FarPoint.Win.Spread.UndoRedo.UndoAction)">
      <summary>Pushes the specified action onto the redo stack.</summary>
      <param name="action">UndoAction</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.PushUndo(FarPoint.Win.Spread.UndoRedo.UndoAction,System.Boolean)">
      <summary>Pushes the specified action onto the undo stack.</summary>
      <param name="action">Undo action</param>
      <param name="clearRedo">True to clear the redo stack (action is being performed), false otherwise (action is being undone)</param>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.Redo">
      <summary>Redoes the last action undone with Undo and adds it to the undo list.</summary>
      <returns>True if successful</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.Redo(System.Int32)">
      <summary>Redoes the specified number of actions and adds them to the undo list.</summary>
      <param name="count">Number of actions to redo, or -1 to redo all pending actions</param>
      <returns>True if successful</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.Redo(FarPoint.Win.Spread.UndoRedo.UndoAction)">
      <summary>Redoes all actions in the redo stack up to and including the specified action and adds it to the undo list.</summary>
      <returns>True if successful</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.Undo">
      <summary>Undoes the last action done with PerformUndoAction and adds it to the redo list.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.Undo(System.Int32)">
      <summary>Undoes the specified number of actions and adds them to the redo list.</summary>
      <param name="count">Number of actions to undo, or -1 to undo all actions</param>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoManager.Undo(FarPoint.Win.Spread.UndoRedo.UndoAction)">
      <summary>Undoes all actions in the undo stack up to and including the specified action and adds it to the redo list.</summary>
      <param name="action">UndoAction to undo</param>
    </member>
    <member name="E:FarPoint.Win.Spread.UndoRedo.UndoManager.ActionComplete">
      <summary>Occurs when the undo or redo action is complete.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.UndoRedo.UndoManager.RedoComplete">
      <summary>Occurs when the redo action is complete.</summary>
    </member>
    <member name="E:FarPoint.Win.Spread.UndoRedo.UndoManager.UndoComplete">
      <summary>Occurs when the undo action is complete.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.UndoRedoEventArgs">
      <summary>Represents the event data for the undo and redo events handled by the undo manager.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.UndoRedoEventArgs.#ctor(FarPoint.Win.Spread.UndoRedo.UndoAction)">
      <summary>Creates a new set of event data for an undo action.</summary>
      <param name="action">Undo action</param>
    </member>
    <member name="P:FarPoint.Win.Spread.UndoRedo.UndoRedoEventArgs.Action">
      <summary>Gets the undo action which has just completed.</summary>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction">
      <summary>Represents the undo action for zooming a sheet</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.#ctor(FarPoint.Win.Spread.SheetView,System.Single)">
      <summary>Creates a new ZoomUndoAction object.</summary>
      <param name="sheetView">Sheet</param>
      <param name="zoomFactor">Scaling (zoom) factor</param>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.prevZoomFactor">
      <summary>Previous value of the scaling factor (zoom).</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.sheetView">
      <summary>Specifies the sheet that contains the column.</summary>
    </member>
    <member name="F:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.zoomFactor">
      <summary>Specifies the scaling factor (zoom) to set.</summary>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.PerformUndoAction(System.Object)">
      <summary>Zooms the sheet.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.SaveUndoState">
      <summary>Saves the undo state.</summary>
      <returns>Boolean: true if successful; false otherwise</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.ToString">
      <summary>Returns a string that represents this object.</summary>
      <returns>The string</returns>
    </member>
    <member name="M:FarPoint.Win.Spread.UndoRedo.ZoomUndoAction.Undo(System.Object)">
      <summary>Undoes the zoom.</summary>
      <param name="sender">The object</param>
      <returns>Boolean: true if successful; otherwise, false</returns>
    </member>
    <member name="T:FarPoint.Win.Spread.UndoRedo.UndoRedoEventHandler">
      <summary>Represents a defined method that handles the undo and redo events from the undo manager.</summary>
      <param name="sender">UndoManager</param>
      <param name="e">Undo or redo event data</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Win.Factory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Win.Factory" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Win.Factory.CreateWorkbookSet(System.Globalization.CultureInfo,FarPoint.Win.Spread.LegacyBehaviors)">
      <summary>Creates the workbook set.</summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>WorkbookSet.</returns>
    </member>
  </members>
</doc>