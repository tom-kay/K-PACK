<?xml version="1.0" encoding="utf-8"?>
<SmartSqlMap Scope="Biz.ExportMng" xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">
	<Statements>
		<Statement Id="SelectAdd">
			,`exp`.CompanyCode
			,ifnull(`exp`.DelYn,'N') AS DelYn
			,`exp`.`CreateId`
			,date_format(`exp`.CreateDt, '%Y-%m-%d %H:%i:%s') AS `CreateDt`
			,`exp`.`UpdateId`
			,date_format(`exp`.UpdateDt, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`
			,`exp`.`DeleteId`
			,date_format(`exp`.DeleteDt, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
		</Statement>
		
		<!-- ExportMaster 관련 쿼리 -->
		<Statement Id="selectExportMasterList">
			SELECT
			`exp`.`InvoiceNo`,
			`exp`.`InvoiceDate`,
			`exp`.`ShipperCode`,
			`exp`.`ShipperAddress`,
			`exp`.`ConsigneeCode`,
			`exp`.`ConsigneeAddress`,
			`exp`.`NotifyCode`,
			`exp`.`NotifyAddress`,
			`exp`.`BuyerCode`,
			`exp`.`BuyerAddress`,
			`exp`.`DepartureDate`,
			`exp`.`CarrierName`,
			`exp`.`PolCode`,
			`exp`.`DeliveryTermCode`,
			`exp`.`DestinationName`,
			`exp`.`PaymentTermCode`,
			`exp`.`PaymentDesc`,
			`exp`.`Measurement`,
			`exp`.`NetWeight`,
			`exp`.`GrossWeight`,
			`exp`.`ShippingMark`,
			`exp`.`Remark`,
			`exp`.`PackingRemark`,
			`exp`.`InvoiceRemark`
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `tb_export_master` exp
			WHERE `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
		</Statement>

		<Statement Id="selectExportMaster">
			SELECT
			`exp`.`InvoiceNo`,
			`exp`.`InvoiceDate`,
			`exp`.`ShipperCode`,
			`exp`.`ShipperAddress`,
			`exp`.`ConsigneeCode`,
			`exp`.`ConsigneeAddress`,
			`exp`.`NotifyCode`,
			`exp`.`NotifyAddress`,
			`exp`.`BuyerCode`,
			`exp`.`BuyerAddress`,
			`exp`.`DepartureDate`,
			`exp`.`CarrierName`,
			`exp`.`PolCode`,
			`exp`.`DeliveryTermCode`,
			`exp`.`DestinationName`,
			`exp`.`PaymentTermCode`,
			`exp`.`PaymentDesc`,
			`exp`.`Measurement`,
			`exp`.`NetWeight`,
			`exp`.`GrossWeight`,
			`exp`.`ShippingMark`,
			`exp`.`Remark`,
			`exp`.`PackingRemark`,
			`exp`.`InvoiceRemark`
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `tb_export_master` exp
			WHERE `InvoiceNo` = @InvoiceNo
			AND `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
			LIMIT 1
		</Statement>

		<Statement Id="insertExportMaster">
			INSERT INTO `tb_export_master`
			(
			`InvoiceNo`,
			`InvoiceDate`,
			`ShipperCode`,
			`ShipperAddress`,
			`ConsigneeCode`,
			`ConsigneeAddress`,
			`NotifyCode`,
			`NotifyAddress`,
			`BuyerCode`,
			`BuyerAddress`,
			`DepartureDate`,
			`CarrierName`,
			`PolCode`,
			`DeliveryTermCode`,
			`DestinationName`,
			`PaymentTermCode`,
			`PaymentDesc`,
			`Measurement`,
			`NetWeight`,
			`GrossWeight`,
			`ShippingMark`,
			`Remark`,
			`PackingRemark`,
			`InvoiceRemark`,
			`CompanyCode`,
			`DelYn`,
			`CreateId`,
			`CreateDt`
			)
			VALUES
			(
			@InvoiceNo,
			@InvoiceDate,
			@ShipperCode,
			@ShipperAddress,
			@ConsigneeCode,
			@ConsigneeAddress,
			@NotifyCode,
			@NotifyAddress,
			@BuyerCode,
			@BuyerAddress,
			@DepartureDate,
			@CarrierName,
			@PolCode,
			@DeliveryTermCode,
			@DestinationName,
			@PaymentTermCode,
			@PaymentDesc,
			@Measurement,
			@NetWeight,
			@GrossWeight,
			@ShippingMark,
			@Remark,
			@PackingRemark,
			@InvoiceRemark,
			@CompanyCode,
			'N',
			@CreateId,
			now()
			)
		</Statement>

		<Statement Id="updateExportMaster">
			UPDATE `tb_export_master`
			SET
			`InvoiceDate` = @InvoiceDate,
			`ShipperCode` = @ShipperCode,
			`ShipperAddress` = @ShipperAddress,
			`ConsigneeCode` = @ConsigneeCode,
			`ConsigneeAddress` = @ConsigneeAddress,
			`NotifyCode` = @NotifyCode,
			`NotifyAddress` = @NotifyAddress,
			`BuyerCode` = @BuyerCode,
			`BuyerAddress` = @BuyerAddress,
			`DepartureDate` = @DepartureDate,
			`CarrierName` = @CarrierName,
			`PolCode` = @PolCode,
			`DeliveryTermCode` = @DeliveryTermCode,
			`DestinationName` = @DestinationName,
			`PaymentTermCode` = @PaymentTermCode,
			`PaymentDesc` = @PaymentDesc,
			`Measurement` = @Measurement,
			`NetWeight` = @NetWeight,
			`GrossWeight` = @GrossWeight,
			`ShippingMark` = @ShippingMark,
			`Remark` = @Remark,
			`PackingRemark` = @PackingRemark,
			`InvoiceRemark` = @InvoiceRemark,
			`DelYn` = 'N',
			`UpdateId` = @UpdateId,
			`UpdateDt` = now(),
			`DeleteId` = null,
			`DeleteDt` = null
			WHERE `InvoiceNo` = @InvoiceNo
			AND `CompanyCode` = @CompanyCode
		</Statement>

		<Statement Id="deleteExportMaster">
			UPDATE `tb_export_master` SET
			`DelYn` = 'Y',
			`DeleteId` = @DeleteId,
			`DeleteDt` = now()
			WHERE `InvoiceNo` = @InvoiceNo
			AND `CompanyCode` = @CompanyCode
		</Statement>

		<!-- ExportContainer 관련 쿼리 -->
		<Statement Id="selectExportContainerList">
			SELECT
			`cntr`.`InvoiceNo`,
			`cntr`.`ContainerNo`,
			`cntr`.`SealNo1`,
			`cntr`.`SealNo2`,
			`cntr`.`SealNo3`
			FROM `tb_export_container` cntr
			WHERE `InvoiceNo` = @InvoiceNo
			AND `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
		</Statement>

		<Statement Id="selectExportContainer">
			SELECT
			`cntr`.`InvoiceNo`,
			`cntr`.`ContainerNo`,
			`cntr`.`SealNo1`,
			`cntr`.`SealNo2`,
			`cntr`.`SealNo3`
			FROM `tb_export_container` cntr
			WHERE `InvoiceNo` = @InvoiceNo
			AND `ContainerId` = @ContainerId
			AND `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
			LIMIT 1
		</Statement>

		<Statement Id="mergeExportContainer">
			MERGE INTO `tb_export_container` AS target
			USING (
			SELECT
			@InvoiceNo AS `InvoiceNo`,
			@ContainerNo AS `ContainerNo`,
			@SealNo1 AS `SealNo1`,
			@SealNo2 AS `SealNo2`,
			@SealNo3 AS `SealNo3`,
			@CompanyCode AS `CompanyCode`,
			@CreateId AS `CreateId`,
			@UpdateId AS `UpdateId`
			) AS source
			ON (
			target.`InvoiceNo` = source.`InvoiceNo`
			AND target.`ContainerNo` = source.`ContainerNo`
			AND target.`CompanyCode` = source.`CompanyCode`
			)
			WHEN MATCHED THEN
			UPDATE SET
			target.`SealNo1` = source.`SealNo1`,
			target.`SealNo2` = source.`SealNo2`,
			target.`SealNo3` = source.`SealNo3`,
			target.`DelYn` = 'N',
			target.`UpdateId` = source.`UpdateId`,
			target.`UpdateDt` = now(),
			target.`DeleteId` = null,
			target.`DeleteDt` = null
			WHEN NOT MATCHED THEN
			INSERT (
			`InvoiceNo`,
			`ContainerNo`,
			`SealNo1`,
			`SealNo2`,
			`SealNo3`,
			`CompanyCode`,
			`DelYn`,
			`CreateId`,
			`CreateDt`
			)
			VALUES (
			source.`InvoiceNo`,
			source.`ContainerNo`,
			source.`SealNo1`,
			source.`SealNo2`,
			source.`SealNo3`,
			source.`CompanyCode`,
			'N',
			source.`CreateId`,
			now()
			);
		</Statement>

		<Statement Id="deleteExportContainer">
			UPDATE `tb_export_container` SET
			`DelYn` = 'Y',
			`DeleteId` = @DeleteId,
			`DeleteDt` = now()
			WHERE `InvoiceNo` = @InvoiceNo 
			AND `ContainerNo` = @ContainerNo
			AND `CompanyCode` = @CompanyCode
		</Statement>

		<!-- ExportPacking 관련 쿼리 -->
		<Statement Id="selectExportPackingList">
			SELECT
			`pack`.`InvoiceNo`,
			`pack`.`PackingId`,
			`pack`.`OrderNo`,
			`pack`.`OrderDetailId`,
			`pack`.`PkgUnitCode`,
			`pack`.`PkgStartNo`,
			`pack`.`PkgEndNo`,
			`pack`.`Qty`,
			`pack`.`PkgQty`,
			`pack`.`CompanyCode`,
			`pack`.`DelYn`,
			`pack`.`CreateId`,
			date_format(`pack`.`CreateDt`, '%Y-%m-%d %H:%i:%s') AS `CreateDt`,
			`pack`.`UpdateId`,
			date_format(`pack`.`UpdateDt`, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`,
			`pack`.`DeleteId`,
			date_format(`pack`.`DeleteDt`, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
			FROM `tb_export_packing` pack
			WHERE `InvoiceNo` = @InvoiceNo
			AND `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
		</Statement>

		<Statement Id="selectExportPacking">
			SELECT
			`pack`.`InvoiceNo`,
			`pack`.`PackingId`,
			`pack`.`OrderNo`,
			`pack`.`OrderDetailId`,
			`pack`.`PkgUnitCode`,
			`pack`.`PkgStartNo`,
			`pack`.`PkgEndNo`,
			`pack`.`Qty`,
			`pack`.`PkgQty`,
			`pack`.`CompanyCode`,
			`pack`.`DelYn`,
			`pack`.`CreateId`,
			date_format(`pack`.`CreateDt`, '%Y-%m-%d %H:%i:%s') AS `CreateDt`,
			`pack`.`UpdateId`,
			date_format(`pack`.`UpdateDt`, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`,
			`pack`.`DeleteId`,
			date_format(`pack`.`DeleteDt`, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
			FROM `tb_export_packing` pack
			WHERE `InvoiceNo` = @InvoiceNo
			AND `PackingId` = @PackingId
			AND `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
			LIMIT 1
		</Statement>

		<Statement Id="mergeExportPacking">
			MERGE INTO `tb_export_packing` AS target
			USING (
			SELECT
			@InvoiceNo AS `InvoiceNo`,
			@PackingId AS `PackingId`,
			@OrderNo AS `OrderNo`,
			@OrderDetailId AS `OrderDetailId`,
			@PkgUnitCode AS `PkgUnitCode`,
			@PkgStartNo AS `PkgStartNo`,
			@PkgEndNo AS `PkgEndNo`,
			@Qty AS `Qty`,
			@PkgQty AS `PkgQty`,
			@CompanyCode AS `CompanyCode`,
			@CreateId AS `CreateId`,
			@UpdateId AS `UpdateId`
			) AS source
			ON (
			target.`InvoiceNo` = source.`InvoiceNo`
			AND target.`PackingId` = source.`PackingId`
			AND target.`CompanyCode` = source.`CompanyCode`
			)
			WHEN MATCHED THEN
			UPDATE SET
			target.`OrderNo` = source.`OrderNo`,
			target.`OrderDetailId` = source.`OrderDetailId`,
			target.`PkgUnitCode` = source.`PkgUnitCode`,
			target.`PkgStartNo` = source.`PkgStartNo`,
			target.`PkgEndNo` = source.`PkgEndNo`,
			target.`Qty` = source.`Qty`,
			target.`PkgQty` = source.`PkgQty`,
			target.`DelYn` = 'N',
			target.`UpdateId` = source.`UpdateId`,
			target.`UpdateDt` = now(),
			target.`DeleteId` = null,
			target.`DeleteDt` = null
			WHEN NOT MATCHED THEN
			INSERT (
			`InvoiceNo`,
			`PackingId`,
			`OrderNo`,
			`OrderDetailId`,
			`PkgUnitCode`,
			`PkgStartNo`,
			`PkgEndNo`,
			`Qty`,
			`PkgQty`,
			`CompanyCode`,
			`DelYn`,
			`CreateId`,
			`CreateDt`
			)
			VALUES (
			source.`InvoiceNo`,
			source.`PackingId`,
			source.`OrderNo`,
			source.`OrderDetailId`,
			source.`PkgUnitCode`,
			source.`PkgStartNo`,
			source.`PkgEndNo`,
			source.`Qty`,
			source.`PkgQty`,
			source.`CompanyCode`,
			'N',
			source.`CreateId`,
			now()
			);
		</Statement>

		<Statement Id="deleteExportPacking">
			UPDATE `tb_export_packing` SET
			`DelYn` = 'Y',
			`DeleteId` = @DeleteId,
			`DeleteDt` = now()
			WHERE `InvoiceNo` = @InvoiceNo 
			AND `PackingId` = @PackingId
			AND `CompanyCode` = @CompanyCode
		</Statement>

		<!-- ExportInvoice 관련 쿼리 -->
		<Statement Id="selectExportInvoiceList">
			SELECT
			`inv`.`InvoiceNo`,
			`inv`.`InvoiceId`,
			`inv`.`OrderNo`,
			`inv`.`OrderDetailId`,
			`inv`.`ProdLength`,
			`inv`.`UsQty`,
			`inv`.`Qty`,
			`inv`.`Price`,
			`inv`.`Amount`,
			`inv`.`CompanyCode`,
			`inv`.`DelYn`,
			`inv`.`CreateId`,
			date_format(`inv`.`CreateDt`, '%Y-%m-%d %H:%i:%s') AS `CreateDt`,
			`inv`.`UpdateId`,
			date_format(`inv`.`UpdateDt`, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`,
			`inv`.`DeleteId`,
			date_format(`inv`.`DeleteDt`, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
			FROM `tb_export_invoice` inv
			WHERE `CompanyCode` = @CompanyCode
			AND `InvoiceNo` = @InvoiceNo
			AND `DelYn` != 'Y'
		</Statement>

		<Statement Id="selectExportInvoice">
			SELECT
			`inv`.`InvoiceNo`,
			`inv`.`InvoiceId`,
			`inv`.`OrderNo`,
			`inv`.`OrderDetailId`,
			`inv`.`ProdLength`,
			`inv`.`UsQty`,
			`inv`.`Qty`,
			`inv`.`Price`,
			`inv`.`Amount`,
			`inv`.`CompanyCode`,
			`inv`.`DelYn`,
			`inv`.`CreateId`,
			date_format(`inv`.`CreateDt`, '%Y-%m-%d %H:%i:%s') AS `CreateDt`,
			`inv`.`UpdateId`,
			date_format(`inv`.`UpdateDt`, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`,
			`inv`.`DeleteId`,
			date_format(`inv`.`DeleteDt`, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
			FROM `tb_export_invoice` inv
			WHERE `InvoiceNo` = @InvoiceNo 
			AND `InvoiceId` = @InvoiceId
			AND `CompanyCode` = @CompanyCode
			AND `DelYn` != 'Y'
			LIMIT 1
		</Statement>

		<Statement Id="mergeExportInvoice">
			MERGE INTO `tb_export_invoice` AS target
			USING (
			SELECT
			@InvoiceNo AS `InvoiceNo`,
			@InvoiceId AS `InvoiceId`,
			@OrderNo AS `OrderNo`,
			@OrderDetailId AS `OrderDetailId`,
			@ProdLength AS `ProdLength`,
			@UsQty AS `UsQty`,
			@Qty AS `Qty`,
			@Price AS `Price`,
			@Amount AS `Amount`,
			@CompanyCode AS `CompanyCode`,
			@CreateId AS `CreateId`,
			@UpdateId AS `UpdateId`
			) AS source
			ON (
			target.`InvoiceNo` = source.`InvoiceNo`
			AND target.`InvoiceId` = source.`InvoiceId`
			AND target.`CompanyCode` = source.`CompanyCode`
			)
			WHEN MATCHED THEN
			UPDATE SET
			target.`OrderNo` = source.`OrderNo`,
			target.`OrderDetailId` = source.`OrderDetailId`,
			target.`ProdLength` = source.`ProdLength`,
			target.`UsQty` = source.`UsQty`,
			target.`Qty` = source.`Qty`,
			target.`Price` = source.`Price`,
			target.`Amount` = source.`Amount`,
			target.`DelYn` = 'N',
			target.`UpdateId` = source.`UpdateId`,
			target.`UpdateDt` = now()
			WHEN NOT MATCHED THEN
			INSERT (
			`InvoiceNo`,
			`InvoiceId`,
			`OrderNo`,
			`OrderDetailId`,
			`ProdLength`,
			`UsQty`,
			`Qty`,
			`Price`,
			`Amount`,
			`CompanyCode`,
			`DelYn`,
			`CreateId`,
			`CreateDt`
			)
			VALUES (
			source.`InvoiceNo`,
			source.`InvoiceId`,
			source.`OrderNo`,
			source.`OrderDetailId`,
			source.`ProdLength`,
			source.`UsQty`,
			source.`Qty`,
			source.`Price`,
			source.`Amount`,
			source.`CompanyCode`,
			'N',
			source.`CreateId`,
			now()
			);
		</Statement>

		<Statement Id="deleteExportInvoice">
			UPDATE `tb_export_invoice` SET
			`DelYn` = 'Y',
			`DeleteId` = @DeleteId,
			`DeleteDt` = now()
			WHERE `InvoiceNo` = @InvoiceNo 
			AND `InvoiceId` = @InvoiceId
			AND `CompanyCode` = @CompanyCode
		</Statement>

	</Statements>
</SmartSqlMap>

