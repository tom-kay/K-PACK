<?xml version="1.0" encoding="utf-8"?>
<SmartSqlMap Scope="Base.CustomerMng" xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">
	<Statements>
		<Statement Id="SelectAdd">
			, cust.CompanyCode
			, ifnull(`cust`.DelYn,'N') AS DelYn
			,`cust`.`CreateId`
			,date_format(`cust`.CreateDt, '%Y-%m-%d %H:%i:%s') AS `CreateDt`
			,`cust`.`UpdateId`
			,date_format(`cust`.UpdateDt, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`
			,`cust`.`DeleteId`
			,date_format(`cust`.DeleteDt, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
		</Statement>

		<Statement Id="selectCustomerList">
			SELECT cust.`CustCode`,
			cust.`CustName`,
			CAST(AES_DECRYPT(UNHEX(cust.`CompanyNo`), cust.`CustCode`) AS CHAR) AS CompanyNo,
			cust.`Address1`,
			cust.`Address2`,
			cust.`TelNo`,
			cust.`FaxNo`,
			cust.`Email`,
			cust.`NationCode`,
			nat.`Name` AS NationName,
			cust.`DealTypeSale`,
			cust.`DealTypeBuy`,
			cust.`DealTypeProc`,
			cust.`DealTypeGeneral`,
			cust.`OwnerName`,
			cust.`BankName`,
			cust.`AccountNo`,
			cust.`Depositor`,
			cust.`Remark`
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `tb_customer` AS cust
			LEFT JOIN tb_CodeDetail AS nat
			ON nat.MasterCode = 'NATIONALITY'
			AND cust.NationCode = nat.`Code`
			WHERE CompanyCode = @CompanyCode
			<IsNotEmpty Prepend="And" Property="CustCode" CompareValue="">
				cust.`CustCode` Like Concat('%', @CustCode, '%')
			</IsNotEmpty>
			<IsNotEmpty Prepend="And" Property="CustName" CompareValue="">
				cust.`CustName` Like Concat('%', @CustName, '%')
			</IsNotEmpty>
			<IsNotEmpty Prepend="And" Property="NationCode" CompareValue="">
				cust.`NationCode` = @NationCode
			</IsNotEmpty>
			<Switch Prepend="And" Property="DelYn">
				<Case CompareValue="Y">
					cust.`DelYn` IS NOT NULL AND cust.`DelYn` = 'Y'
				</Case>
				<Case CompareValue="N">
					(cust.`DelYn` IS NULL OR cust.`DelYn` != 'Y')
				</Case>
			</Switch>
			AND ( 1=2
			<IsTrue Prepend="Or" Property="DealTypeSale">
				cust.`DealTypeSale` = @DealTypeSale
			</IsTrue>
			<IsTrue Prepend="Or" Property="DealTypeBuy">
				cust.`DealTypeBuy` = @DealTypeBuy
			</IsTrue>
			<IsTrue Prepend="Or" Property="DealTypeProc">
				cust.`DealTypeProc` = @DealTypeProc
			</IsTrue>
			<IsTrue Prepend="Or" Property="DealTypeGeneral">
				cust.`DealTypeGeneral` = @DealTypeGeneral
			</IsTrue>
			)
		</Statement>

		<Statement Id="selectCustomer">
			SELECT cust.`CustCode`,
			cust.`CustName`,
			CAST(AES_DECRYPT(UNHEX(cust.`CompanyNo`), cust.`CustCode`) AS CHAR) AS CompanyNo,
			cust.`Address1`,
			cust.`Address2`,
			cust.`TelNo`,
			cust.`FaxNo`,
			cust.`Email`,
			cust.`NationCode`,
			nat.`Name` AS NationName,
			cust.`DealTypeSale`,
			cust.`DealTypeBuy`,
			cust.`DealTypeProc`,
			cust.`DealTypeGeneral`,
			cust.`OwnerName`,
			cust.`BankName`,
			cust.`AccountNo`,
			cust.`Depositor`,
			cust.`Remark`
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `tb_customer` AS cust
			LEFT JOIN tb_codedetail AS nat
			ON nat.MasterCode = 'NATIONALITY'
			AND nat.`code` = cust.NationCode
			WHERE cust.CustCode = @CustCode
				AND `cust`.`CompanyCode` = @CompanyCode
		</Statement>

		<Statement Id="insertCustomer">

			INSERT INTO `soodal`.`tb_customer`
			(`CustCode`,
			`CustName`,
			`CompanyNo`,
			`Address1`,
			`Address2`,
			`TelNo`,
			`FaxNo`,
			`Email`,
			`NationCode`,
			`DealTypeSale`,
			`DealTypeBuy`,
			`DealTypeProc`,
			`DealTypeGeneral`,
			`OwnerName`,
			`BankName`,
			`AccountNo`,
			`Depositor`,
			`Remark`,
			`CompanyCode`,
			`DelYn`,
			`CreateId`,
			`CreateDt`)
			VALUES
			(@CustCode,
			@CustName,
			HEX(AES_ENCRYPT(@CompanyNo, @CustCode)),
			@Address1,
			@Address2,
			@TelNo,
			@FaxNo,
			@Email,
			@NationCode,
			@DealTypeSale,
			@DealTypeBuy,
			@DealTypeProc,
			@DealTypeGeneral,
			@OwnerName,
			@BankName,
			@AccountNo,
			@Depositor,
			@Remark,
			@CompanyCode,
			'N',
			@CreateId,
			now())
			ON DUPLICATE KEY UPDATE
			`CustName` = @CustName,
			`CompanyNo` = HEX(AES_ENCRYPT(@CompanyNo, CustCode)),
			`Address1` = @Address1,
			`Address2` = @Address2,
			`TelNo` = @TelNo,
			`FaxNo` = @FaxNo,
			`Email` = @Email,
			`NationCode` = @NationCode,
			`DealTypeSale` = @DealTypeSale,
			`DealTypeBuy` = @DealTypeBuy,
			`DealTypeProc` = @DealTypeProc,
			`DealTypeGeneral` = @DealTypeGeneral,
			`OwnerName` = @OwnerName,
			`BankName` = @BankName,
			`AccountNo` = @AccountNo,
			`Depositor` = @Depositor,
			`Remark` = @Remark,
			`DelYn` = 'N',
			`UpdateId` = @UpdateId,
			`UpdateDt` = now(),
			`DeleteId` = null,
			`DeleteDt` = null
			;
		</Statement>


		<Statement Id="deleteCustomer" >
			UPDATE `soodal`.`tb_customer`
			SET
			`DelYn` = 'Y',
			`DeleteId` = @DeleteId,
			`DeleteDt` = now()
			WHERE CustCode = @CustCode
				AND `CompanyCode` = @CompanyCode
		</Statement>


		<Statement Id="selectCustomerEmpList">
			SELECT cust.`CustCode`,
			cust.`EmpIdx`,
			cust.`EmpName`,
			cust.`PositionName`,
			cust.`TelNo`,
			cust.`MobileNo`,
			cust.`Email`,
			cust.`TaskCharge`,
			cust.`Remark`
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `soodal`.`tb_customeremp` AS cust
			WHERE cust.CustCode = @CustCode
				AND cust.DelYn = 'N'
		</Statement>

		<Statement Id="insertCustomerEmp">

			INSERT INTO `soodal`.`tb_customeremp`
			(`CustCode`,
			`EmpIdx`,
			`EmpName`,
			`PositionName`,
			`TelNo`,
			`MobileNo`,
			`Email`,
			`TaskCharge`,
			`Remark`,
			`CompanyCode`,
			`DelYn`,
			`CreateId`,
			`CreateDt`)
			VALUES
			(@CustCode,
			`FN_CreateCustEmpIdx`(@CompanyCode, @CustCode, @EmpIdx),
			@EmpName,
			@PositionName,
			@TelNo,
			@MobileNo,
			@Email,
			@TaskCharge,
			@Remark,
			@CompanyCode,
			'N',
			@CreateId,
			now())
			ON DUPLICATE KEY UPDATE
			`EmpName` = @EmpName,
			`PositionName` = @PositionName,
			`TelNo` = @TelNo,
			`MobileNo` = @MobileNo,
			`Email` = @Email,
			`TaskCharge` = @TaskCharge,
			`Remark` = @Remark,
			`DelYn` = 'N',
			`UpdateId` = @UpdateId,
			`UpdateDt` = now(),
			`DeleteId` = null,
			`DeleteDt` = null

		</Statement>

		<Statement Id="deleteCustomerEmp" >
			UPDATE `soodal`.`tb_customeremp`
			SET
			`DelYn` = 'Y',
			`DeleteId` = @DeleteId,
			`DeleteDt` = now()
			WHERE CustCode = @CustCode
			AND `EmpIdx` = @EmpIdx
			AND `CompanyCode` = @CompanyCode
		</Statement>


		<Statement Id="selectCustomerPopupList">
			SELECT cust.`CustCode`,
			cust.`CustName`
			FROM `tb_customer` AS cust
			LEFT JOIN tb_CodeDetail AS nat
			ON nat.MasterCode = 'NATIONALITY'
			AND cust.NationCode = nat.`Code`
			WHERE CompanyCode = @CompanyCode
			AND (cust.`DelYn` IS NULL OR cust.`DelYn` != 'Y')
			<IsNotEmpty Prepend="And" Property="CustCode" CompareValue="">
				cust.`CustCode` Like Concat('%', @CustCode, '%')
			</IsNotEmpty>
			<IsNotEmpty Prepend="And" Property="CustName" CompareValue="">
				cust.`CustName` Like Concat('%', @CustName, '%')
			</IsNotEmpty>
			AND ( 1=2
			<IsTrue Prepend="Or" Property="DealTypeSale">
				cust.`DealTypeSale` = @DealTypeSale
			</IsTrue>
			<IsTrue Prepend="Or" Property="DealTypeBuy">
				cust.`DealTypeBuy` = @DealTypeBuy
			</IsTrue>
			<IsTrue Prepend="Or" Property="DealTypeProc">
				cust.`DealTypeProc` = @DealTypeProc
			</IsTrue>
			<IsTrue Prepend="Or" Property="DealTypeGeneral">
				cust.`DealTypeGeneral` = @DealTypeGeneral
			</IsTrue>
			)
		</Statement>

	</Statements>
</SmartSqlMap>