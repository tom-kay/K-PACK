<?xml version="1.0" encoding="utf-8"?>
<SmartSqlMap Scope="Base.UserMng" xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">
	<Statements>
		<Statement Id="SelectAdd">
			,ifnull(user.DelYn,'N') AS DelYn
			,user.`CreateId`
			,date_format(user.CreateDt, '%Y-%m-%d %H:%i:%s') AS `CreateDt`
			,user.`UpdateId`
			,date_format(user.UpdateDt, '%Y-%m-%d %H:%i:%s') AS `UpdateDt`
			,user.`DeleteId`
			,date_format(user.DeleteDt, '%Y-%m-%d %H:%i:%s') AS `DeleteDt`
		</Statement>

		<Statement Id="selectUserList">
			SELECT `UserId`,
			`CompanyCode`,
			`UserNameK`,
			`UserNameE`,
			`Nationality`,
			`TelNo1`,
			`TelNo2`,
			`Email`,
			`Address1`,
			`Address2`,
			`EnterDt`,
			`LeaveDt`,
			`DepartmentCode`,
			`TeamCode`,
			`PositionCode`,
			`JobCode`,
			`TaskCharge`,
			`LoginId`,
			`LoginErrorCnt`,
			`UseYn`
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `tb_user` AS user
			WHERE `CompanyCode` = @CompanyCode;
		</Statement>

		<Statement Id="selectUser">
			SELECT user.`UserId`,
			user.`CompanyCode`,
			user.`UserNameK`,
			user.`UserNameE`,
			user.`Nationality`,
			user.`TelNo1`,
			user.`TelNo2`,
			user.`Email`,
			user.`Address1`,
			user.`Address2`,
			user.`EnterDt`,
			user.`LeaveDt`,
			user.`DepartmentCode`,
			user.`TeamCode`,
			user.`PositionCode`,
			user.`JobCode`,
			user.`TaskCharge`,
			user.`LoginId`,
			user.`LoginErrorCnt`,
			user.`UseYn`,
			company.CompanyNameK
			<Include Prepend="" RefId="SelectAdd"/>
			FROM `tb_user` AS user
				JOIN `tb_company` AS company
				ON user.CompanyCode = company.CompanyCode
			WHERE `UserId` = @UserId;
		</Statement>

		<Statement Id="insertUser">

			INSERT INTO `tb_user`
			(`UserId`,
			`CompanyCode`,
			`UserNameK`,
			`UserNameE`,
			`Nationality`,
			`TelNo1`,
			`TelNo2`,
			`Email`,
			`Address1`,
			`Address2`,
			`EnterDt`,
			`LeaveDt`,
			`DepartmentCode`,
			`TeamCode`,
			`PositionCode`,
			`JobCode`,
			`TaskCharge`,
			`LoginId`,
			`LoginPw`,
			`LoginErrorCnt`,
			`UseYn`,
			`DelYn`,
			`CreateId`,
			`CreateDt`
			)
			VALUES
			(FN_CreateUserId(@CompanyCode, @UserId),
			@CompanyCode,
			@UserNameK,
			@UserNameE,
			@Nationality,
			@TelNo1,
			@TelNo2,
			@Email,
			@Address1,
			@Address2,
			@EnterDt,
			@LeaveDt,
			@DepartmentCode,
			@TeamCode,
			@PositionCode,
			@JobCode,
			@TaskCharge,
			@LoginId,
			SHA2(@LoginPw,512),
			@LoginErrorCnt,
			@UseYn,
			'N',
			@CreateId,
			now())
			ON DUPLICATE KEY UPDATE
			`UserNameK` = @UserNameK,
			`UserNameE` = @UserNameE,
			`Nationality` = @Nationality,
			`TelNo1` = @TelNo1,
			`TelNo2` = @TelNo2,
			`Email` = @Email,
			`Address1` = @Address1,
			`Address2` = @Address2,
			`EnterDt` = @EnterDt,
			`LeaveDt` = @LeaveDt,
			`DepartmentCode` = @DepartmentCode,
			`TeamCode` = @TeamCode,
			`PositionCode` = @PositionCode,
			`JobCode` = @JobCode,
			`TaskCharge` = @TaskCharge,
			`LoginPw` = SHA2(@LoginPw,512),
			`LoginErrorCnt` = @LoginErrorCnt,
			`UseYn` = @UseYn,
			`DelYn` = 'N',
			`UpdateId` = @UpdateId,
			`UpdateDt` = now(),
			`DeleteId` = null,
			`Deletedt` = null
			;
			SELECT UserId FROM tb_user WHERE LoginId = @LoginId;
		</Statement>
		

		<Statement Id="deleteUser" >
			UPDATE `tb_user`
			SET
			`DelYn` = @DelYn,
			`DeleteId` = @DeleteId,
			`Deletedt` = now()
			WHERE `UserId` = @UserId;
		</Statement>


	</Statements>
</SmartSqlMap>