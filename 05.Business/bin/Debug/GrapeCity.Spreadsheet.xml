<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.Spreadsheet</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.CalcEngine.CellHyperlinkData">
      <summary>Represents the hyperlink data of a cell which contains HYPERLINK function.</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Column">
      <summary>Gets the target left column index.</summary>
      <value>An integer value represents the target left column index.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Column2">
      <summary>Gets the target right column index.</summary>
      <value>An integer value represents the target right column index.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Row">
      <summary>Gets the target top row index.</summary>
      <value>An integer value represents the target top row index.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Row2">
      <summary>Gets the target bottom row index.</summary>
      <value>An integer value represents the target bottom row index.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Target">
      <summary>Gets the target location of a cell which contains HYPERLINK function.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.CellHyperlinkTarget" /> value represents the target location.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Url">
      <summary>Gets the URL.</summary>
      <value>A string value represents the URL.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellHyperlinkData.Worksheet">
      <summary>Gets the target worksheet.</summary>
      <value>A <see cref="P:GrapeCity.CalcEngine.CellHyperlinkData.Worksheet" /> object represents the target worksheet.</value>
    </member>
    <member name="T:GrapeCity.CalcEngine.AggregateFunction">
      <summary>Represents all supported aggregate functions.</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.AggregateOption">
      <summary>Represents a options that determines which values to ignore in the evaluation range for the function.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreNestedAggregation">
      <summary>Ignore nested SUBTOTAL and AGGREGATE functions.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHiddenNestedAggregation">
      <summary>Ignore hidden rows, nested SUBTOTAL and AGGREGATE functions.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreErrorNestedAggregation">
      <summary>Ignore error values, nested SUBTOTAL and AGGREGATE functions.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHiddenErrorNestedAggregation">
      <summary>Ignore hidden rows, error values, nested SUBTOTAL and AGGREGATE functions.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreNothing">
      <summary>Ignore nothing.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHidden">
      <summary>Ignore hidden rows.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreError">
      <summary>Ignore error values.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHiddenError">
      <summary>Ignore hidden rows and error values.</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.CellHyperlinkTarget">
      <summary>Represents the target location of a cell which contains HYPERLINK function.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellHyperlinkTarget.Internal">
      <summary>Indicates that the target location is a reference.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellHyperlinkTarget.External">
      <summary>Indicates that the target location is an external url.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellHyperlinkTarget.Invalid">
      <summary>Indicates that the target location is invalid.</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellHyperlinkTarget.None">
      <summary>Indicates that there is an internal error that the hyperlink function should not processes.</summary>
    </member>
    <member name="T:GrapeCity.Core.ChunkedMemoryStream">
      <summary>Creates a stream whose backing store is memory. This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Core.ChunkedMemoryStream" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.CanRead">
      <summary>When overridden in a derived class, gets a value indicating whether the current stream supports reading.</summary>
      <value>true if the stream supports reading; otherwise, false.</value>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.CanSeek">
      <summary>When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</summary>
      <value>true if the stream supports seeking; otherwise, false.</value>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.CanWrite">
      <summary>When overridden in a derived class, gets a value indicating whether the current stream supports writing.</summary>
      <value>true if the stream supports writing; otherwise, false.</value>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.Length">
      <summary>When overridden in a derived class, gets the length in bytes of the stream.</summary>
      <value>A long value representing the length of the stream in bytes.</value>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.Position">
      <summary>When overridden in a derived class, gets or sets the position within the current stream.</summary>
      <value>The current position within the stream.</value>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Flush">
      <summary>When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</summary>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</summary>
      <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</param>
      <param name="count">The maximum number of bytes to be read from the current stream.</param>
      <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.ReadByte">
      <summary>Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</summary>
      <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.</returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>When overridden in a derived class, sets the position within the current stream.</summary>
      <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter.</param>
      <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</param>
      <returns>The new position within the current stream.</returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.SetLength(System.Int64)">
      <summary>When overridden in a derived class, sets the length of the current stream.</summary>
      <param name="value">The desired length of the current stream in bytes.</param>
      <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.ToArray">
      <summary>Toes the array.</summary>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</summary>
      <param name="buffer">An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
      <param name="count">The number of bytes to be written to the current stream.</param>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.WriteByte(System.Byte)">
      <summary>Writes a byte to the current position in the stream and advances the position within the stream by one byte.</summary>
      <param name="value">The byte to write to the stream.</param>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.WriteTo(System.IO.Stream)">
      <summary>Writes to.</summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="P:GrapeCity.Core.CustomDocumentProperties.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.</summary>
      <param name="index">The index number of the document property returned.</param>
      <value>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</value>
    </member>
    <member name="T:GrapeCity.Core.DocumentProperty">
      <summary>Represents a custom or built-in document property of a container document. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Boolean">
      <summary>Gets or sets the yes or no value associated with the custom document property.</summary>
      <value>A boolean represents the yes or no value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Date">
      <summary>Gets or sets the datetime value associated with the custom document property.</summary>
      <value>A DateTime represents the datetime value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.FloatNumber">
      <summary>Gets or sets the number value associated with the custom document property.</summary>
      <value>A double represents the number value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Name">
      <summary>Gets or sets the custom name associated with the custom document property.</summary>
      <value>A string value represents the custom name.</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Number">
      <summary>Gets or sets the number value associated with the custom document property.</summary>
      <value>A double represents the number value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Text">
      <summary>Gets or sets the text value associated with the custom document property.</summary>
      <value>A string represents the text value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Type">
      <summary>Gets or sets the custom property type associated with the custom document property.</summary>
      <value>A CustomPropertyType represents the custom property type</value>
    </member>
    <member name="M:GrapeCity.Core.DocumentProperty.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:GrapeCity.Core.Theme">
      <summary>Represents a spreadsheet theme. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Core.Theme.ColorScheme">
      <summary>Gets a <see cref="!:Drawing.ThemeColorScheme" /> object that represents the color scheme of a <see cref="T:GrapeCity.Core.Theme" />.</summary>
    </member>
    <member name="P:GrapeCity.Core.Theme.EffectScheme">
      <summary>Gets a <see cref="!:Drawing.ThemeEffectScheme" /> object that represents the effect scheme of a <see cref="T:GrapeCity.Core.Theme" />.</summary>
      <remarks>This property update data for importing/exporting XLSX only. There is no effect in run-time yet.</remarks>
    </member>
    <member name="P:GrapeCity.Core.Theme.FontScheme">
      <summary>Gets a <see cref="P:GrapeCity.Core.Theme.FontScheme" /> object that represents the font scheme of a <see cref="T:GrapeCity.Core.Theme" />.</summary>
    </member>
    <member name="P:GrapeCity.Core.Theme.Name">
      <summary>Gets the name of this <see cref="T:GrapeCity.Core.Theme" />.</summary>
    </member>
    <member name="M:GrapeCity.Core.Theme.GetRenderFont(GrapeCity.Spreadsheet.Font@)">
      <summary>Gets display font of special font</summary>
      <param name="font">object indicates the font</param>
      <returns>value represents the display font.</returns>
    </member>
    <member name="T:GrapeCity.Core.ThemeColorScheme">
      <summary>An interface used to defines a set of colors which are referenced to as a color scheme. The color scheme is responsible for defining a list a twelve colors. The twelve colors consist of six accent colors, two dark colors, two light colors and a color for each of a hyperlink and followed hyperlink. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeColorScheme.Name">
      <summary>The common name for this color scheme.</summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeColorScheme.Load(System.String)">
      <summary>Loads the color scheme of a <see cref="T:GrapeCity.Core.Theme" /> from a file.</summary>
      <param name="filename">A string value indicates the color scheme file to load.</param>
    </member>
    <member name="T:GrapeCity.Core.ThemeEffectScheme">
      <summary>Represents the effects scheme of a theme. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeEffectScheme.Name">
      <summary>The common name for this effect scheme.</summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeEffectScheme.Load(System.String)">
      <summary>Loads the color scheme of a <see cref="T:GrapeCity.Core.Theme" /> from a file.</summary>
      <param name="filename">A string value indicates the color scheme file to load.</param>
    </member>
    <member name="T:GrapeCity.Core.ThemeFonts">
      <summary>This element defines the set of fonts which are to be used under different languages or locals.</summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFonts.Item(GrapeCity.Core.ThemeFontLanguage)">
      <summary>Gets or sets one of the three language fonts contained in the <see cref="T:GrapeCity.Core.ThemeFonts" /> collection.</summary>
      <param name="index">The index value of the language font.</param>
      <value>A string value represents the language font.</value>
    </member>
    <member name="M:GrapeCity.Core.ThemeFonts.GetFont(System.Globalization.CultureInfo)">
      <summary>Gets the display font for the specified <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="cultureInfo">The culture information.</param>
      <returns>A string value represents the display font.</returns>
    </member>
    <member name="T:GrapeCity.Core.ThemeFontScheme">
      <summary>Represents the font scheme within the theme. The font scheme consists of a pair of major and minor fonts for which to used in a document. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFontScheme.Major">
      <summary>Gets the font setting for the "Headings" in a document.</summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFontScheme.Minor">
      <summary>Gets the font settings for the "Body" of a document.</summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFontScheme.Name">
      <summary>The name of the font scheme shown in the user interface</summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeFontScheme.Load(System.String)">
      <summary>Loads the color scheme of a <see cref="T:GrapeCity.Core.Theme" /> from a file.</summary>
      <param name="filename">A string value indicates the color scheme file to load.</param>
    </member>
    <member name="T:GrapeCity.Core.TextFont">
      <summary>This element specifies that an East Asian(or Latin or complex) font be used for a specific run of text. This font is specified with a typeface attribute much like the others but is specifically classified as an East Asian(or Latin or complex) font.</summary>
    </member>
    <member name="P:GrapeCity.Core.TextFont.CharSet">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.CharacterSet" /> value that specifies the GDI character set that this font uses.</summary>
    </member>
    <member name="P:GrapeCity.Core.TextFont.Typeface">
      <summary>Gets the typeface, or name of the font that is to be used</summary>
    </member>
    <member name="T:GrapeCity.Core.IDocumentProperties">
      <summary>Represents a collection of <see cref="T:GrapeCity.Core.DocumentProperty" /> objects. Each <see cref="T:GrapeCity.Core.DocumentProperty" nolink="true" /> object represents a built-in or custom property of a container document.</summary>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Count">
      <summary>Gets an integer value indicating the number of items in the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.</summary>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.</summary>
      <param name="index">The index number of the document property returned.</param>
      <value>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</value>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Item(GrapeCity.Core.BuiltinDocumentProperties)">
      <summary>Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.</summary>
      <param name="index">The index of the document property returned.</param>
      <value>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</value>
      <remarks>If the document properties is not builtin document properties, return <c>null</c>.</remarks>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.</summary>
      <param name="index">The name of the document property returned.</param>
      <value>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</value>
    </member>
    <member name="T:GrapeCity.Core.BuiltinDocumentProperties">
      <summary>Represents all builtin document properties.</summary>
    </member>
    <member name="T:GrapeCity.Core.DocumentPropertyType">
      <summary>DocumentPropertyType defines the type of the custom document property.</summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.String">
      <summary>The value of document property is string value.</summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Date">
      <summary>The value of document property is date value.</summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Number">
      <summary>The value of document property is integer value.</summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Float">
      <summary>The value of document property is floating point value.</summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Boolean">
      <summary>The value of document property is boolean value;</summary>
    </member>
    <member name="T:GrapeCity.Core.KnownColor">
      <summary>Specifies the known system colors.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ActiveBorder">
      <summary>The system-defined color of the active window's border.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ActiveCaption">
      <summary>The system-defined color of the background of the active window's title bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ActiveCaptionText">
      <summary>The system-defined color of the text in the active window's title bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.AliceBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.AntiqueWhite">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.AppWorkspace">
      <summary>The system-defined color of the application workspace. The application workspace is the area in a multiple-document view that is not being occupied by documents.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Aqua">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Aquamarine">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Azure">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Beige">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Bisque">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Black">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.BlanchedAlmond">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Blue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.BlueViolet">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Brown">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.BurlyWood">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ButtonFace">
      <summary>The system-defined face color of a 3-D element.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ButtonHighlight">
      <summary>The system-defined color that is the highlight color of a 3-D element. This color is applied to parts of a 3-D element that face the light source.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ButtonShadow">
      <summary>The system-defined color that is the shadow color of a 3-D element. This color is applied to parts of a 3-D element that face away from the light source.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.CadetBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Chartreuse">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Chocolate">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Control">
      <summary>The system-defined face color of a 3-D element.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlDark">
      <summary>The system-defined shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlDarkDark">
      <summary>The system-defined color that is the dark shadow color of a 3-D element. The dark shadow color is applied to the parts of a 3-D element that are the darkest color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlLight">
      <summary>The system-defined color that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlLightLight">
      <summary>The system-defined highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlText">
      <summary>The system-defined color of text in a 3-D element.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Coral">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.CornflowerBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Cornsilk">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Crimson">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Cyan">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkCyan">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGoldenrod">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkKhaki">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkMagenta">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOliveGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrange">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrchid">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkRed">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSalmon">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSeaGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkTurquoise">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkViolet">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DeepPink">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DeepSkyBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Desktop">
      <summary>The system-defined color of the desktop.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DimGray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DodgerBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Firebrick">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.FloralWhite">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ForestGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Fuchsia">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Gainsboro">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GhostWhite">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Gold">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Goldenrod">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GradientActiveCaption">
      <summary>The system-defined color of the lightest color in the color gradient of an active window's title bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GradientInactiveCaption">
      <summary>The system-defined color of the lightest color in the color gradient of an inactive window's title bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Gray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GrayText">
      <summary>The system-defined color of dimmed text. Items in a list that are disabled are displayed in dimmed text.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Green">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GreenYellow">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Highlight">
      <summary>The system-defined color of the background of selected items. This includes selected menu items as well as selected text.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.HighlightText">
      <summary>The system-defined color of the text of selected items.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Honeydew">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.HotPink">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.HotTrack">
      <summary>The system-defined color used to designate a hot-tracked item. Single-clicking a hot-tracked item executes the item.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InactiveBorder">
      <summary>The system-defined color of an inactive window's border.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InactiveCaption">
      <summary>The system-defined color of the background of an inactive window's title bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InactiveCaptionText">
      <summary>The system-defined color of the text in an inactive window's title bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.IndianRed">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Indigo">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Info">
      <summary>The system-defined color of the background of a ToolTip.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InfoText">
      <summary>The system-defined color of the text of a ToolTip.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Ivory">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Khaki">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Lavender">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LavenderBlush">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LawnGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LemonChiffon">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCoral">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCyan">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGoldenrodYellow">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightPink">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSalmon">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSeaGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSkyBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSteelBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightYellow">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Lime">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LimeGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Linen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Magenta">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Maroon">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumAquamarine">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumOrchid">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumPurple">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSeaGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSlateBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSpringGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumTurquoise">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumVioletRed">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Menu">
      <summary>The system-defined color of a menu's background.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MenuBar">
      <summary>The system-defined color of the background of a menu bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MenuHighlight">
      <summary>The system-defined color used to highlight menu items when the menu appears as a flat menu.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MenuText">
      <summary>The system-defined color of a menu's text.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MidnightBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MintCream">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MistyRose">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Moccasin">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.NavajoWhite">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Navy">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.OldLace">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Olive">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.OliveDrab">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Orange">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.OrangeRed">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Orchid">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleGoldenrod">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleTurquoise">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleVioletRed">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PapayaWhip">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PeachPuff">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Peru">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Pink">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Plum">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PowderBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Purple">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Red">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.RosyBrown">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.RoyalBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SaddleBrown">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Salmon">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SandyBrown">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ScrollBar">
      <summary>The system-defined color of the background of a scroll bar.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SeaGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SeaShell">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Sienna">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Silver">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SkyBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SlateBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SlateGray">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Snow">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SpringGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SteelBlue">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Tan">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Teal">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Thistle">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Tomato">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Transparent">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Turquoise">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Violet">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Wheat">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.White">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.WhiteSmoke">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Window">
      <summary>The system-defined color of the background in the client area of a window.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.WindowFrame">
      <summary>The system-defined color of a window frame.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.WindowText">
      <summary>The system-defined color of the text in the client area of a window.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Yellow">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.YellowGreen">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkCyan2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGoldenrod2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGray2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGrey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGrey2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkKhaki2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkMagenta2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOliveGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrange2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrchid2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkRed2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSalmon2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSeaGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGray2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGrey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGrey2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkTurquoise2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkViolet2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DimGrey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Grey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCoral2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCyan2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGoldenrodYellow2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGray2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGrey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGrey2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightPink2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSalmon2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSeaGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSkyBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGray2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGrey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGrey2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSteelBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightYellow2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumAquamarine2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumOrchid2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumPurple2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSeaGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSlateBlue2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSpringGreen2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumTurquoise2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumVioletRed2010">
      <summary>A system-defined color.</summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SlateGrey">
      <summary>A system-defined color.</summary>
    </member>
    <member name="T:GrapeCity.Core.ThemeColors">
      <summary>Represents the set of twelve colors come together to form the color scheme for a theme.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Background1">
      <summary>Represents the 1st background color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Text1">
      <summary>Represents the 1st text color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Background2">
      <summary>Represents the 2nd background color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Text2">
      <summary>Represents the 2nd text color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent1">
      <summary>Represents the 1st accent color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent2">
      <summary>Represents the 2nd accent color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent3">
      <summary>Represents the 3rd accent color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent4">
      <summary>Represents the 4th accent color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent5">
      <summary>Represents the 5th accent color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent6">
      <summary>Represents the 6th accent color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Hyperlink">
      <summary>Represents the hyperlink color.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.FollowedHyperlink">
      <summary>Represents the followed hyperlink color.</summary>
    </member>
    <member name="T:GrapeCity.Core.ThemeFontLanguage">
      <summary>Represents one of the three language fonts contained in the <see cref="T:GrapeCity.Core.ThemeFonts" /> collection.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeFontLanguage.Latin">
      <summary>Represents the Latin font face.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeFontLanguage.ComplexScript">
      <summary>Represents the font face for Complex Script languages. The Complex Script language collection supports Arabic, Georgian, Hebrew, Indian, Thai and Vietnamese alphabets.</summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeFontLanguage.EastAsian">
      <summary>Represents the East Asian font face. East Asian Languages include Simplified Chinese, Traditional Chinese, Japanese, and Korean.</summary>
    </member>
    <member name="T:GrapeCity.IO.Packaging.Package">
      <summary>Abstract Base class for the Package. This is a part of the Packaging Layer APIs This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Protected constructor for the abstract Base class. This is the current contract between the subclass and the base class If we decide some registration mechanism then this might change</summary>
      <param name="openFileAccess" />
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration does not have one of the valid values</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.Package.FileOpenAccess">
      <summary>Gets the FileAccess with which the package was opened. This is a read only property. This property gets set when the package is opened.</summary>
      <value>FileAccess</value>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.Package.PackageProperties">
      <summary>The package properties are a subset of the standard OLE property sets SummaryInformation and DocumentSummaryInformation, and include such properties as Title and Subject.</summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Close">
      <summary>Closes the package and all the underlying parts and relationships. Calls the Dispose Method, since they have the same semantics</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Creates a new part in the package. An empty stream corresponding to this part will be created in the package. If a part with the specified uri already exists then we throw an exception. This methods will call the CreatePartCore method which will create the actual PackagePart in the package.</summary>
      <param name="partUri">Uri of the PackagePart that is to be added</param>
      <param name="contentType">ContentType of the stream to be added</param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentNullException">If contentType parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
      <exception cref="T:System.InvalidOperationException">If a PackagePart with the given partUri already exists in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Creates a new part in the package. An empty stream corresponding to this part will be created in the package. If a part with the specified uri already exists then we throw an exception. This methods will call the CreatePartCore method which will create the actual PackagePart in the package.</summary>
      <param name="partUri">Uri of the PackagePart that is to be added</param>
      <param name="contentType">ContentType of the stream to be added</param>
      <param name="compressionOption">CompressionOption describing compression configuration for the new part. This compression apply only to the part, it doesn't affect relationship parts or related parts. This parameter is optional.</param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentNullException">If contentType parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If CompressionOption enumeration [compressionOption] does not have one of the valid values</exception>
      <exception cref="T:System.InvalidOperationException">If a PackagePart with the given partUri already exists in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>This method is for custom implementation corresponding to the underlying file format. This method will actually add a new part to the package. An empty part should be created as a result of this call.</summary>
      <param name="partUri" />
      <param name="contentType" />
      <param name="compressionOption" />
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreateRelationship(System.String,System.IO.Packaging.TargetMode,System.String)">
      <summary>Creates a relationship at the Package level with the Target PackagePart specified as the Uri</summary>
      <param name="targetUri">Target's URI</param>
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to uniquely identify the role of the relationship</param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreateRelationship(System.String,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Creates a relationship at the Package level with the Target PackagePart specified as the Uri</summary>
      <param name="targetUri">Target's URI</param>
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to uniquely identify the role of the relationship</param>
      <param name="id">String that conforms to the xsd:ID datatype. Unique across the source's relationships. Null is OK (ID will be generated). An empty string is an invalid XML ID.</param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.Xml.XmlException">If an id is provided in the method, and its not unique</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>This method will do all the house keeping required when a part is deleted Then the DeletePartCore method will be called which will have the actual logic to do the work specific to the underlying file format and will actually delete the stream corresponding to this part. This method does not throw if the specified part does not exist. This is in conformance with the FileInfo.Delete call.</summary>
      <param name="partUri" />
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>This method is for custom implementation corresponding to the underlying file format. This method will actually delete the part from the underlying package. This method should not throw if the specified part does not exist. This is in conformance with the FileInfo.Delete call.</summary>
      <param name="partUri" />
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Deletes a relationship from the Package. This is done based on the relationship's ID. The target PackagePart is not affected by this operation.</summary>
      <param name="id">The ID of the relationship to delete. An invalid ID will not throw an exception, but nothing will be deleted.</param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>This method is for custom implementation corresponding to the underlying file format. This method should be used to dispose the resources that are specific to the file format. Also everything should be flushed to the disc before closing the package.</summary>
      <remarks>Subclasses that manage non-memory resources should override this method and free these resources. Any override should be careful to always call base.Dispose(disposing) to ensure orderly cleanup.</remarks>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Flush">
      <summary>Flushes the contents of the parts and the relationships to the package. This method will call the FlushCore method which will do the actual flushing of contents.</summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.FlushCore">
      <summary>This method is for custom implementation corresponding to the underlying file format. This method flushes the contents of the package to the disc.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Returns a part that already exists in the package. If the part Corresponding to the URI does not exist in the package then an exception is thrown. The method calls the GetPartCore method which actually fetches the part.</summary>
      <param name="partUri" />
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, information cannot be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
      <exception cref="T:System.InvalidOperationException">If the requested part does not exists in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>This method is for custom implementation corresponding to the underlying file format. This method will actually return the part after reading the actual physical bits. If the PackagePart does not exists in the underlying package then this method should return a null. This method must not throw an exception if a part does not exist.</summary>
      <param name="partUri" />
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetParts">
      <summary>This returns a collection of all the Parts within the package.</summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is writeonly, no information can be retrieved from it</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetPartsCore">
      <summary>This method is for custom implementation corresponding to the underlying file format. This is the method that knows how to get the actual parts. If there are no parts, this method should return an empty array.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Retrieve a relationship per ID.</summary>
      <param name="id">The relationship ID.</param>
      <returns>The relationship with ID 'id' or throw an exception if not found.</returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.InvalidOperationException">If the requested relationship does not exist in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetRelationships">
      <summary>Returns a collection of all the Relationships that are owned by the package</summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Returns a collection of filtered Relationships that are owned by the package The filter string is compared with the type of the relationships in a case sensitive and culture ignorant manner.</summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentException">If parameter "relationshipType" is an empty string</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String)">
      <summary>Opens a package at the specified Path. This method calls the overload which accepts all the parameters with the following defaults - FileMode - FileMode.OpenOrCreate, FileAccess - FileAccess.ReadWrite FileShare - FileShare.None</summary>
      <param name="path">Path to the package</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Opens a package at the specified Path in the given mode. This method calls the overload which accepts all the parameters with the following defaults - FileAccess - FileAccess.ReadWrite FileShare - FileShare.None</summary>
      <param name="path">Path to the package</param>
      <param name="packageMode">FileMode in which the package should be opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Opens a package at the specified Path in the given mode with the specified access. This method calls the overload which accepts all the parameters with the following defaults - FileShare - FileShare.None</summary>
      <param name="path">Path to the package</param>
      <param name="packageMode">FileMode in which the package should be opened</param>
      <param name="packageAccess">FileAccess with which the package should be opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [packageAccess] does not have one of the valid values</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Open a package on this stream. This method calls the overload which accepts all the parameters with the following defaults - FileMode - FileMode.Open FileAccess - FileAccess.Read</summary>
      <param name="stream">Stream on which the package is to be opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If stream parameter is null</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/read access and underlying stream is write only</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/write access and underlying stream is read only</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Open a package on this stream. This method calls the overload which accepts all the parameters with the following defaults - FileAccess - FileAccess.ReadWrite</summary>
      <param name="stream">Stream on which the package is to be opened</param>
      <param name="packageMode">FileMode in which the package should be opened.</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If stream parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/read access and underlying stream is write only</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/write access and underlying stream is read only</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <param name="path">Path to the package.</param>
      <param name="packageMode">FileMode in which the package should be opened.</param>
      <param name="packageAccess">FileAccess with which the package should be opened.</param>
      <param name="packageShare">FileShare with which the package is opened.</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [packageAccess] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <param name="stream">Stream on which the package is created</param>
      <param name="packageMode">FileMode in which the package is to be opened</param>
      <param name="packageAccess">FileAccess on the package that is opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If stream parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [packageAccess] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/read access and underlying stream is write only</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/write access and underlying stream is read only</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>This is a convenient method to check whether a given part exists in the package. This will have a default implementation that will try to retrieve the part and then if successful, it will return true. If the custom file format has an easier way to do this, they can override this method to get this information in a more efficient way.</summary>
      <param name="partUri" />
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, information cannot be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Returns whether there is a relationship with the specified ID.</summary>
      <param name="id">The relationship ID.</param>
      <returns>true iff a relationship with ID 'id' is defined on this source.</returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackagePart">
      <summary>This class represents the a PackagePart within a container. This is a part of the Packaging Layer APIs This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.#ctor(GrapeCity.IO.Packaging.Package,System.Uri)">
      <summary>Protected constructor for the abstract Base class. This is the current contract between the subclass and the base class If we decide some registration mechanism then this might change You should use this constructor in the rare case when you do not have the content type information related to this part and would prefer to obtain it later as required. These parts have the CompressionOption as NotCompressed by default. NOTE : If you are using this constructor from your subclass or passing a null for the content type parameter, be sure to implement the GetContentTypeCore method, as that will be called to get the content type value. This is provided to enable lazy initialization of the ContentType property.</summary>
      <param name="package">Package in which this part is being created</param>
      <param name="partUri">uri of the part</param>
      <exception cref="T:System.ArgumentNullException">If parameter "package" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "partUri" is null</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.#ctor(GrapeCity.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Protected constructor for the abstract Base class. This is the current contract between the subclass and the base class If we decide some registration mechanism then this might change These parts have the CompressionOption as NotCompressed by default. NOTE : If you are using this constructor from your subclass or passing a null for the content type parameter, be sure to implement the GetContentTypeCore method, as that will be called to get the content type value. This is provided to enable lazy initialization of the ContentType property.</summary>
      <param name="package">Package in which this part is being created</param>
      <param name="partUri">uri of the part</param>
      <param name="contentType">Content Type of the part, can be null if the value is unknown at the time of construction. However the value has to be made available anytime the ContentType property is called. A null value only indicates that the value will be provided later. Every PackagePart must have a valid Content Type</param>
      <exception cref="T:System.ArgumentNullException">If parameter "package" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "partUri" is null</exception>
      <exception cref="T:System.ArgumentException">If parameter "partUri" does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.#ctor(GrapeCity.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Protected constructor for the abstract Base class. This is the current contract between the subclass and the base class If we decide some registration mechanism then this might change NOTE : If you are using this constructor from your subclass or passing a null for the content type parameter, be sure to implement the GetContentTypeCore method, as that will be called to get the content type value. This is provided to enable lazy initialization of the ContentType property.</summary>
      <param name="package">Package in which this part is being created</param>
      <param name="partUri">uri of the part</param>
      <param name="contentType">Content Type of the part, can be null if the value is unknown at the time of construction. However the value has to be made available anytime the ContentType property is called. A null value only indicates that the value will be provided later. Every PackagePart must have a valid Content Type</param>
      <param name="compressionOption">compression option for this part</param>
      <exception cref="T:System.ArgumentNullException">If parameter "package" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "partUri" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If CompressionOption enumeration [compressionOption] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentException">If parameter "partUri" does not conform to the valid partUri syntax</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.CompressionOption">
      <summary>CompressionOption class that was provided as a parameter during the original CreatePart call. The PackagePart properties can not be accessed if the parent container is closed.</summary>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.ContentType">
      <summary>The Content type of the stream that is represented by this part. The PackagePart properties can not be accessed if the parent container is closed. The content type value can be provided by the underlying physical format implementation at the time of creation of the Part object ( constructor ) or We can initialize it in a lazy manner when the ContentType property is called called for the first time by calling the GetContentTypeCore method. Note: This method GetContentTypeCore() is only for lazy initialization of the Content type value and will only be called once. There is no way to change the content type of the part once it has been assigned.</summary>
      <value>Content Type of the Part [can never return null]</value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.Package">
      <summary>The parent container for this PackagePart The PackagePart properties can not be accessed if the parent container is closed.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.Uri">
      <summary>The Uri for this PackagePart. It is always relative to the Package Root The PackagePart properties can not be accessed if the parent container is closed.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.CreateRelationship(System.String,System.IO.Packaging.TargetMode,System.String)">
      <summary>Adds a relationship to this PackagePart with the Target PackagePart specified as the Uri Initial and trailing spaces in the name of the PackageRelationship are trimmed.</summary>
      <param name="targetUri" />
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to uniquely identify the role of the relationship</param>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.CreateRelationship(System.String,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Adds a relationship to this PackagePart with the Target PackagePart specified as the Uri Initial and trailing spaces in the name of the PackageRelationship are trimmed.</summary>
      <param name="targetUri" />
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to uniquely identify the role of the relationship</param>
      <param name="id">String that conforms to the xsd:ID datatype. Unique across the source's relationships. Null is OK (ID will be generated). An empty string is an invalid XML ID.</param>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.Xml.XmlException">If an id is provided in the method, and its not unique</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Deletes a relationship from the PackagePart. This is done based on the relationship's ID. The target PackagePart is not affected by this operation.</summary>
      <param name="id">The ID of the relationship to delete. An invalid ID will not throw an exception, but nothing will be deleted.</param>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>Custom Implementation for the GetContentType Method This method should only be implemented by those physical format implementors where the value for the content type cannot be provided at the time of construction of Part object and if calculating the content type value is a non-trivial or costly operation. The return value has to be a valid ContentType. This method will be used in real corner cases. The most common usage should be to provide the content type in the constructor. This method is only for lazy initialization of the Content type value and will only be called once. There is no way to change the content type of the part once it is assigned.</summary>
      <returns>Content type for the Part</returns>
      <exception cref="T:System.NotSupportedException">By default, this method throws a NotSupportedException. If a subclass wants to initialize the content type for a PackagePart in a lazy manner they must override this method.</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Retrieve a relationship per ID.</summary>
      <param name="id">The relationship ID.</param>
      <returns>The relationship with ID 'id' or throw an exception if not found.</returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.InvalidOperationException">If the requested relationship does not exist in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetRelationships">
      <summary>Returns a collection of all the Relationships that are owned by this PackagePart</summary>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Returns a collection of filtered Relationships that are owned by this PackagePart The relationshipType string is compared with the type of the relationships in a case sensitive and culture ignorant manner.</summary>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentException">If parameter "relationshipType" is an empty string</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStream">
      <summary>Returns the underlying stream that is represented by this part with the default FileMode and FileAccess Note: If you are requesting a stream for a relationship part and at the same time using relationship APIs to manipulate relationships, the final persisted data will depend on which data gets flushed last.</summary>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the subclass fails to provide a non-null stream object</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Returns the underlying stream in the specified mode and the default FileAccess Note: If you are requesting a stream for a relationship part for editing and at the same time using relationship APIs to manipulate relationships, the final persisted data will depend on which data gets flushed last.</summary>
      <param name="mode" />
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [mode] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If FileAccess.Read is provided and FileMode values are any of the following - FileMode.Create, FileMode.CreateNew, FileMode.Truncate, FileMode.Append</exception>
      <exception cref="T:System.IO.IOException">If the mode and access for the Package and the Stream are not compatible</exception>
      <exception cref="T:System.IO.IOException">If the subclass fails to provide a non-null stream object</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Returns the underlying stream that is represented by this part in the specified mode with the access. Note: If you are requesting a stream for a relationship part and at the same time using relationship APIs to manipulate relationships, the final persisted data will depend on which data gets flushed last.</summary>
      <param name="mode" />
      <param name="access" />
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [mode] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [access] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If FileAccess.Read is provided and FileMode values are any of the following - FileMode.Create, FileMode.CreateNew, FileMode.Truncate, FileMode.Append</exception>
      <exception cref="T:System.IO.IOException">If the mode and access for the Package and the Stream are not compatible</exception>
      <exception cref="T:System.IO.IOException">If the subclass fails to provide a non-null stream object</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Custom Implementation for the GetSream Method</summary>
      <param name="mode" />
      <param name="access" />
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Returns whether there is a relationship with the specified ID.</summary>
      <param name="id">The relationship ID.</param>
      <returns>true iff a relationship with ID 'id' is defined on this source.</returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackagePartCollection">
      <summary>This class is used to get an enumerator for the Parts in a container. This is a part of the MMCF Packaging Layer APIs</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Returns an enumerator over all the Parts in the Container</summary>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackageProperties">
      <summary>This class provides access to the "core properties", such as Title and Subject, of an RM-protected Metro package. These properties are a subset of of the standard OLE property sets SummaryInformation and DocumentSummaryInformation. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.IO.Packaging.PackageProperties" /> class.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Category">
      <summary>The category. This value is typically used by UI applications to create navigation controls.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.ContentStatus">
      <summary>The status of the content. Example values include "Draft", "Reviewed", and "Final".</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.ContentType">
      <summary>The type of content represented, generally defined by a specific use and intended audience. Example values include "Whitepaper", "Security Bulletin", and "Exam". (This property is distinct from MIME content types as defined in RFC 2045.)</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Created">
      <summary>The creation date and time.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Creator">
      <summary>The primary creator. The identification is environment-specific and can consist of a name, email address, employee ID, etc. It is recommended that this value be only as verbose as necessary to identify the individual.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Description">
      <summary>The description or abstract of the contents.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Keywords">
      <summary>A delimited set of keywords to support searching and indexing. This is typically a list of terms that are not available elsewhere in the properties.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Language">
      <summary>The primary language of the package content. The language tag is composed of one or more parts: A primary language subtag and a (possibly empty) series of subsequent subtags, for example, "EN-US". These values MUST follow the convention specified in RFC 3066.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>The user who performed the last modification. The identification is environment-specific and can consist of a name, email address, employee ID, etc. It is recommended that this value be only as verbose as necessary to identify the individual.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.LastPrinted">
      <summary>The date and time of the last printing.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Modified">
      <summary>The date and time of the last modification.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Revision">
      <summary>The revision number. This value indicates the number of saves or revisions. The application is responsible for updating this value after each revision.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Subject">
      <summary>The topic of the contents.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Title">
      <summary>The title.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Version">
      <summary>The version number. This value is set by the user or by the application.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.identifier">
      <summary>A unique identifier.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageProperties.Dispose">
      <summary>Allow the object to clean up all resources it holds (both managed and unmanaged), and ensure that the resources won't be released a second time by removing it from the finalization queue.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>This default implementation is provided for subclasses that do not make use of the IDisposable functionality.</summary>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackageRelationship">
      <summary>This class is used to express a relationship between a source and a target part. The only way to create a PackageRelationship, is to call the PackagePart.CreateRelationship() or Package.CreateRelationship(). A relationship is owned by a part or by the package itself. If the source part is deleted all the relationships it owns are also deleted. A target of the relationship need not be present. This class is part of the MMCF Packaging layer.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.Id">
      <summary>PackageRelationship's identifier. Unique across relationships for the given source.</summary>
      <value>String</value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.Package">
      <summary>PackageRelationship's owning Package object.</summary>
      <value>Package</value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Type of the relationship - used to uniquely define the role of the relationship</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.SourceUri">
      <summary>This is a reference to the parent PackagePart to which this relationship belongs.</summary>
      <value>Uri</value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Enumeration value indicating the interpretations of the "base" of the target uri.</summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Uri of the TargetPart, that this relationship points to.</summary>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackageRelationshipCollection">
      <summary>Collection of all the relationships corresponding to a given source PackagePart. This class is part of the MMCF Packaging Layer. It handles serialization to/from relationship parts, creation of those parts and offers methods to create, delete and enumerate relationships.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Returns an enumerator over all the relationships for a PackagePart</summary>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackUriHelper">
      <summary>This class has the utility methods for composing and parsing an Uri of pack:// scheme This is a <see langword="static class" /> and so cannot be inherited or instantiated.</summary>
    </member>
    <member name="F:GrapeCity.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>pack scheme name This field is read-only.</summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>This method compares two part uris and returns an int to indicate the equivalence Null values are allowed</summary>
      <param name="firstPartUri">First part Uri to be compared</param>
      <param name="secondPartUri">Second part Uri to be compared</param>
      <returns>A 32-bit signed integer indicating the lexical relationship between the compared Uri components. Value - Less than zero means firstUri is less than secondUri Value - Equal to zero means both the Uris are equal</returns>
      <exception cref="T:System.ArgumentException">If firstPartUri or secondPartUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>This method is used to create a valid part Uri given a relative URI Makes sure that the URI - 1. Relative 2. Begins with '/' 3. Does not begin with two "//" 4. Does not end with "/" 5. Does not have a fragment component 6. Does the correct escaping 7. And is refined correctly</summary>
      <param name="partUri">The relative uri that represents the part within a package</param>
      <returns>Returns a relative URI with an absolute path that points to a part within a package</returns>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is empty</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter ends with "/"</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter starts with two "/"</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter has a fragment</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Returns the normalized form of the part URI</summary>
      <param name="partUri">Part Uri</param>
      <returns>Normalized Part Uri</returns>
      <exception cref="T:System.ArgumentNullException">If partUri is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>This method returns a relationship part Uri given a part Uri Example Input - partUri - /files/document.xaml Return - Relationship Uri - /files/_rels/document.xaml.rels If the input to the method is Uri - "/", then we will return /_rels/.rels as the relationship part Uri for the Package level relationships</summary>
      <param name="partUri">Part Uri for which the relationship part Uri is wanted</param>
      <returns>returns a Uri that conforms to the relationship part Uri syntax</returns>
      <exception cref="T:System.ArgumentException">If the input Uri is a relationship part Uri itself</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri Syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>This method returns the relative uri between two given parts</summary>
      <param name="sourcePartUri" />
      <param name="targetPartUri" />
      <returns>The relative path between two parts</returns>
      <exception cref="T:System.ArgumentNullException">If either the sourcePartUri or targetPartUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If either sourcePartUri or targetPartUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Given a valid relationship Part Uri, this method returns the source Part Uri for this relationship Part Uri. If the relationship part name is for the Package Level relationships [/_rels/.rels], we return a relative Uri of the form "/" indicating that it has no part as the parent, but is at the package level Example Input - Relationship Uri - /files/_rels/document.xaml.rels Returns -Source Part Uri - /files/document.xaml</summary>
      <param name="relationshipPartUri">relationship part Uri</param>
      <returns>A uri that is a valid source part Uri for the relationship Uri provided</returns>
      <exception cref="T:System.ArgumentNullException">If relationshipPartUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If relationshipPartUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If relationshipPartUri parameter does not conform to the valid partUri Syntax</exception>
      <exception cref="T:System.ArgumentException">If the relationshipPartUri is not a relationship part Uri itself</exception>
      <exception cref="T:System.ArgumentException">If the resultant Uri obtained is a relationship part Uri</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>IsRelationshipPartUri method returns a boolean indicating whether the Uri given is a relationship part Uri or not.</summary>
      <param name="partUri">uri of part to evaluate</param>
      <returns>true if the given part is a PackageRelationship part</returns>
      <remarks>Does not inspect the part contents - this is based solely on the name</remarks>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri Syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>This method is used to resolve part Uris Constructs resolved relative URI from two relative URIs This method should be used in places where we have a a target URI in the PackageRelationship and we want to get the name of the part it targets with respect to the source part</summary>
      <param name="sourcePartUri">This should be a valid partName. The only exception to this rule is an Uri of the form "/". This uri will only be used to resolve package level relationships. This Uri indicates that the relative Uri is being resolved against the root of the package.</param>
      <param name="targetUri">This URI can be any relative URI</param>
      <exception cref="T:System.ArgumentNullException">If either sourcePartUri or targetUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If either sourcePartUri or targetUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If sourcePartUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.Native.WindowsFont.GetOutlineTextMetric">
      <summary>Get the <see cref="T:GrapeCity.Native.OUTLINETEXTMETRIC" /> structure contains basic information about a physical font.</summary>
      <returns>The metrics contains basic information about a physical font.</returns>
      <remarks>In case the font is not True Type font, only <see cref="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmTextMetrics" /> returns correct value.</remarks>
    </member>
    <member name="T:GrapeCity.Native.WindowsGraphics">
      <summary>Wrapper for GDI text rendering functions. This class is not thread-safe as GDI function should be called from the UI thread. This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.#ctor(System.Drawing.IDeviceContext)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Native.WindowsGraphics" /> class.</summary>
      <param name="deviceContext">The device context.</param>
    </member>
    <member name="P:GrapeCity.Native.WindowsGraphics.DeviceContext">
      <summary>Gets the device context.</summary>
      <value>The device context.</value>
    </member>
    <member name="P:GrapeCity.Native.WindowsGraphics.DeviceDpi">
      <summary>Gets the DPI value for the display device.</summary>
      <value>The DPI value of the display device.</value>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.Delete(GrapeCity.Native.WindowsFont)">
      <summary>Deletes the specified font.</summary>
      <param name="font">The font to delete.</param>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.Dispose">
      <summary>Release current HDC to be able to use <see cref="T:System.Drawing.Graphics" /> methods.</summary>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.DrawText(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.FormatResult@,System.Drawing.Rectangle,GrapeCity.Native.WindowsGraphics.TextPaintingData@,GrapeCity.Native.TextFormatFlags)">
      <summary>Draws the text.</summary>
      <param name="workbook">The workbook.</param>
      <param name="content">The text content.</param>
      <param name="rect">The rectangle to paint.</param>
      <param name="textPainting">The text painting information.</param>
      <param name="textFormatFlags">The text format flags.</param>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.GetMeasuringGraphics">
      <summary>Gets the measuring windows graphics.</summary>
      <returns>The measuring windows graphics.</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.GetWindowsFont(GrapeCity.Spreadsheet.Font,System.Int32,System.Boolean)">
      <summary>Gets the windows font.</summary>
      <param name="font">The font data structure.</param>
      <param name="angle">The angle represents text rotation.</param>
      <param name="roundingSize">if set to <c>true</c>, the native font size will be rounded; otherwise, the native font size will be floor.</param>
      <returns>The windows font.</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.MeasureText(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.FormatResult@,System.Drawing.Size,GrapeCity.Native.WindowsGraphics.TextPaintingData@,GrapeCity.Native.TextFormatFlags)">
      <summary>Measure the width and height of the string when drawn on the device context using the given font.</summary>
      <param name="workbook">The workbook.</param>
      <param name="content">The text content.</param>
      <param name="size">The current boundary size.</param>
      <param name="textPainting">The text painting information.</param>
      <param name="textFormatFlags">The text format flags.</param>
      <returns>The measured size of the string.</returns>
    </member>
    <member name="T:GrapeCity.Native.OUTLINETEXTMETRIC">
      <summary>The OUTLINETEXTMETRIC structure contains metrics describing a TrueType font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmAscent">
      <summary>The maximum distance characters in this font extend above the base line. This is the typographic ascent for the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmDescent">
      <summary>The maximum distance characters in this font extend below the base line. This is the typographic descent for the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmEMSquare">
      <summary>The number of logical units defining the x- or y-dimension of the em square for this font. (The number of units in the x- and y-directions are always the same for an em square.)</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmFiller">
      <summary>A value that causes the structure to be byte-aligned.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmItalicAngle">
      <summary>The main italic angle of the font, in tenths of a degree counterclockwise from vertical. Regular (roman) fonts have a value of zero. Italic fonts typically have a negative italic angle (that is, they lean to the right).</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmLineGap">
      <summary>The typographic line spacing.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmMacAscent">
      <summary>The maximum distance characters in this font extend above the base line for the Macintosh computer.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmMacDescent">
      <summary>The maximum distance characters in this font extend below the base line for the Macintosh computer.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmMacLineGap">
      <summary>The line-spacing information for the Macintosh computer.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmPanoseNumber">
      <summary>The PANOSE number for this font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmSize">
      <summary>The size, in bytes, of the OUTLINETEXTMETRIC structure.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmTextMetrics">
      <summary>A TEXTMETRIC structure containing further information about the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmfsSelection">
      <summary>The nature of the font pattern. This member can be a combination of the following bits. 0 Italic 1 Underscore 2 Negative 3 Outline 4 Strikeout 5 Bold</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmfsType">
      <summary>Indicates whether the font is licensed. Licensed fonts must not be modified or exchanged. If bit 1 is set, the font may not be embedded in a document. If bit 1 is clear, the font can be embedded. If bit 2 is set, the embedding is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpFaceName">
      <summary>The offset from the beginning of the structure to a string specifying the typeface name for the font. (This typeface name corresponds to the name specified in the LOGFONT structure.)</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpFamilyName">
      <summary>The offset from the beginning of the structure to a string specifying the family name for the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpFullName">
      <summary>The offset from the beginning of the structure to a string specifying the full name for the font. This name is unique for the font and often contains a version number or other identifying information.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpStyleName">
      <summary>The offset from the beginning of the structure to a string specifying the style name for the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSubscriptOffset">
      <summary>The recommended horizontal and vertical offset for subscripts in this font. The subscript offset is measured from the character origin to the origin of the subscript character.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSubscriptSize">
      <summary>The recommended horizontal and vertical size for subscripts in this font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSuperscriptOffset">
      <summary>The recommended horizontal and vertical offset for superscripts in this font. The superscript offset is measured from the character base line to the base line of the superscript character.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSuperscriptSize">
      <summary>The recommended horizontal and vertical size for superscripts in this font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmrcFontBox">
      <summary>The bounding box for the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsCapEmHeight">
      <summary>Not supported.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsCharSlopeRise">
      <summary>The slope of the cursor. This value is 1 if the slope is vertical. Applications can use this value and the value of the otmsCharSlopeRun member to create an italic cursor that has the same slope as the main italic angle (specified by the otmItalicAngle member).</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsCharSlopeRun">
      <summary>The slope of the cursor. This value is zero if the slope is vertical. Applications can use this value and the value of the otmsCharSlopeRise member to create an italic cursor that has the same slope as the main italic angle (specified by the otmItalicAngle member).</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsStrikeoutPosition">
      <summary>The position of the strikeout stroke relative to the base line for this font. Positive values are above the base line and negative values are below.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsStrikeoutSize">
      <summary>The width of the strikeout stroke for this font. Typically, this is the width of the em dash for the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsUnderscorePosition">
      <summary>The position of the underscore character for this font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsUnderscoreSize">
      <summary>The thickness of the underscore character for this font.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsXHeight">
      <summary>Not supported.</summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmusMinimumPPEM">
      <summary>The smallest recommended size for this font, in pixels per em-square.</summary>
    </member>
    <member name="T:GrapeCity.Native.PANOSE">
      <summary>The PANOSE structure describes the PANOSE font-classification values for a TrueType font. These characteristics are then used to associate the font with other fonts of similar appearance but different names.</summary>
    </member>
    <member name="T:GrapeCity.Native.POINT">
      <summary>Represents the coordinates of a point.</summary>
    </member>
    <member name="F:GrapeCity.Native.POINT.X">
      <summary>The horizontal position of the point.</summary>
    </member>
    <member name="F:GrapeCity.Native.POINT.Y">
      <summary>The vertical position of the point.</summary>
    </member>
    <member name="T:GrapeCity.Native.TEXTMETRIC">
      <summary>The TEXTMETRIC structure contains basic information about a physical font. All sizes are specified in logical units; that is, they depend on the current mapping mode of the display context.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmAscent">
      <summary>The ascent (units above the base line) of characters.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmAveCharWidth">
      <summary>The average width of characters in the font (generally defined as the width of the letter x ). This value does not include the overhang required for bold or italic characters.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmBreakChar">
      <summary>The value of the character that will be used to define word breaks for text justification.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmCharSet">
      <summary>The character set of the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDefaultChar">
      <summary>The value of the character to be substituted for characters not in the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDescent">
      <summary>The descent (units below the base line) of characters.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDigitizedAspectX">
      <summary>The horizontal aspect of the device for which the font was designed.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDigitizedAspectY">
      <summary>The vertical aspect of the device for which the font was designed. The ratio of the tmDigitizedAspectX and tmDigitizedAspectY members is the aspect ratio of the device for which the font was designed.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmExternalLeading">
      <summary>The amount of extra leading (space) that the application adds between rows. Since this area is outside the font, it contains no marks and is not altered by text output calls in either OPAQUE or TRANSPARENT mode.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmFirstChar">
      <summary>The value of the first character defined in the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmHeight">
      <summary>The height (ascent + descent) of characters.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmInternalLeading">
      <summary>The amount of leading (space) inside the bounds set by the tmHeight member. Accent marks and other diacritical characters may occur in this area.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmItalic">
      <summary>Specifies an italic font if it is nonzero.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmLastChar">
      <summary>The value of the last character defined in the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmMaxCharWidth">
      <summary>The width of the widest character in the font.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmOverhang">
      <summary>The extra width per string that may be added to some synthesized fonts.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmPitchAndFamily">
      <summary>Specifies information about the pitch, the technology, and the family of a physical font. The four low-order bits of this member specify information about the pitch and the technology of the font. A constant is defined for each of the four bits. TMPF_FIXED_PITCH 0x01 If this bit is set the font is a variable pitch font. If this bit is clear the font is a fixed pitch font. TMPF_VECTOR 0x02 If this bit is set the font is a vector font. TMPF_TRUETYPE 0x04 If this bit is set the font is a TrueType font. TMPF_DEVICE 0x08 If this bit is set the font is a device font.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmStruckOut">
      <summary>A strikeout font if it is nonzero.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmUnderlined">
      <summary>Specifies an underlined font if it is nonzero.</summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmWeight">
      <summary>The weight of the font.</summary>
    </member>
    <member name="T:GrapeCity.Native.TextFormatFlags">
      <summary>See http://msdn.microsoft.com/en-us/library/windows/desktop/dd162498(v=vs.85).aspx</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFilter">
      <summary>Represents autofiltering for the specified worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.FilterMode">
      <summary>Gets a value indicating whether the worksheet is in the AutoFilter filter mode.</summary>
      <value>
        <c>true</c> if the worksheet is in the AutoFilter filter mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.AutoFilterColumn" /> at the specified column.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <value>FilterColumn.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Range">
      <summary>Gets a <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value that represents the range to which the specified AutoFilter applies.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range of this <see cref="T:GrapeCity.Spreadsheet.AutoFilter" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Sort">
      <summary>Gets the sort object.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.AutoFilter.Sort" /> object belong to the autofilter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.AddFilter(System.Int32,GrapeCity.Spreadsheet.Filter,System.Boolean,System.Boolean)">
      <summary>Adds a filter to the specified column.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="filter">A <see cref="T:GrapeCity.Spreadsheet.Filter" /> object to add to the specified column.</param>
      <param name="applyIfFirst">if set to <c>true</c>, the filter will be re-applied if there is no filter in the specifed column.</param>
      <param name="removeActiveFilter">if set to <c>true</c>, the current active filter of the column will be removed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.ApplyFilter">
      <summary>Applies the specified <see cref="T:GrapeCity.Spreadsheet.AutoFilter" /> object.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.Clear(System.Int32,System.Boolean)">
      <summary>Clears the filter and sort state at the specified column for the current object.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="removing">if set to <c>true</c>, the current active filter will be removed; otherwise, it'll be set as inactive.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.Delete">
      <summary>Removes the filter from the current worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.HideFilterButton(System.Int32)">
      <summary>Hides the filter button.</summary>
      <param name="column">An integer value represents the column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.RemoveFilter(System.Int32,GrapeCity.Spreadsheet.Filter)">
      <summary>Removes a filter from the specified column.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="filter">A <see cref="T:GrapeCity.Spreadsheet.Filter" /> object to remove from the specified column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.SetActiveFilter(System.Int32,GrapeCity.Spreadsheet.Filter,System.Boolean)">
      <summary>Activates the specified <see cref="T:GrapeCity.Spreadsheet.Filter" /> for a column and re-apply filtering.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="filter">A <see cref="T:GrapeCity.Spreadsheet.Filter" /> object to become the active filter of the specified column.</param>
      <param name="apply">if set to <c>true</c>, the filter will be re-applied.</param>
      <returns>
        <c>true</c> if the filter is activated, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.ShowAllData(System.Boolean)">
      <summary>Displays all the data returned by the <see cref="T:GrapeCity.Spreadsheet.AutoFilter" /> object.</summary>
      <param name="removing">if set to <c>true</c>, the current active filter will be removed; otherwise, it'll be set as inactive.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.ShowFilterButton(System.Int32)">
      <summary>Shows the filter button.</summary>
      <param name="column">An integer value represents the column index.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInCfRule">
      <summary>Represents a built-in conditional formatting rule. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInCfRule.MaxValuesCount">
      <summary>Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInCfRule.ValuesCount">
      <summary>Gets the total count of conditional formatting values(s).</summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.CanProcessEmptyValue">
      <summary>Determines whether this rule is able to process empty value.</summary>
      <returns>
        <c>true</c> if this rule is able to process empty value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.GetValue(System.Int32)">
      <summary>Gets a conditional formatting value at the specified index.</summary>
      <param name="index">The index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.IsMatched(GrapeCity.Spreadsheet.Conditional.MatchData)">
      <summary>Determines whether the cell value is matched conditions of this rule.</summary>
      <param name="data">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context data to match.</param>
      <returns>
        <c>true</c> if the cell value is matched conditions of this rule; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>Sets the conditional formatting value.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Formula1">
      <summary>Gets or sets the value or formula associated with the data validation.</summary>
      <value>A string value represents the value or formula associated with the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Formula2">
      <summary>Gets or sets the value or formula associated with the second part of a data validation.</summary>
      <value>A string value represents the value or formula associated with the second part of a data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Operator">
      <summary>Gets or sets a value indicating the operator of data validation.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value represents the operator of the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Type">
      <summary>Gets or sets a value indicating the type of data validation.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value represents the type of the data validation.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.Equals(GrapeCity.Spreadsheet.DataValidation)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GetFormula(System.Boolean,System.Int32,System.Int32)">
      <summary>Gets or sets the value or formula associated with the specified part of a data validation.</summary>
      <param name="first">
        <c>true</c> to return the first part of the data validation; otherwise, return the second part of the data validation.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>A string value represents the value or formula associated with the specified part of a data validation.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GetSuggestionList(System.Int32,System.Int32)">
      <summary>Gets the suggestions for possible valid values.</summary>
      <param name="row">An integer value indicates the context row.</param>
      <param name="column">An integer value indicates the context column.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" /> object represents the suggestions for possible valid values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.ParseInput(GrapeCity.Spreadsheet.Worksheet,System.String,System.String,System.Int32,System.Int32,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationOperator,GrapeCity.CalcEngine.IPrimitiveValue@,GrapeCity.CalcEngine.Expression@,GrapeCity.CalcEngine.IPrimitiveValue@,GrapeCity.CalcEngine.Expression@)">
      <summary>Parses the inputs for a data validation.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the active worksheet.</param>
      <param name="formula1">A string value indicates the first formula.</param>
      <param name="formula2">A string value indicates the second formula.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="dvType">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the data validation type.</param>
      <param name="primitiveValue1">A <see cref="T:GrapeCity.CalcEngine.PrimitiveValue" /> object represents the first parsed value.</param>
      <param name="expression1">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object represents the first parsed expression.</param>
      <param name="primitiveValue2">A <see cref="T:GrapeCity.CalcEngine.PrimitiveValue" /> object represents the second parsed value.</param>
      <param name="expression2">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object represents the second parsed expression.</param>
      <param name="suggestionList">A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionItem" /> array represents the suggestion list.</param>
      <param name="delimitedHashSet">A <see cref="!:HashSet&lt;string&gt;" /> object represents the text hash set of suggestion list.</param>
      <param name="doubleHashSet">A <see cref="!:HashSet&lt;double&gt;" /> object represents the numeric hash set of suggestion list.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified formulas.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.BuiltInNumberFormats" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.GetBuiltInFormatter(GrapeCity.Spreadsheet.IWorkbook,System.Int32,System.Globalization.CultureInfo)">
      <summary>Gets a built-in formatter string by the specified ID.</summary>
      <param name="workbook">The workook that defines the number format.</param>
      <param name="builtInId">An integer value indicates the number format ID.</param>
      <returns>A <see cref="T:System.String" /> value represents the built-in formatter.</returns>
      <remarks>This function has better performance than using <see cref="M:GrapeCity.Spreadsheet.NumberFormat.GetFormatterInternal(GrapeCity.Spreadsheet.NumberFormatStorage,System.Globalization.CultureInfo,GrapeCity.Spreadsheet.Localization.LanguagePackage)" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.GetBuiltInId(System.String)">
      <summary>Gets the built-in ID of the specified number format.</summary>
      <param name="format">A string value indicates the number format.</param>
      <returns>A <see cref="T:System.Int32" /> value represents the built-in ID. Return -1 means the number format is not a built-in number format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.GetBuiltInNumberFormat(System.Int32,System.Globalization.CultureInfo)">
      <summary>Gets a number format string by the specified ID.</summary>
      <param name="builtInId">An integer value indicates the number format ID.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>A <see cref="T:System.String" /> value represents the built-in number format.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CalculationEngine">
      <summary>Represents a class which store, evaluate or adjust expressions. This class cannot be inherited.</summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CalculateBeforeSave">
      <summary>Gets or sets the property which specifies whether workbooks should be calculated as needed before saving.</summary>
      <value>
        <c>true</c> if if workbooks are calculated before they're saved; otherwise, <c>false</c>.</value>
      <remarks>This property is preserved even if you change the <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.Calculation" /> property.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.Calculation">
      <summary>Specifies when the control should recalculate the data in the workbook.</summary>
      <value>A <see cref="!:CalcEngine.CalculationMode" /> enumeration member. Default is Automatic.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CalculationOnDemand">
      <summary>Gets or sets the property which determines whether individual cells are calculated on demand.</summary>
      <value>
        <c>true</c> if individual cells are calculated on demand; otherwise, cells are calculated at once.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.EvaluationContext">
      <summary>Gets the global shared evaluation context.</summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IEvaluationContext" /> object represents the evaluation context.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.Iterative">
      <summary>Gets or sets whether the workbook should perform iterative calculations for formulas that contain circular references.</summary>
      <value>
        <c>true</c>, to perform iterative calculations; otherwise, <c>false</c>. Default is <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.MaximumChange">
      <summary>Gets or sets the maximum amount of change below which to stop iterating for caclulations with circular references.</summary>
      <value>The maximum change. Default value is 0.001.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.MaximumIterations">
      <summary>Gets or sets the maximum number of iterations for calculations with circular references.</summary>
      <value>The maximum iterations. Default value is 100.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">Specified number of iterations is out of range; must be an integer between 1 and 32767</exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.ReferenceStyle">
      <summary>Gets or sets <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.ReferenceStyle" /> value which specifies whether to use A1 style or R1C1 style in cell and range references.</summary>
      <value>The default value is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.A1" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Calculate(GrapeCity.Spreadsheet.Workbook,System.Boolean,System.Boolean)">
      <summary>Calculates cells in the specified workbook.</summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object indicates the workbook to operate.</param>
      <param name="fullCalculate">if set to <c>true</c>, calculates all formulas; otherwise, calculates all formula as needed. Volatile formulas and formulas involved in circular references are always calculated.</param>
      <param name="rebuild">if set to <c>true</c> the internal data in this <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" /> will be re-build.</param>
      <remarks>Rebuild internal data of the <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" /> is a very expensive operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Calculate(GrapeCity.Spreadsheet.Worksheet)">
      <summary>Calculates cells in the specified worksheet.</summary>
      <param name="worksheet">The worksheet to calculate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Evaluate(System.String,GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.CellReference)">
      <summary>Evaluates the specified expression using the specified evaluation context.</summary>
      <param name="formula">An string value indicates the formula to evaluate.</param>
      <param name="worksheet">An <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object indicates the context worksheet.</param>
      <param name="contextCell">A <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value indicates the context cell.</param>
      <returns>GrapeCity.CalcEngine.IValue.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.TriggerVolatileCells">
      <summary>This function will notify all cells, which contains volatile functions or belong to a circuit, to recalculate.</summary>
      <returns>TRUE if there is any volatile cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CfRule" /> class.</summary>
      <param name="stylish">
        <c>true</c> indicates the conditional formatting rule will affect to the cell's formatting; otherwise, the conditional formatting rule will have independent behavior for the control.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.#ctor(GrapeCity.Spreadsheet.CfRule)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CfRule" /> class.</summary>
      <param name="originRule">A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule indicates the rule will be cloned.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfRule.MaxValuesCount">
      <summary>Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfRule.StopIfTrue">
      <summary>Gets a value indicating whether all next rules will be suspended if this rule is applied.</summary>
      <value>
        <c>true</c> if all next rules will be suspended if this rule is applied; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfRule.ValuesCount">
      <summary>Gets the total count of conditional formatting values(s).</summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.ApplyFormat(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>Applies the format of this conditional formatting rule to the format result.</summary>
      <param name="matchData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.AutoGenerateValues">
      <summary>Generates conditional formatting value(s) of this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> automatically.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.CanProcessEmptyValue">
      <summary>Determines whether this rule is able to process empty value.</summary>
      <returns>
        <c>true</c> if this rule is able to process empty value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.DecreasePriority">
      <summary>Decreases the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.Delete">
      <summary>Removes this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule from worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.GetValue(System.Int32)">
      <summary>Gets a conditional formatting value at the specified index.</summary>
      <param name="index">The index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.IncreasePriority">
      <summary>Increases the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.IsMatched(GrapeCity.Spreadsheet.Conditional.MatchData)">
      <summary>Determines whether the cell value is matched conditions of this rule.</summary>
      <param name="data">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context data to match.</param>
      <returns>
        <c>true</c> if the cell value is matched conditions of this rule; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.ReplaceWith(GrapeCity.Spreadsheet.CfRule)">
      <summary>Replaces this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule with the specified <see cref="T:GrapeCity.Spreadsheet.CfRule" nolink="true" /> rule.</summary>
      <param name="rule">The new <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule to replace.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.SetFirstPriority">
      <summary>Sets the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule as highest.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.SetLastPriority">
      <summary>Sets the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule as lowest.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>Sets the conditional formatting value.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ClassicCfRule">
      <summary>Represents a classic conditional formatting rule.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ClassicCfRule.#ctor(GrapeCity.Spreadsheet.ClassicCfRuleType,GrapeCity.Spreadsheet.DifferentialFormat)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ClassicCfRule" /> class.</summary>
      <param name="ruleType">A <see cref="T:GrapeCity.Spreadsheet.ClassicCfRuleType" /> value indicates the type of the rule.</param>
      <param name="formatting">A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object indicates the applied formatting of the rule.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.AboveAverage">
      <summary>Gets or sets a value that specifies how the conditional formatting rule is applied.</summary>
      <value>
        <c>true</c> if conditional formatting is applied to cells whose value is above average of the range; otherwise, <c>false</c>.</value>
      <remarks>This attribute is ignored if type is not equal to aboveAverage.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Bottom">
      <summary>Gets or sets a value indicates whether a "top/bottom n" rule is a "bottom n" rule.</summary>
      <value>
        <c>true</c> if conditional formatting is applied to cells whose value is in the bottom end of the range; otherwise, <c>false</c>.</value>
      <remarks>This attribute is ignored if type is not equal to top10.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.DateOperator">
      <summary>Gets or sets the date operator used in the format condition.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TimePeriods" /> value represents the date operator used in the format condition.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.EqualsIncluded">
      <summary>Gets or sets a value specifies how the conditional formatting rule is applied.</summary>
      <value>
        <c>true</c> if conditional formatting is applied to cells whose value is equal to or above the average value of cells in the range; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Formatting">
      <summary>Gets the formatting of this conditional formatting rule.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the formatting of this conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.IsPercent">
      <summary>Gets or sets a value indicating whether a "top/bottom n" rule is a "top/bottom n percent" rule.</summary>
      <value>
        <c>true</c> if a "top/bottom n" rule is a "top/bottom n percent" rule; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Operator">
      <summary>Gets or sets the operator to compare with cell value.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Operator" /> value represents the operator to compare with cell value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Rank">
      <summary>Gets or sets the rank which is used by <see cref="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Top10" /> conditional formatting rule.</summary>
      <value>An integer value represents the number of value to format in the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.RuleType">
      <summary>Gets the type of this <see cref="T:GrapeCity.Spreadsheet.ClassicCfRule" />.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ClassicCfRuleType" /> value represents the type of this <see cref="T:GrapeCity.Spreadsheet.ClassicCfRule" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.StdDev">
      <summary>Gets or sets the standard deviations which is used by <see cref="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Average" /> conditional formatting rule.</summary>
      <value>An integer value represents the number of standard deviations above or below the average to format in the conditional formatting rule.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ClassicCfRule.ApplyFormat(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>Applies the format of this conditional formatting rule to the format result.</summary>
      <param name="matchData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ClassicCfRule.Clone">
      <summary>Clones this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> value represents the cloned <see cref="T:GrapeCity.Spreadsheet.CfRule" nolink="true" /> rule.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Collection`1">
      <summary>Represents a strongly typed list of objects that can be accessed by index.</summary>
      <typeparam name="T">The type of elements in the list.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Collection`1.Count">
      <summary>Gets the number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</summary>
      <value>The number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Collection`1.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <value>The element at the specified index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Collection`1.IndexOf(`0)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Collection`1.ToArray">
      <summary>Copies the elements of the <see cref="T:GrapeCity.Spreadsheet.Collection`1" /> to a new array.</summary>
      <returns>An array containing copies of the elements of the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorFilter">
      <summary>This element specifies the color to filter by and whether to use the cell's fill or font color in the filter criteria. If the cell's font or fill color does not match the color specified in the criteria, the rows corresponding to those cells are hidden from view.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.#ctor(GrapeCity.Spreadsheet.Color,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ColorFilter" /> class.</summary>
      <param name="color">The color to filter by.</param>
      <param name="isFillColor">if set to <c>true</c> filter by cell fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.#ctor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Fill)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ColorFilter" /> class.</summary>
      <param name="fill">The fill to filter by.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorFilter.ByFillColor">
      <summary>Gets or sets a value indicating whether filter by the cell's fill color. .</summary>
      <value>
        <c>true</c> if filter by the cell's fill color. ; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorFilter.Fill">
      <summary>Gets or sets the fill which is used to filter cells by fill.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ColorFilter.Fill" /> value represents the fill which is used to filter cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorFilter.FontColor">
      <summary>Gets or sets the color which is used to filter cells by font color.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color which is used to filter cells.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
      <remarks>Safely for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToArgb(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.Fill@)">
      <summary>Get ARGB-compatible fill from the specified fill.</summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="color">The specified color to get ARGB color from.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents ARGB color.</returns>
      <remarks>
        <paramref name="fill" /> is passed as "ref" but its value is not changed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToArgbColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Color)">
      <summary>Get ARGB color from the specified color.</summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="color">The specified color to get ARGB color from.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents ARGB color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ColorResolver" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorResolver.KnownColorToArgb(GrapeCity.Core.KnownColor)">
      <summary>Convert the specified known color to ARGB color.</summary>
      <param name="color">A <see cref="T:System.Drawing.KnownColor" /> value indicates the specified known color.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the converted ARGB color</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorScaleCfRule.MaxValuesCount">
      <summary>Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorScaleCfRule.ValuesCount">
      <summary>Gets the total count of conditional formatting values(s).</summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.ApplyFormat(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>Applies the format of this conditional formatting rule to the format result.</summary>
      <param name="matchData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.Clone">
      <summary>Clones this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> value represents the cloned <see cref="T:GrapeCity.Spreadsheet.CfRule" nolink="true" /> rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.Create2ColorScaleCfRule">
      <summary>Creates a 2-color scales conditional formatting rule.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ColorScaleCfRule" /> instance represents the 2-color scales conditional formatting rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.Create3ColorScaleCfRule">
      <summary>Creates a 3-color scales conditional formatting rule.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ColorScaleCfRule" /> instance represents the 3-color scales conditional formatting rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.GetColor(System.Int32)">
      <summary>Gets the color at the specified index.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.GetValue(System.Int32)">
      <summary>Gets a conditional formatting value at the specified index.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.SetColor(System.Int32,GrapeCity.Spreadsheet.Color)">
      <summary>Sets the color at the specified index.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="color">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>Sets the conditional formatting value at the specified index.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorStop">
      <summary>Represents the color stop point for a gradient fill in a range or selection. This class cannot be inherited.</summary>
      <remarks>The ColorStop object enables you to set properties for the cell fill including the Color , ThemeColor , and TintAndShade properties.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.Color">
      <summary>Gets or sets the color of the represented object.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ColorStop.Color" /> value represents the color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.Position">
      <summary>Gets or sets the position of the <see cref="T:GrapeCity.Spreadsheet.ColorStop" />.</summary>
      <value>A dobule value represents the position of the <see cref="T:GrapeCity.Spreadsheet.ColorStop" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.ThemeColor">
      <summary>Gets or sets the theme color of the represented object.</summary>
      <value>A <see cref="T:GrapeCity.Core.ThemeColors" /> value represents the color of the theme.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.TintAndShade">
      <summary>Gets or sets a value that lightens or darkens the color of the represented object.</summary>
      <value>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorStop.Delete">
      <summary>Deletes the represented <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ConditionalFormatting">
      <summary>Represents a conditional formatting which apply a set of rules to a set of range references.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ConfirmationEventArgs">
      <summary>Represents the event argument for confirming user's option.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ConfirmationEventArgs.Accepted">
      <summary>Gets a value indicating the user's option.</summary>
      <value>
        <c>null</c> if user want to use default option, <c>true</c> if user accepted; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CustomFilter">
      <summary>When there is more than one custom filter criteria to apply (an 'and' or 'or' joining two criteria), then this element groups the customFilter elements together</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.#ctor(GrapeCity.Spreadsheet.CustomFilterCriteria)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilter" /> class.</summary>
      <param name="criteria">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the filter criteria.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.#ctor(GrapeCity.Spreadsheet.CustomFilterCriteria,GrapeCity.Spreadsheet.CustomFilterCriteria,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilter" /> class.</summary>
      <param name="firstCriteria">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the first filter criteria.</param>
      <param name="secondCriteria">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the second filter criteria.</param>
      <param name="and">if set to <c>true</c> [and].</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilter.And">
      <summary>Gets or sets a value indicating whether the two criterias have an "and" relationship.</summary>
      <value>
        <c>true</c> if the two criterias have an "and" relationship; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilter.Criteria1">
      <summary>Gets or sets the first filter criteria.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the filter criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilter.Criteria2">
      <summary>Gets or sets the second filter criteria.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the filter criteria.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarCfRule">
      <summary>Represents the data bar conditional formatting rule.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.AxisColor">
      <summary>Gets or sets the axis color of the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the axis color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.AxisPosition">
      <summary>Gets or sets the axis position for the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DatabarAxisPosition" /> value represents the axis position for the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.BorderColor">
      <summary>Gets or sets the border color of the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the border color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.Direction">
      <summary>Gets or sets the direction of the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DatabarDirection" /> value represents the direction of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.FillColor">
      <summary>Gets or sets the fill color of the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the fill color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.Gradient">
      <summary>Gets or sets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> has a gradient fill.</summary>
      <value>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> has a gradient fill; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.MaxLength">
      <summary>Gets or sets an integer value which indicates the length of the longest data bar in this conditional formatting range, expressed as a percentage of the width of the cell being formatted</summary>
      <value>An integer value represents the length of the longest data bar in this conditional formatting range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.MaxValuesCount">
      <summary>Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.MinLength">
      <summary>Gets or sets an integer value which indicates the length of the shortest data bar in this conditional formatting range, expressed as a percentage of the width of the cell containing the data bar.</summary>
      <value>An integer value represents the length of the shortest data bar in this conditional formatting range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.NegativeBorderColor">
      <summary>Gets or sets the negative border color of the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the negative border color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.NegativeFillColor">
      <summary>Gets or sets the negative fill color of the data bar.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the negative fill color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.ShowBorder">
      <summary>Gets or sets a value indicating whether the data bar has a border.</summary>
      <value>
        <c>true</c> if the data bar has a border; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.ShowValue">
      <summary>Gets or sets a value indicating whether the cells in the conditional formatting range display both the data bar and the numeric value or only the data bar.</summary>
      <value>
        <c>true</c> if the cells in the conditional formatting range display both the data bar and the numeric value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.UseNegativeBorderColor">
      <summary>Gets or sets a value that indicates whether the negative border color is used to paint the border for the negative value.</summary>
      <value>
        <c>true</c> if the negative border color is used to paint the border for the negative value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.UseNegativeFillColor">
      <summary>Gets or sets a value that indicates whether the negative fill color is used to paint the negative value.</summary>
      <value>
        <c>true</c> if the negative fill color is used to paint the negative value; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.AutoGenerateValues">
      <summary>Generates conditional formatting value(s) of this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> automatically.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.Clone">
      <summary>Clones this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> value represents the cloned <see cref="T:GrapeCity.Spreadsheet.CfRule" nolink="true" /> rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>Sets the conditional formatting value.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidation">
      <summary>Represent for the data valiation information.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.AlertStyle">
      <summary>Gets or sets the style of error alert used for this data validation.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value represents the style of error alert used for this data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ErrorMessage">
      <summary>Gets or sets the message text of error alert.</summary>
      <value>A <see cref="T:System.String" /> value represents the message text of error alert.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ErrorTitle">
      <summary>Gets or sets the title bar text of error alert.</summary>
      <value>A <see cref="T:System.String" /> value represents the title bar text of error alert.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.IMEMode">
      <summary>Gets or sets the IME (input method editor) mode enforced by this data validation.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ImeMode" /> value represents the IME (input method editor) mode enforced by this data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.IgnoreBlank">
      <summary>Gets or sets a value indicating whether the data validation allows the use of empty or blank entries.</summary>
      <value>
        <c>true</c> if the data validation allows the use of empty or blank entries; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.InCellDropdown">
      <summary>Gets or sets a value indicating whether to display a dropdown combo box for a list type data validation.</summary>
      <value>
        <c>true</c> if display a dropdown combo box; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.InputMessage">
      <summary>Gets or sets the message text of input prompt.</summary>
      <value>A <see cref="T:System.String" /> value represents the message text of input prompt.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.InputTitle">
      <summary>Gets or sets the title bar text of input prompt.</summary>
      <value>A <see cref="T:System.String" /> value represents the title bar text of input prompt.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ShowError">
      <summary>Gets or sets a value indicating whether to display the error alert message when an invalid value has been entered, according to the criteria specified.</summary>
      <value>
        <c>true</c> if display the error alert message; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ShowInput">
      <summary>Gets or sets a value indicating whether to display the input prompt message.</summary>
      <value>
        <c>true</c> if display the input prompt message; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.Equals(GrapeCity.Spreadsheet.DataValidation)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GetSuggestionList(System.Int32,System.Int32)">
      <summary>Gets the suggestions for possible valid values.</summary>
      <param name="row">An integer value indicates the context row.</param>
      <param name="column">An integer value indicates the context column.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" /> object represents the suggestions for possible valid values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GetSuggestionList">
      <summary>Gets the suggestions for possible valid values.</summary>
      <param name="row">An integer value indicates the context row.</param>
      <param name="column">An integer value indicates the context column.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" /> object represents the suggestions for possible valid values.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidations">
      <summary>Represents the data validations associated with the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.DisablePrompts">
      <summary>Gets or sets a boolean value indicates whether all data validation input prompts are disabled for the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.Item(System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> at the specified cell.</summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <value>DataValidation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.XWindow">
      <summary>Gets or sets the x-coordinate, relative to the application window, of the upper-left corner of the data validation input prompt, measured in pixels.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.YWindow">
      <summary>Gets or sets the y-coordinate, relative to the application window, of the upper-left corner of the data validation input prompt, measured in pixels.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.DataValidator,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the cell range to apply new <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> item.</param>
      <param name="item">The <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object is applied successful, <c>false</c> otherwise.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.CalcEngine.RangeReference,GrapeCity.Spreadsheet.DataValidator,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell range to apply new <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> item.</param>
      <param name="item">The <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object is applied successful, <c>false</c> otherwise.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Adds data validation to the specified range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Adds data validation to the specified range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value indicates the reference of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.CalcEngine.RangeReference,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Adds data validation to the specified range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value indicates the reference of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Adds data validation to the specified range.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the references of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="@operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.CalcEngine.RangeReference[],GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Adds data validation to the specified range.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the references of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="@operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.CircleInvalid">
      <summary>Circles invalid entries on the worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.CircleInvalid(System.Int32)">
      <summary>Get a <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array of invalid entries on the worksheet.</summary>
      <param name="maximumCells">An integer value indicates the maximum returned invalid entries. Default value will be used if <paramref name="maximumCells" /> is less than 1.</param>
      <returns>A <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array represents the position of invalid cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.ClearCircles">
      <summary>Clears circles from invalid entries on the worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GetDataRestriction(GrapeCity.Spreadsheet.Worksheet,GrapeCity.CalcEngine.Expression,GrapeCity.Spreadsheet.DataValidationType)">
      <summary>Determines whether the specified expression can be used for the data validation.</summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which contains the data validation.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object indicates the expression to check.</param>
      <param name="type">An enum indicates the type of data validation used to validate user input.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified expression.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GetDataRestriction(GrapeCity.CalcEngine.IPrimitiveValue,GrapeCity.Spreadsheet.DataValidationType)">
      <summary>Determines whether the specified expression can be used for the data validation.</summary>
      <param name="primitiveValue">An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object indicates the primitive value.</param>
      <param name="type">An enum indicates the type of data validation used to validate user input.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GetFilteringMask(System.Object,System.Object@)">
      <summary>Gets the value from <paramref name="contextData" /> to process.</summary>
      <param name="contextData">An <see cref="T:System.Object" /> instance indicates the context data.</param>
      <param name="validatedValue">An <see cref="T:System.Object" /> instance represents the validated value.</param>
      <returns>An integer value represents the mask to filter splittable items.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.ContextData.#ctor(System.Boolean,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DataValidations.ContextData" /> class.</summary>
      <param name="selectCell">if set to <c>true</c>, the validating is performed for selecting cell.</param>
      <param name="inputData">if set to <c>true</c> the validating is performed for inputting data.</param>
      <param name="validatedValue">An <see cref="T:System.Object" /> value indicates the value to validate. <c>null</c> if the current cell value is used.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionList.Count">
      <summary>Gets the number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" />.</summary>
      <value>The number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionList.Item(System.Int32)">
      <summary>Gets the suggested item at the specified position.</summary>
      <param name="index">An integer value indicates the position of the suggested item.</param>
      <param name="item">A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionItem" /> value indicates the suggested item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidator.Apply(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.DataValidationExecutedResult@)">
      <summary>Applies settings of this matched item to the specified <see cref="!:TExecutedResult" /> value.</summary>
      <param name="matchingData">A <see cref="T:GrapeCity.Spreadsheet.SplittableMatchData" /> value indicates the matching data.</param>
      <param name="result">A <see cref="!:TExecutedResult" /> value indicates the executed result.</param>
      <returns>
        <c>true</c> if other next items should be stopped executing, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidator.IsValid(System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Determines whether the specified value is valid with this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</summary>
      <param name="rangeIndex">An integer value indicates the range reference index of this data validation.</param>
      <param name="row">An integer value indicates the row index of cell to validate.</param>
      <param name="column">An integer value indicates the column index of cell to validate.</param>
      <param name="value">The cell value to validate.</param>
      <returns>
        <c>true</c> if the specified cell value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DefinedName">
      <summary>Represents a defined name.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.Name">
      <summary>Gets or sets the name of the defined name.</summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.Delete">
      <summary>Deletes the defined name.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.Equals(GrapeCity.Spreadsheet.DefinedName)">
      <summary>Determines whether the specified <see cref="T:GrapeCity.Spreadsheet.DefinedName" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:GrapeCity.Spreadsheet.DefinedName" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.DefinedName" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.GetRefersTo(System.Int32,System.Int32)">
      <summary>Gets the formula in A1 format which the defined name refers to.</summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>The string value represents formula which the defined name refers to.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.IsUndefinedName">
      <summary>Determines whether this <see cref="T:GrapeCity.CalcEngine.IDefinedName" /> is an undefined name.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.CalcEngine.IDefinedName" /> is an undefined name; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.SetRefersTo(System.Int32,System.Int32,System.String)">
      <summary>Sets the formula in A1 format which the defined name refers to.</summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="refersTo">The formula in A1 format which the defined name refers to.</param>
      <returns>A <see cref="T:System.Boolean" /> value represents whether the formula is changed successfully.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Alignment">
      <summary>Gets or sets the alignment formatting.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Alignment" /> value represents the alignment formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Border">
      <summary>Gets or sets the border formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Border" /> value represents the border formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Fill">
      <summary>Gets or sets the fill formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Fill" /> value represents the fill formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Font">
      <summary>Gets or sets the font formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Font" /> value represents the font formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.NumberFormat">
      <summary>Gets or sets the number format.</summary>
      <value>A string value represents the number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Protection">
      <summary>Gets or sets the protection formatting.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Protection" /> value represents the protection formatting.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.Clear">
      <summary>Clears all formatting.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.Equals(GrapeCity.Spreadsheet.DifferentialFormat)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DisplayFormat">
      <summary>Represents the display settings for an associated Range object. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Borders">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IBorders" /> object that represents the borders of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The borders of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Font">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The font of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.HorizontalAlignment">
      <summary>Returns a value that represents the horizontal alignment of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The horizontal alignment of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.IndentLevel">
      <summary>Returns a value that represents the indent level of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The indent level of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Interior">
      <summary>Returns an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The interior of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Locked">
      <summary>Returns a value that indicates if the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object is locked as it is displayed in the current user interface.</summary>
      <value>
        <c>true</c> if the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.MergeCells">
      <summary>Returns a value that indicates if the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object contains merged cells as it is displayed in the current user interface.</summary>
      <value>
        <c>true</c> if the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object contains merged cells; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.NumberFormat">
      <summary>Returns a value that represents the format code of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The number format of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Orientation">
      <summary>Returns a value that represents the text orientation of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The orientation of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.ShrinkToFit">
      <summary>Returns a value that indicates if Spread automatically shrinks text to fit in the available column width of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>
        <c>true</c> if Spread automatically shrinks text to fit in the available column width; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Style">
      <summary>Returns a value, containing a Style object, that represents the style of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The style of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.VerticalAlignment">
      <summary>Returns a value that represents the vertical alignment of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>The vertical alignment of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.WrapText">
      <summary>Returns a value that indicates if Spread wraps the text of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object as it is displayed in the current user interface.</summary>
      <value>
        <c>true</c> if Spread wraps the text; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DocumentProperties">
      <summary>Represents all properties of the spreadsheet document. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Application">
      <summary>Gets or sets the name of the application that created this document.</summary>
      <value>A string value represents the name of the application.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.ApplicationVersion">
      <summary>Gets or sets the version of the application which produced this document.</summary>
      <value>A string value represents the version of the application.</value>
      <remarks>The content of this element shall be of the form XX.YYYY where X and Y represent numerical values, or the document shall be considered non-conformant.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Categories">
      <summary>Gets the list of categories associated with the document.</summary>
      <value>A string value represents the list of categories.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Category">
      <summary>Gets the category associated with the document.</summary>
      <value>A string value represents the category.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Company">
      <summary>Gets or sets the name of a company associated with the document.</summary>
      <value>A string value represents the name of a company.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.ContentStatus">
      <summary>Gets or sets the content status associated with the document.</summary>
      <value>A string value represents the content status.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Created">
      <summary>Gets or sets the created date of the document.</summary>
      <value>A string value represents the created date.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Creator">
      <summary>Gets or sets the creator name associated with the document.</summary>
      <value>A string value represents the creator name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Creators">
      <summary>Gets the list of creator names associated with the document.</summary>
      <value>A <see cref="!:List&lt;string&gt;" /> object represents the list of creator names.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Description">
      <summary>Gets or sets the description associated with the document.</summary>
      <value>A string value represents the description.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.HyperlinkBase">
      <summary>Get or Set the hyperlink base address for relative hyperlinks in a document.</summary>
      <value>A string value represents the name of a supervisor.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Keywords">
      <summary>Gets the list of keywords associated with the document.</summary>
      <value>A string value represents the list of keywords.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Language">
      <summary>Gets or sets the language associated with the document.</summary>
      <value>A string value represents the language.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.LastModified">
      <summary>Gets or sets the last modified date of the document.</summary>
      <value>A string value represents the last modified date.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.LastModifiedBy">
      <summary>Gets or sets the last modified person's name.</summary>
      <value>A string value represents the last modified person's name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Manager">
      <summary>Gets or sets the name of a supervisor associated with the document.</summary>
      <value>A string value represents the name of a supervisor.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Revision">
      <summary>Gets or sets the revision of the documentation which produced this document.</summary>
      <value>A string value represents the revision of the documentation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Subject">
      <summary>Gets or sets the subject associated with the document.</summary>
      <value>A string value represents the subject.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Title">
      <summary>Gets or sets the title associated with the document.</summary>
      <value>A string value represents the title.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Version">
      <summary>Gets or sets the version of the documentation which produced this document.</summary>
      <value>A string value represents the version of the documentation.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DocumentProperties.GetKeywords">
      <summary>Gets the keywords.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DocumentProperties.SetKeywords(System.String)">
      <summary>Sets the keywords.</summary>
      <param name="keywords">The keywords.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DynamicFilter">
      <summary>This collection specifies dynamic filter criteria. These criteria are considered dynamic because they can change, either with the data itself (e.g., "above average") or with the current system date (e.g., show values for "today"). For any cells whose values do not meet the specified criteria, the corresponding rows shall be hidden from view when the filter is applied.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DynamicFilter.#ctor(GrapeCity.Spreadsheet.DynamicFilterType)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DynamicFilter" /> class.</summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DynamicFilterType" /> value indicates the dynamic filter type.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DynamicFilter.Type">
      <summary>Gets or sets the dynamic filter type.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DynamicFilterType" /> value represents the dynamic filter type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DynamicFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ExpressionView">
      <summary>Represents a view of cell range in worksheet which all cell values are calculated by a specified formula.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Column">
      <summary>Gets the left column index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An integer value indicates the left column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Column2">
      <summary>Gets the right column index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An integer value indicates the right column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Item(System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> represents the specified cell.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> instance represents the cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.PreferEvaluatedReference">
      <summary>Gets or sets a value indicating whether the evaluated range reference will be kept as it is.</summary>
      <value>
        <c>true</c> if the evaluated range reference will be kept as it is; otherwise, <c>false</c>.</value>
      <remarks>Default behavior is to assign corresponding primitive value.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Row">
      <summary>Gets the top row index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An integer value indicates the top row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Row2">
      <summary>Gets the bottom row index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An integer value indicates the bottom row index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionView.Delete">
      <summary>Removes the expression view from the owner <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionView.GetLightweightCell(System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> represents the specified cell. This function is no thread-safe.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> instance represents the cell.</returns>
      <remarks>The returned <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> cell is available until the next cell accessing. The caller should read value from <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" nolink="true" /> cell immediately and refer it no more.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ExpressionViewCell">
      <summary>Represents a cell in the <see cref="T:GrapeCity.Spreadsheet.ExpressionView" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionViewCell.DataType">
      <summary>Gets the data type of this cell.</summary>
      <value>The type of the data of the cell.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetError">
      <summary>Gets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetLogical">
      <summary>Gets the <see cref="T:System.Boolean" /> value.</summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:System.Boolean" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetNumber">
      <summary>Gets the <see cref="T:System.Double" /> value.</summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetText">
      <summary>Gets the <see cref="T:System.String" /> value.</summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ExternalVariable">
      <summary>Represents a external variable.</summary>
      <seealso cref="T:GrapeCity.Spreadsheet.DefinedName" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.EvaluationContext">
      <summary>Gets the global shared evaluation context.</summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IEvaluationContext" /> object represents the evaluation context.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.Name">
      <summary>Gets or sets the name of the defined name.</summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.Value">
      <summary>Gets the value of this external variable.</summary>
      <param name="context">The evaluation context to evaluate.</param>
      <value>A <see cref="T:GrapeCity.CalcEngine.IValue" /> object represents the value of this external variable.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.DeleteCore">
      <summary>Designates this external variable to be deleted.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.Dirty">
      <summary>Notifies the calculation engine that the value of this external variable is changed.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.EvaluateCore(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IValue)">
      <summary>Evaluates the result of this external variable.</summary>
      <param name="context">The evaluation context.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.IValue" /> object which stores the evaluated result.</param>
      <remarks>This function is invoked only if the external variable isn't attached with a formula. If it has formula, the calculation engine will take care everything.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.IsUndefined">
      <summary>Determines whether this external variable is undefined.</summary>
      <returns>
        <c>true</c> if this external variable is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.OnDirtied">
      <summary>Designates this external variable to be recalculated when the next recalculation occurs.</summary>
      <remarks>Accessing calculation engine (like get value of external variable) is available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.OnDirtying">
      <summary>Designates this external variable to be recalculated when the next recalculation occurs.</summary>
      <returns>
        <c>true</c> if the external variable require executing its own logic after the calculation engine is ready; otherwise, <c>false</c>.</returns>
      <remarks>Accessing calculation engine (like get value of external variable) isn't available inside this function.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Factory">
      <summary>Represents a spreadsheet factory for customizable types.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateWorkbookSet(System.Globalization.CultureInfo)">
      <summary>Creates the workbook set.</summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>WorkbookSet.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Filter">
      <summary>Represents the base class for filter. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Filter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Filter" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Filter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatConditions">
      <summary>Represents the conditional formats associated with the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatConditions.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.CfRule,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the cell range to apply new <see cref="T:GrapeCity.Spreadsheet.CfRule" /> item.</param>
      <param name="item">The <see cref="T:GrapeCity.Spreadsheet.CfRule" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.CfRule" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatConditions.GetDataRestriction(GrapeCity.Spreadsheet.Worksheet,GrapeCity.CalcEngine.Expression,GrapeCity.Spreadsheet.CfRule)">
      <summary>Determines whether the specified expression can be used for this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which contains the data validation.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object indicates the expression to check.</param>
      <param name="rule">A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule which use the specified expression.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified expression.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IconFilter">
      <summary>This element specifies the icon set and particular icon within that set to filter by. For any cells whose icon does not match the specified criteria, the corresponding rows shall be hidden from view when the filter is applied.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconFilter.#ctor(GrapeCity.Spreadsheet.CfIcon)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IconFilter" /> class.</summary>
      <param name="iconSet">The icon set.</param>
      <param name="iconId">The icon identifier.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconFilter.Icon">
      <summary>Gets the icon which is used to filter.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the icon which is used to filter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IconSetCfRule">
      <summary>Class IconSetConditionalFormattingRule. This class cannot be inherited.</summary>
      <seealso cref="T:GrapeCity.Spreadsheet.ClassicCfRule" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.#ctor(GrapeCity.Spreadsheet.IconSetType)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" /> class.</summary>
      <param name="iconSet">An <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set type.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.IconSet">
      <summary>Gets or sets the icon set of this <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" />.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set of this <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.MaxValuesCount">
      <summary>Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.ShowIconOnly">
      <summary>Gets or sets a value indicating whether to show icon only.</summary>
      <value>
        <c>true</c> to show icon only; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.ValuesCount">
      <summary>Gets the total count of conditional formatting values(s).</summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.AutoGenerateValues">
      <summary>Generates conditional formatting value(s) of this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> automatically.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.Clone">
      <summary>Clones this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> value represents the cloned <see cref="T:GrapeCity.Spreadsheet.CfRule" nolink="true" /> rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.GetIcon(System.Int32)">
      <summary>Gets icon at the specified index.</summary>
      <param name="index">An integer value indicates the index of icon.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents icon at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.GetIconsCount">
      <summary>Gets the icons count.</summary>
      <returns>An <see cref="T:System.Int32" /> value represents the icons count.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.GetValue(System.Int32)">
      <summary>Gets a conditional formatting value at the specified index.</summary>
      <param name="index">The index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.Reverse">
      <summary>Reverses the current order of the icons in this icon set</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.SetIcon(System.Int32,GrapeCity.Spreadsheet.CfIcon)">
      <summary>Sets an icon at the specified index</summary>
      <param name="index">An integer value indicates the index of icon.</param>
      <param name="icon">A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value indicates the icon to be set.</param>
      <returns>
        <c>true</c> if the icon is set, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>Sets the conditional formatting value.</summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IndexBitmap">
      <summary>Represents the roaring bitmap data structure. This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IndexBitmap.DataLength">
      <summary>Gets the length of the stored data.</summary>
      <value>The length of the stored data.</value>
      <remarks>This property is for optimized purpose only. It isn't the length of this <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.And(GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Performs the bitwise AND operation between the elements of the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object and the corresponding elements in the specified array.</summary>
      <param name="otherBitmap">The bitmap with which to perform the bitwise AND operation.</param>
      <remarks>The current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object will be modified to store the result of the bitwise AND operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clear">
      <summary>Clears all bits in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clear(System.Int32)">
      <summary>Clears the bit at a specific position in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">The zero-based index of the bit to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clear(System.Int32,System.Int32)">
      <summary>Clears the bit at a specific range in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clone">
      <summary>Creates a shallow copy of the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <returns>A shallow copy of the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Copy(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>Copies a range of elements from an IndexBitmap starting at the specified source index and pastes them to another IndexBitmap starting at the specified target index. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The IndexBitmap that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The IndexBitmap that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.CopyTo(GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Copies current indexes bitmap to the specified <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="bitmap">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object indicates the bitmap is copied to.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.CopyTo(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>Copies current indexes bitmap to the specified <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="bitmap">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object indicates the bitmap is copied to.</param>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Fill(System.Int32,System.Int32)">
      <summary>Sets the bits at a specific range in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Get(System.Int32)">
      <summary>Gets the value of the bit at a specific position in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">The zero-based index of the value to get.</param>
      <returns>The value of the bit at position <paramref name="index" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Insert(System.Int32,System.Int32)">
      <summary>Insert an empty range of elements into the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">The zero-based starting index of the range of elements to insert.</param>
      <param name="length">The number of elements to insert.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> is empty.</summary>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.IsEmpty(System.Int32,System.Int32)">
      <summary>Determines whether the specified range is empty.</summary>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
      <returns>
        <c>true</c> if the specified index is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Move(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>Moves a range of elements from an IndexBitmap starting at the specified source index and pastes them to another IndexBitmap starting at the specified target index. Elements of old range will be clear. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The IndexBitmap that contains the data to move.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which moving begins.</param>
      <param name="target">The IndexBitmap that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to move.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Or(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>Performs the bitwise OR operation between the elements of the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object and the corresponding elements in the specified array.</summary>
      <param name="otherBitmap">The bitmap with which to perform the bitwise OR operation.</param>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
      <remarks>The current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object will be modified to store the result of the bitwise OR operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Or(GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Performs the bitwise OR operation between the elements of the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object and the corresponding elements in the specified array.</summary>
      <param name="otherBitmap">The bitmap with which to perform the bitwise OR operation.</param>
      <remarks>The current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object will be modified to store the result of the bitwise OR operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Remove(System.Int32,System.Int32)">
      <summary>Removes a range of elements from the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">The zero-based starting index of the range of elements to remove.</param>
      <param name="length">The number of elements to remove.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Set(System.Int32)">
      <summary>Sets the bit at a specific position in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="index">The zero-based index of the bit to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Swap(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>Swaps a range of elements from an IndexBitmap starting at the specified source index with another IndexBitmap starting at the specified target index. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The IndexBitmap that contains the data to swap.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which swapping begins.</param>
      <param name="target">The IndexBitmap that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to swap.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.op_BitwiseAnd(GrapeCity.Spreadsheet.IndexBitmap,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Performs the bitwise AND operation between two <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> objects.</summary>
      <param name="bitmap">The first bitmap with which to perform the bitwise AND operation.</param>
      <param name="otherBitmap">The second bitmap with which to perform the bitwise AND operation.</param>
      <returns>An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.op_BitwiseOr(GrapeCity.Spreadsheet.IndexBitmap,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Performs the bitwise OR operation between two <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> objects.</summary>
      <param name="bitmap">The first bitmap with which to perform the bitwise OR operation.</param>
      <param name="otherBitmap">The second bitmap with which to perform the bitwise OR operation.</param>
      <returns>An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IntervalBitmap">
      <summary>Represents an one dimension array data structure which is stored as intervals.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IntervalBitmap" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IntervalBitmap.DataLength">
      <summary>Returns the minimum rows (from the begining) which contains all non-null values.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IntervalBitmap.ElementCount">
      <summary>Gets the total non-null values.</summary>
      <value>An integer value represents the total non-null values.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Clone">
      <summary>Clones the specified range of the <see cref="T:GrapeCity.Spreadsheet.IntervalBitmap" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Copy(GrapeCity.Spreadsheet.IntervalBitmap,System.Int32,GrapeCity.Spreadsheet.IntervalBitmap,System.Int32,System.Int32)">
      <summary>Copies a range of elements from an IntervalArray starting at the specified source index and pastes them to another IntervalArray starting at the specified target index. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The IntervalArray that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The IntervalArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Fill(System.Int32,System.Int32)">
      <summary>Fills a range of array with a specified value.</summary>
      <param name="index">The start index of range.</param>
      <param name="length">The length of range.</param>
      <param name="value">The value to fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Get(System.Int32)">
      <summary>Determines whether the element at the specified index is set.</summary>
      <param name="index">The index of the element to check.</param>
      <returns>
        <c>true</c> if the element at the specified index is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Set(System.Int32)">
      <summary>Turns on the bit at the specified position.</summary>
      <param name="index">An integer value indicates the index of the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.op_Explicit(GrapeCity.Spreadsheet.IntervalBitmap)~GrapeCity.Spreadsheet.IndexBitmap">
      <summary>Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.IntervalBitmap" /> to <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</summary>
      <param name="bitmap">The interval bitmap.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> result of the conversion.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.LayoutManager">
      <summary>Represents the layout manager.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.ColumnBreaks">
      <summary>Gets vertical page break information used for print layout view, page layout view, drawing print breaks in normal view, and for printing the worksheet.</summary>
      <value>The row breaks.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.ColumnOutline">
      <summary>Gets the column outline.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.Outline" /> object represents the column outline.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.DefaultColumnWidth">
      <summary>Gets the default width of the column.</summary>
      <value>An integer value indicates the default width of the column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.DefaultRowHeight">
      <summary>Gets the default height of the row.</summary>
      <value>An integer value indicates the default height of the row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.RowBreaks">
      <summary>Gets horizontal page break information used for print layout view, page layout view, drawing print breaks in normal view, and for printing the worksheet.</summary>
      <value>The row breaks.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.RowOutline">
      <summary>Gets the row outline.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.Outline" /> object represents the row outline.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CanAutoFitRow(System.Int32)">
      <summary>Checks whether a row is eligible for auto row height when cell's value or properties changed</summary>
      <param name="row" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.ClearColumns(System.Int32,System.Int32)">
      <summary>Clears the axis settings of columns</summary>
      <param name="column">An integer value indicates the index of column</param>
      <param name="count">An integer value indicates the number of columns to clear</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.ClearRows(System.Int32,System.Int32)">
      <summary>Clears the axis settings of rows</summary>
      <param name="row">An integer value indicates the index of row</param>
      <param name="count">An integer value indicates the number of rows to clear</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CreateAxisVisibilityStorage(System.Boolean)">
      <summary>Sets the row and column axis visibility storages.</summary>
      <param name="isRow">
        <c>true</c> indicates the row outline visiblity storage; otherwise, it's the column outline visibility storage.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object represent the visibility storage of the axis.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CreateOutlineVisibilityStorage(System.Boolean)">
      <summary>Gets the outline visibility storage.</summary>
      <param name="isRow">
        <c>true</c> indicates the row outline visiblity storage; otherwise, it's the column outline visibility storage.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object represent the visibility storage of the outline.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>Finds the merged cell which intersects with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="mergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the intersected reference.</param>
      <returns>
        <c>true</c> if there is intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>Finds the unioned reference of all merged cells which intersect with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="unionedMergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the unioned reference.</param>
      <param name="mergedCells">An array represents all merged cells in specified reference</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference[]@)">
      <summary>Finds all merged cells which intersect with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="mergedCells">An array represents all merged cells in specified reference</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Finds all merged cells which intersect with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <returns>An enumarable object that can enumarate through all merged cells</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindOverlapMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Finds all merged cells which overlap the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnAxisVisibility">
      <summary>Gets the column axis visibility. It contains hidden column indexes.</summary>
      <returns>IntervalBitmap.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnResizable(System.Int32)">
      <summary>Gets whether a column can be resized</summary>
      <param name="column">An integer value indicates the column index</param>
      <returns>A boolean value represents whether column is resizable</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnWidth(System.Int32)">
      <summary>Gets the width of the column.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <returns>An integer value represents the width of the column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowAxisVisibility">
      <summary>Gets the row axis visibility. It contains hidden row indexes.</summary>
      <param name="worksheet">The worksheet.</param>
      <returns>IntervalBitmap.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowHeight(System.Int32)">
      <summary>Gets the height of the row.</summary>
      <param name="row">An integer value indicates the row index.</param>
      <returns>An integer value represents the height of the row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowResizable(System.Int32)">
      <summary>Gets whether a row can be resized</summary>
      <param name="row">An integer value indicates the row index</param>
      <returns>A boolean value represents whether row is resizable</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.IsMergedCellAvailable">
      <summary>Indicates whether there is at least on merged cell in the worksheet.</summary>
      <returns>
        <c>true</c> if there is at least one merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.IsMergedCellAvailable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Indicates whether there is at least on merged cell in the specified range of the worksheet.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>
        <c>true</c> if there is at least one merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.Merge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a merged cell from the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="across">if set to <c>true</c>, merge cells in each row (or column) of the specified range as separate merged cells.</param>
      <param name="vertical">if set to <c>true</c>, cells are merged by rows; otherwise, cells are merged by columns. It has effect only if <paramref name="across" /> is <c>true</c>.</param>
      <param name="replace">if set to <c>true</c>, intersected merged cells will be removed; otherwise, they'll be unioned.</param>
      <param name="clearCellValue">if set to <c>true</c>, all overlapped cell will be clear.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ActionResult`1" /> value represents the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.ResetAxisProperty(System.Int32,GrapeCity.Spreadsheet.AxisProperty)">
      <summary>Resets the axis property of specified row or column</summary>
      <param name="index">An integer value indicates the index of row or column</param>
      <param name="axisProperty">The <seealso cref="T:GrapeCity.Spreadsheet.AxisProperty" /> to be reset</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetAutoRowHeight(System.Int32,System.Int32)">
      <summary>Sets the automatic size to a specific row.</summary>
      <param name="row" />
      <returns>An int value indicates the old height</returns>
      <remarks>This method will clear custom size flag of row</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnHidden(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Sets the hidden of the column.</summary>
      <param name="column">A boolean value indicates the left column index.</param>
      <param name="column2">A boolean value indicates the right column index.</param>
      <param name="hidden">A boolean value indicates the hidden of the column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnHidden(System.Int32,System.Boolean)">
      <summary>Sets the hidden of the column.</summary>
      <param name="column">A boolean value indicates the column index.</param>
      <param name="hidden">A boolean value indicates the hidden of the column.</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnResizable(System.Int32,System.Boolean)">
      <summary>Sets the resizable flag of a column</summary>
      <param name="row">An integer value indicates the column index</param>
      <param name="value">A boolean value indicates whether column is resizable</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnResizable(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the resizable flag of a range of columns</summary>
      <param name="column">An integer value indicates the start column index</param>
      <param name="column2">An integer value indicates the end column index</param>
      <param name="value">A boolean value indicates whether columns are resizable</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnWidth(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the width of the column.</summary>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="value">An integer value indicates the width of the column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnWidth(System.Int32,System.Int32)">
      <summary>Sets the width of the column.</summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="value">An integer value indicates the width of the column.</param>
      <returns>An integer value indicates the old size</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHeight(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the height of the row.</summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottomr ow index.</param>
      <param name="value">An integer value indicates the height of the column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHeight(System.Int32,System.Int32)">
      <summary>Sets the height of the row.</summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="value">An integer value indicates the height of the column.</param>
      <returns>An integer value indicates the old size</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHidden(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Sets the hidden state for the specified rows.</summary>
      <param name="row">A integer value indicates the top row index.</param>
      <param name="row2">A integer value indicates the bottom row index.</param>
      <param name="hidden">A boolean value indicates the hidden of the row.</param>
      <returns>
        <c>true</c> if the row visibility changed (also notified)</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHidden(System.Int32,System.Boolean)">
      <summary>Sets the hidden of the row.</summary>
      <param name="row">A boolean value indicates the row index.</param>
      <param name="hidden">A boolean value indicates the hidden of the row.</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowResizable(System.Int32,System.Boolean)">
      <summary>Sets the resizable flag of a row</summary>
      <param name="row">An integer value indicates the row index</param>
      <param name="value">A boolean value indicates whether row is resizable</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowResizable(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the resizable flag of a range of rows</summary>
      <param name="row">An integer value indicates the start row index</param>
      <param name="row2">An integer value indicates the end row index</param>
      <param name="value">A boolean value indicates whether rows are resizable</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.UnMerge">
      <summary>Separates a merged area into individual cells.</summary>
      <param name="row">An integer value indicates the row index of the cell which belongs to the merged area.</param>
      <param name="column">An integer value indicates the column index of the cell which belongs to the merged area.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.UnMerge(System.Int32,System.Int32)">
      <summary>Separates a merged area into individual cells.</summary>
      <param name="row">An integer value indicates the row index of the cell which belongs to the merged area.</param>
      <param name="column">An integer value indicates the column index of the cell which belongs to the merged area.</param>
      <returns>
        <c>true</c> if there is at least one unmerged area, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Separates a merged area into individual cells.</summary>
      <param name="row">An integer value indicates the top row index of the cell which belongs to the merged area.</param>
      <param name="column">An integer value indicates the left column index of the cell which belongs to the merged area.</param>
      <param name="row2">An integer value indicates the bottom row index of the cell which belongs to the merged area.</param>
      <param name="column2">An integer value indicates the right column index of the cell which belongs to the merged area.</param>
      <param name="overlap">Unmerges if the cell range overlaps the merged cells.</param>
      <returns>
        <c>true</c> if there is at least one unmerged area, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.MultiValuesFilter">
      <summary>When multiple values are chosen to filter by, or when a group of date values are chosen to filter by, this element groups those criteria together.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.#ctor">
      <summary>This constructor intended to be used by importing logic only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.MultiValuesFilter.DateGroupItemCount">
      <summary>Gets the total count of filtered date group items.</summary>
      <value>An integer value represents the total count of filtered date group items.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.MultiValuesFilter.FilterByBlank">
      <summary>Gets a value indicating whether the blank value is filtered-in.</summary>
      <value>
        <c>true</c> if the blank value is filtered-in; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.MultiValuesFilter.TextItemCount">
      <summary>Gets the total count of filtered text items.</summary>
      <value>An integer value represents the total count of filtered text items.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Add(System.String)">
      <summary>Adds the specified filtered-in value.</summary>
      <param name="textItem">A string value represents the filtered-in value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Add(GrapeCity.Spreadsheet.DateGroupItem)">
      <summary>Adds the specified filtered-in date group item.</summary>
      <param name="dateGroupItem">A <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> value represents the filtered-in date group item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Add(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Adds the specified filtered-in values.</summary>
      <param name="filteredValue">An <see cref="!:ICollection&lt;string&gt;" /> represents the filtered-in values.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-out items.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.GetDateGroupItem(System.Int32)">
      <summary>Gets the date group item at the specified index.</summary>
      <param name="index">An integer value indicates the index of item.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> value represents the value of date group item.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.GetTextItem(System.Int32)">
      <summary>Gets the text item at the specified index.</summary>
      <param name="index">An integer value indicates the index of item.</param>
      <returns>A <see cref="T:System.String" /> value represents the value of text item.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Remove(System.String)">
      <summary>Removes the specified text item.</summary>
      <param name="textItem">A <see cref="T:System.String" /> value indicates the text item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Remove(GrapeCity.Spreadsheet.DateGroupItem)">
      <summary>Removes the specified date group item.</summary>
      <param name="textItem">A <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> value indicates the date group item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.RemoveAll">
      <summary>Removes all items from this filter.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.RemoveAt(System.Int32,System.Boolean)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">An integer value indicates the index of item.</param>
      <param name="textItem">if set to <c>true</c>, the specified text item will be removed; otherwise, the specified date group item will be removed.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NamedObjectCollection`2">
      <summary>Represents a strongly typed list of objects that can be accessed by index or string key.</summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TContainer">The type of the container which contains this list.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.Count">
      <summary>Gets the number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" />.</summary>
      <value>The number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.Item(System.Int32)">
      <summary>Gets or sets the <see cref="!:TItem" /> at the specified index.</summary>
      <param name="index">The number of the item to be returned.</param>
      <value>The <see cref="!:TItem" /> object at the specified position.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.Item(System.String)">
      <summary>Gets the <see cref="!:TItem" /> with the specified name.</summary>
      <param name="name">The name.</param>
      <value>ItemType.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.Clear(System.Int32,System.Int32)">
      <summary>Clear the row group outline.</summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.Group(System.Int32,System.Int32)">
      <summary>Increments the outline level of the specified rows.</summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
      <returns>
        <c>true</c> if the specified range is grouped, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.HideDetail(System.Int32,System.Int32)">
      <summary>Collapses a group of cells.</summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
      <param name="show">if set to <c>true</c> the collapsed group of cells will be expanded; otherwise, the group of outline will be collapsed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.ShowDetail(System.Int32,System.Int32)">
      <summary>Expands a group of cells.</summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
      <param name="show">if set to <c>true</c> the collapsed group of cells will be expanded; otherwise, the group of outline will be collapsed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.ShowLevels(System.Int32)">
      <summary>Shows all outline groups up to the specified outline level.</summary>
      <param name="level">An integer value indicates the group outline level.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.Ungroup(System.Int32,System.Int32)">
      <summary>Ungroups the specified range.</summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
      <returns>
        <c>true</c> if the state is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.PageBreaks">
      <summary>Represents page break information used for print layout view, page layout view, drawing print breaks in normal view, and for printing the worksheet. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.PageBreaks.Count">
      <summary>Gets the total number of page breaks.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.PageBreaks.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.Break" /> value at the specified position.</summary>
      <param name="index">An integer value indicates the break item position.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Break" /> value at the specified position.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.Clear">
      <summary>Clears all the existing page breaks</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.GetBreak(System.Int32)">
      <summary>Get the <see cref="T:GrapeCity.Spreadsheet.BreakAttributes" /> value of the specified axis index.</summary>
      <param name="index">An integer value indicates the axis index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.BreakAttributes" /> value represents the page break information.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.Reset(System.Int32)">
      <summary>Resets the page break at the specified axis index.</summary>
      <param name="index">An integer value indicates the axis index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.SetBreak(System.Int32,GrapeCity.Spreadsheet.BreakAttributes)">
      <summary>Set the page break information for the specified axis index.</summary>
      <param name="index">An integer value indicates the axis index.</param>
      <param name="breakAttributes">A <see cref="T:GrapeCity.Spreadsheet.BreakAttributes" /> value indicates the page break information.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="other">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Sort">
      <summary>Represents a sort of a range of data.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Count">
      <summary>Gets the sort field count.</summary>
      <value>An integer value represents the sort field count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Header">
      <summary>Gets or sets a value indicating whether the first row contains header information.</summary>
      <value>
        <c>true</c> if the first row contains header information; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.MatchCase">
      <summary>Gets or sets a value indicating whether to perform a case-sensitive sort.</summary>
      <value>
        <c>true</c> if perform a case-sensitive sort; otherwise, <c>false</c> to perform non-case sensitive sort.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Orientation">
      <summary>Gets or sets the orientation for the sort.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Range">
      <summary>Gets the range of values on which the sort is performed.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the range of values on which the sort is performed.</value>
      <remarks>This property can be changed when applying a sort to a sheet range, and cannot be changed if the range is within a table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.SortMethod">
      <summary>Gets or sets the sort method for Chinese languages.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.SortMethod" /> value represents the sort method for Chinese languages.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.Apply(System.Boolean)">
      <summary>Sorts the range based on the currently applied sort states.</summary>
      <param name="sorting">if set to <c>true</c> apply the sort logic in current range.</param>
      <returns>An array represents the order of sorted rows.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.Clear">
      <summary>Clears all sort fields.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparseArray`1">
      <summary>Represents a strongly typed arry of objects that can be accessed by index. Provides methods to manipulate objects. This class cannot be inherited.</summary>
      <typeparam name="T">The type of elements in the list.</typeparam>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the SparseArray class that is empty and has the specified initial length.</summary>
      <param name="length">The number of elements that the new SparseArray can store.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparseArray`1.DataLength">
      <summary>Returns the length of the non-null data currently in the SparseArray1, which is one higher than the external index of the last element, or 0 if mnelements == 0. This is used by SparseMatrix.DataRows.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparseArray`1.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <value>The element at the specified index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparseArray`1.Length">
      <summary>Gets a 32-bit integer that represents the total number of elements in SparseArray.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Clear(System.Int32,System.Int32)">
      <summary>Removes all elements from the SparseArray at the specified range.</summary>
      <param name="index">The zero-based index of the range.</param>
      <param name="length">The length of the range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Clear">
      <summary>Removes all items from the <see cref="!:SparseArray" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Clone(System.Boolean)">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Contains(`0)">
      <summary>Determines whether the SparseArray contains a specific value.</summary>
      <param name="item">The object to locate in the SparseArray.</param>
      <returns>
        <c>true</c> if item is found in the; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Copy(GrapeCity.Spreadsheet.SparseArray{`0},System.Int32,GrapeCity.Spreadsheet.SparseArray{`0},System.Int32,System.Int32)">
      <summary>Copies a range of elements from an SparseArray starting at the specified source index and pastes them to another SparseArray starting at the specified target index. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The SparseArray that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The SparseArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.CopyTo(`0[],System.Int32)">
      <summary>Copies all the elements of the current one-dimensional System.Array to the specified one-dimensional SparseArray starting at the specified destination SparseArray index. The index is specified as a 32-bit integer.</summary>
      <param name="array">The one-dimensional System.Array that is the destination of the elements copied from the current SparseArray.</param>
      <param name="arrayIndex">A 32-bit integer that represents the index in array at which copying begins.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Copies all the elements of the current one-dimensional System.Array to the specified one-dimensional SparseArray starting at the specified destination SparseArray index. The index is specified as a 32-bit integer.</summary>
      <param name="array">The one-dimensional System.Array that is the destination of the elements copied from the current SparseArray.</param>
      <param name="arrayIndex">A 32-bit integer that represents the index in array at which copying begins.</param>
      <param name="length">The number of elements will be copied.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.CopyTo(`0[],System.Int32,System.Int32,System.Int32)">
      <summary>Copies all the elements of the current one-dimensional System.Array to the specified one-dimensional SparseArray starting at the specified destination SparseArray index. The index is specified as a 32-bit integer.</summary>
      <param name="array">The one-dimensional System.Array that is the destination of the elements copied from the current SparseArray.</param>
      <param name="arrayIndex">A 32-bit integer that represents the index in array at which copying begins.</param>
      <param name="length">The number of elements will be copied.</param>
      <param name="startCopyingIndex">A 32-bit integer value indicatese the start index of which copying begins.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Equals(GrapeCity.Spreadsheet.SparseArray{`0})">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Fill(System.Int32,System.Int32,`0)">
      <summary>Fills a range of array with a specified value.</summary>
      <param name="index">The start index of range.</param>
      <param name="length">The length of range.</param>
      <param name="value">The value to fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.IndexOf(`0)">
      <summary>Determines the index of a specific item in the SparseArray.</summary>
      <param name="item">The object to locate in the SparseArray.</param>
      <returns>The index of item if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.InsertRange(System.Int32,System.Int32)">
      <summary>Inserts the specified number of new null items into the SparseArray at the specified index.</summary>
      <param name="index">Specifies the insertion point, and must be greater than or equal to 0 and less than or equal to Length, or an IndexOutOfRangeException is thrown.</param>
      <param name="count">Specifies the number of null items to insert, and must be greater than 0, or an ArgumentOutOfRangeException is thrown.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Move(GrapeCity.Spreadsheet.SparseArray{`0},System.Int32,GrapeCity.Spreadsheet.SparseArray{`0},System.Int32,System.Int32)">
      <summary>Moves a range of elements from an SparseArray starting at the specified source index and pastes them to another SparseArray starting at the specified target index. Elements of old range will be clear. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The SparseArray that contains the data to move.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which moving begins.</param>
      <param name="target">The SparseArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to move.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of items from the SparseArray.</summary>
      <param name="index">Specifies the index of the first item to remove, and must be greater than or equal to 0 and less than Length, or an IndexOutOfRangeException is thrown.</param>
      <param name="count">Specifies the number of null items to remove, and must be greater than 0 and less than Length - index, or an ArgumentOutOfRangeException is thrown.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparseArray`1.Swap(GrapeCity.Spreadsheet.SparseArray{`0},System.Int32,GrapeCity.Spreadsheet.SparseArray{`0},System.Int32,System.Int32)">
      <summary>Swaps a range of elements from an SparseArray starting at the specified source index with another SparseArray starting at the specified target index. The length and the indexes are specified as 32-bit integers.</summary>
      <param name="source">The SparseArray that contains the data to swap.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which swapping begins.</param>
      <param name="target">The SparseArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to swap.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Styles">
      <summary>Represents a collection of all styles in the workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GeneralFormatter">
      <summary>Gets the general formatter for current workbook.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the general formatter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.NormalStyle">
      <summary>Gets the normal style format.</summary>
      <value>The normal style format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.PixelsPerIndent">
      <summary>Get the width (in pixels) represented by 1 indent.</summary>
      <value>An integer value represents the width of 1 indent.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Add(System.String,System.String)">
      <summary>Creates a new style and adds it to the list of styles that are available for the current workbook.</summary>
      <param name="name">The new style name.</param>
      <param name="duplicatedStyle">The duplicated style name.</param>
      <remarks>Returns null if the name already exist.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Composite(GrapeCity.Spreadsheet.StyleFormat@,GrapeCity.Spreadsheet.DifferentialFormat,GrapeCity.Spreadsheet.BorderSides)">
      <summary>Composites the specified <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value with another specified <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" nolink="true" />.</summary>
      <param name="currentStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the current style formatting.</param>
      <param name="aboveDxf">A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value indicates the differential formatting above.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Composite(GrapeCity.Spreadsheet.StyleFormat@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>Composites the specified <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value with another specified <see cref="T:GrapeCity.Spreadsheet.StyleFormat" nolink="true" />.</summary>
      <param name="currentStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the current style formatting.</param>
      <param name="aboveStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting above.</param>
      <remarks>The composited style result will be assigned to <paramref name="currentStyle" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateDifferentialFormat">
      <summary>Creates the differential format.</summary>
      <param name="fill">A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value indicates the fill formatting.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value represents the differential format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the XML reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Creates the path gradient fill.</summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1). For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1). For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1). For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1). For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>Creates the path gradient fill.</summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1). For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1). For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1). For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1). For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Creates the linear gradient fill.</summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>Creates the linear gradient fill.</summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>Creates the gradient fill.</summary>
      <param name="gradientFillEffect">A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value indicates the gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Finalize">
      <summary>Finalizes an instance of the <see cref="T:GrapeCity.Spreadsheet.Styles" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetCommonStyle(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get the common cell-only style settings of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>The common cell-only style settings of the specified range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetGradientEffect(GrapeCity.Spreadsheet.Fill)">
      <summary>Gets the gradient effect of the specified fill.</summary>
      <param name="fill">A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value indicates the gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient effect of the specified fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetRenderStyle(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.CfExecutedResult@)">
      <summary>Gets the Rendered Style of the specified cell.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="result">Represents all necessary style settings to render of the specified cell.</param>
      <returns>
        <c>true</c> if the render style need to be normalized with Normal style, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetStyle(System.String,System.Boolean)">
      <summary>Gets an <see cref="!:INamedStyle" /> object from the specified style name.</summary>
      <param name="styleName">A string value indicates the style name.</param>
      <param name="create">if set to <c>true</c>, a new <see cref="!:INamedStyle" /> will be created if it doesn't exist.</param>
      <returns>An <see cref="!:INamedStyle" /> object represents the named style.</returns>
      <remarks>If new named style is created, all its settings are copied from Normal style.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetStyle(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>Gets a built-in <see cref="!:INamedStyle" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.BuiltInStyle" /> value.</summary>
      <param name="builtInStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInStyle" /> value indicates the built-in named style.</param>
      <returns>An <see cref="!:INamedStyle" /> object represents the named style.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Modify(GrapeCity.Spreadsheet.BuiltInStyle,GrapeCity.Spreadsheet.StyleFormat,System.Boolean)">
      <summary>Modifies formatting of the specified builtIn style.</summary>
      <param name="builtInStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInStyle" /> value indicates the builtIn style.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the formatting of the builtIn style.</param>
      <param name="autoDetect">A <see cref="T:System.Boolean" /> value indicates whether the applyment is specified from <paramref name="styleFormat" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Modify(System.String,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>Modifies formatting of the specified builtIn style.</summary>
      <param name="namedStyle">A string value indicates the named style.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the formatting of the named style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Normalize(GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>Normalizes a <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value by filling missing setting from Normal style.</summary>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> to be normalized.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Normalize(GrapeCity.Spreadsheet.CfExecutedResult@)">
      <summary>Normalizes <see cref="F:GrapeCity.Spreadsheet.CfExecutedResult.Format" /> of a <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value by filling missing setting from Normal style.</summary>
      <param name="renderStyle">Indicates a <see cref="T:GrapeCity.Spreadsheet.CfExecutedResult" /> value to normalize its <see cref="F:GrapeCity.Spreadsheet.CfExecutedResult.Format" />.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Table">
      <summary>Represents a table of the worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Active">
      <summary>Gets a value indicating whether the active cell of worksheet is inside the range of this <see cref="T:GrapeCity.Spreadsheet.Table" /> object.</summary>
      <value>
        <c>true</c> if the table is active; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.AutoFilter">
      <summary>Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.BorderFormatting">
      <summary>Gets the table border format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the table border format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Comment">
      <summary>Gets or sets the comment associated with the <see cref="T:GrapeCity.Spreadsheet.Table" /> object.</summary>
      <value>A string value represents the comment.</value>
      <remarks>The comment text cannot exceed 255 characters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.DataRowFormatting">
      <summary>Gets the data row format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the data row format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.HeaderRowBorderFormatting">
      <summary>Gets the header row border format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the header row border format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.HeaderRowFormatting">
      <summary>Gets the header row format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the header row format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.TableColumn" /> at the specified column index.</summary>
      <param name="columnIndex">An integer value represents the column index.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TableColumn" /> object represents the specified table column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Name">
      <summary>Gets the name of <see cref="T:GrapeCity.Spreadsheet.Table" /> object.</summary>
      <value>A string value represents the name of <see cref="T:GrapeCity.Spreadsheet.Table" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Range">
      <summary>Gets the range reference of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range reference of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.ShowAutoFilterDropDown">
      <summary>Gets or sets a value indicating whether the filter button in the header row of each column is displayed.</summary>
      <value>
        <c>true</c> if the filter button in the header row of each column is displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.ShowHeaders">
      <summary>Gets or sets a value indicating whether the header row is visible.</summary>
      <value>
        <c>true</c> if the header row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.ShowTotals">
      <summary>Gets or sets a value indicating whether the total row is visible.</summary>
      <value>
        <c>true</c> if the total row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Sort">
      <summary>Gets the sort object.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.Sort" /> object belong to the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TableStyle">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.Table" />.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> object indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TableStyleSetting">
      <summary>Gets or sets the <see cref="P:GrapeCity.Spreadsheet.Table.TableStyleSetting" /> value indicates which style will be applied.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyleSetting" /> value indicates which style will be applied.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TotalsRowBorderFormatting">
      <summary>Gets the totals row border format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the totals row border format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TotalsRowFormatting">
      <summary>Gets the totals row format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the totals row format.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ApplyTableStyle(System.String)">
      <summary>Applies the specified table style to this <see cref="T:GrapeCity.Spreadsheet.Table" />.</summary>
      <param name="tableStyleName">A string value represents the name of table style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ApplyTableStyle(GrapeCity.Spreadsheet.TableStyle)">
      <summary>Applies the specified table style to this <see cref="T:GrapeCity.Spreadsheet.Table" />.</summary>
      <param name="tableStyleName">A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> object represents the table style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.Delete">
      <summary>Deletes this <see cref="T:GrapeCity.Spreadsheet.Table" /> from the worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.Equals(GrapeCity.Spreadsheet.Table)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GetColumnFormula(System.Int32)">
      <summary>Gets the formula of the specified calculated column.</summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <returns>An <see cref="T:System.String" /> value represents the formula of the specified calculated column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GetStyleFormat(System.Int32,System.Int32)">
      <summary>Gets the style format of the specified cell on this table.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents the style format of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.InsertColumns(System.Int32,System.Int32)">
      <summary>Inserts table column(s) at the specified index.</summary>
      <param name="index">An integer value indicates the index to insert.</param>
      <param name="count">An integer value indicates the inserted column count.</param>
      <returns>
        <c>true</c> if the inserting is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.InsertRows(System.Int32,System.Int32)">
      <summary>Inserts table row(s) at the specified index.</summary>
      <param name="index">An integer value indicates the index to insert.</param>
      <param name="count">An integer value indicates the inserted row count.</param>
      <returns>
        <c>true</c> if the inserting is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.MoveColumns(System.Int32,System.Int32,System.Int32)">
      <summary>Moves table column(s) at the specified index to other index.</summary>
      <param name="index">An integer value indicates the index to move.</param>
      <param name="toIndex">An integer value indicates the target index.</param>
      <param name="count">An integer value indicates the moved column count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.MoveRows(System.Int32,System.Int32,System.Int32)">
      <summary>Moves table row(s) at the specified index to other index.</summary>
      <param name="index">An integer value indicates the index to move.</param>
      <param name="toIndex">An integer value indicates the target index.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes table column(s) at the specified index.</summary>
      <param name="index">An integer value indicates the index to insert.</param>
      <param name="count">An integer value indicates the removed column count.</param>
      <returns>
        <c>true</c> if the removing is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes table row(s) at the specified index.</summary>
      <param name="index">An integer value indicates the index to remove.</param>
      <param name="count">An integer value indicates the removed row count.</param>
      <returns>
        <c>true</c> if the removing is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.Resize(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Resizes the boundary of this table over a new range. No cells are inserted or moved.</summary>
      <param name="column">An integer value indicates the new worksheet left column index.</param>
      <param name="column2">An integer value indicates the new worksheet right column index.</param>
      <param name="rowCount">An integer value indicates the new table row count. It's optional.</param>
      <param name="detectColumnBinding">if set to <c>true</c>, all settings, which's fitted to table column, will be expanded automatically.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetColumnFormula(System.Int32,System.String,System.Boolean,System.Boolean)">
      <summary>Sets the calculated column's formula.</summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="formula">A string value indicates formula of the calculated column. The first cell of data area will be count as context cell.</param>
      <param name="alwaysFill">if set to <c>true</c>, all cells of table column will be filled with the expression.</param>
      <param name="fillIfEmpty">if set to <c>true</c>, all cells of table column will be filled with the expression if they're all empty.</param>
      <returns>
        <c>true</c> if the formula is set successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetColumnName(System.Int32,System.String)">
      <summary>Sets the name of the column.</summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="text">A string value indicates the column name.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetDataRowStyle(System.Int32,System.String)">
      <summary>Sets the name of the cell style that is applied to the data row cell of the specified column.</summary>
      <param name="index">An integer value indicates the specifed column's index.</param>
      <param name="styleName">A string value represents the name of the cell style that is applied to the data row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetDataRowStyle(System.String)">
      <summary>Sets the name of the cell style that is applied to the data row cell.</summary>
      <param name="styleName">A string value represents the name of the cell style that is applied to the data row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetHeaderRowStyle(System.Int32,System.String)">
      <summary>Sets the name of the cell style that is applied to the header row cell of the specified column.</summary>
      <param name="index">An integer value indicates the specifed column's index.</param>
      <param name="styleName">A string value represents the name of the cell style that is applied to the header row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetHeaderRowStyle(System.String)">
      <summary>Sets the name of the cell style that is applied to the header row cell.</summary>
      <param name="styleName">A string value represents the name of the cell style that is applied to the header row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowFormula(System.Int32,System.String)">
      <summary>Sets the totals row formula.</summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="formula">A string value indicates formula of the total rows.</param>
      <returns>
        <c>true</c> if the formula is set successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowFormula(System.Int32,GrapeCity.Spreadsheet.TotalsCalculation)">
      <summary>Sets the totals row formula.</summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="function">A <see cref="T:GrapeCity.Spreadsheet.TotalsCalculation" /> value indicates the totals row function.</param>
      <returns>
        <c>true</c> if the formula is set successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowLabel(System.Int32,System.String)">
      <summary>Sets the totals row label.</summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="text">A string value indicates the totals row label.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowStyle(System.Int32,System.String)">
      <summary>Sets the name of the cell style that is applied to the totals row cell of the specified column.</summary>
      <param name="index">An integer value indicates the specifed column's index.</param>
      <param name="styleName">A string value represents the name of the cell style that is applied to the totals row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowStyle(System.String)">
      <summary>Sets the name of the cell style that is applied to the totals row cell.</summary>
      <param name="styleName">A string value represents the name of the cell style that is applied to the totals row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ToggleHeaders">
      <summary>Toggles the headers row's visibility.</summary>
      <returns>
        <c>true</c> if the action complete successfully, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ToggleTotals">
      <summary>Toggles the totals row's visibility.</summary>
      <returns>
        <c>true</c> if the action complete successfully, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.Unlist">
      <summary>Convert data of this <see cref="T:GrapeCity.Spreadsheet.Table" /> into normal cells and deletes it from the worksheet.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Tables">
      <summary>Represents a <see cref="T:GrapeCity.Spreadsheet.Tables" /> which manages all <see cref="T:GrapeCity.Spreadsheet.Table" /> tables in the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.Count">
      <summary>Gets the number of tables in this <see cref="T:GrapeCity.Spreadsheet.Tables" />.</summary>
      <value>An integer value represents the number of tables in this <see cref="T:GrapeCity.Spreadsheet.Tables" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.Table" /> with the specified name.</summary>
      <param name="name">A string value indicates the table name.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.Table" nolink="true" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.Table" /> at the specified index.</summary>
      <param name="index">An integer value indicates the table index.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.Table" nolink="true" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.String)">
      <summary>Creates the <see cref="T:GrapeCity.Spreadsheet.Table" /> at the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="includeHeaders">if set to <c>true</c>, the first row of the specified cell range will be used as table header.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.Find(System.Int32,System.Int32)">
      <summary>Find the table which contains the specified cell.</summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Table" /> object which contains the specified cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.Query(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Queries all tables which belong to the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="intersecting">if set to <c>true</c>, all tables will returns; otherwise, returns only table which belong to the cell range completely.</param>
      <returns>A <see cref="!:Table[]" /> array represents all tables which belong to the specified cell range.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableStyle">
      <summary>Represents a single style that can be applied to a table. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.BuiltIn">
      <summary>Gets a value indicating whether the style is a built-in style.</summary>
      <value>
        <c>true</c> if the style is a built-in style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.Item(GrapeCity.Spreadsheet.TableStyleElementType)">
      <summary>Gets or sets the <see cref="T:GrapeCity.Spreadsheet.TableStyleElement" /> with the specified table style element type.</summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.TableStyleElementType" /> value indicates the table style element type.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TableStyleElement" /> represents the specified table style element.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.Name">
      <summary>Gets the name of this <see cref="T:GrapeCity.Spreadsheet.TableStyle" />.</summary>
      <value>A <see cref="T:System.String" /> value represents the name of item..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.NameLocal">
      <summary>Gets the name of the table style, in the language of the user.</summary>
      <value>The name of the table style, in the language of the user.</value>
      <remarks>If the style is a built-in style, this property returns the name of the style in the language of the current locale. Otherwise, it's same as <see cref="P:GrapeCity.Spreadsheet.TableStyle.Name" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Delete">
      <summary>Delete this <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> from the table style collection.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Duplicate(System.String)">
      <summary>Duplicates this table style with the specified name.</summary>
      <param name="name">The name of new duplicated table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> value represents the duplicated table style.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Equals(GrapeCity.Spreadsheet.TableStyle)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Top10Filter">
      <summary>This element specifies the top N (percent or number of items) to filter by.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Top10Filter.#ctor(System.Boolean,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Top10Filter" /> class.</summary>
      <param name="topOrder">if set to <c>true</c> filter by top order.</param>
      <param name="value">An integer value represents top or bottom value to use as the filter criteria.</param>
      <param name="isPercentage">if set to <c>true</c> filter by percent value of the column.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.FilterByPercent">
      <summary>Gets or sets a value indicating whether or not to filter by percent value of the column. A false value filters by number of items.</summary>
      <value>
        <c>true</c> if filter by percent value of the column; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.FilterValue">
      <summary>Gets the actual cell value in the range which is used to perform the comparison for this filter.</summary>
      <value>A double value represents the actual cell value in the range which is used to perform the comparison for this filter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.TopOrder">
      <summary>Gets or sets a value indicating whether or not to filter by top order. A false value filters by bottom order.</summary>
      <value>
        <c>true</c> if filter by top order; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.Value">
      <summary>Gets or sets top or bottom value to use as the filter criteria.</summary>
      <value>An integer value represents top or bottom value to use as the filter criteria.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Top10Filter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>Applies the current filter to the specified cell range of the specified worksheet.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UIManager">
      <summary>Represents an interface which indicates the UI control. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.UIManager" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UIManager.RemainedDataChangedCount">
      <summary>Gets the total number of the remained data changed ranges.</summary>
      <value>The total number of the remained data chagned ranges.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.Awake">
      <summary>This function is called after the last call to <see cref="M:GrapeCity.Spreadsheet.WorkbookSet.EndUpdate" /> which cause <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" /> not to be suspended. The <see cref="T:GrapeCity.Spreadsheet.UIManager" /> is intended to refresh everything.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.CircleInvalid(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.CellReference[])">
      <summary>Paints the invalid cells.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet paints invalid cells</param>
      <param name="invalidCells">The invalid cells, if are null this will clear currently invalid cells</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.DisplayException(System.String)">
      <summary>Displays the exception.</summary>
      <param name="exception">The exception is thrown by executing internal logic.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.GetRemainedDataChanged(System.Int32,GrapeCity.Spreadsheet.WorksheetBase@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Gets the changed range.</summary>
      <param name="index">The index.</param>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.WorksheetBase" /> indicates the worksheet contains changed cells.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.Invalidate(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.InvalidateCategory,System.Object)">
      <summary>Invalidates the specified region of the worksheet, the control need to re-paint the coresponding cell range.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet contains cell range.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="category">An <see cref="T:GrapeCity.Spreadsheet.InvalidateCategory" /> value indicates which data causes invalidating UI.</param>
      <param name="context">A context object that specifies current object that is being invalidated</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.OnCircularChanged(System.Boolean)">
      <summary>Called when circular references state is changed.</summary>
      <param name="detected">
        <c>true</c> if the circular references is detected, <c>false</c> if the circular references is clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.OnColumnVisibilityChanged(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32)">
      <summary>Column visibility is changed.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet contains changed columns.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.OnDataChanged(GrapeCity.Spreadsheet.WorksheetBase,System.Int32,System.Int32)">
      <summary>Called when cell's value is changed.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet contains the changed cell.</param>
      <param name="row">An integer value indicates the row index of the cell.</param>
      <param name="column">An integer value indicates the column index of the cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.OnDataChanged(GrapeCity.Spreadsheet.WorksheetBase,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.InvalidateCategory)">
      <summary>Called when cell range's values are changed.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet contains changed cells.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.OnRowVisibilityChanged(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32)">
      <summary>Row visibility is changed.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet contains changed rows.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UIManager.OnWorkbookNameChanged(GrapeCity.Spreadsheet.Workbook)">
      <summary>Called when the workbook name changed.</summary>
      <param name="workbook">The workbook.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Workbook">
      <summary>Represents a workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ActiveSheet">
      <summary>Gets the active sheet (the sheet on top).</summary>
      <value>The active sheet (the sheet on top); null if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ActiveSheetIndex">
      <summary>Gets the active sheet index (the sheet on top).</summary>
      <value>The active sheet index (the sheet on top); -1 if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties" /> object that represents all properties of the spreadsheet document.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties" /> object represents all properties of the spreadsheet document.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Date1904">
      <summary>Gets or sets whether the date system used to convert a date from/to a serial value starts since 1/1/1904.</summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
      <remarks>All workbooks in the same workbook set share same value of <see cref="P:GrapeCity.Spreadsheet.Workbook.Date1904" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.DefaultTableStyle">
      <summary>Gets or sets the table style from the TableStyles collection that is used as the default table style.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the default table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.FullName">
      <summary>Gets the name of this workbook, including its path, as a string.</summary>
      <value>The full name of this workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.LinkSources">
      <summary>Gets an array of links in the workbook. The names in the array are the names of the linked documents. Returns empty array if there are no links.</summary>
      <value>The link sources.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Locks">
      <summary>Gets the protected data of this workbook.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value represents the protected data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Name">
      <summary>Gets or sets the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</summary>
      <value>A string value represents the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Path">
      <summary>Gets a string that represents the complete path to the workbook/file that this workbook object respresents.</summary>
      <value>The complete path to the workbook/file that this workbook object respresents.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Protection">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.ProtectionMode" /> value indicating whether this workbook is protected.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ProtectionMode" /> value represents the protection state of this workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.SaveLinkValues">
      <summary>Gets or sets a boolean value indicating whether externally referenced values will be saved with the workbook, enabling cells which refer to those values to be calculated without returning a #REF! error.</summary>
      <value>
        <c>true</c> if externally referenced values will be saved with the workbook; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.SheetTabRatio">
      <summary>Specifies ratio between the workbook tabs bar and the horizontal scroll bar.</summary>
      <value>The default value for this attribute is 0.6.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ShowHorizontalScroll">
      <summary>Specifies a boolean value that indicates whether to display the horizontal scroll bar in the user interface.</summary>
      <value>A value of 0 or false indicates that the horizontal scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ShowSheetTabs">
      <summary>Specifies a boolean value that indicates whether to display the sheet tabs in the user interface.</summary>
      <value>A value of 0 or false indicates that sheet tabs shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ShowVerticalScroll">
      <summary>Specifies a boolean value that indicates whether to display the vertical scroll bar.</summary>
      <value>A value of 0 or false indicates the vertical scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Styles">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.TableStyles">
      <summary>Gets the collection of table styles that are used in the workbook.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyles" /> collection that contains the table styles that are used in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Theme">
      <summary>Gets or sets the theme applied to the current workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.UpdateLinks">
      <summary>Gets or sets an <see cref="T:GrapeCity.Spreadsheet.UpdateLinks" /> constant indicating a workbook's setting for updating links.</summary>
      <value>The workbook's setting for updating links.</value>
      <remarks>Updating links is for physical files. If the external workbook is already opened, the workbook will always be linked.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.WorkbookSet">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Workbook.WorkbookSet" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Worksheets">
      <summary>Gets the worksheet collection.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.BreakLink(System.String)">
      <summary>Converts formulas linked to other workbook to values.</summary>
      <param name="name">The name of the link.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Calculate">
      <summary>Calculates this workbook.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Close(System.Boolean,System.String)">
      <summary>Closes this workbook.</summary>
      <param name="saveChanges">If there are no changes to the workbook, this argument is ignored. If set to True , changes are saved to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="filename" /> is used. If <paramref name="filename" /> is omitted and there is no file name associated with the workbook, <paramref name="saveChanges" /> is ignored.</param>
      <param name="filename">Save changes under this file name.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Dispose(System.Boolean)">
      <summary>Disposes the specified disposing.</summary>
      <param name="disposing">The disposing.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Workbook},System.Guid)">
      <summary>Enables an object to extend another object through aggregation.</summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Finalize">
      <summary>Finalizes an instance of the <see cref="T:GrapeCity.Spreadsheet.Workbook" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ImportExtensionData(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Workbook},System.Guid)">
      <summary>Imports the extension data.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Protect(GrapeCity.Spreadsheet.WorkbookLocks,System.String)">
      <summary>Protects a workbook so that it cannot be modified.</summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string value that specifies a case-sensitive password for the worksheet or workbook.</param>
      <returns>
        <c>true</c> if the workbook is protected successful, <c>false</c> otherwise.</returns>
      <remarks>Note that support for <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" nolink="true" /> have same effect in runtime.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Reset">
      <summary>Resets this workbook by removing all data.</summary>
      <remarks>This function should not be invoked directly from user-code.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Save">
      <summary>Saves changes to the specified workbook.</summary>
      <returns>
        <c>true</c> if changes are saved successful, <c>false</c> otherwise.</returns>
      <remarks>To open a workbook file, use the <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.IO.Stream,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Boolean)" /> method or <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.String,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)" /> method. <para>To mark a workbook as saved without writing it to a disk, set its Saved property to True.</para><para>The first time you save a workbook, use the <see cref="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method or <see cref="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method to specify a name for the file.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the stream to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified file location.</summary>
      <param name="filename">A string value indicates the file name to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Unprotect(System.String)">
      <summary>Unprotects the workbook which is protected by password.</summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect workbook.</param>
      <returns>
        <c>true</c> if the workbook is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.UpdateLink(System.String,System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>Updates the specified link of this workbook.</summary>
      <param name="name">The name of the link to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.Workbook.LinkSources" />.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if the link is updated successfully; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.UpdateLink(System.String[],System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>Updates one or all links of this workbook.</summary>
      <param name="names">The name of the links to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.Workbook.LinkSources" />. <c>null</c> is to update all links.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if all links are updated successfully; otherwise <c>false</c> if there is at least one link is failed to update.</returns>
      <remarks>When the <see cref="!:UpdateLink(string)" /> method is called without any parameters (or <paramref name="name" /> is null/empty), Spread defaults to updating all worksheet links.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorkbookBase">
      <summary>Represents a workbook base. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookBase.FormulaEngine">
      <summary>Gets the formula engine of this workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookBase.Names">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.WorkbookBase.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.WorkbookBase.Names" /> collection that represents all the names in the specified workbook.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorkbookSet">
      <summary>Represents a set of workbooks which may refer to each other by external cell references or external defined name references.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CalculationEngine">
      <summary>Gets the calculation engine.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.ColorManager">
      <summary>Gets the color manager of the <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" />.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.ColorManager" /> object represents the color manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CommandManager">
      <summary>Gets the command manager of the <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" />.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.CommandManager" /> object represents the command manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Compatibility">
      <summary>Gets or sets the <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.Compatibility" /> value that indicating the compatibility of the spreadsheet.</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.Compatibility" /> value to apply behaviors.</value>
      <remarks>Changing this property won't affect to existed data. You should change this value one time only, when the application start.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Culture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.</summary>
      <value>The <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.FormatOptions">
      <summary>Gets the general <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.FormatOptions" /> value.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.LanguagePackage">
      <summary>Gets or sets the aliases of built-in functions.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Localizer">
      <summary>Gets or sets the localizer which returns contanst texts.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> value represents the localizer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Workbooks">
      <summary>Gets all of the workbooks in this workbook set.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IWorkbooks" /> instance represents all of the workbooks in this workbook set.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.BeginUpdate">
      <summary>Suspends painting and events until <see cref="M:GrapeCity.Spreadsheet.WorkbookSet.EndUpdate" /> is called. Calling this function is exclusively.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.EndUpdate">
      <summary>Restores painting and events to the state before the last call to <see cref="M:GrapeCity.Spreadsheet.WorkbookSet.BeginUpdate" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.RegisterUIManager(GrapeCity.Spreadsheet.UIManager)">
      <summary>Registers the UI manager.</summary>
      <param name="uiManager">The UI manager.</param>
      <remarks>
        <c>null</c> means the current <see cref="T:GrapeCity.Spreadsheet.UIManager" /> will be unregistered.</remarks>
      <exception cref="T:System.ArgumentException">Only single UIManager can be attached to WorkbookSet</exception>
    </member>
    <member name="E:GrapeCity.Spreadsheet.WorkbookSet.UpdateLinks">
      <summary>Occurs when update links according to the user's settings for the specified workbook.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Worksheet">
      <summary>Represents a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter">
      <summary>Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.AutoFilterMode">
      <summary>Gets a value that indicates whether the AutoFilter drop-down arrows are currently displayed on the sheet.</summary>
      <value>
        <c>true</c> if the AutoFilter drop-down arrows are currently displayed on the sheet; otherwise, <c>false</c>.</value>
      <remarks>This property returns <c>true</c> if the drop-down arrows are currently displayed. You can set this property to <c>false</c> to remove the arrows, but you cannot set it to <c>true</c>. Use the <see cref="M:GrapeCity.Spreadsheet.IRange.AutoFilter" /> method to filter a list and display the drop-down arrows.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Behaviors">
      <summary>Gets or sets the behaviors of operations.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.Behaviors" /> value represents the behaviors of operations.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Cells">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> instance which represents the entire worksheet cells.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> instance which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.CircularReference">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that that represents the range containing the first circular reference on the sheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that that represents the range containing the first circular reference on the sheet. <c>null</c> if there's no circular reference on the sheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ColumnCount">
      <summary>Gets or sets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An integer value represents the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ColumnFooter">
      <summary>Gets the column footer of a worksheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnFooter" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ColumnHeader">
      <summary>Gets the column header of a worksheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnHeader" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Columns">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the columns on the worksheet.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to columns' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.DataManager">
      <summary>Gets or sets the data source of this worksheet.</summary>
      <value>An <see cref="!:IDataSource" /> object represents the data source of this worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.DataValidations">
      <summary>Gets the <see cref="!:GrapeCity.SpreadsheetValidations" /> object which manages all data validations in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>A <see cref="!:GrapeCity.SpreadsheetValidations" /> object represents the data validations of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.FormatConditions">
      <summary>Gets the conditional formatting manager.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.FormatConditions" /> object represents the conditional formatting manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Index">
      <summary>Gets the index number of the worksheet within the collection of worksheets.</summary>
      <value>The index number of the worksheet within the collection of worksheets.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.LayoutManager">
      <summary>Gets the layout manager of this worksheet.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.LayoutManager" /> object represents the layout manager of this worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Locks">
      <summary>Gets the protected data of this worksheet.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> value represents the protected data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Name">
      <summary>Gets or sets the name of worksheet.</summary>
      <value>A string value indicates the name of worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Names">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.Worksheet.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix).</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Worksheet.Names" /> collection that represents all the worksheet-specific names.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Next">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the next sheet.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the next sheet; null if the current worksheet is the last sheet in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.PageSetup">
      <summary>Gets the page setup of the worksheet.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> object represents the page setup of the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Previous">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the previous sheet.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the previous sheet; null if the current worksheet is the first sheet in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ProtectionMode">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.Worksheet.ProtectionMode" /> value indicating whether this worksheet is protected.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.ProtectionMode" /> value represents the protection state of this worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.RowCount">
      <summary>Gets or sets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>An integer value represents the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.RowHeader">
      <summary>Gets the row header of a worksheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRowHeader" /> object represents the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Rows">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the rows on the worksheet.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to rows' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Sort">
      <summary>Gets the sort object.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.Sort" /> object belong to the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.TabColor">
      <summary>Gets or sets the color of the tab.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color of the tab.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Tables">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Tables" /> object which manages all tables in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Tables" /> object represents the tables of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Type">
      <summary>Gets the worksheet type.</summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetType" /> value represents the worksheet type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.View">
      <summary>Gets the worksheet view of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ISheetView" /> object represents the sheet view.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Visible">
      <summary>Gets or sets a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that determines whether the worksheet is visible.</summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that indicates the worksheet visibility.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Workbook">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.WorkbookSet">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.WorkbookSet" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Activate">
      <summary>Makes the current sheet the active sheet.</summary>
      <remarks>This method is equivalent to clicking the tab at the bottom of the sheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Aggregate(GrapeCity.CalcEngine.AggregateFunction,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.AggregateOption)">
      <summary>Get the aggregate value of the specified cell range.</summary>
      <param name="func">An <see cref="T:GrapeCity.CalcEngine.AggregateFunction" /> value indicates the aggregate function.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="option">An <see cref="T:GrapeCity.CalcEngine.AggregateOption" /> value indicates which values to ignore in the evaluation range for the function.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the aggregate value of the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ApplyStyleExtend(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.API.StyleExtendDataModifier)">
      <summary>Allow other products use modifier to modify the extended data of style in worksheet's range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="modifier">The style modifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ApplyStyleFormatter(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier)">
      <summary>Allow other products use modifier to modify the extended data of style in worksheet's range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="modifier">The style modifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Calculate">
      <summary>Calculates this worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Clear(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Removes all the data and formulas from the specified range of cells.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="rowCount">An integer value indicates the total number of rows.</param>
      <param name="columnCount">An integer value indicates the total number of columns.</param>
      <returns>
        <c>true</c> if the data is clear, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.Worksheet)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="row">Row index of start of range from which to copy</param>
      <param name="column">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be copied to. <c>null</c> means the data is copied to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Copy(System.Int32)">
      <summary>Copies this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" nolink="true" /> collection of the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" />.</summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.CreateAutoFilter(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the automatic filter.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>An <see cref="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter" /> object represents the created filter. <c>null</c> if the data is invalid.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.CreateExpressionView(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Creates the expression view which binds the specified formula to a cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formulaText">An string value indicates the formula text.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> object represents the expression view.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Delete">
      <summary>Deletes this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> from its owner <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Execute(System.Int32,System.Int32,System.Int32,System.Int32,System.Func{System.Object,System.Boolean},System.Object)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="action">A <see cref="!:Func&lt;object, bool&gt;" /> action indicates the action to execute.</param>
      <param name="contextData">An <see cref="T:System.Object" /> indicates the context data.</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Get3DReferenceIndex">
      <summary>Get the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</summary>
      <returns>An integer value indicates the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetExpression(System.Int32,System.Int32)">
      <summary>Gets the formula, as an expression value, for the cell of the specified row and column of this sheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:GrapeCity.CalcEngine.Expression" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetHyperlinkData(GrapeCity.CalcEngine.Expression,System.Int32,System.Int32)">
      <summary>Gets hyperlink data from the specified cell which contains HYPERLINK function.</summary>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object indicates the cell's expression.</param>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetNumberFormat(System.Int32,System.Int32)">
      <summary>Gets the number format from the specified cell on this sheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetNumberFormat(System.Int32,System.Int32,System.Boolean@)">
      <summary>Gets the number format from the specified cell on this sheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="isQuoted">A boolean value indicating whether the cell value started with a quote symbol character.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetStyleFormat(System.Int32,System.Int32)">
      <summary>Gets the style format of the specified cell on this worksheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents the style format of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetValue(System.Int32,System.Int32)">
      <summary>Gets raw data from the specified cell on this sheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.InsertColumns(System.Int32,System.Int32)">
      <summary>Inserts column(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.</summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.InsertRows(System.Int32,System.Int32)">
      <summary>Inserts row(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.</summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.Worksheet)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be copied to. <c>null</c> means the data is copied to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is moved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Move(System.Int32)">
      <summary>Moves this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" nolink="true" /> collection of the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" />.</summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Protect(GrapeCity.Spreadsheet.WorksheetLocks,System.String)">
      <summary>Protects a worksheet so that it cannot be modified.</summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string that specifies a case-sensitive password for the worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is protected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Range(System.String,System.String)">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a cell or a range of cells.</summary>
      <param name="cell1">The name of the range. This must be an A1-style reference.</param>
      <param name="cell2">The cell in the lower-right corner of the range.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes one or more columns starting with the column at the specified position.</summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
      <returns>
        <c>true</c> if the columns are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes one or more rows starting with the row at the specified position.</summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
      <returns>
        <c>true</c> if the rows are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetExpression(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.Expression)">
      <summary>Sets the <see cref="T:GrapeCity.CalcEngine.Expression" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetFormula(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets the formula text for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">A string value indicates the formula text to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetFormulaArray(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets the formula text for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">A string value indicates the formula text to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetStyleFormat(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>Sets the style format for the specified cell range on this worksheet.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style format to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetStyleFormat(System.Int32,System.Int32,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>Sets the style format for a specific cell on this worksheet.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style format to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the <see cref="T:System.Boolean" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:],System.Boolean)">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:])">
      <summary>Sets an object array into a specified range of cells.</summary>
      <typeparam name="T" />
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:],System.Boolean)">
      <summary>Sets an object array into a specified range of cells.</summary>
      <typeparam name="T" />
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Sets the value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,GrapeCity.Spreadsheet.CellValue@)">
      <summary>Sets the <see cref="T:GrapeCity.Spreadsheet.CellValue" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.Spreadsheet.CellValue" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Sets the <see cref="T:System.Double" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>Sets the <see cref="T:System.Double" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Byte)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Byte" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int16)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int16" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Single)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Single" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int64)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int64" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Decimal)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Decimal" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.RichText)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:GrapeCity.Spreadsheet.RichText" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.String)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,GrapeCity.Spreadsheet.RichText)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.Spreadsheet.RichText" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the <see cref="T:System.Boolean" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
      <summary>Sets the <see cref="T:System.DateTime" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.DateTime)">
      <summary>Sets the <see cref="T:System.DateTime" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Swaps the specified ranges of cells.</summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is swapped successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Unprotect(System.String)">
      <summary>Unprotects the worksheet which is protected by password.</summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetBase">
      <summary>Represents a worksheet base. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.EnableCalculation">
      <summary>Gets or sets a value indicating whether calculation engine automatically recalculates the worksheet when necessary.</summary>
      <value>
        <c>true</c> if calculation engine automatically recalculates the worksheet when necessary; otherwise, calculation engine doesn't recalculate the sheet.</value>
      <remarks>When the value of this property is <c>false</c>, you cannot request a recalculation. When you change the value from <c>false</c> to <c>true</c>, calculation engine recalculates the worksheet.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.Name">
      <summary>Gets or sets the name of worksheet.</summary>
      <value>A string value indicates the name of worksheet.</value>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> cannot be null or empty.</exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.Get3DReferenceIndex">
      <summary>Get the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</summary>
      <returns>An integer value indicates the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ActionResult`1">
      <summary>Represents the executing result of an action.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(System.String)">
      <summary>Initializes an action failed result.</summary>
      <param name="details">The details information of executing action.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(System.String,System.Type)">
      <summary>Initializes an action failed result.</summary>
      <param name="details">The details information of executing action.</param>
      <param name="exceptionType">The details type of exception</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(`0)">
      <summary>Initializes an action success result.</summary>
      <param name="value">A <see cref="!:T" /> value represents the executing result.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Details">
      <summary>Gets a string value indicating the details information of executing action.</summary>
      <value>The details information of executing action.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Success">
      <summary>Gets a value indicating whether the action is executed successful.</summary>
      <value>
        <c>true</c> if the action is executed successful; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Value">
      <summary>Gets the <see cref="!:T" /> value represents the executing result.</summary>
      <value>A <see cref="!:T" /> value represents the executing result.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.op_Implicit(GrapeCity.Spreadsheet.ActionResult{`0})~System.Boolean">
      <summary>Performs an implicit conversion from <see cref="!:ActionResult" /> to <see cref="T:System.Boolean" />.</summary>
      <param name="result">The specified <see cref="!:ActionResult" /> to convert.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.DownwardText">
      <summary>A constant integer value represent the downward text. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.HorizontalText">
      <summary>A constant integer value represent the horizontal text. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.UpwardText">
      <summary>A constant integer value represent the upward text. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.VerticalText">
      <summary>A constant integer value represent the vertical text. This field is constant and read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.HAlignment">
      <summary>Gets or sets the type of horizontal alignment in cells.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.HorizontalAlignment" /> value represents the type of horizontal alignment in cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.Indent">
      <summary>Gets or sets the number of spaces (of the normal style font) of indentation for text in a cell.</summary>
      <value>An integer value represents the number of spaces (of the normal style font) of indentation for text in a cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.JustifyLastLine">
      <summary>Gets or sets a value indicating if the cells justified or distributed alignment should be used on the last line of text.</summary>
      <value>
        <c>true</c> if the cells justified or distributed alignment should be used on the last line of text; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.ReadingOrder">
      <summary>Gets or sets the reading order (bidirectionality) of the cell.</summary>
      <value>The reading order.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.RelativeIndent">
      <summary>Gets or sets the additional number of spaces of indentation to adjust for text in a cell.</summary>
      <value>An integer value represents the additional number of spaces of indentation to adjust for text in a cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.ShrinkToFit">
      <summary>Gets or sets a value indicating whether the displayed text in the cell should be shrunk to fit the cell width.</summary>
      <value>
        <c>true</c> if the displayed text in the cell should be shrunk to fit the cell width; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.TextRotation">
      <summary>Gets or sets the text rotation in cells.</summary>
      <value>An integer value represents the text rotation in cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.VAlignment">
      <summary>Gets or sets the type of vertical alignment in cells.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.HorizontalAlignment" /> value represents the type of vertical alignment in cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.WrapText">
      <summary>Gets or sets a value indicating whether the text is wrappable.</summary>
      <value>
        <c>true</c> if the text is wrappable; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Equals(GrapeCity.Spreadsheet.Alignment)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.IsEmpty">
      <summary>Determines whether this <see cref="T:GrapeCity.Spreadsheet.Alignment" /> is empty.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Alignment" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.IsSet(GrapeCity.Spreadsheet.AlignmentAttributes)">
      <summary>Determines whether the specified attribute(s) is set.</summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.AlignmentAttributes" /> value indicates the attribute(s) will be tested.</param>
      <returns>
        <c>true</c> if the specified attribute(s) is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Reset(GrapeCity.Spreadsheet.AlignmentAttributes)">
      <summary>Resets the specified attribute(s).</summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.AlignmentAttributes" /> value indicates the attribute(s) will be reset.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Set(GrapeCity.Spreadsheet.AlignmentAttributes)">
      <summary>Sets the specified attribute.</summary>
      <param name="attr">The attribute.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFilterColumn">
      <summary>The FilterColumn collection identifies a particular column in the AutoFilter range and specifies filter information that has been applied to this column. If a column in the AutoFilter range has no criteria specified, then there is no corresponding filterColumn collection expressed for that column.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.ActiveFilter">
      <summary>Gets the active filter.</summary>
      <value>The active filter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.ColumnIndex">
      <summary>Gets the zero-based index indicating the AutoFilter column to which this filter information applies.</summary>
      <value>An integer value represents the zero-based index indicating the AutoFilter column to which this filter information applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.FilterCount">
      <summary>Gets the count of filters in the column.</summary>
      <value>An integer value represents the count of filters in the column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:GrapeCity.Spreadsheet.Filter" /> with the specified filter index.</summary>
      <param name="filterIndex">An integer value indicates the filter index.</param>
      <value>Filter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilterColumn.GetFilterData(System.Boolean)">
      <summary>Gets filter data from this filter column.</summary>
      <param name="sortByText">if set to <c>true</c> the array contains the all display texts will be sorted .</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FilterData" /> represents the filter data of this filter column.</returns>
      <remarks>This method is called by UI to provides the filter data.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilterColumn.IsFilteredOut">
      <summary>Gets a value indicating whether there is any filtered out item.</summary>
      <returns>
        <c>true</c> if there is any filtered out item; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.#ctor(GrapeCity.Spreadsheet.BorderLine)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Border" /> struct.</summary>
      <param name="borderLine">A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents all border lines.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Border.Empty">
      <summary>Represents a <see cref="T:GrapeCity.Spreadsheet.Border" /> structure with its properties left uninitialized. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Border.NoBorder">
      <summary>Represents no border; so the default border should be used to paint. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.All">
      <summary>Gets or sets all border lines.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents all border lines.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Bottom">
      <summary>Gets or sets the bottom side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the bottom side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Diagonal">
      <summary>Gets or sets the diagonal side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the diagonal side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.DiagonalDown">
      <summary>Gets or sets a value indicating whether the cell's diagonal border includes a diagonal line, starting at the top left corner of the cell and moving down to the bottom right corner of the cell.</summary>
      <value>
        <c>true</c> if the cell's diagonal border includes a diagonal line, starting at the top left corner of the cell and moving down to the bottom right corner of the cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.DiagonalUp">
      <summary>Gets or sets a value indicating whether cell's diagonal border includes a diagonal line, starting at the bottom left corner of the cell and moving up to the top right corner of the cell.</summary>
      <value>
        <c>true</c> if cell's diagonal border includes a diagonal line, starting at the bottom left corner of the cell and moving up to the top right corner of the cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Horizontal">
      <summary>Gets or sets the inner horizontal side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the inner horizontal side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Left">
      <summary>Gets or sets the left side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the left side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Outline">
      <summary>Gets or sets a value indicating whether left, right, top, and bottom borders should be applied only to outside borders of a cell range.</summary>
      <value>
        <c>true</c> if left, right, top, and bottom borders should be applied only to outside borders of a cell range; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Right">
      <summary>Gets or sets the right side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the right side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Top">
      <summary>Gets or sets the top side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the top side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Vertical">
      <summary>Gets or sets the inner vertical side of border.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the inner vertical side of border.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.Equals(GrapeCity.Spreadsheet.Border)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.Equals(GrapeCity.Spreadsheet.Border@)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.IsDisplayable">
      <summary>Determines whether this instance contains border setting(s).</summary>
      <returns>
        <c>true</c> if this instance contains border setting(s); otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.IsEmpty">
      <summary>Determines whether this instance is empty.</summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.op_Equality(GrapeCity.Spreadsheet.Border,GrapeCity.Spreadsheet.Border)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Border" /> values are equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.op_Inequality(GrapeCity.Spreadsheet.Border,GrapeCity.Spreadsheet.Border)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Border" /> values are not equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.#ctor(GrapeCity.Spreadsheet.BorderLineStyle,GrapeCity.Spreadsheet.Color)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> struct.</summary>
      <param name="lineStyle">A <see cref="T:GrapeCity.Spreadsheet.BorderLineStyle" /> value indicates the border line style.</param>
      <param name="color">A <see cref="F:GrapeCity.Spreadsheet.BorderLine._color" /> value indicates the border line color.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLine.Empty">
      <summary>Represents no border line; so the default border line should be used to paint. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLine.NoLine">
      <summary>Represents no border line; so the default border line should be used to paint. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BorderLine.Style">
      <summary>Gets the style of the border line.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLineStyle" /> value represents the style of the border line.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.Equals(GrapeCity.Spreadsheet.BorderLine)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Break">
      <summary>Represents a page break information.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Break.Attributes">
      <summary>Gets the page break flag.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Break.Id">
      <summary>Gets an integer value indicates the axis index.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellProtection.FormulaHidden">
      <summary>Gets or sets a value indicating whether the cell formula is hidden.</summary>
      <value>
        <c>true</c> if the cell formula is hidden; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellProtection.Locked">
      <summary>Gets or sets a value indicating whether the cell is locked.</summary>
      <value>
        <c>true</c> if the cell is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.Equals(GrapeCity.Spreadsheet.CellProtection)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.IsEmpty">
      <summary>Determines whether this <see cref="T:GrapeCity.Spreadsheet.CellProtection" /> is empty.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CellProtection" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.IsSet(GrapeCity.Spreadsheet.CellProtectionAttributes)">
      <summary>Determines whether the specified property has been assigned value.</summary>
      <param name="attr">An <see cref="T:GrapeCity.Spreadsheet.AlignmentAttributes" /> value indicates the specified property.</param>
      <returns>
        <c>true</c> if the specified property has been assigned value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.Reset(GrapeCity.Spreadsheet.CellProtectionAttributes)">
      <summary>Resets the specified property to unset state.</summary>
      <param name="attr">An <see cref="T:GrapeCity.Spreadsheet.CellProtectionAttributes" /> value indicates the specified property.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellReference">
      <summary>Represents a reference to a range of cells.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Reference" /> class.</summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellReference.Empty">
      <summary>Empty CellReference instance. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellReference.Column">
      <summary>Gets the column index.</summary>
      <value>An integer value represents the column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellReference.Row">
      <summary>Gets the row index.</summary>
      <value>An integer value represents the row index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.CompareTo(GrapeCity.Spreadsheet.CellReference)">
      <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
      <param name="other">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order. Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.Equals(GrapeCity.Spreadsheet.CellReference)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.IsEmpty">
      <summary>Determines whether this <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value is empty.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.Offset(System.Int32,System.Int32)">
      <summary>Translates this <seealso cref="T:GrapeCity.Spreadsheet.CellReference" /> by the specified amount.</summary>
      <param name="translateRows">The amount to offset the y-coordinate.</param>
      <param name="translateColumns">&gt;The amount to offset the x-coordinate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this reference.</summary>
      <returns>A <see cref="T:System.String" /> that represents this reference.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Equality(GrapeCity.Spreadsheet.CellReference,GrapeCity.Spreadsheet.CellReference)">
      <summary>Returns whether two <see cref="T:GrapeCity.Spreadsheet.CellReference" /> are equals.</summary>
      <param name="cell1">The fisrt <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <param name="cell2">The second <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <returns>
        <c>true</c> if two values are equals; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Implicit(GrapeCity.Spreadsheet.CellReference)~GrapeCity.CalcEngine.CellReference">
      <summary>Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.CellReference" /> to <see cref="T:GrapeCity.CalcEngine.CellReference" />.</summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Implicit(GrapeCity.CalcEngine.CellReference)~GrapeCity.Spreadsheet.CellReference">
      <summary>Performs an implicit conversion from <see cref="T:GrapeCity.CalcEngine.CellReference" /> to <see cref="T:GrapeCity.Spreadsheet.CellReference" />.</summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Inequality(GrapeCity.Spreadsheet.CellReference,GrapeCity.Spreadsheet.CellReference)">
      <summary>Returns whether two <see cref="T:GrapeCity.Spreadsheet.CellReference" /> are not equals.</summary>
      <param name="cell1">The fisrt <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <param name="cell2">The second <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <returns>
        <c>true</c> if two values are not equals; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellValue">
      <summary>Specifies a cell value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValue.Invalid">
      <summary>Represents an invalid cell value. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.DateTime">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.CellValue.DateTime" /> value.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.CellValue.DateTime" /> value represents the date.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.Error">
      <summary>Gets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.CalcError" /> value represents the error.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.Logical">
      <summary>Gets the <see cref="T:System.Boolean" /> value.</summary>
      <value>A <see cref="T:System.Boolean" /> value represents the boolean value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.Number">
      <summary>Gets the <see cref="T:System.Double" /> value.</summary>
      <value>A <see cref="T:System.Double" /> value represents the numeric value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.Text">
      <summary>Gets the <see cref="T:System.String" /> value.</summary>
      <value>A <see cref="T:System.String" /> value represents the text.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.TimeSpan">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.CellValue.TimeSpan" /> value.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.CellValue.TimeSpan" /> value represents the time span.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValue.Type">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.CellValueType" /> value that indicates the value type.</summary>
      <value>The type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellValue.Box">
      <summary>Returned the boxed value of this cell value.</summary>
      <returns>An <see cref="T:System.Object" /> instance represents the boxed value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellValue.IsValid">
      <summary>Determines whether this cell value is valid.</summary>
      <returns>
        <c>true</c> if this cell value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellValue.Reset">
      <summary>Resets this cell value to <c>null</c>.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CfExecutedResult">
      <summary>Represents the matched conditional formatting result.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfExecutedResult.Format">
      <summary>Gets the applied formatting of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rules in the cell.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.DatabarAxisPosition">
      <summary>Gets the data bar's relative axis position.</summary>
      <value>A <see cref="T:System.Double" /> value represents the data bar's relative axis position.</value>
      <remarks>Value is between 0..1. <see cref="F:System.Double.NaN" /> means the axis doesn't appear.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.DatabarLength">
      <summary>Gets the relative length of the data bar.</summary>
      <value>An double value represents length of the data bar.</value>
      <remarks>Value is between 0..1. <see cref="F:System.Double.NaN" /> means the data bar doesn't appear.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.DatabarRule">
      <summary>Gets the data bar conditional formatting rule.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> object represents the data bar conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.Icon">
      <summary>Gets the conditional formatting icon.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the conditional formatting icon.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.IconSetRule">
      <summary>Gets the icon set conditional formatting rule.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" /> object represents the icon set conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.MatchData">
      <summary>Gets the conditional format matching data after processed conditional formatting rule(s).</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value represents the conditional format matching data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.RuleCount">
      <summary>Gets the total number of matched conditional formatting rules which requires painting above cell surface.</summary>
      <value>An integer value represents the total number of matched conditional formatting rules.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfExecutedResult.GetMatchedRule(System.Int32,System.Int32@)">
      <summary>Gets the matched conditional formatting rule at the specified position.</summary>
      <param name="index">An integer value indicates the position of the conditional formatting rule.</param>
      <param name="rangeIndex">An integer value represents the index of the conditional formatting rule's container.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> object represents the matched conditional formatting rule.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CfIcon">
      <summary>Represents a single icon of an icon set.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.#ctor(GrapeCity.Spreadsheet.IconSetType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> struct.</summary>
      <param name="iconSet">An <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set type.</param>
      <param name="iconId">An integer value represents the icon to be used.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfIcon.IconId">
      <summary>Gets an integer value represents the icon to be used.</summary>
      <value>An integer value represents the icon to be used.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfIcon.IconSet">
      <summary>Gets the icon set type.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.Equals(GrapeCity.Spreadsheet.CfIcon)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.IsNoIcon">
      <summary>Determines whether this icon is <see cref="F:GrapeCity.Spreadsheet.CfIcon.NoIcon" />.</summary>
      <returns>
        <c>true</c> if this icon is <see cref="F:GrapeCity.Spreadsheet.CfIcon.NoIcon" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.op_Equality(GrapeCity.Spreadsheet.CfIcon,GrapeCity.Spreadsheet.CfIcon)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> values are equal.</summary>
      <param name="icon1">The first value to compare.</param>
      <param name="icon2">The second value to compare.</param>
      <returns>true if <paramref name="icon1" /> and <paramref name="icon2" /> are equal; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.op_Inequality(GrapeCity.Spreadsheet.CfIcon,GrapeCity.Spreadsheet.CfIcon)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> values are not equal.</summary>
      <param name="icon1">The first value to compare.</param>
      <param name="icon2">The second value to compare.</param>
      <returns>true if <paramref name="icon1" /> and <paramref name="icon2" /> are not equal; otherwise, false.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfValue.GreaterThanOrEquals">
      <summary>Gets a boolean value indicates whether this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> will be compared using greater than or equals operator.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> will be compared using greater than or equals operator; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfValue.Value">
      <summary>Gets an <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represent the primitive value of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represent the primitive value of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfValue.ValueType">
      <summary>Gets the type of this conditional formatting value.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfValueType" /> value represent the value type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.Equals(GrapeCity.Spreadsheet.CfValue)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromFormula(System.String,GrapeCity.Spreadsheet.CfValueType,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>Create a conditional formatting value using the specified formula.</summary>
      <param name="formula">A string value indicates the formula text.</param>
      <param name="engine">The formula engine.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPercent(System.Double)">
      <summary>Create a percentage conditional formatting value.</summary>
      <param name="value">A double value indicates the percentage value. Value range is between 0..100.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the percentage conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPercent(System.String,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>Create a percentage conditional formatting value.</summary>
      <param name="formula">A string value indicates the formula text.</param>
      <param name="engine">The formula engine.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the percentage conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPercentile(System.Double)">
      <summary>Create a percentile conditional formatting value.</summary>
      <param name="value">A double value indicates the percentile value. Value range is between 0..100.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the percentile conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPrimitiveValue(System.Double,GrapeCity.Spreadsheet.CfValueType)">
      <summary>Create a conditional formatting value using the specified numeric value.</summary>
      <param name="value">A double value indicates the numeric value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPrimitiveValue(System.String)">
      <summary>Create a conditional formatting value using the specified string value.</summary>
      <param name="value">A double value indicates the string value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.GetFormula(GrapeCity.CalcEngine.FormulaEngine)">
      <summary>Gets the formula text of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</summary>
      <param name="engine">The formula engine.</param>
      <returns>A <see cref="T:System.String" /> value represents the formula text of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.IsUndefined">
      <summary>Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> is undefined.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.ToGreaterThanOnly(GrapeCity.Spreadsheet.CfValue@)">
      <summary>Ensures that the <see cref="T:GrapeCity.Spreadsheet.CfValue" /> will use greater-than when applying conditional formatting rules.</summary>
      <param name="cfValue">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value indicates the origin conditional formatting value.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Color">
      <summary>Struct ColorData</summary>
      <seealso cref="!:System.IEquatable&lt;GrapeCity.Spreadsheet.Style.ColorData&gt;" />
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.Auto">
      <summary>Represents a color that is automated by the application. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic">
      <summary>Represents the automatic color. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexNone">
      <summary>Represents no index color is set. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexWindow">
      <summary>Represents the window indexed color. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexWindowText">
      <summary>Represents the window text indexed color. This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.Empty">
      <summary>Represents a color that is <c>null</c>. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ThemeColorsNone">
      <summary>Represents no theme color is set This field is constant and read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.Window">
      <summary>Represents a color that is the color of window background. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.WindowText">
      <summary>Represents a color that is the color of window foreground. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.A">
      <summary>Gets the alpha component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>. <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.B">
      <summary>Gets the blue component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>. <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.G">
      <summary>Gets the green component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>. <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.R">
      <summary>Gets the red component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>. <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.Tint">
      <summary>Gets or sets the tint.</summary>
      <value>The tint.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.Type">
      <summary>Gets the type of color.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ColorType" /> value represents the type of color.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.Clone">
      <summary>Clones this instance.</summary>
      <returns>ColorData.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.Equals(GrapeCity.Spreadsheet.Color)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:GrapeCity.Spreadsheet.Color" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.Color" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromArgb(System.Int32)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values.</summary>
      <param name="argb">The ARGB components.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, and a shade is the mixture of a color with black, which reduces lightness. Valid values are 0 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.</summary>
      <param name="alpha">The alpha component. Valid values are 0 through 255.</param>
      <param name="red">The red component. Valid values are 0 through 255.</param>
      <param name="green">The green component. Valid values are 0 through 255.</param>
      <param name="blue">The blue component. Valid values are 0 through 255.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.</summary>
      <param name="red">The red component. Valid values are 0 through 255.</param>
      <param name="green">The green component. Valid values are 0 through 255.</param>
      <param name="blue">The blue component. Valid values are 0 through 255.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromFormatColorEnum(GrapeCity.Spreadsheet.FormatColorEnum)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified format color enum.</summary>
      <param name="color">The format color enum.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromIndexedColor(System.Int32,System.Double)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified indexed color.</summary>
      <param name="index">An integer value indicates the indexed color. The value has base 1.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, and a shade is the mixture of a color with black, which reduces lightness. Valid values are 0 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromKnownColor(GrapeCity.Core.KnownColor,System.Double)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified predefined color.</summary>
      <param name="knownColor">An element of the <see cref="T:GrapeCity.Core.KnownColor" /> enumeration.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, and a shade is the mixture of a color with black, which reduces lightness. Valid values are 0 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromThemeColor(GrapeCity.Core.ThemeColors,System.Double)">
      <summary>Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified predefined color.</summary>
      <param name="index">An element of the <see cref="T:GrapeCity.Core.ThemeColors" /> enumeration.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, and a shade is the mixture of a color with black, which reduces lightness. Valid values are 0 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsAutoColor">
      <summary>Gets a value indicating whether this color represent an automatic color.</summary>
      <returns>
        <c>true</c> if this color represent an automatic color; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsEmpty">
      <summary>Gets a value indicating whether this color represent an empty color.</summary>
      <returns>
        <c>true</c> if this color represent an empty color; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsKnownColor">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure is a predefined color. Predefined colors are represented by the elements of the KnownColor enumeration.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Color" /> was created from a predefined color; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToArgb">
      <summary>Gets the 32-bit ARGB value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <returns>The 32-bit ARGB value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</returns>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>. <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToIndexedColor">
      <summary>Gets the indexed color value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <returns>The indexed color value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</returns>
      <remarks>The indexed color has base 1. The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the returned result.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToKnownColor">
      <summary>Gets the <see cref="T:GrapeCity.Core.KnownColor" /> value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <returns>An element of the <see cref="T:GrapeCity.Core.KnownColor" /> enumeration, if the <see cref="T:GrapeCity.Spreadsheet.Color" /> is created from a predefined color by using the FromKnownColor method; otherwise, 0.</returns>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>true</c>. <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToString">
      <summary>Returns the fully qualified type name of this instance.</summary>
      <returns>The fully qualified type name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToThemeColors">
      <summary>Gets the <see cref="T:GrapeCity.Core.ThemeColors" /> value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</summary>
      <returns>The <see cref="T:GrapeCity.Core.ThemeColors" /> value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</returns>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CustomFilterCriteria">
      <summary>A custom AutoFilter specifies an operator and a value. There can be at most two customFilters specified, and in that case the parent element specifies whether the two conditions are joined by 'and' or 'or'. For any cells whose values do not meet the specified criteria, the corresponding rows shall be hidden from view when the fitler is applied.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,GrapeCity.CalcEngine.CalcError)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.</summary>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A <see cref="T:GrapeCity.CalcEngine.CalcError" /> value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.</summary>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A <see cref="T:System.DateTime" /> value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.</summary>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A double value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.String)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.</summary>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A string value indictes the filtered value.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterCriteria.None">
      <summary>Returns a "None" filter criteria. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilterCriteria.Operator">
      <summary>Gets the operator of this <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" />.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value represents the operator of the filter criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilterCriteria.Value">
      <summary>Gets the value of this <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" />.</summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> represents the value of this <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationExecutedResult.Data">
      <summary>Gets or sets the custom data for matched result.</summary>
      <value>An object represents the custom data for matched result.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationExecutedResult.DataValidation">
      <summary>Gets the data validation which is associated with the cell.</summary>
      <value>The data validation which is associated with the cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationExecutedResult.IsValid">
      <summary>Gets or sets a boolean value which indicates whether the validating is valid.</summary>
      <value>
        <c>true</c> if the validating is valid; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationSuggestionItem">
      <summary>Represents a suggested data for the cell.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.NumberFormatID">
      <summary>Gets the suggested number format.</summary>
      <value>An integer value represents the suggested number format ID.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Text">
      <summary>Gets the formatted text of the suggested value.</summary>
      <value>A string value represents the formatted text of the suggested value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Value">
      <summary>Gets the suggested value for this item.</summary>
      <value>An object represents the suggested value for this item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.ValueType">
      <summary>Gets the value type of this <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> instance.</summary>
      <value>The type of the data of the <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> instance.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Equals(GrapeCity.Spreadsheet.DataValidationSuggestionItem)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetDate">
      <summary>Gets the <see cref="T:System.Double" /> value.</summary>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetError">
      <summary>Gets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</summary>
      <returns>An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetLogical">
      <summary>Gets the <see cref="T:System.Boolean" /> value.</summary>
      <returns>An <see cref="T:System.Boolean" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetNumber">
      <summary>Gets the <see cref="T:System.Double" /> value.</summary>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetText">
      <summary>Gets the <see cref="T:System.String" /> value.</summary>
      <returns>An <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetTime">
      <summary>Gets the <see cref="T:System.Double" /> value.</summary>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DateGroupItem">
      <summary>This collection is used to express a group of dates or times which are used in an AutoFilter criteria</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DateGroupItem.#ctor(GrapeCity.Spreadsheet.DateTimeGrouping,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> struct.</summary>
      <param name="groupingBy">The grouping by.</param>
      <param name="year">An integer value indicates the filtering year.</param>
      <param name="month">An integer value indicates the filtering.</param>
      <param name="day">An integer value indicates the filtering day.</param>
      <param name="hour">An integer value indicates the filtering hour.</param>
      <param name="minute">An integer value indicates the filtering minute.</param>
      <param name="second">An integer value indicates the filtering second.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Fill">
      <summary>Represent the fill formatting.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.#ctor(GrapeCity.Spreadsheet.Color)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Fill" /> class which represents a solid pattern fill.</summary>
      <param name="patternColor">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the pattern color of pattern fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.#ctor(GrapeCity.Spreadsheet.PatternType,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Fill" /> class.</summary>
      <param name="parternType">A <see cref="P:GrapeCity.Spreadsheet.Fill.PatternType" /> value indicates the type of pattern fill.</param>
      <param name="patternColor">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the pattern color of pattern fill.</param>
      <param name="backgroundColor">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the background color of pattern fill.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Fill.Empty">
      <summary>Represents a <see cref="T:GrapeCity.Spreadsheet.Border" /> structure with its properties left uninitialized. This field is read-only.</summary>
      <remarks>Assigning this value works as same as clearing the fill formatting.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Fill.NoFill">
      <summary>Represents the blank fill formatting. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.BackgroundColor">
      <summary>Gets the background color of the pattern fill.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the background color of the pattern fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.HasGradientEffect">
      <summary>Gets a value indicating whether this fill has gradient effect.</summary>
      <value>
        <c>true</c> if this fill has gradient effect; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.PatternColor">
      <summary>Gets the pattern color of the pattern fill.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the pattern color of the pattern fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.PatternType">
      <summary>Gets the fill pattern type of this pattern fill.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Fill.PatternType" /> value represents the fill pattern type of this pattern fill.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.Equals(GrapeCity.Spreadsheet.Fill@)">
      <summary>Equalses the specified other.</summary>
      <param name="other">The other.</param>
      <returns>
        <c>true</c> if equal to other, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.Equals(GrapeCity.Spreadsheet.Fill)">
      <summary>Equalses the specified other.</summary>
      <param name="other">The other.</param>
      <returns>
        <c>true</c> if equal to other, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.IsEmpty">
      <summary>Determines whether this instance is empty.</summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.IsNoFill">
      <summary>Determines whether this <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents no fill.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents no fill; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.op_Equality(GrapeCity.Spreadsheet.Fill,GrapeCity.Spreadsheet.Fill)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Fill" /> values are equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.op_Inequality(GrapeCity.Spreadsheet.Fill,GrapeCity.Spreadsheet.Fill)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Fill" /> values are not equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterData">
      <summary>Represents all filter data of a filter column.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Blanks">
      <summary>Gets a value indicating whether there is blank in the filter column.</summary>
      <value>
        <c>true</c> if there is blank in the filter column; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.DateTimeFormatter">
      <summary>Gets the first date time formatter in the filter column.</summary>
      <value>The date time formatter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.DateValues">
      <summary>Gets the all display date values of the filter column.</summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents all display date values of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.ErrorFormat">
      <summary>Gets a value indicating whether there is a formatting error.</summary>
      <value>
        <c>true</c> if there is a formatting error; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Fills">
      <summary>Gets the all display fills of the filter column.</summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents all display fills of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.FontColors">
      <summary>Gets the all display text colors of the filter column.</summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents all display text colors of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Icons">
      <summary>Gets the all display conditional formatting icons of the filter column.</summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents all conditional formatting icons of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Texts">
      <summary>Gets the all display texts of the filter column.</summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents all display texts of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Type">
      <summary>Gets the filter mode that UI should display corresponding filter items.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FilterDataType" /> value represents the filter mode.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterData.DateTimeItem">
      <summary>Represents a date time value and its corresponding <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> in the worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.DateTimeItem.Value">
      <summary>Gets the date time value.</summary>
      <value>A <see cref="T:System.DateTime" /> value represents the cell date time value.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Font">
      <summary>Defines a particular format for text, including font face, size, and style attributes.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(System.String,System.Double,GrapeCity.Spreadsheet.FontStyle,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.UnderlineStyle,GrapeCity.Spreadsheet.VerticalTextAlignment,GrapeCity.Spreadsheet.ThemeFont)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct.</summary>
      <param name="fontFamily">The <see cref="F:GrapeCity.Spreadsheet.Font._fontFamily" /> associated with this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="name">A string value indicates the face name of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="size">An double value indicates the em-size of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="fontStyle">A <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value indicates style information for this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="underline">A <see cref="F:GrapeCity.Spreadsheet.Font._fontUnderline" /> value indicates the underline of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="verTextAlign">A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value indicates the vertical alignment of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
      <param name="themeFont">A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value indicates the theme font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.FontFamily,System.String,System.Double,GrapeCity.Spreadsheet.FontStyle,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.UnderlineStyle,GrapeCity.Spreadsheet.VerticalTextAlignment,GrapeCity.Spreadsheet.ThemeFont)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct.</summary>
      <param name="fontFamily">The <see cref="F:GrapeCity.Spreadsheet.Font._fontFamily" /> associated with this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="name">A string value indicates the face name of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="size">An double value indicates the em-size of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="fontStyle">A <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value indicates style information for this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="underline">A <see cref="F:GrapeCity.Spreadsheet.Font._fontUnderline" /> value indicates the underline of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="verTextAlign">A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value indicates the vertical alignment of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
      <param name="themeFont">A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value indicates the theme font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Color)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value.</summary>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.FontStyle)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value.</summary>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
      <param name="fontStyle">The FontStyle to apply to the new Font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.FontStyle)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> enumeration.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="fontStyle">The FontStyle to apply to the new Font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Color)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,System.String)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and new font face name.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="name">A string value indicates the face name of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and new font size.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="size">An double value indicates the em-size of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.VerticalTextAlignment)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and new font vertical alignment.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="verTextAlign">A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value indicates the vertical alignment of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.UnderlineStyle)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and new font underline.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="underline">A <see cref="F:GrapeCity.Spreadsheet.Font._fontUnderline" /> value indicates the underline of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.ThemeFont)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> and new theme font.</summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="themeFont">A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value indicates the theme font.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Font.Empty">
      <summary>Represents a <see cref="T:GrapeCity.Spreadsheet.Font" /> structure with its properties left uninitialized. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Bold">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is bold.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is bold; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.CharSet">
      <summary>Gets the char set of this Font.</summary>
      <value>An integer value represents the char set of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Color">
      <summary>Gets the color of this Font.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value represents the font color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Condense">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is condensed.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is condensed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Extend">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is extend.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is extend; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Family">
      <summary>Gets the font family of this Font.</summary>
      <value>A <see cref="F:GrapeCity.Spreadsheet.Font._fontFamily" /> value represents the font family of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Italic">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is italic.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is italic; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Name">
      <summary>Gets the face name of this Font.</summary>
      <value>A string value represents the face name of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Outline">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is outline.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is outline; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Shadow">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is shadow.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is shadow; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Size">
      <summary>Gets the em-size of this Font.</summary>
      <value>A double value represents the em-size of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Strikethrough">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is strike.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is strike; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Style">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value indicates the font style.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value represents the font style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.ThemeFont">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value of this Font.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value represents the <see cref="T:GrapeCity.Spreadsheet.ThemeFont" nolink="true" /> value of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Underline">
      <summary>Gets the underline of this Font.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.UnderlineStyle" /> value represents the underline of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.VerticalAlign">
      <summary>Gets the vertical alignment of this Font.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value represents the vertical alignment of this Font.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Equals(GrapeCity.Spreadsheet.Font)">
      <summary>Indicates whether the current <see cref="T:GrapeCity.Spreadsheet.Font" /> object is equal to another <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> object.</summary>
      <param name="other">An <see cref="T:GrapeCity.Spreadsheet.Font" /> object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Equals(GrapeCity.Spreadsheet.Font@)">
      <summary>Indicates whether the current <see cref="T:GrapeCity.Spreadsheet.Font" /> object is equal to another <see cref="T:GrapeCity.Spreadsheet.Font" nolink="true" /> object.</summary>
      <param name="other">An <see cref="T:GrapeCity.Spreadsheet.Font" /> object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:GrapeCity.Spreadsheet.Font" /> object is equal to another object.</summary>
      <param name="other">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.Font" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.IsEmpty">
      <summary>Determines whether this instance is empty.</summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.IsSet(GrapeCity.Spreadsheet.FontAttributes)">
      <summary>Determines whether the specified attribute(s) is set.</summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.FontAttributes" /> value indicates the attribute(s) will be tested.</param>
      <returns>
        <c>true</c> if the specified attribute(s) is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Reset(GrapeCity.Spreadsheet.FontAttributes)">
      <summary>Resets the specified attribute(s).</summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.FontAttributes" /> value indicates the attribute(s) will be reset.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Set(GrapeCity.Spreadsheet.FontAttributes)">
      <summary>Sets the specified attribute.</summary>
      <param name="attr">The attribute.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.ToGdiFont(GrapeCity.Spreadsheet.Workbook,System.Single)">
      <summary>Gets the corresponding GDI+ font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> object represents the GDI+ font.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.op_Equality(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Font)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Font" /> values are equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.op_Inequality(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Font)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Font" /> values are not equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatResult">
      <summary>Represents the formatting value result.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.Color">
      <summary>Gets the formatting color.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FormatColorEnum" /> value represents the formatting color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.DisplayStyle">
      <summary>Gets a value indicating whether the formatted text should be displayed as numeric style.</summary>
      <value>
        <c>true</c> if the formatted text should be displayed as numeric style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.RepeatChar">
      <summary>Gets the repeating character.</summary>
      <value>A <see cref="T:System.Char" /> value represents the repeating character. A char \0 means there is no repeating character.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.RepeatIndex">
      <summary>Gets the position of the repeat character.</summary>
      <value>An integer value represents the position of the repeat character. -1 means no repeat character.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.Success">
      <summary>Gets a value indicating whether the formatting process successed.</summary>
      <value>
        <c>true</c> if the formatting process successed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.Text">
      <summary>Gets the formatted text.</summary>
      <value>A string value represent the formatted text.</value>
      <remarks>The repeat character won't be included.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.UnformattedText">
      <summary>Gets the unformatted text.</summary>
      <value>A string value represent the formatted text.</value>
      <remarks>The repeat character will be included one time in the unformatted text.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.GetDynamicSpacePositions">
      <summary>Gets the positions of dynamic space characters.</summary>
      <param name="preText">if set to <c>true</c>, return the positions of characters in the pre-text; otherwise, return the positions of characters in the post-text.</param>
      <returns>An integer array represent the positions of dynamic space characters.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.RemoveNewLines">
      <summary>Removes all newline strings.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.RemoveRepeatChar">
      <summary>Removes the repeat character information.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.GradientFillEffect">
      <summary>Represents the gradient fill effect.</summary>
      <seealso cref="!:System.IEquatable&lt;GrapeCity.Spreadsheet.GradientFillEffect&gt;" />
    </member>
    <member name="F:GrapeCity.Spreadsheet.GradientFillEffect.Empty">
      <summary>Represent the unset gradient fill formatting. Assigning this value works as same as clearing the gradient fill formatting. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Bottom">
      <summary>Gets the position of the bottom edge of the inner rectangle (color 1) in percentage.</summary>
      <value>A double value represents the bottom edge of the inner rectangle.</value>
      <remarks>For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Count">
      <summary>Gets the total count of gradient stops.</summary>
      <value>An integer value represents the total count of gradient stops.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Degree">
      <summary>Gets the angle of the linear gradient fill.</summary>
      <value>A double value represents the angle of the linear gradient fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.GradientType">
      <summary>Gets the type of this gradient fill.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.GradientFillEffect.GradientType" /> value represents the type of this gradient fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Item(System.Int32)">
      <summary>Gets the gradient stop at the specified index.</summary>
      <param name="index">An integer value indicates the index of the gradient stop.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> value represents the gradient stop at the specified index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Left">
      <summary>Gets the position of the left edge of the inner rectangle (color 1) in percentage.</summary>
      <value>A double value represents the left edge of the inner rectangle.</value>
      <remarks>For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Right">
      <summary>Gets the position of the right edge of the inner rectangle (color 1) in percentage.</summary>
      <value>A double value represents the right edge of the inner rectangle.</value>
      <remarks>For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Top">
      <summary>Gets the position of the top edge of the inner rectangle (color 1) in percentage.</summary>
      <value>A double value represents the top edge of the inner rectangle.</value>
      <remarks>For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Creates the path gradient fill.</summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1). For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1). For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1). For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1). For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill effect.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>Creates the path gradient fill.</summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>Creates the path gradient fill.</summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1). For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1). For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1). For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1). For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Creates the linear gradient fill.</summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill effect.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Equals(GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.op_Equality(GrapeCity.Spreadsheet.GradientFillEffect,GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> values are equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.op_Inequality(GrapeCity.Spreadsheet.GradientFillEffect,GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> values are not equal.</summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.GradientStop">
      <summary>Represents the gradient stop.</summary>
      <seealso cref="!:System.IEquatable&lt;GrapeCity.Spreadsheet.GradientStop&gt;" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.#ctor(System.Double,GrapeCity.Spreadsheet.Color)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> struct.</summary>
      <param name="position">A double value represents the position information for this gradient stop.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.GradientStop.Color" /> value represents the color of this gradient stop.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientStop.Color">
      <summary>Gets the color of this gradient stop.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.GradientStop.Color" /> value represents the color of this gradient stop.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientStop.Position">
      <summary>Gets the position information for this gradient stop.</summary>
      <value>A double value represents the position information for this gradient stop.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.Equals(GrapeCity.Spreadsheet.GradientStop)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="other">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NumberFormat">
      <summary>Represents number format properties which indicate how to format and render the numeric value of a cell</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> struct.</summary>
      <param name="code">A <see cref="T:System.String" /> value indicates the format code.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.NumberFormat.General">
      <summary>Represents the general number format. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NumberFormat.BuiltInID">
      <summary>Gets the built-in number format ID.</summary>
      <value>An integer value represents the built-in number format ID. <see cref="F:System.Int32.MinValue" /> if the number format is custom.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NumberFormat.FormatCode">
      <summary>Gets the number format code for this number format.</summary>
      <value>A string value represents the number format code for this number format.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.CanBeOverridden(GrapeCity.Spreadsheet.NumberFormat@)">
      <summary>Determines whether this formatter should be replaced the specified number format.</summary>
      <param name="numberFormat">A <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> value indicates the number format.</param>
      <returns>
        <c>true</c> if this formatter should be replaced; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.Equals(GrapeCity.Spreadsheet.NumberFormat)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.GetFormatter(GrapeCity.Spreadsheet.IWorkbook,System.Globalization.CultureInfo)">
      <summary>Gets the formatter which represents the behavior of this <see cref="T:GrapeCity.Spreadsheet.NumberFormat" />.</summary>
      <param name="workbook">The workook that defines the number format.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the formatter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Reference">
      <summary>Represents a reference to a range of cells.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Reference" /> class.</summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Reference.Empty">
      <summary>Returns the empty value of <see cref="T:GrapeCity.Spreadsheet.Reference" /> struct. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.BottomRight">
      <summary>Gets the bottom right cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value represents the bottom right cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Column">
      <summary>Gets the left column index.</summary>
      <value>An integer value represents the left column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Column2">
      <summary>Gets the right column index.</summary>
      <value>An integer value represents the right column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.ColumnCount">
      <summary>Gets the totals column count.</summary>
      <value>An integer value represents the column count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Row">
      <summary>Gets the top row index.</summary>
      <value>An integer value represents the top row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Row2">
      <summary>Gets the bottom row index.</summary>
      <value>An integer value represents the bottom row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.RowCount">
      <summary>Gets the totals row count.</summary>
      <value>An integer value represents the row count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.TopLeft">
      <summary>Gets the top left cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value represents the top left cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.CompareTo(GrapeCity.Spreadsheet.Reference)">
      <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
      <param name="other">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order. Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this reference.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this reference; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Equals(GrapeCity.Spreadsheet.Reference)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IntersectWith(GrapeCity.Spreadsheet.Reference@)">
      <summary>Intersects this <see cref="T:GrapeCity.Spreadsheet.Reference" /> range with the specified <see cref="T:GrapeCity.Spreadsheet.Reference" nolink="true" /> range.</summary>
      <param name="range">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> range to intersect with.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> range represents the intersected <see cref="T:GrapeCity.Spreadsheet.Reference" nolink="true" /> range.</returns>
      <remarks>Make sure that all rows and columns are all absolute or relative.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsEmpty">
      <summary>Determines whether this reference is empty.</summary>
      <returns>
        <c>true</c> if this reference is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsIntersected(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether this reference is intersected with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
      <returns>
        <c>true</c> if the specified row is intersected; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsIntersected(System.Int32,System.Int32)">
      <summary>Determines whether this reference is intersected with the specified cell.</summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
      <returns>
        <c>true</c> if this reference contains the specified cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsOneCell">
      <summary>Gets a value indicating whether this reference is one cell.</summary>
      <returns>
        <c>true</c> if this reference is one cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsOverlapped(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether this reference is overlaped with the specified range.</summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
      <returns>
        <c>true</c> if the specified row is overlapped; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Offset(System.Int32,System.Int32)">
      <summary>Translates this <seealso cref="T:GrapeCity.CalcEngine.RangeReference" /> by the specified amount.</summary>
      <param name="translateRows">The amount to offset the y-coordinate.</param>
      <param name="translateColumns">&gt;The amount to offset the x-coordinate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Overlaps(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether this reference is overlaped with the specified range.</summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
      <returns>
        <c>true</c> if the specified row is overlapped; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Union(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Unions the current <see cref="T:GrapeCity.Spreadsheet.Reference" /> with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference to union.</param>
      <param name="column">An integer value indicates the left column index of the reference to union.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference to union.</param>
      <param name="column2">An integer value indicates the right column index of the reference to union.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Union(GrapeCity.Spreadsheet.Reference@)">
      <summary>Unions the current <see cref="T:GrapeCity.Spreadsheet.Reference" /> with the specified reference.</summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.op_Implicit(GrapeCity.Spreadsheet.Reference)~GrapeCity.CalcEngine.RangeReference">
      <summary>Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.Reference" /> to <see cref="T:GrapeCity.CalcEngine.RangeReference" />.</summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.op_Implicit(GrapeCity.CalcEngine.RangeReference)~GrapeCity.Spreadsheet.Reference">
      <summary>Performs an implicit conversion from <see cref="T:GrapeCity.CalcEngine.RangeReference" /> to <see cref="T:GrapeCity.Spreadsheet.Reference" />.</summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.RichText.Run">
      <summary>This element represents a rich text run. A rich text run is a region of text that share a common set of properties, such as formatting properties.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Run.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.RichText.Run" /> struct.</summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Run.#ctor(System.String,GrapeCity.Spreadsheet.Font)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.RichText.Run" /> struct.</summary>
      <param name="text">A string represents the value of text run.</param>
      <param name="rPr">The settings of text run.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Run.#ctor(System.String,GrapeCity.Spreadsheet.IFont)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.RichText.Run" /> struct.</summary>
      <param name="text">A string represents the value of text run.</param>
      <param name="rPr">The settings of text run.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.RichText.Run.Font">
      <summary>Gets a set of properties to apply to the contents of this rich text run.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.RichText.Run.Text">
      <summary>Gets the text content shown as part of a string.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Run.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:GrapeCity.Spreadsheet.RichText.Run" /> is equal to this instance.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.RichText.Run" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Run.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Run.IsPlainText">
      <summary>Gets a value indicating whether the text in this <see cref="T:GrapeCity.Spreadsheet.RichText.Run" /> is a plain text rather than formatted.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormat.Empty">
      <summary>A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents empty style formatting. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Alignment">
      <summary>Gets or sets the alignment formatting.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Alignment" /> value represents alignment formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Border">
      <summary>Gets or sets the border formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Border" /> value represents the border formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.BuiltInNumberFormatId">
      <summary>Gets or sets the number format to a built in number format.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Fill">
      <summary>Gets or sets the fill formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Fill" /> value represents the fill formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Font">
      <summary>Gets or sets the font formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Font" /> value represents the font formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.NumberFormat">
      <summary>Gets or sets the number formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.NumberFormat" /> value represents the number formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Protection">
      <summary>Gets or sets the protection formatting.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Protection" /> value represents the protection formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.QuotePrefix">
      <summary>Gets a value indicating whether the quote prefix is marked.</summary>
      <value>
        <c>true</c> if the quote prefix is marked; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.Equals(GrapeCity.Spreadsheet.StyleFormat)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.GetFormatter(GrapeCity.Spreadsheet.IWorkbook,System.Globalization.CultureInfo)">
      <summary>Gets the formatter.</summary>
      <param name="workbook">The workook that defines the number format.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the formatter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.IsEmpty">
      <summary>Determines whether this <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> is empty.</summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableColumn">
      <summary>Represents a table column.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.DataRowFormatting">
      <summary>Gets the format to apply to the data row cell of this column.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> represents the format to apply to the data row cell of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.DataRowStyle">
      <summary>Gets the name of the cell style that is applied to the data row cell of this column.</summary>
      <value>A string value represents the name of the cell style that is applied to the data row cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.Formula">
      <summary>Gets or sets the formula for this calculated column.</summary>
      <value>A string value indicates the calculated column's formula.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.HeaderRowFormatting">
      <summary>Gets the format to apply to the header row cell of this column.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> represents the format to apply to the header row cell of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.HeaderRowStyle">
      <summary>Gets the name of the cell style that is applied to the header row cell of this column.</summary>
      <value>A string value represents the name of the cell style that is applied to the header row cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.Name">
      <summary>Gets the name of this column.</summary>
      <value>A string value represents the name of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFormatting">
      <summary>Gets the format to apply to the totals row cell of this column.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> represents the format to apply to the totals row cell of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFormula">
      <summary>Gets or sets the totals row formula.</summary>
      <value>A <see cref="T:System.String" /> value represents the totals row formula.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFunction">
      <summary>Gets the totals row function.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFunction" /> value represents the totals row function.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowLabel">
      <summary>Gets the totals row label.</summary>
      <value>A <see cref="T:System.String" /> value represents the totals row label.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowStyle">
      <summary>Gets the name of the cell style that is applied to the totals row cell of this column.</summary>
      <value>A string value represents the name of the cell style that is applied to the totals row cell.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableStyleElement">
      <summary>Represents a single table style element.</summary>
      <remarks>Table styles define formatting for one or all of the elements of a table, PivotTable, or slicer. Each table style element in a table can have formatting specified in a table style applied to the element.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyleElement.Formatting">
      <summary>Gets the formatting of this table style element.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the formatting of this table style element.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyleElement.StripeSize">
      <summary>Gets or sets the strip size of this table style element.</summary>
      <value>An integer value represents the strip size of this table style element.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.Clear">
      <summary>Clears the formatting for this element.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.</summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.Equals(GrapeCity.Spreadsheet.TableStyleElement)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Cloner`1">
      <summary>Supports cloning, which creates a new instance of a class with the same value as an existing instance.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Cloner`1.Clone(`0@)">
      <summary>Creates a new object that is a copy of the specified value.</summary>
      <param name="value">The value to clone.</param>
      <returns>A new object that is a copy of the specified value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Cloner`1.Clone(`0)">
      <summary>Creates a new object that is a copy of the specified value.</summary>
      <param name="value">The value to clone.</param>
      <returns>A new object that is a copy of the specified value.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAboveAverage">
      <summary>Represents an above average visual of a conditional formatting rule.</summary>
      <seealso cref="T:GrapeCity.Spreadsheet.IFormatCondition" />
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAboveAverage.AboveBelow">
      <summary>Gets or sets one of the constants of the <see cref="P:GrapeCity.Spreadsheet.IAboveAverage.AboveBelow" /> enumeration, specifying if the conditional formatting rule looks for cell values above or below the range average or standard deviation.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.IAboveAverage.AboveBelow" /> value that represents how the format condition works.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAboveAverage.NumStdDev">
      <summary>Gets or sets the numeric standard deviation for an <see cref="T:GrapeCity.Spreadsheet.IAboveAverage" /> object.</summary>
      <value>An integer value that represents the numeric standard deviation.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAreas">
      <summary>Represents a collection of the areas, or contiguous blocks of cells, within a selection.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAreas.Count">
      <summary>Gets an integer value that indicates the number of objects in the collection.</summary>
      <value>An integer value represents the number of objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAreas.Item(System.Int32)">
      <summary>Gets a single <see cref="!:Range" /> object from the collection.</summary>
      <param name="index">An integer value indicates the index number of the <see cref="!:Range" /> object.</param>
      <value>The <see cref="!:Range" /> object at the specified index.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAutoFilter">
      <summary>Represents the filter for the specified worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.FilterMode">
      <summary>Gets a value indicating whether the worksheet is in the AutoFilter filter mode.</summary>
      <value>
        <c>true</c> if the worksheet is in the AutoFilter filter mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.Filters">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IFilters" /> collection that represents all the filters in an auto filtered range.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFilters" /> collection that represents all the filters in an auto filtered range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.Range">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified AutoFilter applies.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified AutoFilter applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.Sort">
      <summary>Gets the sort column or columns, and sort order for the <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> collection.</summary>
      <value>The sort.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilter.ApplyFilter">
      <summary>Applies the specified <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilter.ShowAllData(System.Boolean)">
      <summary>Displays all the data returned by the <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object.</summary>
      <param name="removing">if set to <c>true</c>, the current active filter will be removed; otherwise, it'll be set as inactive.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IBorder">
      <summary>Represents the border of an object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IBorder.Color">
      <summary>Gets or sets the primary color of the object.</summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IBorder.LineStyle">
      <summary>Gets or sets the line style for the border.</summary>
      <value>The line style.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IBorders">
      <summary>A collection of Border objects that represent the four borders of a Range or Style object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IBorders.Item(GrapeCity.Spreadsheet.BordersIndex)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IBorder" /> at the specified index.</summary>
      <param name="index">The index.</param>
      <value>IBorder.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IBorders.ApplyBorder(GrapeCity.Spreadsheet.Border)">
      <summary>Apply border setting for whole the border</summary>
      <param name="border">The border's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICloneable`1">
      <summary>Supports cloning, which creates a new instance of a class with the same value as an existing instance.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICloneable`1.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorPalette">
      <summary>Represents the color palette that contains indexed colors.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorPalette.Count">
      <summary>Gets the number of indexed colors.</summary>
      <value>An integer value represents the number of indexed colors.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorPalette.Item(System.Int32)">
      <summary>Gets or sets the RGB color at the specified index.</summary>
      <param name="index">An integer value indicates the position of the specified color.</param>
      <value>The RGB color of the specified color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScale.ColorScaleCriteria">
      <summary>Returns a ColorScaleCriteria object, which is a collection of individual ColorScaleCriterion objects. The ColorScaleCriterion object specifies the type, value, and color of threshold criteria used in the color scale conditional format.</summary>
      <value>The color scale criteria.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorScaleCriteria">
      <summary>A collection of ColorScaleCriterion objects that represents all of the criteria for a color scale conditional format. Each criterion specifies the minimum, midpoint, or maximum threshold for the color scale.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriteria.Count">
      <summary>Gets an integer value that specifies the number of criteria for a color scale conditional format rule.</summary>
      <value>The number of criteria is equivalent to the number of threshold values assigned for a color scale. This will be either two or three, depending on whether you use a two-color scale or three-color scale for the conditional format rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriteria.Item(System.Int32)">
      <summary>Gets a single ColorScaleCriterion object from the <see cref="T:GrapeCity.Spreadsheet.IColorScaleCriteria" /> collection.</summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.IColorScaleCriterion" /> object.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorScaleCriterion">
      <summary>Represents the criteria for the minimum, midpoint, or maximum thresholds for a color format conditional format.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.FormatColor">
      <summary>Represents the fill color specified for a threshold of a color scale conditional format or the color of the bar in a data bar conditional format.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.Index">
      <summary>Gets the index of this criterion</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.Type">
      <summary>Gets one of the constants of the <seealso cref="T:GrapeCity.Spreadsheet.CfValueType" /> enumeration, which specifies how the threshold values for a data bar or color scale conditional format are determined. Read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.Value">
      <summary>Gets or sets the minimum, midpoint, or maximum threshold value for a color scale conditional format.</summary>
      <remarks>A string value represents the formula of the color scale criterion. <para> An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represents the primitive value of the color scale criterion. </para></remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorStops">
      <summary>A collection of all the <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> objects for the specified series.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorStops.Count">
      <summary>Returns the count of the represented object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorStops.Item(System.Int32)">
      <summary>Gets <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object from the specified collection.</summary>
      <param name="index">A <see cref="T:System.Int32" /> value represents the index of the object in collection</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IColorStops.Add(System.Double)">
      <summary>Adds a <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object to the specified collection.</summary>
      <param name="position">A double value indicates the position in which to apply the <see cref="T:GrapeCity.Spreadsheet.ColorStop" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object represents the new object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IColorStops.Clear">
      <summary>Clears all color stops from this collection.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColumnFooter">
      <summary>Represents the column footer of a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.Cells">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire column footer cells (not just the cells that are currently in use).</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.ColumnCount">
      <summary>Gets the column count of the column footer.</summary>
      <value>An integer value represents the column count of the column footer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.RowCount">
      <summary>Gets or sets the row count of the column footer.</summary>
      <value>An integer value represents the row count of the column footer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.Visible">
      <summary>Gets or sets whether the column footer is visible.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColumnHeader">
      <summary>Represents the column header of a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.Cells">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire column header cells (not just the cells that are currently in use).</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.ColumnCount">
      <summary>Gets the column count of the column header.</summary>
      <value>An integer value represents the column count of the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.RowCount">
      <summary>Gets or sets the row count of the column header.</summary>
      <value>An integer value represents the row count of the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.Visible">
      <summary>Gets or sets whether the column header is visible.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICompositeExtendData">
      <summary>Represents an interface for other products to extend composable data of Worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICompositeExtendData.CanAffectToPreferredRowHeight">
      <summary>Gets a boolean value indicating whether this instance can affect to preferred row height</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICompositeExtendData.IsReusable">
      <summary>Gets a value indicating whether this instance can be reused via composing.</summary>
      <value>
        <c>true</c> if this instance can be reused via composing; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.Composite(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>Composites data from higher level object. Data of this object will be replaced.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.CopyFrom(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>Copies data from the source instance.</summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.Merge(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>Merges data from lower level object. Data of this object will be kept.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IConditionValue">
      <summary>Represents how the shortest bar or longest bar is evaluated for a data bar conditional formatting rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IConditionValue.Type">
      <summary>Gets one of the constants of the XlConditionValueTypes enumeration, which specifies how the threshold values for a data bar, color scale, or icon set conditional format are determined.</summary>
      <value>The type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IConditionValue.Value">
      <summary>Gets or sets the shortest bar or longest bar threshold value for a data bar conditional format.</summary>
      <value>The value of the condition value.</value>
      <remarks>A string value represents the formula of the color scale criterion. <para> An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represents the primitive value of the color scale criterion. </para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IConditionValue.Modify(GrapeCity.Spreadsheet.CfValueType,System.Double)">
      <summary>Modifies the data of this condition value.</summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.CfValueType" /> value indicates the type of condition value.</param>
      <param name="value">A double value indicates the numeric value of the condition value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IConditionValue.Modify(GrapeCity.Spreadsheet.CfValueType,System.String)">
      <summary>Modifies the data of this condition value.</summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.CfValueType" /> value indicates the type of condition value.</param>
      <param name="formula">A string value indicates the formula of the condition value.</param>
      <remarks>Because <paramref name="formula" /> is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IDatabar">
      <summary>Represents a data bar conditional formating rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.AxisColor">
      <summary>Returns the color of the axis for cells with conditional formatting as data bars.</summary>
      <value>The color of the axis.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.AxisPosition">
      <summary>Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DatabarAxisPosition" /> value that represents the axis position.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.BarBorder">
      <summary>Returns an object that specifies the border of a data bar.</summary>
      <value>The bar border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.BarColor">
      <summary>Returns a FormatColor object that you can use to modify the color of the bars in a data bar conditional format.</summary>
      <value>The color of the bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.BarFillType">
      <summary>Gets or sets how a data bar is filled with color.</summary>
      <value>The type of the bar fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.Direction">
      <summary>Gets or sets the direction the databar is displayed.</summary>
      <value>The direction.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.MaxPoint">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object that specifies how the longest bar is evaluated for a data bar conditional format.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object represents the maximum point value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.MinPoint">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object that specifies how the shortest bar is evaluated for a data bar conditional format.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object represents the minimum point value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.NegativeBarFormat">
      <summary>Returns the <see cref="T:GrapeCity.Spreadsheet.INegativeBarFormat" /> object associated with a data bar conditional formatting rule.</summary>
      <value>The negative bar format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.PercentMax">
      <summary>Gets or sets an integer value that specifies the length of the longest data bar as a percentage of cell width.</summary>
      <value>The value must be a whole number between 0 and 100.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.PercentMin">
      <summary>Gets or sets an integer value that specifies the length of the shortest data bar as a percentage of cell width.</summary>
      <value>The value must be a whole number between 0 and 100.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.ShowValue">
      <summary>Gets or sets a Boolean value that specifies if the value in the cell is displayed if the data bar conditional format is applied to the range.</summary>
      <value>
        <c>true</c> if the value in the cell is displayed if the data bar conditional format is applied; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IDatabarBorder">
      <summary>Represents the border of the data bars specified by a conditional formatting rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabarBorder.Color">
      <summary>Returns an object that specifies the color of the border of data bars specified by a conditional formatting rule.</summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabarBorder.Type">
      <summary>Gets or sets the type of border for data bars specified by a conditional formatting rule.</summary>
      <value>The type.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IExtendedData">
      <summary>Represents an interface for other products to extend data of Worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Exports the extension data.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.ImportExtensionData(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>Imports the extension data.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.IsEmpty">
      <summary>Determines whether this instance is empty.</summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Gets a value indicating whether the extension requires to export its data.</summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFilter">
      <summary>Represents a filter for a single column.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.Criteria1">
      <summary>Gets the first filtered value for the specified column in a filtered range.</summary>
      <value>An object represents the first filtered value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.Criteria2">
      <summary>Gets the second filtered value for the specified column in a filtered range.</summary>
      <value>An object represents the second filtered value.</value>
      <remarks>If you try to access the <see cref="P:GrapeCity.Spreadsheet.IFilter.Criteria2" /> property for a filter that does not use two criteria, <c>null</c> will be returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.On">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFilter" /> is on.</summary>
      <value>
        <c>true</c> if the specified filter is on; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.Operator">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.AutoFilterOperator" /> value that represents the operator that associates the two criteria applied by the specified filter.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.AutoFilterOperator" /> value that represents the filter operator.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFilters">
      <summary>Represents a collection of <see cref="T:GrapeCity.Spreadsheet.IFilter" /> objects that represents all the filters in an auto filtered range.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilters.Count">
      <summary>Gets the number of filters in the filter collection.</summary>
      <value>An integer value represents the number of filters.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilters.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IFilter" /> object at the specified index.</summary>
      <param name="index">An integer value indicates the index number of the filter.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFilter" /> object at the specified index.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFont">
      <summary>Contains the font attributes (font name, font size, color, and so on) for an object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Bold">
      <summary>True if the font is bold.</summary>
      <value>
        <c>true</c> if bold; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Color">
      <summary>Gets or sets the primary color of the object</summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.FontStyle">
      <summary>Gets or sets the font style</summary>
      <value>The font style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Italic">
      <summary>True if the font style is italic</summary>
      <value>
        <c>true</c> if italic; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Name">
      <summary>Gets or sets a value that represents the name of the object.</summary>
      <value>The name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Size">
      <summary>Gets or sets the size of the font.</summary>
      <value>The size.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Strikethrough">
      <summary>True if the font is struck through with a horizontal line.</summary>
      <value>
        <c>true</c> if strikethrough; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Subscript">
      <summary>True if the font is formatted as subscript. False by default.</summary>
      <value>
        <c>true</c> if subscript; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Superscript">
      <summary>True if the font is formatted as superscript; False by default.</summary>
      <value>
        <c>true</c> if superscript; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.ThemeFont">
      <summary>Gets or sets the theme font in the applied font scheme that is associated with the specified object.</summary>
      <value>The theme font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Underline">
      <summary>Gets or sets the type of underline applied to the font.</summary>
      <value>The underline.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFont.ApplyFont(GrapeCity.Spreadsheet.Font)">
      <summary>Apply font's setting for whole font</summary>
      <param name="font">The font's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFormatCondition">
      <summary>Represents a conditional format.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.AppliesTo">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object specifying the cell range to which the formatting rule is applied.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object specifying the cell range to which the formatting rule is applied.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Borders">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IBorders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IBorders" /> collection that represents the borders.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.DateOperator">
      <summary>Gets or sets the date operator used in the format condition.</summary>
      <value>The date operator used in the format condition.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Font">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Formula1">
      <summary>Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula.</summary>
      <value>The value or expression associated with the conditional format.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IFormatCondition.Formula1" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Formula2">
      <summary>Returns the value or expression associated with the second part of a conditional format or data validation.</summary>
      <value>The value or expression associated with the second part of a conditional format.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IFormatCondition.Formula2" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Interior">
      <summary>Returns an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the specified object.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.NumberFormat">
      <summary>Gets or sets the number format applied to a cell if the conditional formatting rule evaluates to <c>true</c>.</summary>
      <value>The number format applied to a cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Operator">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.FormatConditionOperator" /> value that represents the operator for the conditional format.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FormatConditionOperator" /> value that represents the operator.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Priority">
      <summary>Gets or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</summary>
      <value>The priority value of the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.StopIfTrue">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <c>true</c>.</summary>
      <value>
        <c>false</c> if if additional formatting rules on the cell should be evaluated; otherwise, <c>true</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Text">
      <summary>Gets or sets a <see cref="T:System.String" /> value specifying the text string used by the conditional formatting rule.</summary>
      <value>The text string used by the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.TextOperator">
      <summary>Gets or sets one of the constants of the <see cref="T:GrapeCity.Spreadsheet.ContainsOperator" /> enumeration, specifying the text search performed by the conditional formatting rule.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ContainsOperator" /> value represents the text search performed by the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Type">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.FormatConditionType" /> value that represents the format condition type.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FormatConditionType" /> value that represents the format condition type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Delete">
      <summary>Deletes this conditional format.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Modify(GrapeCity.Spreadsheet.FormatConditionType,GrapeCity.Spreadsheet.FormatConditionOperator,System.String,System.String,GrapeCity.Spreadsheet.ContainsOperator,GrapeCity.Spreadsheet.TimePeriods)">
      <summary>Modifies an existing conditional format.</summary>
      <param name="type">Specifies whether the conditional format is based on a cell value or an expression.</param>
      <param name="operator">The conditional format operator. If <paramref name="type" /> is <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.Expression" />, it'll be ignored.</param>
      <param name="formula1">The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="formula2">The value or expression associated with the second part of the conditional format when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="textOperator">The conditional format text operator. If <paramref name="type" /> isn't <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" />, it'll be ignored.</param>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>
        <c>true</c> if the conditional format is modified, <c>false</c> otherwise.</returns>
      <remarks>If the <paramref name="type" /> is <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.Databar" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.IconSet" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.ColorScale" />, the current conditional format will be replaced by a new conditional format.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Modify(GrapeCity.Spreadsheet.ContainsOperator,System.String)">
      <summary>Modifies an existing conditional format.</summary>
      <param name="operator">The conditional format text operator.</param>
      <param name="text">The text associated with the conditional format.</param>
      <returns>
        <c>true</c> if the conditional format is modified, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Modify(GrapeCity.Spreadsheet.TimePeriods)">
      <summary>Modifies an existing conditional format.</summary>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>
        <c>true</c> if the conditional format is modified, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.ModifyAppliesToRange(GrapeCity.Spreadsheet.Reference)">
      <summary>Modifies an existing text conditional format.</summary>
      <param name="range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.ModifyAppliesToRange(System.String)">
      <summary>Sets the cell range to which this formatting rule applies.</summary>
      <param name="range">The range to which this formatting rule will be applied.</param>
      <remarks>The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the FormatConditions collection.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.SetFirstPriority">
      <summary>Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.SetLastPriority">
      <summary>Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFormatConditions">
      <summary>Represents the collection of conditional formats for a single range.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatConditions.Count">
      <summary>Gets the number of format conditions.</summary>
      <value>An integer value represents the number of format conditions.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatConditions.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object at the specified index.</summary>
      <param name="index">An integer value that indicates the index number.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Add(GrapeCity.Spreadsheet.FormatConditionType,GrapeCity.Spreadsheet.FormatConditionOperator,System.String,System.String,GrapeCity.Spreadsheet.ContainsOperator,GrapeCity.Spreadsheet.TimePeriods)">
      <summary>Adds a new conditional format.</summary>
      <param name="type">Specifies whether the conditional format is based on a cell value or an expression.</param>
      <param name="operator">The conditional format operator. If <paramref name="type" /> is <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.Expression" />, it'll be ignored.</param>
      <param name="formula1">The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="formula2">The value or expression associated with the second part of the conditional format when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="textOperator">The conditional format text operator. If <paramref name="type" /> isn't <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" />, it'll be ignored.</param>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object that represents the new conditional format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Add(GrapeCity.Spreadsheet.ContainsOperator,System.String)">
      <summary>Adds a new conditional format.</summary>
      <param name="operator">The conditional format text operator.</param>
      <param name="text">The text associated with the conditional format.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object that represents the new conditional format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Add(GrapeCity.Spreadsheet.TimePeriods)">
      <summary>Adds a new conditional format.</summary>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object that represents the new conditional format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddAboveAverage">
      <summary>Returns a new <see cref="T:GrapeCity.Spreadsheet.IAboveAverage" /> object representing a conditional formatting rule for the specified range.</summary>
      <returns>The AboveAverage object is used to find values above or below an average or standard deviation in a range of cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddColorScale(System.Int32)">
      <summary>Returns a new <see cref="T:GrapeCity.Spreadsheet.IColorScale" /> object representing a conditional formatting rule that uses gradations in cell colors to indicate relative differences in the values of cells included in a selected range.</summary>
      <param name="colorScales">An integer value that indicates the number of color scales.</param>
      <returns>A new <see cref="T:GrapeCity.Spreadsheet.IColorScale" /> object representing a conditional formatting rule that uses gradations in cell colors.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddDatabar">
      <summary>Returns a Databar object representing a data bar conditional formatting rule for the specified range.</summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IDatabar" /> object that helps you see the value of a cell relative to other cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddIconSetCondition">
      <summary>Returns a new <see cref="T:GrapeCity.Spreadsheet.IIconSetCondition" /> object which represents an icon set conditional formatting rule for the specified range.</summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IIconSetCondition" /> object that annotates and classify data into three to five categories separated by a threshold value..</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddTop10">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.ITop10" /> object representing a conditional formatting rule for the specified range.</summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITop10" /> object that represents the highest and lowest values in a range of cells based on a cutoff value that you specify.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddUniqueValues">
      <summary>Returns a new <see cref="T:GrapeCity.Spreadsheet.IUniqueValues" /> object representing a conditional formatting rule for the specified range.</summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IUniqueValues" /> object to quickly visualize cells that contain either unique or duplicate values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Delete">
      <summary>Deletes all format conditions.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFormatter">
      <summary>Represents the value formater.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatter.Culture">
      <summary>Gets the culture for the current formatter.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatter.FormatCode">
      <summary>Gets the format code for this formatter.</summary>
      <value>A string value represents the format code for this formatter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.DateTime,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>Formats the specified date to display text.</summary>
      <param name="date">A <see cref="T:System.DateTime" /> value indicates the date to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.TimeSpan,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>Formats the specified number to display text.</summary>
      <param name="timeSpan">A <see cref="T:System.TimeSpan" /> value indicates the time interval.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.Double,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>Formats the specified number to display text.</summary>
      <param name="number">A double value indicates the number to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.String,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>Formats the specified text to display text.</summary>
      <param name="text">A string value indicates the text to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.Boolean,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>Formats the specified boolean value to display text.</summary>
      <param name="value">An <see cref="T:System.Boolean" /> value indicates the data to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.Object,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>Formats the specified object to display text.</summary>
      <param name="obj">An <see cref="T:System.Object" /> value indicates the data to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsGeneral">
      <summary>Determines whether the current formatter is general formatter.</summary>
      <returns>
        <c>true</c> if the current formatter is general formatter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Parse(System.String)">
      <summary>Parses the specified format string.</summary>
      <param name="format">A <see cref="T:System.String" /> value indicates the format string.</param>
      <returns>
        <c>true</c> if the format string is in valid syntax, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IGradient">
      <summary>Contains the font attributes (font name, font size, color, and so on) for an object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.ColorStops">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IColorStops" /> collection for the <see cref="T:GrapeCity.Spreadsheet.IGradient" /> object.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IColorStops" /> object represents the color collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.Degree">
      <summary>Gets or sets the angle of the linear gradient fill within a selection.</summary>
      <value>A <see cref="T:System.Double" /> value in range 0..360 represents the angle.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleBottom">
      <summary>Gets or sets the bottom point or vector that the gradient fill converges to.</summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the bottom point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleLeft">
      <summary>Gets or sets the left point or vector that the gradient fill converges to.</summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the left point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleRight">
      <summary>Gets or sets the right point or vector that the gradient fill converges to.</summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the right point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleTop">
      <summary>Gets or sets the top point or vector that the gradient fill converges to.</summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the top point or vector.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IIconCriteria">
      <summary>Represents the collection of IconCriterion objects. Each IconCriterion represents the values and threshold type for each icon in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriteria.Count">
      <summary>Returns a Long value that specifies the number of criteria for an icon set conditional format rule.</summary>
      <value>The count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriteria.Item(System.Int32)">
      <summary>Returns a single IconCriterion object from the IconCriteria collection.</summary>
      <param name="index">The index number of the IconCriterion object.</param>
      <value>IconCriterion.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IIconCriterion">
      <summary>Represents the criterion for an individual icon in an icon set. The criterion specifies the range of values and the threshold type associated with the icon in an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Icon">
      <summary>Returns or specifies the icon for a criterion in an icon set conditional formatting rule.</summary>
      <value>The icon.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Index">
      <summary>Returns a Long value indicating which threshold the criteria represents.</summary>
      <value>The index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Operator">
      <summary>Gets or sets one of the constants of the XlFormatConditionOperator enumeration, which specifes if the threshold is "greater than" or "greater than or equal to" the threshold value.</summary>
      <value>The operator.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Type">
      <summary>Returns one of the constants of the XlConditionValueTypes enumeration, which specifies how the threshold value for an icon set is determined.</summary>
      <value>The type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Value">
      <summary>Gets or sets the threshold value for an icon in a conditional format.</summary>
      <value>The threshold value for an icon in a conditional format.</value>
      <remarks>A string value represents the formula of the color scale criterion. <para> An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represents the primitive value of the color scale criterion. </para></remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IIconSetCondition">
      <summary>Represents an icon set conditional formatting rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.IconCriteria">
      <summary>Returns an IconCriteria collection, which represents the set of criteria for an icon set conditional formatting rule.</summary>
      <value>The icon criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.IconSet">
      <summary>Gets or sets an <seealso cref="T:GrapeCity.Spreadsheet.IconSetType" /> collection, which specifies the icon set used in the conditional format.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.PercentileValues">
      <summary>Gets or sets a Boolean value indicating if the thresholds for an icon set conditional format are determined by using percentiles.</summary>
      <value>
        <c>true</c> if [percentile values]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.ReverseOrder">
      <summary>Gets or sets a Boolean value indicating if the order of icons is reversed for an icon set.</summary>
      <value>
        <c>true</c> if [reverse order]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.ShowIconOnly">
      <summary>Gets or sets a Boolean value indicating if only the icon is displayed for an icon set conditional format.</summary>
      <value>
        <c>true</c> if [show icon only]; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IInterior">
      <summary>Represents the interior of an object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.Color">
      <summary>Gets or sets the primary color of the object, as shown in the table in the remarks section.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IInterior.Color" /> value represents the primary color of the object.</value>
      <remarks>The returned value is the stored value from the internal storage. For indexed color, it'll be different with <see cref="P:GrapeCity.Spreadsheet.IInterior.ColorIndex" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.ColorIndex">
      <summary>Gets or sets the color of the interior as an index into the current color palette, or as one of the following constants: <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> or <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" />.</summary>
      <value>An integer value represents the index of the color.</value>
      <remarks>The value returned by <see cref="P:GrapeCity.Spreadsheet.IInterior.ColorIndex" /> is different than the stored value from the internal storage. <para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> to specify the automatic color for cells or the automatic fill style for drawing objects.</para><para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" /> to specify that you don't want a color.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.Gradient">
      <summary>Gets the IGradient property of an Interior object of a selection.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IGradient" /> object represents the gradient of the interior.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.Pattern">
      <summary>Gets or sets a <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value that represents the interior pattern.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value represents the interior pattern.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternColor">
      <summary>Gets or sets the color of the interior pattern.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IInterior.Color" /> value represents the color of the interior pattern.</value>
      <remarks>The returned value is the stored value from the internal storage. For indexed color, it'll be different with <see cref="P:GrapeCity.Spreadsheet.IInterior.ColorIndex" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternColorIndex">
      <summary>Gets or sets the color of the interior pattern as an index into the current color palette, or as one of the following constants: <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> or <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" />.</summary>
      <value>An integer value represents the index of the pattern color.</value>
      <remarks>The value returned by <see cref="P:GrapeCity.Spreadsheet.IInterior.PatternColorIndex" /> is different than the stored value from the internal storage. <para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> to specify the automatic pattern for cells or the automatic fill style for drawing objects.</para><para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" /> to specify that you don't want a pattern.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternThemeColor">
      <summary>Gets or sets the pattern theme color in the applied color scheme that is associated with the specified object.</summary>
      <value>A <see cref="T:GrapeCity.Core.ThemeColors" /> value represents the pattern theme color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternTintAndShade">
      <summary>Gets or sets a value that lightens or darkens a pattern color.</summary>
      <value>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.ThemeColor">
      <summary>Gets or sets the theme color in the applied color scheme that is associated with the specified object.</summary>
      <value>A <see cref="T:GrapeCity.Core.ThemeColors" /> value represents the theme color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.TintAndShade">
      <summary>Gets or sets a value that lightens or darkens a color.</summary>
      <value>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IInterior.ApplyInterior(GrapeCity.Spreadsheet.Fill)">
      <summary>Apply fill's setting for whole the fill</summary>
      <param name="fill">The fill's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IName">
      <summary>Represents a defined name.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Comment">
      <summary>Gets or sets the comment associated with this defined name.</summary>
      <value>The string value represents comment associated with this defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Name">
      <summary>Gets or sets the name of the defined name.</summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.RefersToR1C1">
      <summary>Gets or sets the formula in R1C1 format which the defined name refers to.</summary>
      <value>The string value represents formula which the defined name refers to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Visible">
      <summary>Gets or sets the property which determines whether this defined name is visible to the user.</summary>
      <value>
        <c>true</c> if this defined name is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Worksheet">
      <summary>Gets the scope of name as local worksheet.</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IName.Worksheet" /> object indicates the scope of name. Returns <c>null</c> if the scope of name is entire workbook.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.Delete">
      <summary>Deletes the defined name.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.GetRefersTo(System.Int32,System.Int32)">
      <summary>Gets the formula in A1 format which the defined name refers to.</summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>The string value represents formula which the defined name refers to.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.RefersToRange(System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object referred to by an <see cref="T:GrapeCity.Spreadsheet.IName" /> object.</summary>
      <param name="contextRow">An integer value indicates the context row. -1 means the row of the active cell.</param>
      <param name="contextColumn">An integer value indicates the context column. -1 means the column of the active cell.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the <see cref="T:GrapeCity.Spreadsheet.IName" /> object.</returns>
      <remarks>If the <see cref="T:GrapeCity.Spreadsheet.IName" /> object doesn't refer to a range (for example, if it refers to a constant or a formula), this property returns <c>null</c>.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.SetRefersTo(System.Int32,System.Int32,System.String)">
      <summary>Sets the formula in A1 format which the defined name refers to.</summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="refersTo">The formula in A1 format which the defined name refers to.</param>
      <returns>A <see cref="T:System.Boolean" /> value represents whether the formula is changed successfully.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.INames">
      <summary>Represents a collection of all the <see cref="T:GrapeCity.Spreadsheet.IName" /> objects in the workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INames.Item(System.String,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>Gets the defined name by the specified name.</summary>
      <param name="name">A string value indicates the name of the defined name.</param>
      <param name="worksheet">An object indicates what the defined name refers to.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IName" /> object contained by the collection.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.Add(System.String,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Boolean})">
      <summary>Creates a new defined name.</summary>
      <param name="name">A string value indicates the name of new defined name.</param>
      <param name="refersTo">A string value indicates the formula which new defined name refers to.</param>
      <param name="comment">A string value indicates the comment of new defined name.</param>
      <param name="contextRow">An integer value indicates the context row related to <paramref name="refersTo" /> formula.</param>
      <param name="contextColumn">An integer value indicates the context column related to <paramref name="refersTo" /> formula.</param>
      <param name="isA1StyleNotation">A <see cref="!:bool?" /> value indicates the notation style of the formula. <c>true</c> means A1-style notation. <c>false</c> means R1C1-style notation. <c>null</c> means current notation style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IName" /> object indicates the new created defined name. <c>null</c> if the input is invalid.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.AddExternalVariable(System.String,System.String)">
      <summary>Creates a external variable.</summary>
      <param name="name">A string value indicates the external variable name.</param>
      <param name="formula">A string value indicates the associated formula.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> object indicates the new external variable.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.AddExternalVariable(System.String,GrapeCity.Spreadsheet.ExternalVariable,System.String)">
      <summary>Creates a external variable.</summary>
      <typeparam name="T">The external variable type that implement <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" />.</typeparam>
      <param name="name">A string value indicates the external variable name.</param>
      <param name="externalVariable">A <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> object indicates the external variable name to add.</param>
      <param name="formula">A string value indicates the associated formula.</param>
      <returns>
        <c>true</c> if the <paramref name="externalVariable" /> object is added successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.Get(System.String)">
      <summary>Gets the defined name by the specified name.</summary>
      <param name="name">A string value indicates the name of the defined name.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IName" /> object contained by the collection.</returns>
      <remarks>This function has different behavior than <see cref="!:this[string, object]" />. It'll look up defined name from workbook or any worksheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.GetNames(GrapeCity.Spreadsheet.FilterOptions,GrapeCity.Spreadsheet.FilterScopes)">
      <summary>Gets all sorted defined names inside a specified worksheet.</summary>
      <param name="filterOption">The <see cref="T:GrapeCity.Spreadsheet.FilterOptions" /> value to filter defined names.</param>
      <param name="filterScope">The <see cref="T:GrapeCity.Spreadsheet.FilterScopes" /> value to filter defined names' scope.</param>
      <returns>A <see cref="!:IName[]" /> array represents all found defined names.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.INegativeBarFormat">
      <summary>Represents the color settings of the data bars for negative values that are defined by a data bar conditional formating rule.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.BorderColor">
      <summary>Returns a FormatColor object that you can use to specify the border color for negative data bars.</summary>
      <value>The color of the border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.BorderColorType">
      <summary>Specifies whether to use the same border color as positive data bars.</summary>
      <value>The type of the border color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.Color">
      <summary>Returns a FormatColor object that you can use to specify the fill color for negative data bars.</summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.ColorType">
      <summary>Specifies whether to use the same fill color as positive data bars.</summary>
      <value>The type of the color.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.INumberFormatExtendData">
      <summary>Represents extend data for <see cref="T:GrapeCity.Spreadsheet.NumberFormat" />.</summary>
      <seealso cref="!:GrapeCity.Spreadsheet.ICloneable&lt;GrapeCity.Spreadsheet.INumberFormatExtendData&gt;" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.INumberFormatExtendData.GetExportNumberFormat(System.String@,System.Int16@)">
      <summary>Gets export number format.</summary>
      <param name="formatString" />
      <param name="numCode" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.INumberFormatExtendData.GetFormatter(System.Globalization.CultureInfo)">
      <summary>Gets the formatter which represents the behavior of this <see cref="T:GrapeCity.Spreadsheet.NumberFormat" />.</summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the formatter.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IOutline">
      <summary>Represents an outline on a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IOutline.SummaryColumn">
      <summary>Gets or sets the location of the summary columns in the outline.</summary>
      <value>The position of summary column related to the detail columns in the outline.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IOutline.SummaryRow">
      <summary>Gets or sets the location of the summary rows in the outline.</summary>
      <value>The position of summary row related to the detail rows in the outline.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IOutline.ShowLevels(System.Int32,System.Int32)">
      <summary>Displays the specified number of row and/or column levels of an outline.</summary>
      <param name="rowLevels">Specifies the number of row levels of an outline to display. If the outline has fewer levels than the number specified, Spread displays all the levels. If this argument is 0 (zero) or is omitted, no action is taken on rows.</param>
      <param name="columnLevels">Specifies the number of column levels of an outline to display. If the outline has fewer levels than the number specified, Spread displays all the levels. If this argument is 0 (zero) or is omitted, no action is taken on columns.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IRange">
      <summary>Interface that represent a range of a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.AllowEdit">
      <summary>Gets a value indicating whether the range can be edited on a protected worksheet.</summary>
      <value>
        <c>true</c> if the range can be edited; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Areas">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IAreas" /> collection that represents all the ranges in a multiple-area selection.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IAreas" /> collection that represents all the ranges in a multiple-area selection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Borders">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IBorders" /> object that represents the borders of the specified object.</summary>
      <value>The borders of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Cells">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cells in the specified range.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cells in the specified range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Column">
      <summary>Gets the zero based column number of the first column of this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" />.</summary>
      <value>An integer that specifies the zero based column number of the first column.</value>
      <remarks>If this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" /> contains multiple areas, the first column number of the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Column2">
      <summary>Gets the zero based column number of the last column of this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" />.</summary>
      <value>An integer that specifies the zero based column number of the last column.</value>
      <remarks>If this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" /> contains multiple areas, the last column number of the last area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ColumnCount">
      <summary>Gets the number of columns in this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" />.</summary>
      <value>An integer that specifies the number of columns.</value>
      <remarks>If this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" /> contains multiple areas, the number of columns in the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ColumnWidth">
      <summary>Gets or sets the width of the column.</summary>
      <value>The width of the column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Columns">
      <summary>Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.IRange" /> which represents all columns belong to this <see cref="T:GrapeCity.Spreadsheet.IRange" nolink="true" />.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies all columns.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the new <see cref="T:GrapeCity.Spreadsheet.IRange" nolink="true" /> contains columns of the first area only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Count">
      <summary>Get an integer value that represents the number of cells in the range.</summary>
      <value>An integer value that represents the number of cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.CurrentArray">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire array if the specified cell is part of an array.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire array.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Dependents">
      <summary>Returns a Range object that represents the range containing all the dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.</summary>
      <value>A Range object that represents the range containing all the dependents of a cell.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.Dependents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.DirectDependents">
      <summary>Returns a Range object that represents the range containing all the direct dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.</summary>
      <value>A Range object that represents the range containing all the direct dependents of a cell.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.DirectDependents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.DirectPrecedents">
      <summary>Returns a Range object that represents the range containing all the direct precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.</summary>
      <value>A Range object that represents the range containing all the direct precedents of a cell.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.DirectDependents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.DisplayFormat">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.IRange.DisplayFormat" /> object that represents the display settings for the specified range.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IRange.DisplayFormat" /> object that represents the display settings for the specified range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.EntireColumn">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire column (or columns) that contains the specified range.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.EntireRow">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire row (or rows) that contains the specified range.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Font">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.</summary>
      <value>The font of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormatConditions">
      <summary>Gets all format conditions of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</summary>
      <value>An array of <see cref="!:Condition" /> represents format conditions of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormattedValue">
      <summary>Gets or sets the cell value(s).</summary>
      <value>An object represents the cell value(s).</value>
      <remarks>The only difference between this property and the <see cref="P:GrapeCity.Spreadsheet.IRange.Value" /> property is that you can return values formatted with Currency or DateTime data types. You also can use this property to work with an array of cell values.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Formula">
      <summary>Gets or sets the formula for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</summary>
      <value>A string value represents the formula of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormulaArray">
      <summary>Gets or sets the array formula for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</summary>
      <value>A string value represents the array formula of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormulaR1C1">
      <summary>Gets or sets the formula using R1C1-style notation for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</summary>
      <value>A string value represents the formula using R1C1-style notation of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HasArray">
      <summary>Gets a value indicating whether the specified cell is part of an array formula.</summary>
      <value>
        <c>true</c> if the specified cell is part of an array formula; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HasFormula">
      <summary>Gets a value indicating whether all cells in the range contain formulas.</summary>
      <value>
        <c>true</c> if all cells in the range contain formulas, <c>false</c> if none of the cells in the range contains a formula; otherwise, <c>null</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Hidden">
      <summary>Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IRange" /> is hidden.</summary>
      <value>
        <c>true</c> if hidden; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment.</summary>
      <value>The horizontal alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.IndentLevel">
      <summary>Gets or sets the indent level.</summary>
      <value>The indent level.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Interior">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the specified object.</summary>
      <value>The interior of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> with the specified reference.</summary>
      <param name="reference">A <see cref="T:System.String" /> value represents the reference of the specified cell range.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> at the specified cell position.</summary>
      <param name="index">The indexed position of cell.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> with the specified row and column.</summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
      <remarks>For <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Columns" />, arguments indicate the start column and end column. <para>For <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Rows" />, arguments indicate the start and end row.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> with the specified range.</summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Locked">
      <summary>Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IRange" /> is locked.</summary>
      <value>
        <c>true</c> if locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.MergeArea">
      <summary>Returns a Range object that represents the merged range containing the specified cell. If the specified cell isn't in a merged range, this property returns the specified cell.</summary>
      <value>A Range object that represents the merged range containing the specified cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.MergeCells">
      <summary>Gets or sets a value indicating whether this range contains merged cells.</summary>
      <value>
        <c>true</c> if this range contains merged cells; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.NumberFormat">
      <summary>Gets or sets the number format of current cell.</summary>
      <value>The number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Orientation">
      <summary>Gets or sets the text orientation.</summary>
      <value>An integer value represents the text orientation.</value>
      <remarks>There are special values that can be set to <see cref="P:GrapeCity.Spreadsheet.IRange.Orientation" />. They can be found from <see cref="T:GrapeCity.Spreadsheet.Alignment" />. <para> Horizontal text: <see cref="F:GrapeCity.Spreadsheet.Alignment.HorizontalText" /></para><para> Upward text: <see cref="F:GrapeCity.Spreadsheet.Alignment.UpwardText" /></para><para> Downward text: <see cref="F:GrapeCity.Spreadsheet.Alignment.DownwardText" /></para><para> Vertical text: <see cref="F:GrapeCity.Spreadsheet.Alignment.VerticalText" /></para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.OutlineLevel">
      <summary>Gets or sets the current outline level of the specified row or column.</summary>
      <value>An integer value represents the current outline level of the specified row or column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.PageBreak">
      <summary>Gets or sets the location of a page break.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.PageBreak" /> value that represents the location of a page break..</value>
      <remarks>This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <see cref="F:GrapeCity.Spreadsheet.PageBreak.Manual" /> or <see cref="F:GrapeCity.Spreadsheet.PageBreak.None" /> ).</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Precedents">
      <summary>Returns a Range object that represents all the precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one precedent.</summary>
      <value>The precedents.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.Precedents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Row">
      <summary>Gets the zero based row number of the first row of this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" />.</summary>
      <value>An integer that specifies the zero based row number of the first row.</value>
      <remarks>If this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" /> contains multiple areas, the first row number of the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Row2">
      <summary>Gets the zero based row number of the last row of this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" />.</summary>
      <value>An integer that specifies the zero based row number of the last row.</value>
      <remarks>If this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" /> contains multiple areas, the last row number of the last area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.RowCount">
      <summary>Gets the number of rows in this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" />.</summary>
      <value>An integer that specifies the number of rows.</value>
      <remarks>If this <see cref="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)" /> contains multiple areas, the number of rows in the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.RowHeight">
      <summary>Gets or sets the height of the row.</summary>
      <value>The height of the row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Rows">
      <summary>Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.IRange" /> which represents all rows belong to this <see cref="T:GrapeCity.Spreadsheet.IRange" nolink="true" />.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies all rows.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the new <see cref="T:GrapeCity.Spreadsheet.IRange" nolink="true" /> contains rows of the first area only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ShowDetail">
      <summary>
        <c>true</c> if the outline is expanded for the specified range (so that the detail of the column or row is visible). The specified range must be a single summary column or row in an outline.</summary>
      <remarks>If the specified range isn't in a PivotTable report, the following statements are true: - The range must be in a single summary row or column. Otherwise, <c>null</c> will be returned. - This property returns <c>false</c> if any of the children of the row or column are hidden. - Setting this property to <c>true</c> is equivalent to show all the children of the summary row or column. - Setting this property to <c>false</c> is equivalent to hide all the children of the summary row or column.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ShrinkToFit">
      <summary>Gets or sets a value indicating whether text automatically shrinks to fit in the available column width.</summary>
      <value>
        <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Style">
      <summary>Gets or sets the style for the cell.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object represents the style for the cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Summary">
      <summary>Gets a value indicating whether the range is an outlining summary row or column.</summary>
      <value>
        <c>true</c> if the range is an outlining summary row or column; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Text">
      <summary>Gets or sets the text for the cell.</summary>
      <value>A string value represents the text for the cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Validation">
      <summary>Gets an instance of IValidation which may be used to get and set validation properties of the cells represented by this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</summary>
      <value>The instance of IValidation which may be used to get and set validation properties of the cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Value">
      <summary>Gets or sets the cell value.</summary>
      <value>An object represents the cell value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.VerticalAlignment">
      <summary>Gets or sets the vertical alignment.</summary>
      <value>The vertical alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Worksheet">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.IRange.Worksheet" /> object that represents the worksheet containing the specified range.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IRange.Worksheet" /> object that represents the worksheet containing the specified range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.WrapText">
      <summary>Gets or sets a value indicating whether Spread wraps the text in the object.</summary>
      <value>
        <c>true</c> if Spread wraps the text in the object; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Address(System.Boolean,System.Boolean,GrapeCity.Spreadsheet.ReferenceStyle,System.Boolean,GrapeCity.Spreadsheet.CellReference)">
      <summary>Returns a <see cref="T:System.String" /> value that represents the range reference.</summary>
      <param name="rowAbsolute">
        <c>true</c> to return the row part of the reference as an absolute reference.</param>
      <param name="columnAbsolute">
        <c>true</c> to return the column part of the reference as an absolute reference.</param>
      <param name="refStyle">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the reference style.</param>
      <param name="external">
        <c>true</c> to return the external reference; otherwise, <c>false</c> to return local reference.</param>
      <param name="relativeTo">The starting point for the relative reference if <paramref name="rowAbsolute" /> and <paramref name="columnAbsolute" /> are <c>false</c> and the <paramref name="refStyle" /> is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1" />.</param>
      <returns>A <see cref="T:System.String" /> value represents the range reference.</returns>
      <remarks>If the reference contains more than one cell, RowAbsolute and ColumnAbsolute apply to all rows and columns.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Address(System.Boolean,System.Boolean,GrapeCity.Spreadsheet.ReferenceStyle,System.Boolean,System.String)">
      <summary>Returns a <see cref="T:System.String" /> value that represents the range reference.</summary>
      <param name="rowAbsolute">
        <c>true</c> to return the row part of the reference as an absolute reference.</param>
      <param name="columnAbsolute">
        <c>true</c> to return the column part of the reference as an absolute reference.</param>
      <param name="refStyle">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the reference style.</param>
      <param name="external">
        <c>true</c> to return the external reference; otherwise, <c>false</c> to return local reference.</param>
      <param name="relativeTo">The starting point for the relative reference if <paramref name="rowAbsolute" /> and <paramref name="columnAbsolute" /> are <c>false</c> and the <paramref name="refStyle" /> is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1" />.</param>
      <returns>A <see cref="T:System.String" /> value represents the range reference.</returns>
      <remarks>If the reference contains more than one cell, RowAbsolute and ColumnAbsolute apply to all rows and columns.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Address(System.Boolean,System.Boolean,GrapeCity.Spreadsheet.ReferenceStyle,System.Boolean,GrapeCity.Spreadsheet.IRange)">
      <summary>Returns a <see cref="T:System.String" /> value that represents the range reference.</summary>
      <param name="rowAbsolute">
        <c>true</c> to return the row part of the reference as an absolute reference.</param>
      <param name="columnAbsolute">
        <c>true</c> to return the column part of the reference as an absolute reference.</param>
      <param name="refStyle">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the reference style.</param>
      <param name="external">
        <c>true</c> to return the external reference; otherwise, <c>false</c> to return local reference.</param>
      <param name="relativeTo">The starting point for the relative reference if <paramref name="rowAbsolute" /> and <paramref name="columnAbsolute" /> are <c>false</c> and the <paramref name="refStyle" /> is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1" />.</param>
      <returns>A <see cref="T:System.String" /> value represents the range reference.</returns>
      <remarks>If the reference contains more than one cell, RowAbsolute and ColumnAbsolute apply to all rows and columns.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyNumberFormat(GrapeCity.Spreadsheet.NumberFormat)">
      <summary>Applies the number format to the range.</summary>
      <param name="numFmt">A <see cref="P:GrapeCity.Spreadsheet.IRange.NumberFormat" /> value represents the number format.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyStyle(System.String)">
      <summary>Applies the named style to the range.</summary>
      <param name="styleName">Name of the style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyStyle(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>Applies the builtIn style to the range.</summary>
      <param name="style">The built-in style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter">
      <summary>Creates the automatic filter for current selection if the filter doesn't exist; otherwise, remove the filter.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.Fill)">
      <summary>Add the cell fill color filter.</summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="fillColor">Color of the fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.Color)">
      <summary>Add the font color filter.</summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="color">Color of the font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.DynamicFilterType)">
      <summary>Add the dynamic filter.</summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="dynamicType">A <see cref="T:GrapeCity.Spreadsheet.DynamicFilterType" /> value indicates the dynamic filter type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.CfIcon)">
      <summary>Add the icon filter.</summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="icon">A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the icon which is used to filter.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,System.Object,GrapeCity.Spreadsheet.AutoFilterOperator,System.Object)">
      <summary>Filters a list using the AutoFilter.</summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="criteria1">The first criteria is corresponding the first filter criteria.</param>
      <param name="filterOperator">The value specifying the type of filter.</param>
      <param name="criteria2">The second criteria is corresponding the second filter criteria.</param>
      <remarks>If <paramref name="filterOperator" /> is <see cref="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterValues" />, <paramref name="criteria1" /> can be <see cref="!:string[]" /> or <see cref="!:DateGroupItem[]" /> array.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFit(System.Boolean)">
      <summary>Changes the width of the columns or the height of the rows in the range to achieve the best fit.</summary>
      <param name="includeCustomSize">
        <c>true</c> to include rows or columns that contain custom size, <c>false</c> otherwise</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Calculate">
      <summary>Calculates this range of cells on a worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Clear(GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Removes all the data and formulas from the specified range of cells.</summary>
      <param name="options">The options indicates which data type will be performed. If this argument is omitted, all data will be clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="destination">The specified range will be copied. If this argument is omitted, Spread copies the range to the Clipboard.</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(System.String,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="destination">The specified range will be copied. If this argument is omitted, Spread copies the range to the Clipboard.</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.CreateTable(System.Boolean,System.String,System.String)">
      <summary>Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.</summary>
      <param name="includeHeaders">if set to <c>true</c>, the first row of the specified cell range will be used as table header.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ITable" /> object represents the created table. <c>null</c> if the table cannot be created.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GoalSeek(System.Double,GrapeCity.Spreadsheet.IRange,System.Boolean)">
      <summary>Calculates the values necessary to achieve a specific goal.</summary>
      <param name="goal">The value you want returned in this cell.</param>
      <param name="changingCell">Specifies which cell should be changed to achieve the target value.</param>
      <param name="changeIfFound">if set to <c>true</c>, the <paramref name="changingCell" />'s value is changed only if the goal seek is successful.</param>
      <returns>
        <c>true</c> if the goal seek is successful, <c>false</c> otherwise.</returns>
      <remarks>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GoalSeek(System.Double,System.String,System.Boolean)">
      <summary>Calculates the values necessary to achieve a specific goal.</summary>
      <param name="goal">The value you want returned in this cell.</param>
      <param name="changingCell">Specifies which cell should be changed to achieve the target value.</param>
      <param name="changeIfFound">if set to <c>true</c>, the <paramref name="changingCell" />'s value is changed only if the goal seek is successful.</param>
      <returns>
        <c>true</c> if the goal seek is successful, <c>false</c> otherwise.</returns>
      <remarks>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GoalSeek(System.Double,GrapeCity.Spreadsheet.CellReference,System.Boolean)">
      <summary>Calculates the values necessary to achieve a specific goal.</summary>
      <param name="goal">The value you want returned in this cell.</param>
      <param name="changingCell">Specifies which cell should be changed to achieve the target value.</param>
      <param name="changeIfFound">if set to <c>true</c>, the <paramref name="changingCell" />'s value is changed only if the goal seek is successful.</param>
      <returns>
        <c>true</c> if the goal seek is successful, <c>false</c> otherwise.</returns>
      <remarks>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Group">
      <summary>Demotes a range in an outline (that is, increases its outline level). The specified range must be a row or column, or a range of rows or columns.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Merge(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Creates a merged cell from the specified <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</summary>
      <param name="across">if set to <c>true</c>, merge cells in each row (or column) of the specified range as separate merged cells.</param>
      <param name="vertical">if set to <c>true</c>, cells are merged by rows; otherwise, cells are merged by columns. It has effect only if <paramref name="across" /> is <c>true</c>.</param>
      <param name="replace">if set to <c>true</c>, intersected merged cells will be removed; otherwise, they'll be merged.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ActionResult`1" /> value represents the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Move(System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is moved, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Move(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="destination">The specified range will be copied to.</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is moved, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Move(System.String,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="destination">The specified range will be copied to.</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is moved, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Offset(System.Int32,System.Int32)">
      <summary>Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a translated range from the specified range.</summary>
      <param name="rowOffset">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward. The default value is 0.</param>
      <param name="columnOffset">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left. The default value is 0.</param>
      <returns>IRange.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a cell or a range of cells.</summary>
      <param name="cell1">The name of the range. This must be an A1-style reference.</param>
      <param name="cell2">The cell in the lower-right corner of the range.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.UnMerge">
      <summary>Separates a merged area into individual cells.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Ungroup">
      <summary>Promotes a range in an outline (that is, decreases its outline level). The specified range must be a row or column, or a range of rows or columns.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IRowHeader">
      <summary>Represents the row header of a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.Cells">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire row header cells (not just the cells that are currently in use).</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.ColumnCount">
      <summary>Gets or sets the column count of the row header.</summary>
      <value>An integer value represents the column count of the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.RowCount">
      <summary>Gets the row count of the row header.</summary>
      <value>An integer value represents the row count of the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.Visible">
      <summary>Gets or sets whether the row header is visible.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISheetView">
      <summary>Represents a worksheet view.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DefaultGridlineColor">
      <summary>Gets or sets a value indicating whether the consuming application should use the default grid lines color (system dependent). Overrides any color specified in colorId.</summary>
      <value>
        <c>true</c> if the consuming application should use the default grid lines color; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayFormulas">
      <summary>Gets or sets a value indicating whether this sheet should display formulas.</summary>
      <value>
        <c>true</c> if this sheet should display formulas; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayGridlines">
      <summary>Gets or sets a value indicating whether this sheet should display gridlines.</summary>
      <value>
        <c>true</c> if this sheet should display gridlines; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayHeadings">
      <summary>Gets or sets a value indicating whether the sheet should display row and column headings.</summary>
      <value>
        <c>true</c> if the sheet should display row and column headings; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayOutline">
      <summary>Gets or sets a value indicating whether the sheet has outline symbols visible.</summary>
      <value>
        <c>true</c> if the sheet has outline symbols visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayRuler">
      <summary>Gets or sets a value indicating whether to show the ruler in Page Layout View.</summary>
      <value>
        <c>true</c> if the ruler is shown in Page Layout View; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayWhitespace">
      <summary>Gets or sets a value indicating whether page layout view shall display margins.</summary>
      <value>
        <c>true</c> if page layout view shall display margins; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.DisplayZeros">
      <summary>Gets or sets a value indicating whether the window should show 0 (zero) in cells containing zero value.</summary>
      <value>
        <c>true</c> if the window should show 0 (zero) in cells containing zero value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.FreezePanes">
      <summary>Gets or sets a value indicating whether the split panes are frozen.</summary>
      <value>
        <c>true</c> if the split panes are frozen; otherwise, <c>false</c>.</value>
      <remarks>It's possible for <see cref="P:GrapeCity.Spreadsheet.ISheetView.FreezePanes" /> to be <c>true</c> and <see cref="P:GrapeCity.Spreadsheet.ISheetView.Split" /> to be <c>false</c> , or vice versa.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.GridlineColorIndex">
      <summary>Gets or sets the color value for gridlines. This is an 'index color value' (ICV) rather than rgb value.</summary>
      <value>An integer value represents the color value for gridlines.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.RightToLeft">
      <summary>Gets or sets a value indicating whether the sheet is in 'right to left' display mode.</summary>
      <value>
        <c>true</c> if the sheet is in 'right to left' display mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.Split">
      <summary>Gets or sets a value indicating whether the sheetview is split.</summary>
      <value>
        <c>true</c> if the sheetview is split; otherwise, <c>false</c>.</value>
      <remarks>It's possible for <see cref="P:GrapeCity.Spreadsheet.ISheetView.FreezePanes" /> to be <c>true</c> and <see cref="P:GrapeCity.Spreadsheet.ISheetView.Split" /> to be <c>false</c> , or vice versa.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.SplitColumn">
      <summary>Gets or sets the column number where the window is split into panes (the number of columns to the left of the split line).</summary>
      <value>An integer value represents the split column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.SplitHorizontal">
      <summary>Gets or sets the location of the horizontal window split, in points.</summary>
      <value>An integer values represents the location of the horizontal window split.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.SplitRow">
      <summary>Gets or sets the row number where the window is split into panes (the number of rows to the top of the split line).</summary>
      <value>An integer value represents the split row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.SplitVertical">
      <summary>Gets or sets the location of the vertical window split, in points.</summary>
      <value>An integer values represents the location of the vertical window split.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.TabSelected">
      <summary>Gets or sets a value indicating whether this sheet is selected.</summary>
      <value>
        <c>true</c> if this sheet is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.Type">
      <summary>Gets or sets the type of this view.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.SheetViewType" /> value represents the type of this view.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.WindowProtection">
      <summary>Gets or sets a value indicating whether the panes in the window are locked due to workbook protection.</summary>
      <value>
        <c>true</c> if the panes in the window are locked due to workbook protection; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.ZoomScale">
      <summary>Gets or sets the window zoom magnification for current view representing percent values.</summary>
      <value>An integer value represents the window zoom magnification for current view representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.ZoomScaleNormal">
      <summary>Gets or sets the zoom magnification to use when in normal view, representing percent values.</summary>
      <value>An integer value represents the zoom magnification to use when in normal view, representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.ZoomScalePageBreakPreview">
      <summary>Gets or sets the zoom magnification to use when in page break preview, representing percent values.</summary>
      <value>An integer value represents the zoom magnification to use when in page break preview, representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISheetView.ZoomScalePageLayoutView">
      <summary>Gets or sets the zoom magnification to use when in page layout view, representing percent values.</summary>
      <value>An integer value represents the zoom magnification to use when in page layout view, representing percent values.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISheetView.AddSelection(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds the specified cell range to the selection.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISheetView.ClearSelections">
      <summary>Clears all selections.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISort">
      <summary>Represents a sort of a range of data.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.Header">
      <summary>Gets or sets a value indicating whether the first row contains header information.</summary>
      <value>
        <c>true</c> if the first row contains header information; otherwise, <c>false</c>.</value>
      <remarks>Default value is <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.No" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.MatchCase">
      <summary>Gets or sets a value indicating whether to perform a case-sensitive sort.</summary>
      <value>
        <c>true</c> if perform a case-sensitive sort; otherwise, <c>false</c> to perform non-case sensitive sort.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.Orientation">
      <summary>Gets or sets the orientation for the sort.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.Rng">
      <summary>Gets or sets the range of values on which the sort is performed.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> value represents the range of values on which the sort is performed.</value>
      <remarks>This property can be changed when applying a sort to a sheet range, and cannot be changed if the range is within a table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.SortFields">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> object that represents the collection of sort fields associated with the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> object that represents the collection of sort fields.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.SortMethod">
      <summary>Gets or sets the sort method for Chinese languages.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ISort.SortMethod" /> value represents the sort method for Chinese languages.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.Apply">
      <summary>Sorts the range based on the currently applied sort states.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)">
      <summary>Sets the range over which the sort occurs.</summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.SetRange(System.String)">
      <summary>Sets the range over which the sort occurs.</summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.IRange)">
      <summary>Sets the range over which the sort occurs.</summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISortField">
      <summary>Represent an object contains all the sort information for the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />, <see cref="T:GrapeCity.Spreadsheet.ITable" />, and <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> objects.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.DataOption">
      <summary>Gets or sets the data option indicating how to sort text in the range specified in SortField object.</summary>
      <value>The data option indicating how to sort text.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.Key">
      <summary>Gets the range that is currently being sorted on.</summary>
      <value>The range that is currently being sorted on.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.Order">
      <summary>Gets or sets the sort order for the values specified in the key.</summary>
      <value>The sort order for the values specified in the key.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.Priority">
      <summary>Gets or sets the priority for the sort field.</summary>
      <value>The priority for the sort field.</value>
      <remarks>The priority starts from 1 which has the highest priority.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.SortOn">
      <summary>Gets or sets what attribute of the cell to sort on.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.SortOn" /> value represents what attribute of the cell to sort on.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.SortOnValue">
      <summary>Gets the value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</summary>
      <value>The value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.Delete">
      <summary>Removes the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object from the <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> collection.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(GrapeCity.Spreadsheet.IRange)">
      <summary>Modify the key value by which values are sorted in the field.</summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(GrapeCity.Spreadsheet.Reference)">
      <summary>Modify the key value by which values are sorted in the field.</summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(System.String)">
      <summary>Modify the key value by which values are sorted in the field.</summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(System.Int32)">
      <summary>Modify the key value by which values are sorted in the field.</summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.SetIcon(GrapeCity.Spreadsheet.CfIcon)">
      <summary>Sets an icon for a <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</summary>
      <param name="cfIcon">The icon to be set.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortFields.Count">
      <summary>Gets the number of sort fields in the collection.</summary>
      <value>The count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortFields.Item(System.Int32)">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object that represents a collection of items that can be sorted in a workbook.</summary>
      <param name="index">An integer value indicates the index of the <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object that represents a collection of items that can be sorted in a workbook.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(System.String,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(System.Int32,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Clear">
      <summary>Clears all the sort fields.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISpreadsheet">
      <summary>Represent an absract spreadsheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISpreadsheet.ColumnCount">
      <summary>Gets the column count of the header.</summary>
      <value>An integer value represents the column count of the header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISpreadsheet.RowCount">
      <summary>Gets the row count of the header.</summary>
      <value>An integer value represents the row count of the header.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Clear(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Removes all the data from the specified range of cells.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="rowCount">An integer value indicates the count of rows.</param>
      <param name="columnCount">An integer value indicates the count of columns.</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>Copies the data from a range of cells to a specified range of cells.</summary>
      <param name="row">Row index of start of range from which to copy</param>
      <param name="column">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be copied to. <c>null</c> means the data is copied to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.GetFormula(System.Int32,System.Int32)">
      <summary>Gets the formula text from the specified cell on this spreadsheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The formula text of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.GetStyleFormat(System.Int32,System.Int32)">
      <summary>Gets the direct <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> of a cell</summary>
      <param name="row">An integer value indicates the index of row</param>
      <param name="column">An integer value indicates the index of column</param>
      <returns>The <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> of a cell</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.GetValue(System.Int32,System.Int32)">
      <summary>Gets raw data from the specified cell on this spreadsheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.InsertColumns(System.Int32,System.Int32)">
      <summary>Inserts column(s) at the specified position.</summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.InsertRows(System.Int32,System.Int32)">
      <summary>Inserts row(s) at the specified position.</summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>Moves the data from a range of cells to the specified location.</summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be moved to. <c>null</c> means the data is moved to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is moved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes one or more columns starting with the column at the specified position.</summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
      <returns>
        <c>true</c> if the columns are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes one or more rows starting with the row at the specified position.</summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
      <returns>
        <c>true</c> if the rows are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetFormula(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets the formula text for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">A string value indicates the formula text to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetStyleFormat(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>Sets the <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> for a range</summary>
      <param name="row">An integer value indicates the index of start row</param>
      <param name="column">An integer value indicates the index of start column</param>
      <param name="row2">An integer value indicates the index of end row</param>
      <param name="column2">An integer value indicates the index of end column</param>
      <param name="styleFormat">The <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> to set to the range</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Sets the <see cref="T:System.Object" /> value for all cells of the specified range.</summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
      <param name="row2">An integer value indicates the bottom row index of cell.</param>
      <param name="column2">An integer value indicates the right column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Swaps the specified ranges of cells.</summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IStyle">
      <summary>Represents the appearance of the cells in the worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Borders">
      <summary>Returns a Borders collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</summary>
      <value>The borders.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.BuiltIn">
      <summary>Gets a value indicating whether the style is a built-in style.</summary>
      <value>
        <c>true</c> if the style is a built-in style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Font">
      <summary>Returns a Font object that represents the font of the specified object.</summary>
      <value>The font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.HorizontalAlignment">
      <summary>Gets or sets a horizontal aligment value that represents the horizontal alignment for the specified object.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IStyle.HorizontalAlignment" /> value represents the horizontal alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeAlignment">
      <summary>Gets a value indicating whether the style includes the <see cref="P:GrapeCity.Spreadsheet.IStyle.HorizontalAlignment" />, <see cref="P:GrapeCity.Spreadsheet.IStyle.VerticalAlignment" />, <see cref="P:GrapeCity.Spreadsheet.IStyle.WrapText" />, <see cref="P:GrapeCity.Spreadsheet.IStyle.IndentLevel" />, and <see cref="P:GrapeCity.Spreadsheet.IStyle.Orientation" /> properties.</summary>
      <value>
        <c>true</c> if the style includes the <see cref="P:GrapeCity.Spreadsheet.IStyle.HorizontalAlignment" />, <see cref="P:GrapeCity.Spreadsheet.IStyle.VerticalAlignment" />, <see cref="P:GrapeCity.Spreadsheet.IStyle.WrapText" />, <see cref="P:GrapeCity.Spreadsheet.IStyle.IndentLevel" />, and <see cref="P:GrapeCity.Spreadsheet.IStyle.Orientation" /> properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeBorder">
      <summary>Gets a value indicating whether the style includes the <see cref="P:GrapeCity.Spreadsheet.IBorder.Color" />, <see cref="P:GrapeCity.Spreadsheet.IBorder.LineStyle" />, and Weight border properties..</summary>
      <value>
        <c>true</c> if [include border]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeFont">
      <summary>Gets a value indicating whether the style includes the Background, Bold, Color, ColorIndex, FontStyle, Italic, Name, Size, Strikethrough, Subscript, Superscript, and Underline font properties.</summary>
      <value>
        <c>true</c> if the style includes the Background, Bold, Color, ColorIndex, FontStyle, Italic, Name, Size, Strikethrough, Subscript, Superscript, and Underline font properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeNumber">
      <summary>Gets or sets a value indicating whether the style includes the NumberFormat property.</summary>
      <value>
        <c>true</c> if the style includes the NumberFormat property; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludePatterns">
      <summary>Gets or sets a value indicating whether the style includes the Color, ColorIndex, InvertIfNegative, Pattern, PatternColor, and PatternColorIndex interior properties.</summary>
      <value>
        <c>true</c> if the style includes the Color, ColorIndex, InvertIfNegative, Pattern, PatternColor, and PatternColorIndex interior properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeProtection">
      <summary>Gets or sets a value indicating whether the style includes the FormulaHidden and Locked protection properties.</summary>
      <value>
        <c>true</c> if the style includes the FormulaHidden and Locked protection properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IndentLevel">
      <summary>Gets or sets a value that represents the indent level for the style.</summary>
      <value>An integer value represents the indent level.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Interior">
      <summary>Returns an Interior object that represents the interior of the specified object.</summary>
      <value>The interior.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Locked">
      <summary>Gets or sets a value that indicates if the object is locked.</summary>
      <value>
        <c>true</c> if the object is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Name">
      <summary>Returns a value that represents the name of the style.</summary>
      <value>The name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.NumberFormat">
      <summary>Gets or sets a String value that represents the format code for the object.</summary>
      <value>The number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Orientation">
      <summary>Gets or sets a value that represents the text orientation.</summary>
      <value>The orientation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.ShrinkToFit">
      <summary>Gets or sets a Boolean value that indicates if text automatically shrinks to fit in the available column width.</summary>
      <value>
        <c>true</c> if [shrink to fit]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.VerticalAlignment">
      <summary>Gets or sets a value that represents the vertical alignment of the specified object.</summary>
      <value>The vertical alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.WrapText">
      <summary>Gets or sets a value that indicates if the text is wrapped in the cell.</summary>
      <value>
        <c>true</c> if the text is wrapped in the cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IStyle.Delete">
      <summary>Deletes this style.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IStyles">
      <summary>Represents a collection of all styles in the workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Count">
      <summary>Gets an integer value that represents the number of styles in the <see cref="T:GrapeCity.Spreadsheet.IStyles" /> collection.</summary>
      <value>An integer value that represents the number of styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object at the specified index.</summary>
      <param name="index">The index number of the style.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object at the specified index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object with the specified name.</summary>
      <param name="index">The name of the style.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object with the specified name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Item(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>Gets the built-in <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.</summary>
      <param name="builtInStyle">A <see cref="!:builtInStyle" /> value indicates the built-in style.</param>
      <value>The built-in <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IStyles.Add(System.String,System.String)">
      <summary>Creates a new style and adds it to the list of styles that are available for the current workbook.</summary>
      <param name="name">The new style name.</param>
      <param name="duplicatedStyle">The duplicated style name.</param>
      <remarks>Returns null if the name already exist.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IStyles.Merge(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.YesNoCancel)">
      <summary>Merges the styles from another workbook into the <see cref="T:GrapeCity.Spreadsheet.IStyles" /> collection.</summary>
      <param name="workbook">An <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object that represents the workbook containing styles to be merged.</param>
      <param name="duplicate">A <see cref="T:GrapeCity.Spreadsheet.YesNoCancel" /> value that represents the action for duplicated styles. <para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.Yes" /> to overwrite all duplicated styles.</para><para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.No" /> to mege only non-duplicated styles.</para><para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.Cancel" /> to merge nothing if there is a duplicated styles.</para></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITable">
      <summary>Represents a table of the worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Active">
      <summary>Gets a value indicating whether the active cell of worksheet is inside the range of this <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</summary>
      <value>
        <c>true</c> if the active cell of worksheet is inside this table; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.AutoFilter">
      <summary>Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Comment">
      <summary>Gets or sets the comment associated with the <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</summary>
      <value>A string value represents the comment.</value>
      <remarks>The comment text cannot exceed 255 characters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.DataBodyRange">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of values, excluding the header row, in a table.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of values, excluding the header row, in a table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.HeaderRowRange">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of the header row for a table.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of the header row for a table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Name">
      <summary>Gets the name of <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</summary>
      <value>A string value represents the name of <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Range">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table in the above list applies.</summary>
      <value>The range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowAutoFilter">
      <summary>Gets or sets a boolean value indicating whether the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> will be displayed.</summary>
      <value>
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowAutoFilterDropDown">
      <summary>Gets or sets a boolean value indicating whether the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> drop down for the table object is displayed.</summary>
      <value>
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> drop down for the table object is displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowHeaders">
      <summary>Gets or sets a value indicating whether the header row is visible.</summary>
      <value>
        <c>true</c> if the header row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleColumnStripes">
      <summary>Gets or sets a value indicating whether the Column Stripes table style is used for the specified table object.</summary>
      <value>
        <c>true</c> if the Column Stripes table style is used for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleFirstColumn">
      <summary>Gets or sets a value indicating whether the first column is formatted for the specified table object.</summary>
      <value>
        <c>true</c> if the first column is formatted for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleLastColumn">
      <summary>Gets or sets a value indicating whether the last column is displayed for the specified table object.</summary>
      <value>
        <c>true</c> if the last column is displayed for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleRowStripes">
      <summary>Gets or sets a value indicating whether the Row Stripes table style is used for the specified table object.</summary>
      <value>
        <c>true</c> if the Row Stripes table style is used for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTotals">
      <summary>Gets or sets a value indicating whether the total row is visible.</summary>
      <value>
        <c>true</c> if the total row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Sort">
      <summary>Gets the sort object.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ISort" /> object belong to the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableColumns">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection that represents all the columns in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection that represents all the columns in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableRows">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection that represents all the rows in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection that represents all the rows in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableStyle">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.ITable.TableStyle" /> indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ITable.TableStyle" /> object indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableStyleName">
      <summary>Gets the string value indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</summary>
      <value>A string value indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TotalsRowRange">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object representing the Total row, if any, from a specified table object.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object representing the Total row, if any, from a specified table object..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Worksheet">
      <summary>Gets the worksheet object for the specified table.</summary>
      <value>The worksheet contains the specified table.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Delete(System.Boolean)">
      <summary>Deletes this <see cref="T:GrapeCity.Spreadsheet.ITable" /> from the worksheet.</summary>
      <param name="clearCells">
        <c>true</c> to clear all cell data; otherwise, the table is removed only.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Resize(System.Int32,System.Int32,System.Int32)">
      <summary>Resizes the boundary of this table over a new range. No cells are inserted or moved.</summary>
      <param name="column">An integer value indicates the new worksheet left column index.</param>
      <param name="column2">An integer value indicates the new worksheet right column index.</param>
      <param name="rowCount">An integer value indicates the new table row count. Default value is -1 that indicates the row count remained.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Resize(System.String)">
      <summary>Resizes the boundary of this table over a new range. No cells are inserted or moved.</summary>
      <param name="range">The new range of the table.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Resize(GrapeCity.Spreadsheet.IRange)">
      <summary>Resizes the boundary of this table over a new range. No cells are inserted or moved.</summary>
      <param name="range">The new range of the table.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Unlist">
      <summary>Convert data of this <see cref="T:GrapeCity.Spreadsheet.ITable" /> into normal cells and deletes it from the worksheet.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableColumn">
      <summary>Represents a column in a table.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.DataBodyRange">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that is the size of the data portion of a column.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that is the size of the data portion of a column.</value>
      <remarks>The returned object excludes the Header and Totals cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Header">
      <summary>Gets the Header cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</summary>
      <value>The Header cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Index">
      <summary>Gets an integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object within the <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection.</summary>
      <value>The integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Name">
      <summary>Gets or sets value that represents the name of the table column.</summary>
      <value>The name of the table column.</value>
      <remarks>The value of this property is also used as the display name of the table column. This name must be unique within the table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Range">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Total">
      <summary>Gets the Total cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</summary>
      <value>The Total cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.TotalsCalculation">
      <summary>Gets or sets the type of calculation in the Totals row of the table column.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ITableColumn.TotalsCalculation" /> value represents the type of calculation in the Totals row.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableColumn.Delete(System.Int32)">
      <summary>Deletes the column of data in the table.</summary>
      <param name="count">The total number of removed columns.</param>
      <returns>
        <c>true</c> if the table column is removed, <c>false</c> otherwise.</returns>
      <remarks>This method does not remove the column from the sheet.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableColumns">
      <summary>Represents a collection of all the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> objects in the specified <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumns.Count">
      <summary>Gets an integer value that represents the number of columns in the table.</summary>
      <value>The number of columns in the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumns.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</summary>
      <param name="index">An integer value indicates the index of the table column.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumns.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</summary>
      <param name="name">A string value indicates the name of the table column.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableColumns.Add(System.Int32,System.Int32)">
      <summary>Adds a new column to the table object.</summary>
      <param name="position">An integer value indicates the relative position of the new column that starts at 1. The previous column at this position is shifted outward.</param>
      <param name="count">The total number of new columns.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object that represents the new column.</returns>
      <remarks>If <paramref name="position" /> is not specified, a new rightmost column is added. A name for the column is automatically generated. The name of the new column can be changed after the column is added.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableColumns.Move(System.Int32,System.Int32,System.Int32)">
      <summary>Moves table column(s) at the specified position to other position.</summary>
      <param name="column">An integer value indicates the position to move.</param>
      <param name="toColumn">An integer value indicates the target position.</param>
      <param name="count">An integer value indicates the moved column count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableRow">
      <summary>Represents a row in a table.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRow.Index">
      <summary>Gets an integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object within the <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection.</summary>
      <value>The integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRow.InvalidData">
      <summary>Gets a value indicating whether the row in a list contains cells that don't pass data validation.</summary>
      <value>
        <c>true</c> if the row in a list contains cells that don't pass data validation; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRow.Range">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRow.Delete(System.Int32)">
      <summary>Deletes the cells of the table row and shifts upward any remaining cells below the deleted row.</summary>
      <param name="count">The total number of removed rows.</param>
      <returns>
        <c>true</c> if the table row is removed, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableRows">
      <summary>Represents a collection of all the table rows in the specified table.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRows.Count">
      <summary>Gets an integer value that represents the number of rows in the table.</summary>
      <value>The number of rows in the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRows.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object at the specified index.</summary>
      <param name="index">An integer value indicates the index of the table column.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object at the specified index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRows.Add(System.Int32,System.Boolean,System.Int32)">
      <summary>Adds a new row to the table object.</summary>
      <param name="position">An integer value indicates the relative position of the new row.</param>
      <param name="alwaysInsert">A boolean value indicates whether to always shift data in cells below the last row of the table when the new row is inserted, regardless if the row below the table is empty. If True , the cells below the table will be shifted down one row. If False , if the row below the table is empty, the table will expand to occupy that row without shifting cells below it; but if the row below the table contains data, those cells will be shifted down when the new row is inserted.</param>
      <param name="count">The total number of new rows.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object that represents the new row.</returns>
      <remarks>If <paramref name="position" /> is not specified, a new bottom row is added. If <paramref name="alwaysInsert" /> is not specified, the cells below the table will be shifted down one row (same as specifying <c>true</c>).</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRows.Move(System.Int32,System.Int32,System.Int32)">
      <summary>Moves table row(s) at the specified position to other position.</summary>
      <param name="row">An integer value indicates the position to move.</param>
      <param name="toRow">An integer value indicates the target position.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRows.MoveOut(System.Int32,System.Int32)">
      <summary>Moves table row(s) at the specified position to the first row below this <see cref="T:GrapeCity.Spreadsheet.Table" />.</summary>
      <param name="row">An integer value indicates the position to move.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
      <remarks>Moved rows will be removed from this <see cref="T:GrapeCity.Spreadsheet.Table" />.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITables">
      <summary>Represents an <see cref="T:GrapeCity.Spreadsheet.ITables" /> object which manages all <see cref="T:GrapeCity.Spreadsheet.ITable" /> tables in the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITables.Count">
      <summary>Gets the number of tables in this <see cref="T:GrapeCity.Spreadsheet.ITables" />.</summary>
      <value>An integer value represents the number of tables in this <see cref="T:GrapeCity.Spreadsheet.ITables" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITables.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> with the specified name.</summary>
      <param name="name">A string value indicates the table name.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ITable" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.ITable" nolink="true" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITables.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified index.</summary>
      <param name="index">An integer value indicates the table index.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ITable" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.ITable" nolink="true" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITables.Add(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITables.Add(System.String,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.</summary>
      <param name="srcRange">An A1-style notation address indicates the data source.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITables.Add(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.</summary>
      <param name="srcRange">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> objbect indicates the data source.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyle">
      <summary>Represents a single style that can be applied to a table.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.BuiltIn">
      <summary>Gets a value indicating whether the style is a built-in style.</summary>
      <value>
        <c>true</c> if the style is a built-in style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.Name">
      <summary>Gets the name of this <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object.</summary>
      <value>A <see cref="T:System.String" /> value represents the name of the table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.NameLocal">
      <summary>Gets or sets the name of the table style, in the language of the user.</summary>
      <value>The name of the table style, in the language of the user.</value>
      <remarks>If the style is a built-in style, this property returns the name of the style in the language of the current locale.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.TableStyleElements">
      <summary>Gets the table style elements.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyleElements" /> object represents all table style elements.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyle.Delete">
      <summary>Delete this <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> from the table style collection.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyle.Duplicate(System.String)">
      <summary>Duplicates this table style with the specified name.</summary>
      <param name="name">The name of new duplicated table style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> value represents the duplicated table style.</returns>
      <remarks>If no name is specified, the <see cref="M:GrapeCity.Spreadsheet.ITableStyle.Duplicate(System.String)" /> method generates a new name automatically.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyleElement">
      <summary>Represents a single table style element.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.Borders">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IBorders" /> object that represents the borders of a table style element.</summary>
      <value>The borders.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.Font">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.HasFormat">
      <summary>Gets a value indicating whether this table style element has formatting applied to the specified element.</summary>
      <value>
        <c>true</c> if this table style element has formatting applied; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.Interior">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the table style element.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the table style element.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.StripeSize">
      <summary>Gets or sets the strip size of this table style element.</summary>
      <value>An integer value represents the strip size of this table style element.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyleElement.Clear">
      <summary>Clears the formatting for this element.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyleElements">
      <summary>Represents table style elements.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElements.Count">
      <summary>Gets the number of table styles in the collection.</summary>
      <value>An integer value represents the number of table styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElements.Item(GrapeCity.Spreadsheet.TableStyleElementType)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITableStyleElement" /> at the specified index.</summary>
      <param name="index">A <see cref="T:GrapeCity.Spreadsheet.TableStyleElementType" /> value indicates the table style element.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyleElement" /> object represents the table style element.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyles">
      <summary>Represents styles that can be applied to a table.</summary>
      <remarks>Table styles replaces the existing auto format feature for formatting an entire table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <value>An integer value represents the number of objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(System.String)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> with the specified table style name.</summary>
      <param name="tableStyleName">A string value indicates the name of the table style.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the corresponding table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(GrapeCity.Spreadsheet.BuiltInTableStyles)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> with the specified table style name.</summary>
      <param name="tableStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInTableStyles" /> value indicates the name of the table style.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the corresponding table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> at the specified index.</summary>
      <param name="index">An integer value indicates the index of the table style.</param>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the corresponding table style.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyles.Add(System.String)">
      <summary>Creates a new <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object and adds it to the collection.</summary>
      <param name="tableStyleName">A string value indicates the name of the table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the created table style.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITop10">
      <summary>Represents a top ten visual of a conditional formatting rule. Applying a color to a range helps you see the value of a cell relative to other cells.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITop10.Percent">
      <summary>Gets or sets a Boolean value, specifying if the rank is determined by a percentage value.</summary>
      <value>
        <c>true</c> if percent; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITop10.Rank">
      <summary>Gets or sets a Long value, specifying either the number or percentage of the rank value for the conditional format rule.</summary>
      <value>The rank.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITop10.TopBottom">
      <summary>Gets or sets one of the constants of the <see cref="P:GrapeCity.Spreadsheet.ITop10.TopBottom" /> enumeration, determining if the ranking is evaluated from the top or bottom.</summary>
      <value>The ranking is evaluated from the top or bottom.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IUniqueValues">
      <summary>The UniqueValues object uses the DupeUnique property to Gets or sets an enum that determines whether the rule should look for duplicate or unique values in the range.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IUniqueValues.DupeUnique">
      <summary>Gets or sets one of the constants of the XlDupeUnique enumeration, specifying if the conditional format rule is looking for unique or duplicate values.</summary>
      <value>The dupe unique.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IValidation">
      <summary>Represents data validation for a worksheet range.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.AlertStyle">
      <summary>Gets the validation alert style.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value represents the validation alert style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ErrorMessage">
      <summary>Gets or sets the data validation error message.</summary>
      <value>A <see cref="T:System.String" /> value represents the data validation error message.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ErrorTitle">
      <summary>Gets or sets the title of the data validation error dialog box.</summary>
      <value>A <see cref="T:System.String" /> value represents the title of the data validation error dialog box.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Formula1">
      <summary>Gets the value or expression associated with the conditional format or data validation.</summary>
      <value>A string value represents a constant value, a string value, a cell reference, or a formula.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula1" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Formula2">
      <summary>Gets the value or expression associated with the second part of a conditional format or data validation.</summary>
      <value>A string value represents a constant value, a string value, a cell reference, or a formula.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula2" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.IgnoreBlank">
      <summary>Gets a value indicating whether blank values are permitted by the range data validation.</summary>
      <value>
        <c>true</c> if blank values are permitted by the range data validation; otherwise, <c>false</c>.</value>
      <remarks>If the <see cref="P:GrapeCity.Spreadsheet.IValidation.IgnoreBlank" /> property is <c>true</c> , cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula1" /> or <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula2" /> property is blank.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ImeMode">
      <summary>Gets or sets the description of the Japanese input rules.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ImeMode" /> value represents the description of the Japanese input rules</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.InCellDropdown">
      <summary>Gets or sets data validation displays a drop-down list that contains acceptable values.</summary>
      <value>
        <c>true</c> if data validation displays a drop-down list that contains acceptable values; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.InputMessage">
      <summary>Gets or sets the data validation input message.</summary>
      <value>A <see cref="T:System.String" /> value represents the data validation input message.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.InputTitle">
      <summary>Gets or sets the title of the data validation input dialog box.</summary>
      <value>A <see cref="T:System.String" /> value represents the title of the data validation input dialog box.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Operator">
      <summary>Gets a value indicating the operator for the data validation.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value represents the operator for the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ShowError">
      <summary>Gets or sets the data validation error message will be displayed whenever the user enters invalid data.</summary>
      <value>
        <c>true</c> if the data validation error message will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ShowInput">
      <summary>Gets or sets the data validation input message will be displayed whenever the user selects a cell in the data validation range.</summary>
      <value>
        <c>true</c> if the data validation input message will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Type">
      <summary>Gets a value indicating the data type validation for a range.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value represents the data type validation for a range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Value">
      <summary>Gets a <see cref="T:System.Boolean" /> value indicating whether all the validation criteria are met (that is, if the range contains valid data).</summary>
      <value>
        <c>true</c>if all the validation criteria are met (that is, if the range contains valid data); otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IValidation.Add(GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Adds data validation to a range of cells using the specified options.</summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>The new created data validation. <c>null</c> if the data validation cannot be added.</returns>
      <remarks>Because <paramref name="formula1" /> and <paramref name="formula2" /> properties are also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IValidation.Delete">
      <summary>Deletes data validation.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IValidation.Modify(GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>Modifies existing data validation for a range of cells using the specified options.</summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>The modified data validation. <c>null</c> if the data validation cannot be modified.</returns>
      <remarks>Because <paramref name="formula1" /> and <paramref name="formula2" /> properties are also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorkbook">
      <summary>Represents a workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ActiveSheet">
      <summary>Gets the active sheet (the sheet on top).</summary>
      <value>The active sheet (the sheet on top); null if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.BuiltinDocumentProperties">
      <summary>Gets or sets the <see cref="T:GrapeCity.Spreadsheet.DocumentProperties" /> object that represents all built-in properties of the workbook.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DocumentProperties" /> object represents all built-in properties of the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Colors">
      <summary>Gets or sets colors in the palette for the workbook. The palette has 56 entries, each represented by an ARGB value.</summary>
      <value>All colors in the palette for the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Date1904">
      <summary>Gets or sets whether the date system used to convert a date to a serial value starts since 1/1/1904.</summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
      <remarks>All workbooks in the same workbook set share same value of <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Date1904" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.DefaultTableStyle">
      <summary>Gets or sets the table style from the TableStyles collection that is used as the default table style.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the default table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.FullName">
      <summary>Gets the name of this workbook, including its path, as a string.</summary>
      <value>The full name of this workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.LinkSources">
      <summary>Gets an array of links in the workbook. The names in the array are the names of the linked documents. Returns empty array if there are no links.</summary>
      <value>The link sources.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Name">
      <summary>Gets or sets the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</summary>
      <value>A string value represents the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Names">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Names" /> collection that represents all the names in the specified workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Path">
      <summary>Gets a string that represents the complete path to the workbook/file that this workbook object respresents.</summary>
      <value>The complete path to the workbook/file that this workbook object respresents.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ProtectStructure">
      <summary>Gets a value indicating whether the order of the sheets in the workbook is protected.</summary>
      <value>
        <c>true</c> if the order of the sheets in the workbook is protected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ProtectWindows">
      <summary>Gets a value indicating whether the windows of the workbook are protected.</summary>
      <value>
        <c>true</c> if the windows of the workbook are protected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.SaveLinkValues">
      <summary>Gets or sets a boolean value indicating whether externally referenced values will be saved with the workbook, enabling cells which refer to those values to be calculated without returning a #REF! error.</summary>
      <value>
        <c>true</c> if externally referenced values will be saved with the workbook; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Styles">
      <summary>Gets a <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.TableStyles">
      <summary>Gets the collection of table styles that are used in the workbook.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyles" /> collection that contains the table styles that are used in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Theme">
      <summary>Gets or sets the theme applied to the current workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.UpdateLinks">
      <summary>Gets or sets an <see cref="T:GrapeCity.Spreadsheet.UpdateLinks" /> constant indicating a workbook's setting for updating links.</summary>
      <value>The workbook's setting for updating links.</value>
      <remarks>Updating links is for physical files. If the external workbook is already opened, the workbook will always be linked.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.WorkbookSet">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.IWorkbook.WorkbookSet" /> object contains current <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Worksheets">
      <summary>Gets the worksheet collection.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ApplyTheme(GrapeCity.Core.Theme)">
      <summary>Applies the specified theme to the current workbook.</summary>
      <param name="theme">A <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Theme" /> object indicates the theme to apply.</param>
      <returns>
        <c>true</c> if the theme is applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ApplyTheme(System.String)">
      <summary>Applies the specified theme to the current workbook.</summary>
      <param name="filename">A string value indicates the theme file to apply.</param>
      <returns>
        <c>true</c> if the theme is loaded and applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ApplyTheme(System.IO.Stream)">
      <summary>Applies the specified theme to the current workbook.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the theme data to apply.</param>
      <returns>
        <c>true</c> if the theme is loaded and applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.BreakLink(System.String)">
      <summary>Converts formulas linked to other workbook to values.</summary>
      <param name="name">The name of the link.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Calculate">
      <summary>Calculates this workbook.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Close(System.Boolean,System.String)">
      <summary>Closes this workbook.</summary>
      <param name="saveChanges">If there are no changes to the workbook, this argument is ignored. If set to True , changes are saved to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="filename" /> is used. If <paramref name="filename" /> is omitted and there is no file name associated with the workbook, <paramref name="saveChanges" /> is ignored.</param>
      <param name="filename">Save changes under this file name.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Protect(GrapeCity.Spreadsheet.WorkbookLocks,System.String)">
      <summary>Protects a workbook so that it cannot be modified.</summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string value that specifies a case-sensitive password for the worksheet or workbook.</param>
      <returns>
        <c>true</c> if the workbook is protected successful, <c>false</c> otherwise.</returns>
      <remarks>Note that support for <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> and <paramref name="password" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" nolink="true" /> have same effect in runtime.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Save">
      <summary>Saves changes to the specified workbook.</summary>
      <returns>
        <c>true</c> if changes are saved successful, <c>false</c> otherwise.</returns>
      <remarks>To open a workbook file, use the <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.IO.Stream,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Boolean)" /> method or <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.String,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)" /> method. <para>To mark a workbook as saved without writing it to a disk, set its Saved property to True.</para><para>The first time you save a workbook, use the <see cref="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method or <see cref="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method to specify a name for the file.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the stream to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified file location.</summary>
      <param name="filename">A string value indicates the file name to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Unprotect(System.String)">
      <summary>Unprotects the workbook which is protected by password.</summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect workbook.</param>
      <returns>
        <c>true</c> if the workbook is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.UpdateLink(System.String,System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>Updates the specified link of this workbook.</summary>
      <param name="name">The name of the link to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.IWorkbook.LinkSources" />.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if the link is updated successfully; otherwise <c>false</c>.</returns>
      <remarks>When the <see cref="!:UpdateLink(string)" /> method is called without any parameters (or <paramref name="name" /> is null/empty), Spread defaults to updating all worksheet links.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.UpdateLink(System.String[],System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>Updates one or all links of this workbook.</summary>
      <param name="names">The name of the links to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.IWorkbook.LinkSources" />. <c>null</c> is to update all links.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if all links are updated successfully; otherwise <c>false</c> if there is at least one link is failed to update.</returns>
      <remarks>When the <see cref="!:UpdateLink(string)" /> method is called without any parameters (or <paramref name="name" /> is null/empty), Spread defaults to updating all worksheet links.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorkbooks">
      <summary>Represents a set of workbooks in a workbook set.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.Count">
      <summary>Gets the number of workbooks in the workbook set.</summary>
      <value>An integer value represents the number of workbooks in the workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.Item(System.Int32)">
      <summary>Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> by the zero based index.</summary>
      <param name="index">An integer value indicates the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> index.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.Item(System.String)">
      <summary>Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> by the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" nolink="true" /> name.</summary>
      <param name="index">A string value indicates the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> name.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> which has the specified name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.WorkbookSet">
      <summary>Gets the parent workbook set of this IWorksheets.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorkbooks.WorkbookSet" /> object represents the parent workbook set of this IWorksheets.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Add(System.String)">
      <summary>Creates a new workbook.</summary>
      <param name="name">The name of workbook.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> value represents a new created <see cref="T:GrapeCity.Spreadsheet.IWorkbook" nolink="true" /> instance.</returns>
      <remarks>The workbook name must be unique in the workbook set.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Add(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>Adds an existed workbook into the workbook set.</summary>
      <returns>
        <c>true</c> if the <paramref name="workbook" /> is added into current workbook set; otherwise, <c>false</c>.</returns>
      <remarks>The <paramref name="workbook" /> must not belong to any other workbook set and its name must be unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.String,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>Open an existing workbook in a newly created instance of <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</summary>
      <param name="filename">The filename of the workbook to open.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object represents the opened workbook.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.IO.Stream,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Boolean)">
      <summary>Open an existing workbook in a newly created instance of <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</summary>
      <param name="stream">The stream containing the workbook to open.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="closing">
        <c>true</c> if the <paramref name="stream" /> will be closed after finish opening. <c>false</c> to leave it as opened.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object represents the opened workbook.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorkbookSet">
      <summary>Represents a set of workbooks which may refer to each other by external cell references or external defined name references.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.CalculationEngine">
      <summary>Gets the calculation engine.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.ColorManager">
      <summary>Gets the color manager of the <see cref="T:GrapeCity.Spreadsheet.IWorkbookSet" />.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorkbookSet.ColorManager" /> object represents the color manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.Culture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.</summary>
      <value>The <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.LanguagePackage">
      <summary>Gets or sets the language package for the workbook set.</summary>
      <remarks>Sets <c>null</c> to use the default English language package.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.Workbooks">
      <summary>Gets all of the workbooks in this workbook set.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IWorkbooks" /> instance represents all of the workbooks in this workbook set.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.BeginUpdate">
      <summary>Suspends painting and events until <see cref="M:GrapeCity.Spreadsheet.IWorkbookSet.EndUpdate" /> is called. Calling this function is exclusively.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.Calculate">
      <summary>Calculates all workbooks on this workbook set.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.EndUpdate">
      <summary>Restores painting and events to the state before the last call to <see cref="M:GrapeCity.Spreadsheet.IWorkbookSet.BeginUpdate" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.RegisterUIManager(GrapeCity.Spreadsheet.UIManager)">
      <summary>Registers the UI manager.</summary>
      <param name="uiManager">The UI manager.</param>
      <exception cref="T:System.ArgumentException">Only single UIManager can be attached to WorkbookSet</exception>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorksheet">
      <summary>Represents a worksheet.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.AutoFilter">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object if filtering is on.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object.</value>
      <remarks>The property returns Nothing if filtering is off. <para>To create an <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object for a worksheet, you must turn auto-filtering on for a range on the worksheet either manually or using the <see cref="M:GrapeCity.Spreadsheet.IRange.AutoFilter" /> method of the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.AutoFilterMode">
      <summary>Gets a value that indicates whether the AutoFilter drop-down arrows are currently displayed on the sheet.</summary>
      <value>
        <c>true</c> if the AutoFilter drop-down arrows are currently displayed on the sheet; otherwise, <c>false</c>.</value>
      <remarks>This property returns <c>true</c> if the drop-down arrows are currently displayed. You can set this property to <c>false</c> to remove the arrows, but you cannot set it to <c>true</c>. Use the <see cref="M:GrapeCity.Spreadsheet.IRange.AutoFilter" /> method to filter a list and display the drop-down arrows.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Cells">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire worksheet cells (not just the cells that are currently in use).</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
      <remarks>Using this property without an object qualifier returns an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the cells on the active worksheet.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.CircularReference">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range containing the first circular reference on the worksheet, or returns <c>null</c> if there's no circular reference on the worksheet.</summary>
      <value>The first circular reference on the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ColumnCount">
      <summary>Gets or sets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</summary>
      <value>An integer value represents the number of columns in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ColumnFooter">
      <summary>Gets the column footer of a worksheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnFooter" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ColumnHeader">
      <summary>Gets the column header of a worksheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnHeader" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Columns">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the columns on the worksheet.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to columns' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Index">
      <summary>Gets the index number of the worksheet within the collection of worksheets.</summary>
      <value>The index number of the worksheet within the collection of worksheets.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Name">
      <summary>Gets or sets the name of worksheet.</summary>
      <value>A string value indicates the name of worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Names">
      <summary>Gets a <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix).</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Names" /> collection that represents all the worksheet-specific names.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Outline">
      <summary>Gets an <see cref="T:GrapeCity.Spreadsheet.IOutline" /> object that represents the outline for the specified worksheet.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IOutline" /> object of the specified worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ProtectionMode">
      <summary>Gets a value indicates whether user-interface-only protection is turned on. To turn on user interface protection, use the <see cref="M:GrapeCity.Spreadsheet.IWorksheet.Protect(GrapeCity.Spreadsheet.WorksheetLocks,System.String)" /> method.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ProtectionMode" /> value represents the protection mode.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.RowCount">
      <summary>Gets or sets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</summary>
      <value>An integer value represents the number of rows in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.RowHeader">
      <summary>Gets the row header of a worksheet.</summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRowHeader" /> object represents the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Rows">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the rows on the worksheet.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to rows' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Sort">
      <summary>Gets the sort object.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ISort" /> object belong to the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Tables">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.ITables" /> object which manages all tables in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ITables" /> object represents the tables of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Type">
      <summary>Gets the worksheet type.</summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetType" /> value represents the worksheet type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Visible">
      <summary>Gets or sets a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that determines whether the worksheet is visible.</summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that indicates the worksheet visibility.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Workbook">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Activate">
      <summary>Makes the current sheet the active sheet.</summary>
      <remarks>This method is equivalent to clicking the tab at the bottom of the sheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Calculate">
      <summary>Calculates this worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.CircleInvalid">
      <summary>Circles invalid entries on the worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.CircleInvalid(System.Int32)">
      <summary>Get a <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array of invalid entries on the worksheet.</summary>
      <param name="maximumCells">An integer value indicates the maximum returned invalid entries. Default value will be used if <paramref name="maximumCells" /> is less than 1.</param>
      <returns>A <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array represents the position of invalid cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.ClearCircles">
      <summary>Clears circles from invalid entries on the worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Copy(System.Int32)">
      <summary>Copies this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" nolink="true" /> collection of the <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" />.</summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Delete">
      <summary>Deletes this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> from its owner <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.GetValue(System.Int32,System.Int32)">
      <summary>Gets raw data from the specified cell on this sheet.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.InsertColumns(System.Int32,System.Int32)">
      <summary>Inserts column(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.</summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.InsertRows(System.Int32,System.Int32)">
      <summary>Inserts row(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.</summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Move(System.Int32)">
      <summary>Moves this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" nolink="true" /> collection of the <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" />.</summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Protect(GrapeCity.Spreadsheet.WorksheetLocks,System.String)">
      <summary>Protects a worksheet so that it cannot be modified.</summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string that specifies a case-sensitive password for the worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is protected successful, <c>false</c> otherwise.</returns>
      <remarks>Note that support for <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" nolink="true" /> have same effect in runtime.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Range(System.String,System.String)">
      <summary>Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a cell or a range of cells.</summary>
      <param name="cell1">The name of the range. This must be an A1-style reference.</param>
      <param name="cell2">The cell in the lower-right corner of the range.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.RemoveColumns(System.Int32,System.Int32)">
      <summary>Removes one or more columns starting with the column at the specified position.</summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
      <returns>
        <c>true</c> if the columns are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.RemoveRows(System.Int32,System.Int32)">
      <summary>Removes one or more rows starting with the row at the specified position.</summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
      <returns>
        <c>true</c> if the rows are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the <see cref="T:System.Boolean" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Byte)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Byte" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.DateTime)">
      <summary>Sets the <see cref="T:System.DateTime" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Decimal)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Decimal" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>Sets the <see cref="T:System.Double" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Single)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Single" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int64)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int64" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:],System.Boolean)">
      <summary>Sets an object array into a specified range of cells.</summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,GrapeCity.Spreadsheet.CellValue@)">
      <summary>Sets the <see cref="T:GrapeCity.Spreadsheet.CellValue" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.Spreadsheet.CellValue" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int16)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int16" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.String)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified row and column.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:])">
      <summary>Sets an object array into a specified range of cells.</summary>
      <typeparam name="T" />
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:],System.Boolean)">
      <summary>Sets an object array into a specified range of cells.</summary>
      <typeparam name="T" />
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the <see cref="T:System.Boolean" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
      <summary>Sets the <see cref="T:System.DateTime" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Sets the <see cref="T:System.Double" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the <see cref="T:System.Int32" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>Sets the value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Unprotect(System.String)">
      <summary>Unprotects the worksheet which is protected by password.</summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorksheets">
      <summary>Represents a set of worksheets in a workbook.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Count">
      <summary>Gets the number of worksheets in the workbook.</summary>
      <value>An integer value represents the number of worksheets in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Item(System.Int32)">
      <summary>Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> by the zero based index.</summary>
      <param name="index">An integer value indicates the worksheet index.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> at the specified index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Item(System.String)">
      <summary>Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> by the worksheet name.</summary>
      <param name="index">A string value indicates the worksheet name.</param>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> which has the specified name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.WorkbookSet">
      <summary>Gets the parent workbook set of this IWorksheets.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorksheets.WorkbookSet" /> object represents the parent workbook set of this IWorksheets.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheets.Add(System.String,System.Int32)">
      <summary>Creates a new <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</summary>
      <param name="worksheetName">A string value indicates the name of the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</param>
      <param name="insertAt">An integer value indicates the position of the new created <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NamedObjectCollection`2.IContainer">
      <summary>Represents the container which contains this <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" /> collection.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.IContainer.Items">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" /> collection which contains <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem" /> elements.</summary>
      <value>The items.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem">
      <summary>Represents the type of elements in this <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" /> collection.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem.Container">
      <summary>Gets the container of this item.</summary>
      <value>An object indicates the container.</value>
      <remarks>Although the caller can assign new value to the container, it isn't recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem.Name">
      <summary>Gets the name of this item.</summary>
      <value>A string value indicates the item's name.</value>
      <remarks>Although the caller can change item's name, it isn't recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AboveBelow">
      <summary>Specifies if the values are above or below average.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.AboveAverage">
      <summary>Above average.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.AboveStdDev">
      <summary>Above standard deviation.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.BelowAverage">
      <summary>Below average.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.BelowStdDev">
      <summary>Below standard deviation.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.EqualAboveAverage">
      <summary>Equal above average.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.EqualBelowAverage">
      <summary>Equal below average.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFilterOperator">
      <summary>Specifies the operator to use to associate two criteria applied by a filter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.And">
      <summary>Logical AND of Criteria1 and Criteria2.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Bottom10Items">
      <summary>Lowest-valued items displayed (number of items specified in Criteria1).</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Bottom10Percent">
      <summary>Lowest-valued items displayed (percentage specified in Criteria1).</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterCellColor">
      <summary>Color of the cell</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterDynamic">
      <summary>Dynamic filter</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterFontColor">
      <summary>Color of the font</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterIcon">
      <summary>Filter icon</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterValues">
      <summary>Filter values</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Or">
      <summary>Logical OR of Criteria1 or Criteria2.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Top10Items">
      <summary>Highest-valued items displayed (number of items specified in Criteria1).</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Top10Percent">
      <summary>Highest-valued items displayed (percentage specified in Criteria1).</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AxisProperty">
      <summary>Properties of axis</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnResizable">
      <summary>The resizable ability of column</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowResizable">
      <summary>The resizable ability of row</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnHidden">
      <summary>The visibility of column</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowHidden">
      <summary>The visibility of row</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnWidth">
      <summary>The width of column</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowHeight">
      <summary>The height of row</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Behaviors">
      <summary>Represents the behaviors of operations.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.FilterFrozenRows">
      <summary>Indicating whether frozen rows should be included in the filter operation.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.Default">
      <summary>Indicating the default behaviors.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BorderLineStyle">
      <summary>Enum the line style for border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.None">
      <summary>No border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Thin">
      <summary>Thin Border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Medium">
      <summary>Medium Border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Dashed">
      <summary>Dashed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Dotted">
      <summary>Dotted.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Thick">
      <summary>Thick Line Border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Double">
      <summary>Double Line.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Hair">
      <summary>Hairline Border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.MediumDashed">
      <summary>Medium Dashed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.DashDot">
      <summary>Dash Dot.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.MediumDashDot">
      <summary>Medium Dash Dot.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.DashDotDot">
      <summary>Dash Dot Dot.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.MediumDashDotDot">
      <summary>Medium Dash Dot Dot.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.SlantDashDot">
      <summary>Slant Dash Dot.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Unset">
      <summary>The border line style is unset.</summary>
      <remarks>This value is used internaly only. You should not use it directly from your code.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.None">
      <summary>No border</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Bottom">
      <summary>Border at the bottom of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Left">
      <summary>Border at the left-hand edge of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Right">
      <summary>Border at the right-hand edge of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Top">
      <summary>Border at the top of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Default">
      <summary>Top, Left, Right, Bottom borders</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BordersIndex">
      <summary>Specifies the border to be retrieved.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.DiagonalDown">
      <summary>Border running from the upper left-hand corner to the lower right of each cell in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.DiagonalUp">
      <summary>Border running from the lower left-hand corner to the upper right of each cell in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Bottom">
      <summary>Border at the bottom of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Left">
      <summary>Border at the left-hand edge of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Right">
      <summary>Border at the right-hand edge of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Top">
      <summary>Border at the top of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.InsideHorizontal">
      <summary>Horizontal borders for all cells in the range except borders on the outside of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.InsideVertical">
      <summary>Vertical borders for all the cells in the range except borders on the outside of the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BreakAttributes.None">
      <summary>Page breaks are not inserted in the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BreakAttributes.Manual">
      <summary>Page breaks are manually inserted.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInStyle">
      <summary>Represents all built-in styles.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Normal">
      <summary>The Normal style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Comma">
      <summary>The Comma style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Currency">
      <summary>The Currency style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent">
      <summary>The Percent style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Comma0">
      <summary>The Comma[0] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Currency0">
      <summary>The Currency[0] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Hyperlink">
      <summary>The Hyper-link style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.FollowedHyperlink">
      <summary>The Followed Hyper-link style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Note">
      <summary>The Note style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.WarningText">
      <summary>The warning text</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Emphasis1">
      <summary>The Emphasis[1] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Emphasis2">
      <summary>The Emphasis[2] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Emphasis3">
      <summary>The Emphasis[3] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Title">
      <summary>The Title style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading1">
      <summary>The Heading[1] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading2">
      <summary>The Heading[2] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading3">
      <summary>The Heading[3] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading4">
      <summary>The Heading[4] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Input">
      <summary>The Input style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Output">
      <summary>The Output style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Calculation">
      <summary>The Calculation style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.CheckCell">
      <summary>The Check Cell style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.LinkedCell">
      <summary>The Linked Cell style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Total">
      <summary>The Total style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Good">
      <summary>The Good style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Bad">
      <summary>The Bad style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Neutral">
      <summary>The Neutral style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent1">
      <summary>The Accent[1] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent1">
      <summary>The Accent[1] style with 20% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent1">
      <summary>The Accent[1] style with 40% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent1">
      <summary>The Accent[1] style with 60% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent2">
      <summary>The Accent[2] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent2">
      <summary>The Accent[2] style with 20% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent2">
      <summary>The Accent[2] style with 40% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent2">
      <summary>The Accent[2] style with 60% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent3">
      <summary>The Accent[3] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent3">
      <summary>The Accent[3] style with 20% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent3">
      <summary>The Accent[3] style with 40% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent3">
      <summary>The Accent[3] style with 60% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent4">
      <summary>The Accent[4] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent4">
      <summary>The Accent[4] style with 20% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent4">
      <summary>The Accent[4] style with 40% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent4">
      <summary>The Accent[4] style with 60% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent5">
      <summary>The Accent[5] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent5">
      <summary>The Accent[5] style with 20% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent5">
      <summary>The Accent[5] style with 40% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent5">
      <summary>The Accent[5] style with 60% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent6">
      <summary>The Accent[6] style.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent6">
      <summary>The Accent[6] style with 20% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent6">
      <summary>The Accent[6] style with 40% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent6">
      <summary>The Accent[6] style with 60% lighter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.ExplanatoryText">
      <summary>The Explanatory Text style.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInTableStyles">
      <summary>Represents all built-in table styles.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight1">
      <summary>Table Style Light 1</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight2">
      <summary>Table Style Light 2</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight3">
      <summary>Table Style Light 3</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight4">
      <summary>Table Style Light 4</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight5">
      <summary>Table Style Light 5</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight6">
      <summary>Table Style Light 6</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight7">
      <summary>Table Style Light 7</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight8">
      <summary>Table Style Light 8</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight9">
      <summary>Table Style Light 9</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight10">
      <summary>Table Style Light 10</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight11">
      <summary>Table Style Light 11</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight12">
      <summary>Table Style Light 12</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight13">
      <summary>Table Style Light 13</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight14">
      <summary>Table Style Light 14</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight15">
      <summary>Table Style Light 15</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight16">
      <summary>Table Style Light 16</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight17">
      <summary>Table Style Light 17</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight18">
      <summary>Table Style Light 18</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight19">
      <summary>Table Style Light 19</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight20">
      <summary>Table Style Light 20</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight21">
      <summary>Table Style Light 21</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium1">
      <summary>Table Style Medium 1</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium2">
      <summary>Table Style Medium 2</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium3">
      <summary>Table Style Medium 3</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium4">
      <summary>Table Style Medium 4</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium5">
      <summary>Table Style Medium 5</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium6">
      <summary>Table Style Medium 6</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium7">
      <summary>Table Style Medium 7</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium8">
      <summary>Table Style Medium 8</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium9">
      <summary>Table Style Medium 9</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium10">
      <summary>Table Style Medium 10</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium11">
      <summary>Table Style Medium 11</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium12">
      <summary>Table Style Medium 12</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium13">
      <summary>Table Style Medium 13</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium14">
      <summary>Table Style Medium 14</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium15">
      <summary>Table Style Medium 15</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium16">
      <summary>Table Style Medium 16</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium17">
      <summary>Table Style Medium 17</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium18">
      <summary>Table Style Medium 18</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium19">
      <summary>Table Style Medium 19</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium20">
      <summary>Table Style Medium 20</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium21">
      <summary>Table Style Medium 21</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium22">
      <summary>Table Style Medium 22</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium23">
      <summary>Table Style Medium 23</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium24">
      <summary>Table Style Medium 24</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium25">
      <summary>Table Style Medium 25</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium26">
      <summary>Table Style Medium 26</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium27">
      <summary>Table Style Medium 27</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium28">
      <summary>Table Style Medium 28</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark1">
      <summary>Table Style Dark 1</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark2">
      <summary>Table Style Dark 2</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark3">
      <summary>Table Style Dark 3</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark4">
      <summary>Table Style Dark 4</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark5">
      <summary>Table Style Dark 5</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark6">
      <summary>Table Style Dark 6</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark7">
      <summary>Table Style Dark 7</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark8">
      <summary>Table Style Dark 8</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark9">
      <summary>Table Style Dark 9</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark10">
      <summary>Table Style Dark 10</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark11">
      <summary>Table Style Dark 11</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Calculation">
      <summary>Represents when calculation engine should calculate formulas in the spreadsheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Calculation.Automatic">
      <summary>Indicates that calculations in the spreadsheet will be performed automatically when cell values change.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Calculation.Semiautomatic">
      <summary>Indicates that calculations in the spreadsheet will be performed automatically when cell values change except for tables.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Calculation.Manual">
      <summary>Indicates that calculations in the spreadsheet will be triggered manually by the user.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.None">
      <summary>When the item is serialized out as xml, its value is "none".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Gregorian">
      <summary>When the item is serialized out as xml, its value is "gregorian".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianUs">
      <summary>When the item is serialized out as xml, its value is "gregorianUs".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Japan">
      <summary>When the item is serialized out as xml, its value is "japan".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Taiwan">
      <summary>When the item is serialized out as xml, its value is "taiwan".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Korea">
      <summary>When the item is serialized out as xml, its value is "korea".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Hijri">
      <summary>When the item is serialized out as xml, its value is "hijri".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Thai">
      <summary>When the item is serialized out as xml, its value is "thai".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Hebrew">
      <summary>When the item is serialized out as xml, its value is "hebrew".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianMiddleEastFrench">
      <summary>When the item is serialized out as xml, its value is "gregorianMeFrench".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianArabic">
      <summary>When the item is serialized out as xml, its value is "gregorianArabic".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianTransliteratedEnglish">
      <summary>When the item is serialized out as xml, its value is "gregorianXlitEnglish".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianTransliteratedFrench">
      <summary>When the item is serialized out as xml, its value is "gregorianXlitFrench".</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellDataType">
      <summary>Represents the data type of a cell in the <see cref="T:GrapeCity.Spreadsheet.ExpressionView" />.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Error">
      <summary>Indicates the value type is calculation error.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Logical">
      <summary>Indicates the value type is boolean.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Text">
      <summary>Indicates the value type is string.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Number">
      <summary>Indicates the value type is numeric.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellProtectionAttributes">
      <summary>Represents the cell protection attributes.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.FormulaHidden">
      <summary>Indicates that the formula is hidden.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.Locked">
      <summary>Indicates that the cell is locked.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.All">
      <summary>All attributes.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellValueType">
      <summary>Specifies the type of a cell value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.Number">
      <summary>Specifies a double precision floating point number.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.Logical">
      <summary>Specifies a logical (boolean) value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.Error">
      <summary>Specifies a <see cref="T:GrapeCity.CalcEngine.CalcError" />.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.Text">
      <summary>Specifies text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.DateTime">
      <summary>Specifies a <see cref="F:GrapeCity.Spreadsheet.CellValueType.DateTime" /> value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.TimeSpan">
      <summary>Specifies a <see cref="F:GrapeCity.Spreadsheet.CellValueType.TimeSpan" /> value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellValueType.Empty">
      <summary>Specifies an empty (<c>null</c>) value.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CfValueType">
      <summary>Specifies the types of condition values that can be used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Numeric">
      <summary>Number is used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Percent">
      <summary>Percentage is used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Formula">
      <summary>Formula is used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Percentile">
      <summary>Percentile is used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Max">
      <summary>Highest value from the list of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Min">
      <summary>Lowest value from the list of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.AutoMin">
      <summary>The shortest data bar is proportional to the minimum value in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.AutoMax">
      <summary>The longest data bar is proportional to the maximum value in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.None">
      <summary>No conditional value.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CharacterSet">
      <summary>Defines the possible sets of character glyphs that are defined in fonts for graphics output.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Ansi">
      <summary>Specifies the English character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Default">
      <summary>Specifies a character set based on the current system locale; for example, when the system locale is United States English, the default character set is <see cref="F:GrapeCity.Spreadsheet.CharacterSet.Ansi" />.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Symbol">
      <summary>Specifies a character set of symbols.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Mac">
      <summary>Specifies the Apple Macintosh character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.ShiftJis">
      <summary>Specifies the Japanese character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Hangul">
      <summary>Specifies the Hangul Korean character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Johab">
      <summary>Specifies the Johab Korean character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Gb2312">
      <summary>Specifies the "simplified" Chinese character set for People's Republic of China.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.ChineseBig5">
      <summary>Specifies the "traditional" Chinese character set, used mostly in Taiwan and in the Hong Kong and Macao Special Administrative Regions.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Greek">
      <summary>Specifies the Greek character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Turkish">
      <summary>Specifies the Turkish character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Vietnamese">
      <summary>Specifies the Vietnamese character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Hebrew">
      <summary>Specifies the Hebrew character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Arabic">
      <summary>Specifies the Arabic character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Baltic">
      <summary>Specifies the Baltic (Northeastern European) character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Russian">
      <summary>Specifies the Russian Cyrillic character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Thai">
      <summary>Specifies the Thai character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.EastEurope">
      <summary>Specifies a Eastern European character set.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Oem">
      <summary>Specifies a mapping to one of the OEM code pages, according to the current system locale setting.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Average">
      <summary>This conditional formatting rule highlights cells that are above or below the average for all values in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.BeginsWith">
      <summary>This conditional formatting rule highlights cells in the range that begin with the given text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsBlank">
      <summary>This conditional formatting rule highlights cells that are completely blank.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsNoBlank">
      <summary>This conditional formatting rule highlights cells that are not blank.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.CellIs">
      <summary>This conditional formatting rule compares a cell value to a formula calculated result, using an operator.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsErrors">
      <summary>This conditional formatting rule highlights cells with formula errors.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsText">
      <summary>This conditional formatting rule highlights cells containing given text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.DuplicateValues">
      <summary>This conditional formatting rule highlights duplicated values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.EndsWith">
      <summary>This conditional formatting rule highlights cells ending with given text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Expression">
      <summary>This conditional formatting rule contains a formula to evaluate.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.TimePeriod">
      <summary>This conditional formatting rule highlights cells containing dates in the specified time period.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsNoErrors">
      <summary>This conditional formatting rule highlights cells without formula errors.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsNoText">
      <summary>This conditional formatting rule highlights cells that do not contain given text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Top10">
      <summary>This conditional formatting rule highlights cells whose values fall in the top N or bottom N bracket, as specified.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.UniqueValues">
      <summary>This conditional formatting rule highlights unique values in the range.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorType">
      <summary>Specifies the color format type.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.Auto">
      <summary>The automatic color that is determined by application.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.ARGB">
      <summary>The ARGB format which stands for alpha, red, green and blue.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.Index">
      <summary>The system-defined indexed color format.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.Theme">
      <summary>The system-defined theme color format.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Compatibility">
      <summary>Represents compatibility options for spreadsheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Compatibility.WorksheetName">
      <summary>Worksheet's name is restricted to match with Excel policy.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Compatibility.Default">
      <summary>Default compatibility options.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ContainsOperator">
      <summary>Specifies the text operator used in a function.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.BeginsWith">
      <summary>Begins with a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.Contains">
      <summary>Contains a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.DoesNotContains">
      <summary>Does not contain the specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.EndsWith">
      <summary>Ends with the specified value</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.Equals">
      <summary>When the item is serialized out as xml, its value is "equal".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.GreaterThan">
      <summary>When the item is serialized out as xml, its value is "greaterThan".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.GreaterThanOrEqual">
      <summary>When the item is serialized out as xml, its value is "greaterThanOrEqual".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.LessThan">
      <summary>When the item is serialized out as xml, its value is "lessThan".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.LessThanOrEqual">
      <summary>When the item is serialized out as xml, its value is "lessThanOrEqual".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.DoesNotEquals">
      <summary>When the item is serialized out as xml, its value is "notEqual".</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarAxisPosition">
      <summary>Represents the axis position for the data bar.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarAxisPosition.Automatic">
      <summary>Indicates that the axis position for the data bar is calculated automatically.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarAxisPosition.Middle">
      <summary>Indicates that the axis position for the data bar is the midpoint of the cell.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarAxisPosition.None">
      <summary>Indicates that there is no axis for the data bar.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarBorderType">
      <summary>Specifies the border of a data bar.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarBorderType.None">
      <summary>The data bar has no border.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarBorderType.Solid">
      <summary>The data bar has a solid border.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarDirection">
      <summary>Specifies a value indicating whether the axis appears from right to left.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarDirection.LeftToRight">
      <summary>The axis appears from left to right. This is the default.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarDirection.RightToLeft">
      <summary>The axis appears from right to left.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarDirection.Context">
      <summary>The direction of the axis is inherited from the current context.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarFillType">
      <summary>Specifies how a data bar is filled with color.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarFillType.Gradient">
      <summary>The data bar is filled with a color gradient.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarFillType.Solid">
      <summary>The data bar is filled with solid color.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarNegativeColorType">
      <summary>Specifies whether to use the same border and fill color as postive data bars.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarNegativeColorType.Color">
      <summary>Use the color specified in the Negative Value and Axis Setting dialog box or by using the ColorType and BorderColorType properties of the NegativeBarFormat object.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarNegativeColorType.SameAsPositive">
      <summary>Use the same color as positive data bars.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataRestrictions">
      <summary>Specifies the reason for an unaccepted expression or value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.None">
      <summary>Indicates that the expression is valid.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.ExternalReference">
      <summary>You may not use references to other workbooks.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.RelativeReference">
      <summary>You cannot use relative references.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.ReferenceOperatorsOrArrayConstants">
      <summary>You may not use reference operators (such as unions, intersections and ranges) or array constants.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidMultiReference">
      <summary>This type of reference cannot be used in a formula. Change the reference to a single cell, or use the reference with a worksheet function, such as =SUM(A1:E5).</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidReference">
      <summary>This type of reference cannot be used in a formula.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidFormula">
      <summary>Enter a valid formula.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.NotFoundNamedRange">
      <summary>A named range you specified cannot be found.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.ListSource">
      <summary>The list source must be a delimited list, or a reference to single row or column.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.NumericOnly">
      <summary>The value must be a numeric value, numeric expression, or refer to a cell containing a numeric value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.IntegerOnly">
      <summary>Decimal values cannot be used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidValue">
      <summary>The value (date/time) you entered is invalid.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.NegativeValue">
      <summary>Negative values cannot be used.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidBetween">
      <summary>The maximum must be greater than or equal to the minimum.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.MissingBetween">
      <summary>You must enter both a Maximum and a Minimum.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationErrorStyle">
      <summary>The style of data validation error alert.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationErrorStyle.Stop">
      <summary>This data validation error style uses a stop icon in the error alert.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationErrorStyle.Warning">
      <summary>This data validation error style uses a warning icon in the error alert.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationErrorStyle.Information">
      <summary>This data validation error style uses an information icon in the error alert.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationOperator">
      <summary>The relational operator used in data validation.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.Between">
      <summary>Data validation which checks if a value is between two other values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween">
      <summary>Data validation which checks if a value is not between two other values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.Equal">
      <summary>Data validation which checks if a value is equal to a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.NotEqual">
      <summary>Data validation which checks if a value is not equal to a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.LessThan">
      <summary>Data validation which checks if a value is less than a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.LessThanOrEqual">
      <summary>Data validation which checks if a value is less than or equal to a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.GreaterThan">
      <summary>Data validation which checks if a value is greater than a specified value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.GreaterThanOrEqual">
      <summary>Data validation which checks if a value is greater than or equal to a specified value.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationType">
      <summary>Specifies the type of data validation used to validate user input.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.InputOnly">
      <summary>Only validate when user changes the value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.WholeNumber">
      <summary>Data validation which checks for whole number values satisfying the given condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Decimal">
      <summary>Data validation which checks for decimal values satisfying the given condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.List">
      <summary>Data validation which checks for a value matching one of list of values. The maximum length of a list is 255 characters.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Date">
      <summary>Data validation which checks for date values satisfying the given condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Time">
      <summary>Data validation which checks for time values satisfying the given condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.TextLength">
      <summary>Data validation which checks for text values, whose length satisfies the given condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Custom">
      <summary>Data validation which uses a custom formula to check the cell value.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DateTimeGrouping">
      <summary>Specifies the part of the date time value used in a comparision.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Year">
      <summary>Specifies date time values compared by year.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Month">
      <summary>Specifies date time values compared by month.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Day">
      <summary>Specifies date time values compared by day.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Hour">
      <summary>Specifies date time values compared by hour.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Minute">
      <summary>Specifies date time values compared by minute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Second">
      <summary>Specifies date time values compared by second.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Direction">
      <summary>Specifies the direction in which to move.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DisplayValueStyle">
      <summary>Represents the display style of a value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayValueStyle.Text">
      <summary>The value displays as general text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayValueStyle.Number">
      <summary>The value displays as number.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayValueStyle.Constant">
      <summary>The value displays as constant.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DupeUnique">
      <summary>Specifies whether duplicate or unique values shoud be displayed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DupeUnique.Duplicate">
      <summary>Display duplicate values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DupeUnique.Unique">
      <summary>Display unique values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.AboveAverage">
      <summary>When the item is serialized out as xml, its value is "aboveAverage".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.BelowAverage">
      <summary>When the item is serialized out as xml, its value is "belowAverage".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Tomorrow">
      <summary>When the item is serialized out as xml, its value is "tomorrow".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Today">
      <summary>When the item is serialized out as xml, its value is "today".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Yesterday">
      <summary>When the item is serialized out as xml, its value is "yesterday".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextWeek">
      <summary>When the item is serialized out as xml, its value is "nextWeek".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisWeek">
      <summary>When the item is serialized out as xml, its value is "thisWeek".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastWeek">
      <summary>When the item is serialized out as xml, its value is "lastWeek".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextMonth">
      <summary>When the item is serialized out as xml, its value is "nextMonth".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisMonth">
      <summary>When the item is serialized out as xml, its value is "thisMonth".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastMonth">
      <summary>When the item is serialized out as xml, its value is "lastMonth".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextQuarter">
      <summary>When the item is serialized out as xml, its value is "nextQuarter".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisQuarter">
      <summary>When the item is serialized out as xml, its value is "thisQuarter".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastQuarter">
      <summary>When the item is serialized out as xml, its value is "lastQuarter".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextYear">
      <summary>When the item is serialized out as xml, its value is "nextYear".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisYear">
      <summary>When the item is serialized out as xml, its value is "thisYear".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastYear">
      <summary>When the item is serialized out as xml, its value is "lastYear".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.YearToDate">
      <summary>When the item is serialized out as xml, its value is "yearToDate".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter1">
      <summary>When the item is serialized out as xml, its value is "Q1".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter2">
      <summary>When the item is serialized out as xml, its value is "Q2".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter3">
      <summary>When the item is serialized out as xml, its value is "Q3".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter4">
      <summary>When the item is serialized out as xml, its value is "Q4".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.February">
      <summary>When the item is serialized out as xml, its value is "M2".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.March">
      <summary>When the item is serialized out as xml, its value is "M3".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.April">
      <summary>When the item is serialized out as xml, its value is "M4".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.May">
      <summary>When the item is serialized out as xml, its value is "M5".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.June">
      <summary>When the item is serialized out as xml, its value is "M6".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.July">
      <summary>When the item is serialized out as xml, its value is "M7".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.August">
      <summary>When the item is serialized out as xml, its value is "M8".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.September">
      <summary>When the item is serialized out as xml, its value is "M9".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.October">
      <summary>When the item is serialized out as xml, its value is "M10".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.November">
      <summary>When the item is serialized out as xml, its value is "M11".</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.December">
      <summary>When the item is serialized out as xml, its value is "M12".</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterDataType">
      <summary>Represents the filter mode which UI should be displayed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterDataType.Text">
      <summary>Display the Text filters.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterDataType.Numeric">
      <summary>Display the Numeric filters.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterDataType.Date">
      <summary>Display the Date filters.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterOptions">
      <summary>Represents the filtering options for querying defined names.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterOptions.WithErrors">
      <summary>Returns defined names which contain <see cref="T:GrapeCity.CalcEngine.CalcError" />.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterOptions.WithoutErrors">
      <summary>Returns defined names which doesn't contain <see cref="T:GrapeCity.CalcEngine.CalcError" />.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterOptions.All">
      <summary>Returns all defined names.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterScopes">
      <summary>Represents the filtering scopes for querying defined names.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterScopes.Worksheet">
      <summary>Returns defined names scoped to worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterScopes.Workbook">
      <summary>Returns defined names scoped to workbook.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterScopes.All">
      <summary>Return all defined names.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FontAttributes">
      <summary>Represents all attributes of a font.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.None">
      <summary>Specifies no attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Bold">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Bold" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Italic">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Italic" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Extend">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Extend" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Condense">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Condense" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Outline">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Outline" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Shadow">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Shadow" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Strikethrough">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Strikethrough" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Style">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Style" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Family">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Family" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.ThemeFont">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.ThemeFont" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Underline">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Underline" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Color">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Size">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Size" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.VerticalAlign">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.VerticalAlign" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.CharSet">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.CharSet" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Name">
      <summary>Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Name" /> attribute.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.All">
      <summary>Specifies all attributes of a font.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FontFamily">
      <summary>The FamilyFont enumeration specifies the font family. Font families describe the look of a font in a general way. They are intended for specifying fonts when the exact typeface desired is not available.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.NotApplicable">
      <summary>The default font is specified, which is implementation-dependent.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Roman">
      <summary>Fonts with variable stroke widths, which are proportional to the actual widths of the glyphs, and which have serifs.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Swiss">
      <summary>Fonts with variable stroke widths, which are proportional to the actual widths of the glyphs, and which do not have serifs.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Modern">
      <summary>Fonts with constant stroke width, with or without serifs. Fixed-width fonts are usually modern.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Script">
      <summary>Fonts designed to look like handwriting.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Decorative">
      <summary>Novelty fonts.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FontStyle">
      <summary>Represents the style of the typeface of a font.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Regular">
      <summary>Specifies normal weight or thickness of the typeface.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Bold">
      <summary>Specifies bold typeface. Bold is a heavier weight or thickness.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Italic">
      <summary>Specifies italic typeface, which produces a noticeable slant to the vertical stems of the characters.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Extend">
      <summary>Specifies a compatibility setting used for previous spreadsheet applications, resulting in special word/character rendering on those legacy applications, when this flag is set. The effect extends or stretches out the text. SpreadsheetML applications are not required to render according to this flag.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Condense">
      <summary>Macintosh compatibility setting. Represents special word/character rendering on Macintosh, when this flag is set. The effect is to condense the text (squeeze it together). SpreadsheetML applications are not required to render according to this flag.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Outline">
      <summary>This element displays only the inner and outer borders of each character. This is very similar to Bold in behavior.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Shadow">
      <summary>Macintosh compatibility setting. Represents special word/character rendering on Macintosh, when this flag is set. The effect is to render a shadow behind, beneath and to the right of the text. SpreadsheetML applications are not required to render according to this flag.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Strikethrough">
      <summary>Specifies strike through, which displays a horizontal line drawn through the middle of the characters.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatColorEnum">
      <summary>Represents all formatted color values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.None">
      <summary>No color indicated.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Black">
      <summary>Indicates a system-defined color that has an ARGB value of #FF000000.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Blue">
      <summary>Indicates a system-defined color that has an ARGB value of #FF0000FF.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Cyan">
      <summary>Indicates a system-defined color that has an ARGB value of #FF00FFFF.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Green">
      <summary>Indicates a system-defined color that has an ARGB value of #FF008000.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Magenta">
      <summary>Indicates a system-defined color that has an ARGB value of #FFFF00FF.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Red">
      <summary>Indicates a system-defined color that has an ARGB value of #FFFF0000.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.White">
      <summary>Indicates a system-defined color that has an ARGB value of #FFFFFFFF.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Yellow">
      <summary>Indicates a system-defined color that has an ARGB value of #FFFFFF00.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color1">
      <summary>Indicates the indexed color 1.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color2">
      <summary>Indicates the indexed color 2.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color3">
      <summary>Indicates the indexed color 3.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color4">
      <summary>Indicates the indexed color 4.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color5">
      <summary>Indicates the indexed color 5.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color6">
      <summary>Indicates the indexed color 6.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color7">
      <summary>Indicates the indexed color 7.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color8">
      <summary>Indicates the indexed color 8.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color9">
      <summary>Indicates the indexed color 9.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color10">
      <summary>Indicates the indexed color 10.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color11">
      <summary>Indicates the indexed color 11.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color12">
      <summary>Indicates the indexed color 12.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color13">
      <summary>Indicates the indexed color 13.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color14">
      <summary>Indicates the indexed color 14.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color15">
      <summary>Indicates the indexed color 15.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color16">
      <summary>Indicates the indexed color 16.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color17">
      <summary>Indicates the indexed color 17.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color18">
      <summary>Indicates the indexed color 18.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color19">
      <summary>Indicates the indexed color 19.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color20">
      <summary>Indicates the indexed color 20.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color21">
      <summary>Indicates the indexed color 21.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color22">
      <summary>Indicates the indexed color 22.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color23">
      <summary>Indicates the indexed color 23.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color24">
      <summary>Indicates the indexed color 24.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color25">
      <summary>Indicates the indexed color 25.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color26">
      <summary>Indicates the indexed color 26.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color27">
      <summary>Indicates the indexed color 27.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color28">
      <summary>Indicates the indexed color 28.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color29">
      <summary>Indicates the indexed color 29.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color30">
      <summary>Indicates the indexed color 30.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color31">
      <summary>Indicates the indexed color 31.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color32">
      <summary>Indicates the indexed color 32.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color33">
      <summary>Indicates the indexed color 33.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color34">
      <summary>Indicates the indexed color 34.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color35">
      <summary>Indicates the indexed color 35.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color36">
      <summary>Indicates the indexed color 36.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color37">
      <summary>Indicates the indexed color 37.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color38">
      <summary>Indicates the indexed color 38.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color39">
      <summary>Indicates the indexed color 39.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color40">
      <summary>Indicates the indexed color 40.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color41">
      <summary>Indicates the indexed color 41.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color42">
      <summary>Indicates the indexed color 42.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color43">
      <summary>Indicates the indexed color 43.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color44">
      <summary>Indicates the indexed color 44.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color45">
      <summary>Indicates the indexed color 45.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color46">
      <summary>Indicates the indexed color 46.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color47">
      <summary>Indicates the indexed color 47.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color48">
      <summary>Indicates the indexed color 48.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color49">
      <summary>Indicates the indexed color 49.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color50">
      <summary>Indicates the indexed color 50.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color51">
      <summary>Indicates the indexed color 51.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color52">
      <summary>Indicates the indexed color 52.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color53">
      <summary>Indicates the indexed color 53.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color54">
      <summary>Indicates the indexed color 54.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color55">
      <summary>Indicates the indexed color 55.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color56">
      <summary>Indicates the indexed color 56.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatConditionOperator">
      <summary>Specifies the operator to use to compare a formula against the value in a cell or, for <see cref="F:GrapeCity.Spreadsheet.FormatConditionOperator.Between" /> and <see cref="F:GrapeCity.Spreadsheet.FormatConditionOperator.NotBetween" /> , to compare two formulas.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Between">
      <summary>The value is between the specified range of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Equal">
      <summary>The value is equal to the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Greater">
      <summary>The value is greater than the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.GreaterEqual">
      <summary>The value is greater than or equal to the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Less">
      <summary>The value is less than the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.LessEqual">
      <summary>The value is less than or equal to the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.NotBetween">
      <summary>The value is not between the specified range of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.NotEqual">
      <summary>The value is not equal to the parameter value.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatConditionType">
      <summary>Specifies whether the conditional format is based on a cell value or an expression.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.AboveAverageCondition">
      <summary>This conditional formatting rule highlights cells that are above or below the average for all values in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.BlanksCondition">
      <summary>This conditional formatting rule highlights cells that are completely blank.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.CellValue">
      <summary>This conditional formatting rule highlights cells base on cell value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.ColorScale">
      <summary>This conditional formatting rule creates a gradated color scale on the cells.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Databar">
      <summary>This conditional formatting rule displays a gradated data bar in the range of cells.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.ErrorsCondition">
      <summary>This conditional formatting rule highlights cells with formula errors.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Expression">
      <summary>This conditional formatting rule contains a formula to evaluate.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.IconSet">
      <summary>This conditional formatting rule applies icons to cells according to their values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.NoBlanksCondition">
      <summary>This conditional formatting rule highlights cells that are not blank.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.NoErrorsCondition">
      <summary>This conditional formatting rule highlights cells without formula errors.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.TextString">
      <summary>This conditional formatting rule highlights cells base on cell text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.TimePeriod">
      <summary>This conditional formatting rule highlights cells containing dates in the specified time period.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Top10">
      <summary>This conditional formatting rule highlights cells whose values fall in the top N or bottom N bracket, as specified.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.UniqueValues">
      <summary>This conditional formatting rule highlights cells that contain unique value or duplicated values in the range.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Custom">
      <summary>This is a customized conditional formatting rule.</summary>
      <remarks>This value is readonly.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatOptions">
      <summary>Represents advanced options for formatting value to text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.None">
      <summary>Indicates that no additional options should be used when formatting a value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.Space">
      <summary>Indicates that the space details information, which is created by '_' symbol, will be returned.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.Editing">
      <summary>Indicates that the value is formatted for editing.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.Date1904">
      <summary>Indicates that the date system used to convert a date from/to a serial value starts since 1/1/1904.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.RepeatChar">
      <summary>Indicates that the repeat character information will be included</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.ExcelCompatible">
      <summary>Indicates that formatting serial numeric value as date will be compatible with Excel.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.GradientType">
      <summary>Type of gradient fill being used, either linear or path.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.GradientType.Linear">
      <summary>This gradient fill is of linear gradient type. Linear gradient type means that the transition from one color to the next is along a line.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.GradientType.Rectangular">
      <summary>This gradient fill is of path gradient type. Rectangular gradient type means the that the boundary of transition from one color to the next is a rectangle, defined by top, bottom, left, and right attributes on the gradientFill element.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.HorizontalAlignment">
      <summary>Enum the horizontal alignment of a cell or object.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.General">
      <summary>Specifies that text is left justified, numbers (including dates and times) are right justified, and logical values are centered.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Left">
      <summary>Spedifies left justification.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Center">
      <summary>Spedifies that the text should be centered.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Right">
      <summary>Spedifies right justification.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Fill">
      <summary>Specifies that the text will be repeated to fill the cell.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Justify">
      <summary>Specifies that text should wrap and be aligned to form straight edges on the left and right, except for the last line which is left justified.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.CenterAcrossSelection">
      <summary>The horizontal alignment is centered across multiple cells.The information about how many cells to span is expressed in the Sheet Part, in the row of the cell in question. For each cell that is spanned in the alignment, a cell element needs to be written out, with the same style Id which references the centerContinuous alignment.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Distributed">
      <summary>Specifies that text should wrap and be aligned to form straight edges on the left and right, including the last line.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeArrows">
      <summary>Indicates a set of three colored arrow icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeArrowsGray">
      <summary>Indicates a set of three gray arrow icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeFlags">
      <summary>Indicates a set of three flag icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeTrafficLights1">
      <summary>Indicates a set of three unrimmed traffic light icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeTrafficLights2">
      <summary>Indicates a set of three rimmed traffic light icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeSigns">
      <summary>Indicates a set of three sign icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeSymbols">
      <summary>Indicates a set of three circled symbol icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeSymbols2">
      <summary>Indicates a set of three uncircled symbol icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourArrows">
      <summary>Indicates a set of four colored arrow icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourArrowsGray">
      <summary>Indicates a set of four gray arrow icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourRedToBlack">
      <summary>Indicates a set of circled icons from red to black.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourRating">
      <summary>Indicates a set of four rating icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourTrafficLights">
      <summary>Indicates a set of four traffic light icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveArrows">
      <summary>Indicates a set of five colored arrow icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveArrowsGray">
      <summary>Indicates a set of five gray arrow icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveRating">
      <summary>Indicates a set of five rating icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveQuarters">
      <summary>Indicates a set of five quarter icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeStars">
      <summary>Indicates a set of three star icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeTriangles">
      <summary>Indicates a set of three triangle icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveBoxes">
      <summary>Indicates a set of five box icons.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.Custom">
      <summary>Indicates a set of custom icons.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ImeMode">
      <summary>Specifies a value that determines the Input Method Editor (IME) status.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.NoControl">
      <summary>IME Mode is not controlled.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.Off">
      <summary>The IME is off. This mode indicates that the IME is off, meaning that the object behaves the same as English entry mode. This setting is valid for Japanese, Simplified Chinese, and Traditional Chinese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.On">
      <summary>The IME is on. This value indicates that the IME is on and characters specific to Chinese or Japanese can be entered. This setting is valid for Japanese, Simplified Chinese, and Traditional Chinese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.Disabled">
      <summary>The IME is disabled. With this setting, the users cannot turn the IME on from the keyboard, and the IME floating window is hidden.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.Hiragana">
      <summary>Hiragana DBC. This setting is valid for the Japanese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.FullKatakana">
      <summary>Katakana DBC. This setting is valid for the Japanese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.HalfKatakana">
      <summary>Katakana SBC. This setting is valid for the Japanese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.FullAlpha">
      <summary>Alphanumeric double-byte characters. This setting is valid for Korean and Japanese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.HalfAlpha">
      <summary>Alphanumeric single-byte characters(SBC). This setting is valid for Korean and Japanese IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.FullHangul">
      <summary>Hangul DBC. This setting is valid for the Korean IME only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.HalfHangul">
      <summary>Hangul SBC. This setting is valid for the Korean IME only.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.InvalidateCategory">
      <summary>Represents which data causes invalidating UI.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.General">
      <summary>Cells should be repainted.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.DataValidation">
      <summary>Elements, related to data validation, should be refreshed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.ConditionalFormatting">
      <summary>Cells should be repainted because of conditional formatting.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.Table">
      <summary>Cells should be repainted because of table.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.Theme">
      <summary>Cells should be repainted because of changing theme.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.AutoFilter">
      <summary>Cells should be repainted because of auto filter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.MergedCells">
      <summary>Cells should be repainted because of MergedCell</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.Layout">
      <summary>The layout should be re-calculated.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.TabStrip">
      <summary>The tabstrip should be recalculated.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.Data">
      <summary>Cell value is changed</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.LanguagePackage">
      <summary>LanguagePackage is changed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.Axis">
      <summary>The axis is changed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InvalidateCategory.DiagonalLine">
      <summary>Layout of diagonalLine should be re-calculated.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ManipulationOptions">
      <summary>Indicates which data type will be performed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Values">
      <summary>Manipulate with cell values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Formulas">
      <summary>Manipulate with cell formulas.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Contents">
      <summary>Manipulate with cell values and formulas.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Comments">
      <summary>Manipulate with comments.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Formatting">
      <summary>Manipulate with formatting. This option includes the <see cref="F:GrapeCity.Spreadsheet.ManipulationOptions.NumberFormats" /> option.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.NumberFormats">
      <summary>Manipulate with number formats.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.ConditionalFormatting">
      <summary>Manipulate with conditional formatting.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Formats">
      <summary>Manipulate with formatting and number formats.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.All">
      <summary>Manipulate with all data.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Operator">
      <summary>Represents the comparison operator.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.BeginsWith">
      <summary>The value contains the specified text at the beginning.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.Between">
      <summary>The value is between the specified range of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.ContainsText">
      <summary>The value contains the specified text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.EndsWith">
      <summary>The value contains the specified text at the end.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.Equal">
      <summary>The value is equal to the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.GreaterThan">
      <summary>The value is greater than the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.GreaterThanOrEqual">
      <summary>The value is greater than or equal to the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.LessThan">
      <summary>The value is less than the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.LessThanOrEqual">
      <summary>The value is less than or equal to the parameter value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.NotBetween">
      <summary>The value is not between the specified range of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.DoesNotContainsText">
      <summary>The value does not contain the specified text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.DoesNotEqual">
      <summary>The value is not equal to the parameter value.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.PageBreak">
      <summary>Specifies page break location in the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PageBreak.None">
      <summary>Page breaks are not inserted in the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PageBreak.Manual">
      <summary>Page breaks are manually inserted.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PageBreak.Invalid">
      <summary>The page break is unavailable in the current context.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.PatternType">
      <summary>Represent tie Fill pattern type.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.None">
      <summary>None</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Solid">
      <summary>Solid</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.MediumGray">
      <summary>50% gray</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkGray">
      <summary>75% gray</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightGray">
      <summary>25% gray</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkHorizontal">
      <summary>Horizontal stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkVertical">
      <summary>Vertical stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkDown">
      <summary>Reverse diagonal stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkUp">
      <summary>Diagonal stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkGrid">
      <summary>Diagonal crosshatch</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkTrellis">
      <summary>Thick Diagonal crosshatch</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightHorizontal">
      <summary>Thin horizontal stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightVertical">
      <summary>Thin vertical stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightDown">
      <summary>Thin reverse diagonal stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightUp">
      <summary>Thin diagonal stripe</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightGrid">
      <summary>Thin horizontal crosshatch</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightTrellis">
      <summary>Thin diagonal crosshatch</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Gray125">
      <summary>The fill style is grayscale of 0.125 (1/8) value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Gray0625">
      <summary>The fill style is grayscale of 0.0625 (1/16) value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Automatic">
      <summary>The pattern is controlled automatically.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LinearGradient">
      <summary>The linear gradient</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.RectangularGradient">
      <summary>The rectangular gradient</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ProtectionMode">
      <summary>Represents the protection type of the workbook or worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ProtectionMode.Protected">
      <summary>The object is protected without password.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ProtectionMode.PasswordProtected">
      <summary>The object is protected by password.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ProtectionMode.None">
      <summary>The object is not protected.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ReferenceStyle">
      <summary>Specifies the reference style in formulas and custom names in the sheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ReferenceStyle.A1">
      <summary>Uses letters and numbers for column and row coordinates; uses dollar sign ($) for absolute coordinates</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1">
      <summary>Uses "R" and number for row, "C" and number for column coordinates; uses brackets [ ] for relative coordinates</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SheetViewType">
      <summary>Represents the view type of a <see cref="T:GrapeCity.Spreadsheet.ISheetView" />.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetViewType.Normal">
      <summary>Normal View</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetViewType.PageBreakPreview">
      <summary>Page Break Preview</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetViewType.PageLayout">
      <summary>Page Layout View</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SheetVisibility">
      <summary>Specifies whether the worksheet is visible.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetVisibility.Visible">
      <summary>Displays the sheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetVisibility.Hidden">
      <summary>Hides the worksheet which the user can unhide via menu.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetVisibility.VeryHidden">
      <summary>Hides the object so that the only way for you to make it visible again is by setting this property to <see cref="F:GrapeCity.Spreadsheet.SheetVisibility.Visible" /> (the user cannot make the object visible).</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortDataOption">
      <summary>Specifies how to sort text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortDataOption.Normal">
      <summary>Sorts numeric and text data separately.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortDataOption.TextAsNumbers">
      <summary>Treat text as numeric data for the sort.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortMethod">
      <summary>Specifies the sort method for Chinese languages.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortMethod.PinYin">
      <summary>Phonetic Chinese sort order for characters.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortMethod.Stroke">
      <summary>Sort by the quantity of strokes in each character.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortOn">
      <summary>Represents which data will be sorted.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.Value">
      <summary>Sort by cell value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.CellColor">
      <summary>Sort by cell color.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.FontColor">
      <summary>Sort by font color.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.Icon">
      <summary>Sort by icon.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortOrder">
      <summary>Represents whether to sort in ascending order or descending order.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrder.Ascending">
      <summary>Specifies ascending order.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrder.Descending">
      <summary>Specifies descending order.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortOrientation">
      <summary>Represents the sort orientation.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrientation.Rows">
      <summary>Sorts by row.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrientation.Columns">
      <summary>Sorts by column.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SummaryColumn">
      <summary>Specifies the location of the summary columns in the outline.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryColumn.Left">
      <summary>The summary column will be positioned to the left of the detail columns in the outline.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryColumn.Right">
      <summary>The summary column will be positioned to the right of the detail columns in the outline.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SummaryRow">
      <summary>Specifies the location of the summary rows in the outline.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryRow.Above">
      <summary>The summary row will be positioned above the detail rows in the outline.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryRow.Below">
      <summary>The summary row will be positioned below the detail rows in the outline.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableStyleElementType">
      <summary>Represents the table style element's type.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.None">
      <summary>Indicates that there is no style applied.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.FirstColumn">
      <summary>Indicates whether the first column in the table should have the style applied.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.LastColumn">
      <summary>Indicates whether the last column in the table should have the style applied.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.ColumnStripes">
      <summary>Indicates whether column stripe formatting is applied.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.RowStripes">
      <summary>Indicates whether row stripe formatting is applied.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextReadingOrder.Context">
      <summary>Reading order is determined by scanning the text for the first non-whitespace character: if it is a strong right-to-left character, the reading order is right-to-left; otherwise, the reading order left-to-right.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextReadingOrder.LeftToRight">
      <summary>Reading order is left-to-right in the cell, as in English.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextReadingOrder.RightToLeft">
      <summary>Reading order is right-to-left in the cell, as in Hebrew.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ThemeFont">
      <summary>Represents the theme font within the theme. The theme font consists of a pair of major and minor fonts for which to used in a document.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ThemeFont.None">
      <summary>Do not use any theme font.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ThemeFont.Major">
      <summary>Major Font.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ThemeFont.Minor">
      <summary>Minor Font.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TimePeriods">
      <summary>Represents a time period which is used in date conditions.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Last7Days">
      <summary>A date in the last seven days.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.LastMonth">
      <summary>A date occuring in the last calendar month.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.LastWeek">
      <summary>A date occuring last week.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.NextMonth">
      <summary>A date occuring in the next calendar month.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.NextWeek">
      <summary>A date occuring next week.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.ThisMonth">
      <summary>A date occuring in this calendar month.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.ThisWeek">
      <summary>A date occuring this week.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Today">
      <summary>Today's date.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Tomorrow">
      <summary>Tomorrow's date.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Yesterday">
      <summary>Yesterday's date.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TopBottom">
      <summary>Specifies the top 10 values from the top or bottom of a series of values.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TopBottom.Top10Bottom">
      <summary>Top 10 bottom values</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TopBottom.Top10Top">
      <summary>Top 10 values</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TotalsCalculation">
      <summary>An enumeration that specifies what function is used to aggregate the data in a column before it is displayed in the totals row.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.None">
      <summary>No total row.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Custom">
      <summary>Represents the custom formula.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Average">
      <summary>Represents the arithmetic mean.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Count">
      <summary>Represents a count of the number of non-empty cells.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.CountNumbers">
      <summary>Represents the number of cells that contains numbers.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Max">
      <summary>Represents the largest value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Min">
      <summary>Represents the smallest value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.StdDev">
      <summary>Represents the estimated standard deviation.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Sum">
      <summary>Represents the arithmetic sum.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Var">
      <summary>Represents the estimated variance.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UnderlineStyle">
      <summary>Specifies the underline style of text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.None">
      <summary>Specifies that text is not underlined.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.Single">
      <summary>Specifies that text has a single underline.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.Double">
      <summary>Specifies that text has a double underline.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.SingleAccounting">
      <summary>Specifies that text has a single accounting underline, causing an entire cell to be underlined rather than just the cell text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.DoubleAccounting">
      <summary>Specifies that text has a double accounting underline, causing an entire cell to be underlined rather than just the cell text.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UpdateLinks">
      <summary>Specifies a workbook's setting for updating embedded links.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UpdateLinks.UserSetting">
      <summary>Embedded links are updated according to the user's settings for the specified workbook.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UpdateLinks.Never">
      <summary>Embedded links are never updated for the specified workbook.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UpdateLinks.Always">
      <summary>Embedded links are always updated for the specified workbook.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.VerticalAlignment">
      <summary>Specifies the vertical alignment of text.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Top">
      <summary>Specifies that text is placed at the top.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Center">
      <summary>Specifies that text is vertically centered.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Bottom">
      <summary>Specifies that text is placed at the bottom.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Justify">
      <summary>Specifies that rotated text is vertically justified.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Distributed">
      <summary>Specifies that rotated text should wrap and be aligned to form straight edges on the left and right, including the last line.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorkbookLocks">
      <summary>Represent protected data of the workbook.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.None">
      <summary>Protect nothing.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.Structure">
      <summary>Protect the structure of the workbook (the relative position of the sheets).</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.Windows">
      <summary>Protect the workbook windows.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.All">
      <summary>Protect all data.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetLocks">
      <summary>Represents protected data of the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.None">
      <summary>Protect nothing.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.DrawingObjects">
      <summary>Protect shapes.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Scenarios">
      <summary>Protect scenarios. This argument is valid only for worksheets.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.FormatCells">
      <summary>Not allows the user to format any cell on a protected worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.FormatColumns">
      <summary>Not allows the user to format any column on a protected worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.FormatRows">
      <summary>Not allows the user to format any row on a protected.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.InsertColumns">
      <summary>Not allows the user to insert columns on the protected worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.InsertRows">
      <summary>Not allows the user to insert rows on the protected worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.InsertHyperlinks">
      <summary>Not allows the user to insert hyperlinks on the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.DeleteColumns">
      <summary>Not allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.DeleteRows">
      <summary>Not allows the user to delete rows on the protected worksheet, where every cell in the row to be deleted is unlocked.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.SelectLockedCells">
      <summary>Not allows the user to select locked cells.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Sort">
      <summary>Not allows the user to sort on the protected worksheet. Every cell in the sort range must be unlocked or unprotected.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.AutoFilter">
      <summary>Not allows the user to set filters on the protected worksheet. Users can change filter criteria but can not enable or disable an auto filter. Users can set filters on an existing auto filter.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.PivotTables">
      <summary>Not allows the user to use pivot table reports on the protected worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.SelectUnlockedCells">
      <summary>Not allows the user to select unlocked cells.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Default">
      <summary>The default lock options</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.All">
      <summary>All lock options</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetType">
      <summary>Specifies the worksheet type.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.Worksheet">
      <summary>Worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.Chart">
      <summary>Chart.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.DialogSheet">
      <summary>Dialog sheet.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.YesNoCancel">
      <summary>Represents the choice to perform an action.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoCancel.Yes">
      <summary>The action will be performed regardless of any condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoCancel.No">
      <summary>The action is performed partly that don't violate any condition.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoCancel.Cancel">
      <summary>The action is performed if all conditions are satisfied.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.YesNoGuess">
      <summary>Specifies whether or not the first row contains headers.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoGuess.Guess">
      <summary>Determines whether there is a header.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoGuess.Yes">
      <summary>The first row is the header.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoGuess.No">
      <summary>There is no header.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier">
      <summary>Represents a modifier allow other product modify extend data of NumberFormat This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier" /> class.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.StyleExtendDataModifier">
      <summary>Represents a modifier which allow other products modify the extended data of style This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.StyleExtendDataModifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.API.StyleExtendDataModifier" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.StyleExtendDataModifier.Modify(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>Use current data to modify compositeExtendData</summary>
      <param name="compositeExtendData">This will be change by data of current modifier</param>
      <returns>The edited compositeExtendData</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.StyleModifier">
      <summary>Represents a style modifier which manipulate some part of style (font, fill, border...) This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.StyleModifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.API.StyleModifier" /> class.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.AutoSumCommand">
      <summary>Represents a command that detects ranges of cells to auto fills SUM or SUBTOTAL function at appropriate location This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.AutoSumCommand" /> class.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.Execute(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>Executes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.SaveUndoStateCore">
      <summary>Saves the state of the undo.</summary>
      <remarks>This function is for internal function that the command wrap a public function of Spread.Common. When the action implement its own logic, it should use BeforeExecute to save undo state data.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand">
      <summary>Represents a command that copies ranges of cells</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand" /> class.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand" /> class.</summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.UndoSupport">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.UndoSupport" /> value indicates whether this command is undoable.</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.Execute(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>Executes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.SaveUndoStateCore">
      <summary>Saves state for undo</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand">
      <summary>Represents a command that cut ranges of cells This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand" /> class.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand" /> class.</summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand.UndoSupport">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand.UndoSupport" /> value indicates whether this command is undoable.</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCutCommand.Execute(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>Executes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand">
      <summary>Represents a command that paste to ranges of cells This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand" /> class.</summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.UndoSupport">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.UndoSupport" /> value indicates whether this command is undoable.</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.Execute(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>Executes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.SaveUndoStateCore">
      <summary>Saves state for undo</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.Command">
      <summary>Represents an abstract command. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.Command" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.#ctor(GrapeCity.Spreadsheet.Workbook)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.Command" /> class with the specified workbook.</summary>
      <param name="workbook">The workbook which this command attached to.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.Command.UndoSupport">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.Command.UndoSupport" /> value indicates whether this command is undoable.</summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.Command.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Execute(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>Executes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.OnException(System.Exception)">
      <summary>Called when the exception occurs.</summary>
      <param name="exception">The exception is thrown by executing this command.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.OnException(System.String)">
      <summary>Called when the exception occurs.</summary>
      <param name="exception">The exception is thrown by executing this command.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Undo">
      <summary>Undoes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandManager.IsUndoSupported">
      <summary>Gets a value indicating whether the executing a command can be undoable.</summary>
      <value>
        <c>true</c> if the executing a command can be undoable; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandManager.Limit">
      <summary>Gets or sets the maximum number of undoable commands which are retained by the <see cref="T:GrapeCity.Spreadsheet.Commands.CommandManager" />.</summary>
      <value>The limit.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.CanRedo">
      <summary>Determines whether there is an available command for redoing.</summary>
      <returns>
        <c>true</c> if there is an available command for redoing; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.CanUndo">
      <summary>Determines whether there is an available command for undoing.</summary>
      <returns>
        <c>true</c> if there is an available command for undoing; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Execute(GrapeCity.Spreadsheet.Commands.Command)">
      <summary>Executes the specified command.</summary>
      <param name="command">The command to be executed.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> struct which contains information about the execution of action.</returns>
      <remarks>If the command is no longer belong to the undo or redo list, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Redo">
      <summary>Redo the last undone command.</summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> struct which contains information about the execution of action.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Undo">
      <summary>Undo the last executed command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.MultiRangeCommand">
      <summary>Represents a command that executes against multiple ranges of cells. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.MultiRangeCommand" /> class.</summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[])">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.MultiRangeCommand" /> class.</summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.Item(System.Int32)">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.Reference" /> object at specified index</summary>
      <param name="index" />
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.SelectionCount">
      <summary>Gets the total count of selected ranges</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.PasteCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.PasteCommand" /> class.</summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of range to move.</param>
      <param name="column">Column index of starting position of range to move.</param>
      <param name="row2">Row index of ending position of range to move.</param>
      <param name="column2">Column index of ending position of range to move.</param>
      <param name="targetWorksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet copied to.</param>
      <param name="toRow">Row index of starting position of destination.</param>
      <param name="toColumn">Column index of starting position of destination.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.PasteCommand.Execute(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>Executes this command.</summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.PasteCommand.SaveUndoStateCore">
      <summary>Saves the state of the undo.</summary>
      <remarks>This function is for internal function that the command wrap a public function of Spread.Common. When the action implement its own logic, it should use BeforeExecute to save undo state data.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RangeCommand">
      <summary>Represents a command that executes against a range of cells. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RangeCommand" /> class.</summary>
      <param name="worksheet">The processing <see cref="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Column">
      <summary>Gets the left column index of cell range.</summary>
      <value>An integer value indicates the left column index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Column2">
      <summary>Gets the right column index of cell range.</summary>
      <value>An integer value indicates the right column index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.ColumnCount">
      <summary>Gets the total column count of cell range.</summary>
      <value>An integer value indicates the total column count of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Row">
      <summary>Gets the top row index of cell range.</summary>
      <value>An integer value indicates the top row index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Row2">
      <summary>Gets the bottom row index of cell range.</summary>
      <value>An integer value indicates the bottom row index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.RowCount">
      <summary>Gets the total row count of cell range.</summary>
      <value>An integer value indicates the total row count of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Worksheet">
      <summary>Gets the processing worksheet object.</summary>
      <value>The processing <see cref="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Worksheet" /> object.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CommandResult">
      <summary>Represents the executing result of an command.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.CellValue">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.CommandResult.CellValue" /> object that is returned by an action</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.CommandAction">
      <summary>Gets a value indicating the action that should be handled after the command is executed, doesn't matter successsful or not.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.CustomData">
      <summary>Gets the custom <see cref="T:System.Object" /> that is returned by an action</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.SelectionLength">
      <summary>Gets the length of selections that were modified by command</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.Success">
      <summary>Gets a value indicating whether the command is executed successful.</summary>
      <value>
        <c>true</c> if the command is executed successful; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandResult.GetSelection(System.Int32)">
      <summary>Gets modified selection at specified index</summary>
      <param name="index">An int value indicates the index of selection</param>
      <returns>
        <see cref="F:GrapeCity.Spreadsheet.Reference.Empty" /> if index is invalid, otherwise, an <see cref="T:GrapeCity.Spreadsheet.Reference" /> object that represents the selection</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CommandActions">
      <summary>Represents the action that should be peformed after the execution of a command</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.None">
      <summary>Do nothing</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.Edit">
      <summary>Start editing mode</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.Select">
      <summary>Select a range</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.UndoSupport">
      <summary>Represents the type of undo support for a command.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.UndoSupport.None">
      <summary>Undo is not supported. Undo and redo queue are cleared after the command is executed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.UndoSupport.Supported">
      <summary>Undo is supported. Redo queue are cleared after the command is executed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.UndoSupport.Ignore">
      <summary>Undo is not supported. Undo and redo queue are remained intact.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObject.ReferenceCount">
      <summary>Gets the total number of references.</summary>
      <value>An integer value represents the total number of references.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObject.GetReference(System.Int32)">
      <summary>Gets the range reference at the specified index.</summary>
      <param name="index">An integer value indicates the reference index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the reference at the specified index.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3">
      <summary>Represents the conditional objects associated with the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />. This class is <see langword="abstract" /> and so cannot be instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.Spreadsheet.Reference,`0,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell range to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.CalcEngine.RangeReference,`0,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell range to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.Spreadsheet.Reference[],`0,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell ranges.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell ranges to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.CalcEngine.RangeReference[],`0,System.Boolean)">
      <summary>Applies new <see cref="!:TItem" /> item for the specified cell ranges.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell ranges to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Clear">
      <summary>Deletes all conditional objects.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Deletes all conditional objects in the specified range reference.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Clear(GrapeCity.Spreadsheet.Reference[])">
      <summary>Deletes all conditional objects in the specified range references.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the cell range to clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.DumpConditions(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Gets all conditions which belong to the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of the cell range.</param>
      <param name="column">An integer value indicates the left column index of the cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of the cell range.</param>
      <param name="column2">An integer value indicates the right column index of the cell range.</param>
      <returns>An array of <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition" /> represents all conditions of the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Execute(System.Int32,System.Int32,System.Object)">
      <summary>Gets the affected result after applied all <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rules in the specified cell.</summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="contextData">The context data which is used as replacement of cell value to execute.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfExecutedResult" /> value represents the the affected result after applied all rules.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.Spreadsheet.Reference@)">
      <summary>Finds the conditional object which covers the specified range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value indicates the specified range.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.CalcEngine.RangeReference@)">
      <summary>Finds the conditional object which covers the specified range.</summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value indicates the specified range.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.Spreadsheet.Reference[])">
      <summary>Finds the conditional object which covers the specified ranges.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> values indicates the specified ranges.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.CalcEngine.RangeReference[])">
      <summary>Finds the conditional object which covers the specified ranges.</summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> values indicates the specified ranges.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.GetFilteringMask(System.Object,System.Object@)">
      <summary>Gets the value from <paramref name="contextData" /> to process.</summary>
      <param name="contextData">An <see cref="T:System.Object" /> instance indicates the context data.</param>
      <param name="validatedValue">An <see cref="T:System.Object" /> instance represents the validated value.</param>
      <returns>An integer value represents the mask to filter splittable items.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem.Apply(GrapeCity.Spreadsheet.Conditional.MatchData@,`2@)">
      <summary>Applies settings of this matched item to the specified <see cref="!:TExecutedResult" /> value.</summary>
      <param name="matchingData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the matching data.</param>
      <param name="result">A <see cref="!:TExecutedResult" /> value indicates the executed result.</param>
      <returns>
        <c>true</c> if other next items should be stopped executing, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem.Clone">
      <summary>Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" nolink="true" /> instance.</summary>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" nolink="true" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalObject.Delete">
      <summary>Removes this <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from its owner <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalObject.Remove">
      <summary>Removes this <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from its owner <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</summary>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition.Container">
      <summary>Gets the container object which contains the specified item by this <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition" />.</summary>
      <value>A <see cref="!:TObject" /> object represents the container.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition.Item">
      <summary>Gets the <see cref="!:TItem" /> object.</summary>
      <value>A <see cref="!:TItem" /> object represents the splittable item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition.References">
      <summary>Gets the range over which the conditional formatting rule apply.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> array indicates the range over which the conditional formatting rule apply.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.CellRawValue">
      <summary>Gets an <see cref="T:System.Object" /> instance represents the origin cell value.</summary>
      <value>An <see cref="T:System.Object" /> instance represents the origin value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.CellValue">
      <summary>Gets an <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the cell value.</summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the cell value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.EvaluationContext">
      <summary>Gets The evaluation context.</summary>
      <value>The evaluation context.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.Worksheet">
      <summary>Gets the context worksheet.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Conditional.MatchData.Worksheet" /> object indicates the context worksheet.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.MatchData.GetLightweightValue(System.Int32)">
      <summary>Gets the corresponding expression cell view of the specified conditional formatting value.</summary>
      <param name="valueIndex">An integer value indicates the index of conditional formatting value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> object represents the expression cell view.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.DataManager">
      <summary>Represents the data source of a worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Data.DataManager" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Data.DataManager" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.AutoGenerateColumns">
      <summary>Gets or sets whether to generate the columns automatically based on the data source.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.ColumnCount">
      <summary>Gets the number of rows in the data source.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.DataMember">
      <summary>Gets or sets the data member (table name) to use for data.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.DataSource">
      <summary>Gets or sets the data source.</summary>
      <exception cref="T:System.ArgumentException">Data source is empty</exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.ItemType">
      <summary>Gets or sets the type of the object in the list for the list data source.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.RowCount">
      <summary>Gets the number of rows in the data source.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.UnBoundNewRowIndex">
      <summary>Gets or sets the index of the unbound new row.</summary>
      <value>The index of the unbound new row.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>Adds the unbound row to the data source.</summary>
      <param name="row">Row index at which to add a row</param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.AddUnboundRows(System.Int32,System.Int32)">
      <summary>Adds unbound rows to the data model.</summary>
      <param name="row">Row index at which to add the new rows</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetDataColumnCaption(System.Int32)">
      <summary>Gets the column caption at the specified position.</summary>
      <param name="column">Column index for which caption is requested</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetDataColumnName(System.Int32)">
      <summary>Gets the column name at the specified position.</summary>
      <param name="column">Column index for which name is requested</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetDataColumnType(System.Int32)">
      <summary>Gets the column data type at the specified position.</summary>
      <param name="column">Column index for which type is requested</param>
      <exception cref="T:System.IndexOutOfRangeException"> Specified index is out of range; must be between 0 and the total number of columns </exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetDataSourceColumn(System.Int32)">
      <summary>Gets the data source column index for the specified column in the model.</summary>
      <param name="column">Index of the column in the model</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetDataView(System.Boolean)">
      <summary>Gets the DataView object associated with this model.</summary>
      <param name="create">Whether to recreate the DataView</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetListSource">
      <summary>Returns the IList data source for this model or null if the data source is not an IList.</summary>
      <returns>IList object</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>Gets the value of the cell for the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="cellValue" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetValue(System.Int32,System.Int32)">
      <summary>Gets the value of the cell for the specified row and column.</summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.Init">
      <summary>Gets the number of the child data relations for a hierarchical display of data.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.SetModelDataColumn(System.Int32,System.Int32)">
      <summary>Binds a model column to a specified data source column.</summary>
      <param name="column">Index of column in the model</param>
      <param name="columnName">Name of the data source column</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.SetModelDataColumn(System.Int32,System.String)">
      <summary>Binds a model column to a specified data source column.</summary>
      <param name="column">Index of column in the model</param>
      <param name="columnName">Name of the data source column</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Extensions.StyleExtensions">
      <summary>Represents extension functions for style. This is a <see langword="static class" /> and so cannot be inherited or instantiated.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Creates the path gradient fill.</summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1). For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1). For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1). For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1). For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>Creates the path gradient fill.</summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1). For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1). For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1). For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1). For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>Creates the linear gradient fill.</summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>Creates the linear gradient fill.</summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>Creates the gradient fill.</summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="gradientFillEffect">A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value indicates the gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.FileFormat">
      <summary>Specifies the file format when saving the workbook.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.FileFormat.OpenXMLWorkbook">
      <summary>Open XML Workbook (*.xlsx)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.FileFormat.OpenXMLWorkbookMacroEnabled">
      <summary>Open XML Workbook Macro Enabled (*.xlsm)</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures">
      <summary>Represents all identifiers of built-in types. This is a <see langword="static class" /> and so cannot be inherited or instantiated.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.BorderExtension">
      <summary>Represents the GUID identifier of the extension of border. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.CellDataExtension">
      <summary>Represents the GUID identifier of the extension of cell data. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.CellFormatExtension">
      <summary>Represents the GUID identifier of the extension of cell format. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.NumberFormatExtension">
      <summary>Represents the GUID identifier of the extension of number format. This field is read-only.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.SpreadDesktopExtension">
      <summary>Represents the GUID identifier of all general extensions from Spread desktop product. This field is read-only.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1">
      <summary>Enable an object to participate in custom behavior, such as registering for events, or watching state transitions.</summary>
      <typeparam name="T">The type of the extensible class.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1.Extensions">
      <summary>Gets a collection of extension objects for this extensible object.</summary>
      <value>A <see cref="!:IExtensionCollection&lt;IExtension&lt;T&gt;&gt;" /> of extensible objects.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1.CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1">
      <summary>Enables an object to extend another object through aggregation.</summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.Key">
      <summary>Gets the indentifier of the extension.</summary>
      <value>A <see cref="T:System.Guid" /> value represents the extension's identifier.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.Attach(`0)">
      <summary>Enables an extension object to find out when it has been aggregated. Called when the extension is added to the <see cref="!:IExtensionObject&lt;T&gt;.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.Detach(`0)">
      <summary>Enables an object to find out when it is no longer aggregated. Called when an extension is removed from the <see cref="!:IExtensionObject&lt;T&gt;.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{`0},System.Guid)">
      <summary>Exports the extension data.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.ImportExtensionData(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{`0},System.Guid)">
      <summary>Imports the extension data.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Gets a value indicating whether the extension requires to export its data.</summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1">
      <summary>A collection of the <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> objects that allow for retrieving the <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" nolink="true" /> by its type.</summary>
      <typeparam name="T">The type of the extension objects.</typeparam>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.Add(System.Guid,GrapeCity.Spreadsheet.IO.Exchangeable.IExtension{`0})">
      <summary>Adds an object to the end of the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</summary>
      <param name="key">The GUID key of the item.</param>
      <param name="item">The object to add to the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.Find``1">
      <summary>Finds the specified extension object in the collection.</summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <returns>The extension object that was found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.Find``1(System.Guid)">
      <summary>Finds the specified extension object in the collection.</summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <param name="key">The GUID key of the item.</param>
      <returns>The extension object that was found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.FindAll``1">
      <summary>Finds all extension object in the collection specified by E.</summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <returns>A collection of all extension objects in the collection that implement the specified type.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.CT_DataIntegrity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.CT_DataIntegrity" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.CT_Encryption.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.CT_Encryption" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.CT_KeyData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.CT_KeyData" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.CT_KeyEncryptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.CT_KeyEncryptor" /> class.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.CT_PasswordKeyEncryptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.CT_PasswordKeyEncryptor" /> class.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext">
      <summary>Represents the export context.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.CustomData">
      <summary>Gets or sets the custom data for the export context object.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.GetCellExporter">
      <summary>Gets the data converter which convert custom data to OpenXML-compatible data.</summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter" /> value represents the data converter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.GetDataConverter``1">
      <summary>Gets the data converter which convert custom data in extensible object to OpenXML-compatible data.</summary>
      <typeparam name="T">Represents the type of data to convert.</typeparam>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1" /> value represents the data converter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.#ctor(GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter,System.Func{System.String})">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> class.</summary>
      <param name="unitConverter">The unit converter which converts measurement values.</param>
      <param name="passwordRequestDelegate">The password request delegate which will be called if the document is protected.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.CustomData">
      <summary>Gets or sets the custom data for the import context object.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.FunctionResolver">
      <summary>Gets or sets the function resolver.</summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IFunctionResolver" /> object represents the function resolver.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.Options">
      <summary>Gets or sets an <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions" /> value indicates options for importing process.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.UnitConverter">
      <summary>Gets the unit converter which converts measurement values.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.UnitConverter" /> object represents the unit converter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.FinalizeImporting">
      <summary>Allows the caller to try to free resources and perform other cleanup operations before the importing process finished.</summary>
      <param name="workbook">A <see cref="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.Workbook" /> object indicates the imported workbook.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.OpenXmlHelper.ReadAttributeAsBoolean(System.Xml.XmlReader)">
      <summary>Reads the boolean value from <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.OpenXmlHelper.WriteObject(System.Xml.XmlWriter,System.String,System.Object)">
      <summary>Serializes the specified object to XML text.</summary>
      <param name="obj">The object to serialize.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter">
      <summary>Represents a measurement unit converter.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter" /> class.</summary>
      <param name="dpi">An integer value indicates the current DPI.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)">
      <summary>Converts a measurement from centimeters to points (1 cm = 28.35 points)</summary>
      <param name="centimeters">The value to be converted to points.</param>
      <returns>A double value represents the corresponding points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)">
      <summary>Converts a measurement from inches to points (1 inch = 72 points).</summary>
      <param name="centimeters">The value to be converted to points.</param>
      <returns>A double value represents the corresponding points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToCharacters(System.Int32)">
      <summary>Converts a measurement from pixels to character widths.</summary>
      <param name="pixel">The pixel value to be converted to character widths.</param>
      <returns>A double value represents the corresponding number of character widths.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToPoints(System.Int32)">
      <summary>Converts a measurement from pixels to points.</summary>
      <param name="pixel">The pixel value to be converted to points.</param>
      <returns>A double value represents the corresponding number of points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PointsToCentimeters(System.Double)">
      <summary>Converts a measurement from points to centimeters (1 cm = 28.35 points)</summary>
      <param name="points">The value to be converted to centimeters.</param>
      <returns>A double value represents the corresponding centimeters.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PointsToInches(System.Double)">
      <summary>Converts a measurement from points to inches (1 inch = 72 points).</summary>
      <param name="centimeters">The value to be converted to inches.</param>
      <returns>A double value represents the corresponding inches.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PointsToPixels(System.Double)">
      <summary>Converts a measurement from points to pixels.</summary>
      <param name="point">The point value to be converted to pixels.</param>
      <returns>A integer value represents the corresponding number of pixels.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension">
      <summary>Represents an extension from extension list in Excel file.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult">
      <summary>Represents the result of opening file.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Failed">
      <summary>Represents a general error. This field is read-only.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Reason">
      <summary>Gets the <see cref="P:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Reason" /> value which indicates the state of the action.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Workbook">
      <summary>Gets the opened workbook.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter">
      <summary>Represents an interface which allows to customize exporting cell value to OpenXml format.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter.Worksheet">
      <summary>Gets or sets a <see cref="P:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter.Worksheet" /> object indicates the exporting worksheet.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter.CustomizeExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,System.Int32,System.Int32,System.Object,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>Converts the specified value to the corresponding OpenXml data type.</summary>
      <param name="context">An bool value indicates the customize export is exchangeable flag</param>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value indicates the custom data.</param>
      <param name="result">A <see cref="T:GrapeCity.CalcEngine.PrimitiveValue" /> value to store the converted data.</param>
      <returns>
        <c>true</c> if the specified value can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1">
      <summary>Represents an interface which allows custom data in extensible object can export to OpenXml format.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1.CanConvert(`0@)">
      <summary>Determines whether this data converter can convert the specified data.</summary>
      <param name="data">A <see cref="!:&lt;T&gt;" /> instance indicates the data to convert.</param>
      <returns>
        <c>true</c> if this data converter can convert the specified data; otherwise, <c>false</c>.</returns>
      <remarks>Data is passed as reference to improve performance. The data convert should not change its value.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1.Convert(`0@)">
      <summary>Converts the specified data to OpenXML-compatible data.</summary>
      <param name="data">A <see cref="!:&lt;T&gt;" /> instance indicates the data to convert.</param>
      <returns>A <see cref="!:T" /> value represents the converted OpenXML-compatible data.</returns>
      <remarks>Data is passed as reference to improve performance. The data convert should not change its value.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1">
      <summary>Represents an interface which allows custom data in extensible object can export to OpenXml format.</summary>
      <typeparam name="T">The type of custom data type.</typeparam>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.CanExport">
      <summary>Determines whether this object can be exported to OpenXml format.</summary>
      <returns>
        <c>true</c> if this object can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.CanImport">
      <summary>Determines whether this object can import from OpenXml format.</summary>
      <returns>
        <c>true</c> if this object can import from OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.Export(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>Exports this object to the specified writer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.Import(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>Imports data of <see cref="!:T" /> from the specified reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="!:T" /> object represents the imported object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions">
      <summary>Represents options for exporting.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.ColumnHeader">
      <summary>Indicates that the column header will be exported as top rows of the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.RowHeader">
      <summary>Indicates that the row header will be exported as left columns of the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.DataOnly">
      <summary>Indicates that only cell values are exported.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.NoFormulas">
      <summary>Indicates that cell formulas aren't exported.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.SaveAsFiltered">
      <summary>Saves the results of rows after filtering them to the Excel-compatible file.</summary>
      <remarks>This flag is available when worksheet filter isn't range filter only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.Exchangeable">
      <summary>Spread data will be saved as extension of OpenXML file format.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.ColumnFooter">
      <summary>Indicates that the column footer will be exported as bottom rows of the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.ExternalReference">
      <summary>Indicates that the saved file will be used for external references to the workbook.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.Lossless">
      <summary>Indicates that if data of Spread cannot be understand by Excel, it'll be exported to extension list.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.Default">
      <summary>The default export options</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions">
      <summary>Represents options for importing process.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.ColumnHeader">
      <summary>Indicates that the column header will be exported as top rows of the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.RowHeader">
      <summary>Indicates that the row header will be exported as left columns of the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.DataOnly">
      <summary>Indicates that only cell values (included formulas if <see cref="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.NoFormulas" /> is off) are imported.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.NoFormulas">
      <summary>Indicates that cell formulas aren't imported.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.Exchangeable">
      <summary>Spread data will be imported from extensions of OpenXML file format.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.StopRecalculate">
      <summary>Indicates that recalculation after loading Excel file will be avoided.</summary>
      <remarks>
        <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.Calculation" /> will also be set to <see cref="F:GrapeCity.Spreadsheet.Calculation.Manual" />.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.Default">
      <summary>Indicates that default options will be used. It balances the performance of importing process and next actions.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.CalculationChain">
      <summary>Indicates that calculation chain will be imported to optimize for calculations.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.Success">
      <summary>The action is performed successfully.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.General">
      <summary>Unspecifed reason.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.CompoundFile">
      <summary>The XLS file format is not supported.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.IncorrectPassword">
      <summary>The password is not correct.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.MissingPassword">
      <summary>The password is missing.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.InvalidFormat">
      <summary>The file format is not supported.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.CorruptedFile">
      <summary>The file structure is corrupted.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.ExistedName">
      <summary>There is a workbook with the same name in the workbook set.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Localization.LanguagePackage">
      <summary>Represents a function language package which contains function aliases.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> class.</summary>
      <param name="name">The name of the package in English.</param>
      <param name="nativeName">The name of the package in native language.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.BuiltInStyleNames">
      <summary>Gets names of built-in styles.</summary>
      <value>A string array represents names of built-in styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Chinese">
      <summary>Gets the Chinese language package.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> object represents the Chinese language package.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Czech">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Danish">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Dutch">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Finnish">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.French">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.German">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Hungarian">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Italian">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Japanese">
      <summary>Gets the Japanese language package.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> object represents the Japanese language package.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Korean">
      <summary>Gets the Korean language package.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> object represents the Korean language package.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Name">
      <summary>Gets the name of the language package.</summary>
      <value>A string value represents the name of the language package.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.NativeName">
      <summary>Gets the name of the language package in the native language.</summary>
      <value>The native name of the language package.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Norwegian">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Polish">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Portuguese">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Russian">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Spanish">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Swedish">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Turkish">
      <summary>Gets the function language package in spanish.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.CreateFunctionAlias(GrapeCity.CalcEngine.BuiltinFunction,System.String)">
      <summary>Creates a new function alias.</summary>
      <param name="function">A <see cref="T:GrapeCity.CalcEngine.BuiltinFunction" /> value indicates the built-in function.</param>
      <param name="name">A string value indicates the function alias.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.FromCulture(System.Globalization.CultureInfo)">
      <summary>Get the built-in language package from the specified culture.</summary>
      <param name="cultureInfo">The culture information.</param>
      <returns>The corresponding language package of the specified culture.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetBuiltInStyleNames">
      <summary>Returns names of built-in styles.</summary>
      <returns>A string array represents names of built-in styles.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetBuiltInTableStyleName(GrapeCity.Spreadsheet.BuiltInTableStyles)">
      <summary>Gets the name of the table style, in the language of the user.</summary>
      <param name="builtInIndex">The index of the table style.</param>
      <returns>The name of the table style, in the language of the user.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetFunctionName(GrapeCity.CalcEngine.Function)">
      <summary>Gets the localized name of the function.</summary>
      <param name="function">A <see cref="T:GrapeCity.CalcEngine.BuiltinFunction" /> value indicates the built-in function.</param>
      <returns>A string value represents the localized name of the function.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.MapAlias(GrapeCity.CalcEngine.StructuredItemSpecifiers,System.String)">
      <summary>Maps a string value to the specified structured item specifier.</summary>
      <param name="itemSpecifier">A <see cref="T:GrapeCity.CalcEngine.StructuredItemSpecifiers" /> value indicates the structured item specifier.</param>
      <param name="keyword">A string value indicates the keyword.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.MapAlias(GrapeCity.CalcEngine.CalcError,System.String)">
      <summary>Maps a string value to the specified <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</summary>
      <param name="value">The <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</param>
      <param name="keyword">A string value indicates the keyword.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.MapAlias(System.Boolean,System.String)">
      <summary>Maps a string value to the specified <see cref="T:System.Boolean" /> value.</summary>
      <param name="value">The <see cref="T:System.Boolean" /> value.</param>
      <param name="keyword">A string value indicates the keyword.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.Localizer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> class.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.Localizer.FunctionDescriptions">
      <summary>Gets the <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> object for function descriptions.</summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> object which contains function descriptions.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.Localizer.GetLocalizedText(System.String)">
      <summary>Gets the localized text from the specified key.</summary>
      <param name="key">A string value indicates the specified key.</param>
      <returns>A <see cref="T:System.String" /> value represents the localized text. Returns <c>null</c> to use default value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.Localizer.GetLocalizedText(System.String,System.String)">
      <summary>Gets the localized text from the specified key.</summary>
      <param name="key">A string value indicates the specified key.</param>
      <param name="defaultText">A string value indicates the default localized text.</param>
      <returns>A <see cref="T:System.String" /> value represents the localized text.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PageSetup">
      <summary>Represents the page setup object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties. This class cannot be inherited.</summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.AlignMarginsHeaderFooter">
      <summary>Gets or sets a value indicating whether the header and the footer are aligned with the margins set in the page setup options.</summary>
      <value>
        <c>true</c> if the header and the footer are aligned with the margins set in the page setup options; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.BlackAndWhite">
      <summary>Gets or sets a value indicating whether elements of the document will be printed in black and white.</summary>
      <value>
        <c>true</c> if elements of the document will be printed in black and white; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.BottomMargin">
      <summary>Gets or sets the size of the bottom margin, in points.</summary>
      <value>A double value represents the bottom margin.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CenterHorizontally">
      <summary>Gets or sets a value indicating whether the sheet is centered horizontally on the page when it's printed.</summary>
      <value>
        <c>true</c> if the sheet is centered horizontally on the page when it's printed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CenterVertically">
      <summary>Gets or sets a value indicating whether the sheet is centered vertically on the page when it's printed.</summary>
      <value>
        <c>true</c> if the sheet is centered vertically on the page when it's printed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Draft">
      <summary>Gets or sets a value indicating whether the sheet will be printed without graphics.</summary>
      <value>
        <c>true</c> if the sheet will be printed without graphics; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FirstPageNumber">
      <summary>Gets or sets the first page number that will be used when this sheet is printed.</summary>
      <value>An integer value represents the first page number that will be used when this sheet is printed.</value>
      <remarks>Negative value means Spread chooses the first page number automatically.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesTall">
      <summary>Gets or sets a value indicating the number of pages tall the worksheet will be scaled to when it's printed.</summary>
      <value>An integer value represents the number of pages tall the worksheet will be scaled to when it's printed.</value>
      <remarks>If this property is negative , Spread scales the worksheet according to the FitToPagesWide property. If the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Zoom" /> property is <c>true</c> , the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesTall" /> property is ignored.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesWide">
      <summary>Gets or sets a value indicating the number of pages wide the worksheet will be scaled to when it's printed.</summary>
      <value>An integer value represents the number of pages wide the worksheet will be scaled to when it's printed.</value>
      <remarks>If this property is negative , Spread scales the worksheet according to the FitToPagesWide property. If the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Zoom" /> property is <c>true</c> , the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesWide" /> property is ignored.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FooterMargin">
      <summary>Gets or sets the distance from the bottom of the page to the footer, in points.</summary>
      <value>A double value represents the bottom of the page to the footer.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.HeaderMargin">
      <summary>Gets or sets the distance from the top of the page to the header, in points.</summary>
      <value>A double value represents the top of the page to the header.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.LeftFooter">
      <summary>Gets or sets the alignment of text on the left footer of a workbook or section.</summary>
      <value>A double value represents the alignment of text on the left footer of a workbook or section.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.LeftHeader">
      <summary>Gets or sets the alignment of text on the left header of a workbook or section.</summary>
      <value>A double value represents the alignment of text on the left header of a workbook or section.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.LeftMargin">
      <summary>Gets or sets the size of the left margin, in points.</summary>
      <value>A double value represents the left margin.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.OddAndEvenPagesHeaderFooter">
      <summary>Gets or sets a value indicating whether the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages.</summary>
      <value>
        <c>true</c> if the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Order">
      <summary>Gets or sets an <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Order" /> value that represents the order that Microsoft Excel uses to number pages when printing a large worksheet.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Order" /> value that represents the order that Microsoft Excel uses to number pages when printing a large worksheet..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Orientation">
      <summary>Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageOrientation" /> value that represents the portrait or landscape printing mode.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageOrientation" /> value that represents the portrait or landscape printing mode.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PaperSize">
      <summary>Gets or sets the size of the paper.</summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.PaperSize" /> value represents the size of the paper.</value>
      <remarks>Some printers may not support all of these paper sizes.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintArea">
      <summary>Gets or sets the range to be printed.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range to be printed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintComments">
      <summary>Gets or sets the way comments are printed with the sheet.</summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PrintLocation" /> value represents the way comments are printed with the sheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintErrors">
      <summary>Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintErrors" /> contstant specifying the type of print error displayed. This feature allows users to suppress the display of error values when printing a worksheet.</summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintErrors" /> contstant specifying the type of print error displayed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintGridlines">
      <summary>Gets or sets a value indicating whether cell gridlines are printed on the page.</summary>
      <value>
        <c>true</c> if cell gridlines are printed on the page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintHeadings">
      <summary>Gets or sets a value indicating whether row and column headings are printed with this page.</summary>
      <value>
        <c>true</c> if row and column headings are printed with this page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintNotes">
      <summary>Gets or sets a value indicating whether cell notes are printed as end notes with the sheet.</summary>
      <value>
        <c>true</c> if cell notes are printed as end notes with the sheet; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintTitleColumns">
      <summary>Gets or sets a value indicating the columns that contain the cells to be repeated on the left side of each page.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the columns that contain the cells to be repeated on the left side of each page</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintTitleRows">
      <summary>Gets or sets a value indicating the rows that contain the cells to be repeated on the left side of each page.</summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the rows that contain the cells to be repeated on the left side of each page</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.RightFooter">
      <summary>Gets or sets the distance (in points) between the right edge of the page and the right boundary of the footer.</summary>
      <value>A double value represents the distance (in points) between the right edge of the page and the right boundary of the footer.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.RightHeader">
      <summary>Gets or sets the right part of the header.</summary>
      <value>A double value represents the right part of the header.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.RightMargin">
      <summary>Gets or sets the size of the right margin, in points.</summary>
      <value>A double value represents the right margin.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.ScaleWithDocHeaderFooter">
      <summary>Gets or sets a value indicating whether the header and footer should be scaled with the document when the size of the document changes.</summary>
      <value>
        <c>true</c> if the header and footer should be scaled with the document when the size of the document changes; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.TopMargin">
      <summary>Gets or sets the size of the top margin, in points.</summary>
      <value>A double value represents the top margin.</value>
      <remarks>Margins are set or returned in points. Use the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)" /> method or the <see cref="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)" /> method to convert measurements from inches or centimeters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Zoom">
      <summary>Gets or sets the percentage scale of the worksheet for printing.</summary>
      <value>An integer value represents the percentage scale of the worksheet for printing.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.Order">
      <summary>Specifies the order in which cells are processed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.Order.DownThenOver">
      <summary>Process down the rows before processing across pages or page fields to the right.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.Order.OverThenDown">
      <summary>Process across pages or page fields to the right before moving down the rows.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PageOrientation">
      <summary>Specifies the page orientation when the worksheet is printed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageOrientation.Landscape">
      <summary>The landscape mode.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageOrientation.Portrait">
      <summary>The portrait mode.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.Paper10x14">
      <summary>10 in. x 14 in.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.Paper11x17">
      <summary>11 in. x 17 in.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA3">
      <summary>A3 (297 mm x 420 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA4">
      <summary>A4 (210 mm x 297 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA4Small">
      <summary>A4 Small (210 mm x 297 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA5">
      <summary>A5 (148 mm x 210 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperB4">
      <summary>B4 (250 mm x 354 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperB5">
      <summary>A5 (176 mm x 250 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperCsheet">
      <summary>C size sheet</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperDsheet">
      <summary>D size sheet</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope10">
      <summary>Envelope #10 (4-1/8 in. x 9-1/2 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope11">
      <summary>Envelope #11 (4-1/2 in. x 10-3/8 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope12">
      <summary>Envelope #12 (4-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope14">
      <summary>Envelope #14 (5 in. x 11-1/2 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope9">
      <summary>Envelope #9 (3-7/8 in. x 8-7/8 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeB4">
      <summary>Envelope B4 (250 mm x 353 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeB5">
      <summary>Envelope B5 (176 mm x 250 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeB6">
      <summary>Envelope B6 (176 mm x 125 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC3">
      <summary>Envelope C3 (324 mm x 458 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC4">
      <summary>Envelope C4 (229 mm x 324 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC5">
      <summary>Envelope C5 (162 mm x 229 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC6">
      <summary>Envelope C6 (114 mm x 162 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC65">
      <summary>Envelope C65 (114 mm x 229 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeDL">
      <summary>Envelope DL (110 mm x 220 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeItaly">
      <summary>Envelope (110 mm x 230 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeMonarch">
      <summary>Envelope Monarch (3-7/8 in. x 7-1/2 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopePersonal">
      <summary>Envelope (3-5/8 in. x 6-1/2 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEsheet">
      <summary>E size sheet</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperExecutive">
      <summary>Executive (7-1/2 in. x 10-1/2 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFanfoldLegalGerman">
      <summary>German Legal Fanfold (8-1/2 in. x 13 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFanfoldStdGerman">
      <summary>German Legal Fanfold (8-1/2 in. x 13 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFanfoldUS">
      <summary>U.S. Standard Fanfold (14-7/8 in. x 11 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFolio">
      <summary>Folio (8-1/2 in. x 13 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLedger">
      <summary>Ledger (17 in. x 11 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLegal">
      <summary>Legal (8-1/2 in. x 14 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLetter">
      <summary>Letter (8-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLetterSmall">
      <summary>Letter Small (8-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperNote">
      <summary>Note (8-1/2 in. x 11 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperQuarto">
      <summary>Quarto (215 mm x 275 mm)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperStatement">
      <summary>Statement (5-1/2 in. x 8-1/2 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperTabloid">
      <summary>Tabloid (11 in. x 17 in.)</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperUser">
      <summary>User-defined</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PrintErrors">
      <summary>Specifies the type of print error displayed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.PrintErrorsBlank">
      <summary>Print errors are blank.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.PrintErrorsDash">
      <summary>Print errors are displayed as dashes.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.PrintErrorsDisplayed">
      <summary>All print errors are displayed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.PrintErrorsNA">
      <summary>Print errors are displayed as not available.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PrintLocation">
      <summary>Specifies the way that comments are printed with the sheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintLocation.PrintInPlace">
      <summary>Comments will be printed where they were inserted in the worksheet.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintLocation.PrintNoComments">
      <summary>Comments will not be printed.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintLocation.PrintSheetEnd">
      <summary>Comments will be printed as end notes at the end of the worksheet.</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Storages.MergedCellStorage">
      <summary>Represent the merged cell storage which implements hybrid data structure. This class cannot be inherited.</summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.ContainsMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether this storage already contains a merged cell which intersects with the specified range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>
        <c>true</c> if this storage already contains a merged cell which intersects with the specified range; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>Finds the merged cell which intersects with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="mergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the intersected reference.</param>
      <returns>
        <c>true</c> if there is intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Finds all merged cells which intersect with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference[]@)">
      <summary>Finds the unioned reference of all merged cells which intersect with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="mergedCells">An array represents all merged cells in specified reference</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>Finds the unioned reference of all merged cells which intersect with the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="unionedMergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the unioned reference.</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.FindOverlap(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Finds all merged cells which overlap the specified reference.</summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.InsertColumns(System.Int32,System.Int32)">
      <summary>Insert specified amout of columns at specified index</summary>
      <param name="index" />
      <param name="count" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.InsertRows(System.Int32,System.Int32)">
      <summary>Insert specified amout of rows at specified index</summary>
      <param name="index" />
      <param name="count" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a merged cell from the specified cell range.</summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.RemoveColumns(System.Int32,System.Int32)">
      <summary>Remove specified amout of columns at specified index</summary>
      <param name="index" />
      <param name="columnCount" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.RemoveRows(System.Int32,System.Int32)">
      <summary>Remove specified amout of rows at specified index</summary>
      <param name="index" />
      <param name="rowCount" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Separates a merged area into individual cells.</summary>
      <param name="row">An integer value indicates the top row index of the reference which belongs to the merged area.</param>
      <param name="column">An integer value indicates the left column index of the reference which belongs to the merged area.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference which belongs to the merged area.</param>
      <param name="column2">An integer value indicates the right column index of the reference which belongs to the merged area.</param>
      <param name="overlap">Unmerges if the cell range overlaps the merged cells.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.ParseInput(GrapeCity.Spreadsheet.IWorksheet,System.String,System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue@,GrapeCity.CalcEngine.Expression@,System.Int32@,GrapeCity.Spreadsheet.UI.ParseInputMode)">
      <summary>Parsers the input value which accepts both of primitive value and formula.</summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object which is using formula.</param>
      <param name="value">A string value indicates the input value.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="primitiveValue">The <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object which stores primitive value.</param>
      <param name="expression">The <see cref="T:GrapeCity.CalcEngine.Expression" /> which stores inputted formula.</param>
      <param name="builtInNumFmt">The number format which is parsed from inputted value.</param>
      <param name="mode">A <see cref="T:GrapeCity.Spreadsheet.UI.ParseInputMode" /> value indicates how the text will be parsed.</param>
      <returns>
        <c>true</c> if the formula can be parsed successful; otherwise, <c>false</c>.</returns>
      <remarks>This function doesn't accepts empty formula. It must be checked by the caller.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.ParseInputMode">
      <summary>Represents how the text will be parsed to value and number format.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ParseInputMode.Auto">
      <summary>Text, which starts with equal character, will be parsed as formula. Otherwise, it's parsed as primitive value.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ParseInputMode.Formula">
      <summary>Text will always be parsed as formula.</summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ParseInputMode.Value">
      <summary>Text will always be parsed as primitived value.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IRtdServer">
      <summary>Represents an interface for a real-time data server.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ConnectData(System.Int32,System.Array@,System.Boolean@)">
      <summary>Adds new topics from a real-time data server. The ConnectData method is called when a file is opened that contains real-time data functions or when a user types in a new formula which contains the RTD function.</summary>
      <param name="topicId">A unique value, assigned by Microsoft Excel, which identifies the topic.</param>
      <param name="strings">A single-dimensional array of strings identifying the topic.</param>
      <param name="newValues">True to determine if new values are to be acquired.</param>
      <returns>System.Object.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.DisconnectData(System.Int32)">
      <summary>Notifies a real-time data (RTD) server application that a topic is no longer in use.</summary>
      <param name="topicId">A unique value assigned to the topic assigned by Microsoft Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.Heartbeat">
      <summary>Determines if the real-time data server is still active. Zero or a negative number indicates failure; a positive number indicates that the server is active.</summary>
      <returns>System.Int32.</returns>
      <remarks>The Heartbeat method is called by Microsoft Excel if the HeartbeatInterval property has elapsed since the last time Excel was called with the UpdateNotify method.</remarks>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.RefreshData(System.Int32@)">
      <summary>This method is called by Microsoft Excel to get new data.</summary>
      <param name="topicCount">The RTD server must change the value of the TopicCount to the number of elements in the array returned.</param>
      <returns>Array.</returns>
      <remarks>The data returned to Excel is an Object containing a two-dimensional array. The first dimension represents the list of topic IDs. The second dimension represents the values associated with the topic IDs.</remarks>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ServerStart(Microsoft.Office.Interop.Excel.IRTDUpdateEvent)">
      <summary>The ServerStart method is called immediately after a real-time data server is instantiated. Negative value or zero indicates failure to start the server; positive value indicates success.</summary>
      <param name="callback">Required IRTDUpdateEvent object. The callback object.</param>
      <returns>System.Int32.</returns>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ServerTerminate">
      <summary>Terminates the connection to the real-time data server.</summary>
    </member>
    <member name="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent">
      <summary>Represents real-time data update events.</summary>
    </member>
    <member name="P:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.HeartbeatInterval">
      <summary>Gets or sets an Integer for the interval between updates for real-time data.</summary>
      <value>The heartbeat interval.</value>
      <remarks>Setting the HeartbeatInterval property to -1 will result in the Heartbeat method not being called. The heartbeat interval cannot be set below 15,000 milliseconds due to the standard 15-second time out.</remarks>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.Disconnect">
      <summary>Instructs the real-time data server (RTD) to disconnect from the specified IRTDUpdateEvent object.</summary>
    </member>
    <member name="M:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.UpdateNotify">
      <summary>The real-time data (RTD) server uses this method to notify Microsoft Excel that new data has been received.</summary>
    </member>
  </members>
</doc>